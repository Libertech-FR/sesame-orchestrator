var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractController.html",[0,0.228,1,2.282]],["body/classes/AbstractController.html",[0,0.286,1,3.598,2,0.956,3,0.127,4,0.1,5,0.106,6,5.794,7,0.382,8,0.918,9,2.98,10,3.36,11,1.049,12,4.057,13,6.719,14,7.946,15,1.868,16,5.978,17,7.701,18,0.622,19,8.108,20,1.47,21,0.005,22,1.063,23,0.382,24,3.591,25,2.867,26,6.461,27,6.461,28,6.461,29,0.202,30,2.76,31,5.794,32,1.227,33,5.026,34,5.355,35,5.794,36,1.063,37,0.168,38,1.768,39,1.976,40,0.702,41,1.792,42,2.404,43,2.189,44,2.57,45,3.329,46,3.498,47,4.546,48,5.794,49,3.411,50,4.764,51,5.026,52,4.764,53,2.004,54,5.794,55,0.45,56,1.292,57,5.794,58,0.004,59,0.004]],["title/interfaces/AbstractControllerContext.html",[17,4.261,38,1.407]],["body/interfaces/AbstractControllerContext.html",[0,0.3,1,3.001,3,0.133,4,0.104,5,0.111,6,6.064,7,0.4,8,0.945,9,2.689,10,3.111,11,0.987,12,4.151,14,6.064,16,4.986,17,7.496,18,0.453,21,0.005,23,0.291,29,0.205,30,2.889,31,6.064,32,1.284,33,5.261,34,5.604,35,6.064,36,1.113,37,0.172,38,1.851,39,2.55,40,0.783,41,2.314,42,2.516,43,2.291,44,2.69,45,3.484,46,3.661,47,4.758,48,6.064,49,3.57,50,4.986,51,5.261,52,4.986,53,2.097,54,6.064,55,0.471,56,1.352,57,6.064,58,0.004,59,0.004,60,2.786,61,4.758,62,6.763]],["title/classes/AbstractQueueProcessor.html",[0,0.228,63,4.261]],["body/classes/AbstractQueueProcessor.html",[0,0.236,2,0.789,3,0.105,4,0.082,5,0.088,7,0.315,8,0.81,9,2.976,10,2.778,11,1.066,12,3.269,13,5.93,15,1.541,16,5.276,18,0.671,20,1.212,21,0.005,22,0.877,23,0.415,24,2.963,25,2.365,29,0.201,36,0.877,37,0.11,49,2.814,50,3.931,53,2.505,55,0.679,56,1.066,58,0.003,59,0.003,63,5.93,64,5.331,65,1.147,66,4.561,67,3.977,68,7.369,69,8.078,70,4.264,71,8.315,72,2.677,73,6.256,74,1.692,75,3.687,76,3.687,77,1.607,78,1.837,79,7.85,80,6.717,81,5.331,82,5.331,83,4.9,84,5.331,85,5.331,86,5.331,87,3.495,88,2.886,89,2.747,90,2.886,91,2.886,92,2.886,93,5.331,94,1.212,95,5.331,96,5.331,97,3.931,98,5.331,99,5.331,100,2.567,101,3.461,102,3.136,103,3.046,104,7.156,105,5.331,106,2.567,107,5.331,108,3.234,109,5.331,110,5.331,111,6.417,112,1.831,113,7.244,114,5.331,115,5.331,116,3.874,117,4.78,118,5.331]],["title/classes/AbstractSchema.html",[0,0.228,119,2.858]],["body/classes/AbstractSchema.html",[0,0.31,2,1.035,3,0.137,4,0.108,5,0.115,7,0.414,8,0.965,11,1.008,18,0.57,21,0.005,23,0.396,29,0.2,37,0.145,42,2.603,43,2.37,44,2.783,49,3.694,55,0.694,58,0.004,59,0.004,65,1.365,74,2.172,119,4.734,120,6.998,121,3.852,122,2.618,123,4.622,124,3.275,125,6.998,126,7.61,127,1.182,128,3.298,129,8.235,130,6.998,131,4.015,132,2.051,133,2.935,134,1.815,135,6.998]],["title/injectables/AbstractService.html",[66,2.475,136,1.333]],["body/injectables/AbstractService.html",[0,0.238,3,0.105,4,0.083,5,0.088,7,0.317,8,0.814,9,2.979,10,3.195,11,1.068,12,3.902,13,5.954,15,1.55,16,5.297,18,0.654,20,1.22,21,0.005,22,0.882,23,0.373,24,3.993,25,2.379,29,0.196,30,2.291,36,0.882,37,0.148,38,1.468,39,1.64,40,0.701,41,1.488,42,3.014,43,2.745,44,3.223,45,2.763,46,2.903,47,3.773,49,2.831,50,3.954,51,4.171,52,3.954,53,2.228,55,0.5,56,1.62,58,0.003,59,0.003,66,3.459,72,2.408,74,1.916,75,4.174,76,4.459,80,6.733,89,4.459,100,2.582,106,2.582,108,3.253,136,1.863,137,2.249,138,4.809,139,4.642,140,8.092,141,7.265,142,7.184,143,5.362,144,5.362,145,5.362,146,5.362,147,5.362,148,5.362,149,5.362,150,5.362,151,5.362,152,1.816,153,4.444,154,4.444,155,4.809,156,3.954,157,3.741,158,6.714,159,6.443,160,4.809,161,4.809,162,1.995,163,4.809,164,3.064,165,3.482,166,1.687,167,3.954,168,4.809,169,4.809,170,0.992,171,4.809,172,4.809,173,4.809,174,4.809]],["title/interfaces/AbstractServiceContext.html",[38,1.407,80,4]],["body/interfaces/AbstractServiceContext.html",[0,0.253,3,0.112,4,0.088,5,0.094,7,0.337,8,0.847,9,2.737,10,2.872,11,1.118,12,4.037,16,4.202,18,0.501,21,0.005,23,0.322,24,3.168,29,0.2,30,2.435,36,0.938,37,0.155,38,1.56,39,2.287,40,0.768,41,2.075,42,3.107,43,2.829,44,3.322,45,2.937,46,3.085,47,4.01,49,3.009,50,4.202,51,4.434,52,4.202,53,2.32,55,0.521,56,1.669,58,0.004,59,0.004,60,2.348,61,4.01,66,2.744,72,1.694,74,1.348,75,2.937,76,4.744,80,6.496,89,4.744,100,2.744,106,2.744,108,3.457,136,1.94,138,5.111,139,4.55,140,7.489,141,5.111,152,1.931,153,4.723,154,4.723,155,5.111,156,6.538,157,3.856,158,6.92,159,6.708,160,5.111,161,5.111,162,2.121,163,5.111,164,3.256,165,3.701,166,1.793,167,4.202,168,5.111,169,5.111,170,1.054,171,5.111,172,5.111,173,5.111,174,5.111,175,5.7]],["title/classes/AbstractSettingsService.html",[0,0.228,176,3.791]],["body/classes/AbstractSettingsService.html",[0,0.14,2,0.466,3,0.062,4,0.049,5,0.052,7,0.186,8,0.553,9,2.896,10,2.058,11,1.125,12,2.422,15,0.911,18,0.649,20,2.288,21,0.005,22,1.565,23,0.431,25,4.301,29,0.147,37,0.065,40,0.721,49,2.579,53,0.977,55,0.675,56,1.348,58,0.002,59,0.002,65,0.783,66,3.247,72,1.452,74,1.155,75,2.517,76,2.517,77,1.097,78,2.282,87,3.785,88,1.705,89,1.623,90,1.705,91,1.705,92,1.705,94,2.082,122,1.706,124,2.969,132,0.923,134,0.817,162,3.673,170,1.107,176,3.602,177,7.722,178,2.824,179,5.804,180,4.96,181,4.227,182,4.379,183,4.049,184,4.049,185,2.579,186,2.127,187,2.352,188,2.874,189,2.874,190,2.874,191,2.715,192,3.062,193,3.64,194,2.963,195,2.045,196,3.37,197,4.381,198,1.974,199,2.824,200,2.513,201,4.049,202,2.824,203,6.4,204,4.049,205,2.263,206,2.824,207,1.911,208,5.139,209,3.548,210,1.974,211,4.73,212,3.951,213,1.911,214,2.963,215,2.125,216,0.936,217,1.911,218,5.549,219,2.716,220,1.974,221,1.911,222,3.948,223,5.139,224,1.974,225,1.911,226,1.974,227,1.974,228,1.974,229,1.911,230,1.974,231,1.974,232,1.974,233,1.705,234,4.091,235,2.045,236,1.974,237,1.974,238,1.911,239,2.045,240,2.216,241,2.61,242,2.824,243,0.923,244,1.371,245,4.381,246,1.284,247,2.824,248,2.824,249,1.298,250,1.853,251,2.824,252,2.824,253,3.296,254,2.824,255,2.216,256,2.045]],["title/classes/AbstractSettingsService-1.html",[0,0.191,176,3.178,257,1.745]],["body/classes/AbstractSettingsService-1.html",[0,0.139,2,0.464,3,0.061,4,0.048,5,0.052,7,0.185,8,0.551,9,2.894,10,2.053,11,1.125,12,2.416,15,0.907,18,0.649,20,2.298,21,0.005,22,1.563,23,0.433,25,4.298,29,0.146,37,0.065,40,0.72,49,2.57,53,0.973,55,0.675,56,1.345,58,0.002,59,0.002,65,0.78,66,3.239,72,1.447,74,1.151,75,2.509,76,2.509,77,1.093,78,2.281,87,3.782,88,1.698,89,1.616,90,1.698,91,1.698,92,1.698,94,2.08,122,1.702,124,2.964,132,0.919,134,0.813,162,3.671,170,1.104,176,3.59,178,2.812,179,5.798,180,4.946,181,4.217,182,4.368,183,4.035,184,4.035,185,2.57,186,2.119,187,2.344,188,2.864,189,2.864,190,2.864,191,2.706,192,3.052,193,3.633,194,2.954,195,2.036,196,3.363,197,4.366,198,1.966,199,2.812,200,2.511,201,4.035,202,2.812,203,6.388,204,4.035,205,2.257,206,2.812,207,1.902,208,5.133,209,3.546,210,1.966,211,4.885,212,3.943,213,1.902,214,2.954,215,2.116,216,0.932,217,1.902,218,5.545,219,2.714,220,1.966,221,1.902,222,3.942,223,5.133,224,1.966,225,1.902,226,1.966,227,1.966,228,1.966,229,1.902,230,1.966,231,1.966,232,1.966,233,1.698,234,4.081,235,2.036,236,1.966,237,1.966,238,1.902,239,2.036,240,2.206,241,2.599,242,2.812,243,0.919,244,1.365,245,4.366,246,1.28,247,2.812,248,2.812,249,1.292,250,1.845,251,2.812,252,2.812,253,3.285,254,2.812,255,2.206,256,2.036,258,7.709,259,2.599]],["title/classes/ActivationDto.html",[0,0.228,260,4]],["body/classes/ActivationDto.html",[0,0.37,2,1.001,3,0.133,4,0.104,5,0.111,7,0.4,8,0.945,18,0.559,21,0.005,23,0.426,29,0.181,32,1.284,37,0.14,40,0.855,43,2.826,55,0.688,58,0.004,59,0.004,112,2.135,127,1.409,260,6.489,261,9.045,262,6.064,263,3.926,264,3.661,265,3.864,266,6.489,267,2.929,268,4.985,269,6.064,270,3.499,271,6.064,272,2.233,273,5.627,274,6.064,275,2.579,276,4.636,277,2.742,278,1.801,279,3.376]],["title/classes/AdditionalFieldsPart.html",[0,0.228,280,3.617]],["body/classes/AdditionalFieldsPart.html",[0,0.286,2,0.954,3,0.126,4,0.099,5,0.106,7,0.381,8,0.917,11,0.959,18,0.593,21,0.005,23,0.421,29,0.192,37,0.167,40,0.804,55,0.704,58,0.004,59,0.004,65,1.034,112,2.266,121,3.397,122,1.839,127,1.496,128,4.173,131,4.377,132,1.891,134,1.673,170,1.193,205,3.512,219,2.247,272,1.915,280,5.698,281,6.45,282,5.059,283,5.059,284,4.562,285,5.633,286,3.053,287,6.45,288,4.764,289,3.146,290,6.45,291,6.45,292,3.063,293,3.105,294,2.978,295,3.04,296,3.04,297,5.784,298,6.45]],["title/classes/AgentCreateQuestions.html",[0,0.228,299,3.791]],["body/classes/AgentCreateQuestions.html",[0,0.352,2,0.764,3,0.101,4,0.08,5,0.085,7,0.305,9,1.535,11,0.941,12,3.606,15,1.493,18,0.532,20,1.808,21,0.005,22,1.639,23,0.384,29,0.185,30,2.206,37,0.164,40,0.873,42,2.606,43,2.373,44,2.786,45,3.609,46,3.792,55,0.488,56,1.589,58,0.003,59,0.003,65,1.123,72,2.082,74,1.656,77,1.573,78,1.593,94,1.808,127,1.343,170,0.955,186,3.46,200,1.866,209,2.564,219,1.432,243,2.053,244,2.248,246,1.841,249,2.127,299,5.164,300,4.279,301,7.004,302,7.004,303,7.004,304,5.804,305,7.127,306,4.391,307,5.164,308,6.197,309,5.804,310,3.853,311,5.164,312,5.804,313,4.391,314,5.164,315,4.548,316,5.161,317,4.928,318,5.996,319,4.928,320,4.548,321,3.237,322,3.237,323,3.237,324,4.017,325,4.675,326,3.807,327,6.587,328,4.928,329,2.537,330,5.448,331,3.633,332,3.301,333,4.548,334,4.548,335,4.548,336,4.279,337,4.279,338,4.279,339,2.95,340,3.633,341,2.835,342,3.633,343,3.353,344,2.95,345,3.237,346,3.353,347,3.633,348,2.795]],["title/classes/Agents.html",[0,0.228,344,2.938]],["body/classes/Agents.html",[0,0.218,2,0.727,3,0.096,4,0.076,5,0.081,7,0.29,8,0.767,11,0.801,18,0.642,21,0.005,23,0.442,29,0.19,37,0.14,39,1.502,40,0.898,55,0.727,58,0.003,59,0.003,65,0.787,112,1.257,119,3.762,124,2.603,127,1.619,128,4.519,131,4.619,132,1.44,170,1.252,205,2.56,219,1.363,272,2.368,286,2.975,289,3.248,292,2.56,293,2.365,294,3.125,295,2.315,296,2.315,306,3.99,310,3.248,313,3.99,344,3.867,349,4.912,350,6.024,351,4.425,352,3.729,353,4.698,354,3.248,355,6.024,356,4.912,357,1.858,358,4.912,359,4.912,360,5.906,361,4.912,362,4.912,363,6.418,364,6.945,365,4.912,366,6.418,367,6.945,368,4.912,369,7.744,370,4.912,371,4.912,372,2.98,373,4.912,374,4.912,375,3.189,376,3.079,377,3.622,378,4.405,379,4.912]],["title/classes/AgentsCommand.html",[0,0.228,347,3.617]],["body/classes/AgentsCommand.html",[0,0.362,2,0.808,3,0.107,4,0.084,5,0.09,7,0.323,9,1.623,11,0.861,12,3.918,15,2.102,18,0.487,20,1.654,21,0.005,22,1.593,23,0.352,29,0.189,30,2.332,37,0.169,40,0.825,42,2.705,43,2.463,44,2.892,45,3.746,46,3.936,55,0.569,56,1.634,58,0.003,59,0.003,65,1.165,72,2.161,74,1.72,77,1.632,78,1.983,94,1.242,170,1.01,186,3.559,200,2.178,209,3.191,219,1.514,243,2.131,244,2.376,246,1.911,249,2.249,299,4.025,300,4.524,304,4.524,306,3.746,308,5.515,309,4.524,310,3.429,312,4.524,313,3.746,315,4.721,316,5.308,317,5.115,318,6.133,319,5.115,320,4.721,321,3.422,322,3.422,323,3.422,324,4.247,325,4.809,326,4.025,327,6.775,328,5.115,329,2.61,330,5.656,331,3.841,332,3.427,333,4.721,334,4.721,335,5.308,336,4.524,337,4.524,338,4.524,339,3.119,340,3.841,341,2.943,342,3.841,343,3.545,344,3.119,345,3.422,346,3.545,347,5.115,348,2.955,380,4.905,381,3.545,382,5.459,383,5.459,384,3.841]],["title/controllers/AgentsController.html",[385,1.407,386,4.261]],["body/controllers/AgentsController.html",[0,0.171,1,2.527,3,0.076,4,0.059,5,0.063,7,0.228,9,1.146,11,0.944,18,0.534,20,1.814,21,0.005,22,1.458,23,0.402,29,0.212,32,0.732,36,0.635,37,0.08,40,0.586,55,0.681,56,1.594,58,0.003,59,0.003,65,0.913,74,1.347,77,1.279,78,2.207,94,1.814,122,2.694,124,3.48,127,1.347,133,1.618,134,1,152,1.306,164,2.203,170,1.476,186,2.479,187,1.857,193,3.191,200,2.452,216,2.736,222,1.781,233,2.088,243,1.13,246,2.096,257,3.379,263,1.561,306,1.987,310,1.618,313,1.987,323,4.687,324,3,325,3.35,344,2.203,352,1.857,353,2.339,354,1.618,377,2.844,385,1.055,386,4.719,387,1.213,388,3.857,389,1.618,390,4.855,391,4.764,392,4.687,393,2.844,394,3.82,395,3.933,396,3.857,397,5.881,398,3.857,399,4.222,400,2.713,401,4.007,402,5.632,403,5.632,404,4.764,405,3.857,406,3.857,407,2.844,408,4.199,409,3.857,410,3.857,411,2.417,412,5.42,413,4.855,414,5.873,415,5.26,416,2.713,417,3.857,418,5.513,419,4.43,420,3.857,421,3.857,422,1.589,423,2.088,424,3,425,2.742,426,5.26,427,1.745,428,2.088,429,2.417,430,1.818,431,2.844,432,5.179,433,2.844,434,3,435,2.713,436,3.842,437,2.713,438,2.713,439,2.602,440,3,441,3,442,2.713,443,2.713,444,2.713,445,4.855,446,3,447,2.844,448,3.455,449,2.417,450,2.417,451,3.458,452,3.857,453,3.857,454,1.857,455,2.339,456,1.781,457,1.898,458,3.857,459,3.196,460,3,461,2.844,462,3.286,463,2.713,464,3.857,465,5.695,466,3.196,467,3.196,468,3.57,469,2.713,470,3.679,471,3.679,472,4.764,473,3.857,474,4.764,475,2.713,476,2.433,477,3.857,478,3,479,3.857,480,2.844]],["title/classes/AgentsCreateCommand.html",[0,0.228,330,4]],["body/classes/AgentsCreateCommand.html",[0,0.36,2,0.798,3,0.106,4,0.083,5,0.089,7,0.319,9,1.603,11,0.854,12,3.907,15,2.085,18,0.483,20,1.641,21,0.005,22,1.589,23,0.35,29,0.188,30,2.305,37,0.168,40,0.823,42,2.684,43,2.443,44,2.869,45,3.716,46,3.905,55,0.566,56,1.624,58,0.003,59,0.003,65,1.156,72,2.144,74,1.706,77,1.619,78,1.973,94,1.227,170,0.998,186,3.537,200,2.165,209,3.176,219,1.496,243,2.114,244,2.348,246,1.896,249,2.222,299,3.977,300,4.47,304,4.47,306,3.716,308,5.482,309,4.47,310,3.409,312,4.47,313,3.716,315,4.684,316,5.277,317,6.104,318,6.104,319,5.075,320,4.684,321,3.381,322,3.381,323,3.381,324,4.196,325,5.589,326,3.977,327,6.734,328,5.075,329,2.594,330,6.321,331,5.717,332,3.4,333,4.684,334,4.684,335,5.277,336,4.47,337,4.47,338,4.47,339,3.082,340,3.795,341,2.919,342,3.795,343,3.503,344,3.082,345,3.381,346,3.503,347,3.795,348,2.92,380,4.866,381,3.503,384,3.795,481,5.394,482,5.394]],["title/classes/AgentsCreateDto.html",[0,0.228,323,3.223]],["body/classes/AgentsCreateDto.html",[0,0.387,2,0.72,3,0.095,4,0.075,5,0.08,7,0.288,8,0.762,11,1.116,18,0.649,21,0.005,23,0.44,29,0.196,32,0.924,37,0.159,40,0.882,55,0.73,58,0.003,59,0.003,65,1.332,87,1.969,122,1.387,127,1.636,270,2.821,272,1.151,275,2.833,276,3.738,277,3.041,278,1.296,306,3.97,310,3.232,313,3.97,323,4.83,350,5.995,351,3.842,352,3.71,353,4.675,354,3.232,355,5.995,357,1.84,377,3.588,397,3.588,418,3.588,455,4.675,483,4.032,484,4.091,485,5.422,486,4.866,487,4.866,488,4.363,489,4.866,490,4.032,491,4.866,492,4.958,493,4.866,494,6.348,495,4.363,496,4.866,497,6.653,498,3.785,499,4.866,500,4.866,501,4.866,502,3.05,503,3.159,504,2.202,505,4.763,506,3.632,507,4.537,508,4.172,509,3.47,510,2.202,511,4.032,512,4.032,513,2.507,514,2.507,515,2.704,516,2.394,517,4.032,518,4.032]],["title/classes/AgentsDto.html",[0,0.228,397,3.791]],["body/classes/AgentsDto.html",[0,0.381,2,0.691,3,0.092,4,0.072,5,0.077,7,0.276,8,0.74,11,1.104,18,0.65,21,0.005,23,0.44,29,0.194,32,0.887,37,0.156,40,0.883,55,0.73,58,0.003,59,0.003,65,1.309,87,3.887,122,2.15,127,1.64,270,2.742,272,1.105,275,2.815,276,3.633,277,3.007,278,1.244,306,3.885,310,3.163,313,3.885,323,6.141,350,5.866,351,3.735,352,3.63,353,4.574,354,3.163,355,5.866,357,1.767,377,3.444,397,4.82,418,3.444,455,4.574,483,3.871,484,3.711,485,5.305,488,4.189,490,3.871,492,4.82,494,6.267,495,4.189,497,6.568,498,3.634,502,2.928,503,3.033,504,2.114,505,4.702,506,3.554,507,4.41,508,4.082,509,3.419,510,2.114,511,3.871,512,3.871,513,2.407,514,2.407,515,2.596,516,2.299,517,3.871,518,3.871,519,3.634,520,4.672,521,4.672,522,4.672,523,4.672,524,4.672,525,4.672,526,4.672,527,4.672,528,4.672,529,4.672]],["title/modules/AgentsModule.html",[166,1.618,530,3.223]],["body/modules/AgentsModule.html",[0,0.298,3,0.132,4,0.104,5,0.111,21,0.005,22,1.107,29,0.214,36,1.107,37,0.139,58,0.004,59,0.004,132,1.971,166,2.839,325,6.087,344,3.842,347,4.731,378,7.454,386,7.477,387,2.616,451,6.031,530,6.268,531,2.927,532,3.043,533,3.17,534,3.17,535,3.17,536,4.166,537,4.253,538,6.031,539,6.031,540,6.031,541,3.918,542,2.873,543,3.105,544,6.725,545,3.956,546,5.231,547,6.725,548,6.725,549,3.385,550,4.215,551,6.725,552,3.842,553,6.031]],["title/injectables/AgentsService.html",[136,1.333,325,3.024]],["body/injectables/AgentsService.html",[0,0.146,3,0.065,4,0.051,5,0.054,7,0.195,8,0.573,9,2.575,10,2.117,11,1.116,12,2.491,15,0.952,18,0.637,20,2.23,21,0.005,22,1.48,23,0.429,25,4.33,29,0.188,36,0.542,37,0.068,49,2.669,55,0.686,56,1.011,58,0.002,59,0.002,65,0.81,66,3.324,72,1.503,74,1.196,75,2.605,76,2.605,77,1.135,78,2.24,87,3.818,88,1.782,89,1.696,90,1.782,91,1.782,92,1.782,94,2.011,121,1.381,122,2.124,124,3.148,132,0.965,133,1.381,134,0.854,136,1.311,137,1.381,162,3.694,179,5.857,181,4.328,185,2.669,186,2.679,187,2.434,188,2.974,189,2.974,190,2.974,191,2.81,192,3.169,193,4.083,194,3.067,195,2.138,196,3.439,198,2.064,200,2.432,207,1.997,208,5.202,209,3.635,210,2.064,211,4.787,212,4.032,213,1.997,214,4.188,216,1.503,217,1.997,218,5.674,219,2.733,220,2.064,221,1.997,222,4,223,5.202,224,2.064,225,1.997,226,2.064,227,2.064,228,2.064,229,1.997,230,2.064,231,2.064,232,2.064,233,1.782,234,4.188,236,2.064,237,2.064,238,1.997,239,2.138,243,0.965,246,1.958,256,2.138,323,4.328,325,2.974,344,1.881,494,3.557,546,2.561,554,3.293,555,3.293,556,3.293,557,3.293,558,2.953,559,1.937,560,3.293,561,2.561,562,2.729,563,2.729,564,2.953,565,3.293,566,3.293,567,3.293,568,3.293,569,5.056,570,3.293,571,3.293,572,3.293,573,5.056,574,3.293,575,3.293,576,3.293,577,3.293,578,3.293,579,3.293]],["title/classes/AgentsUpdateDto.html",[0,0.228,418,3.791]],["body/classes/AgentsUpdateDto.html",[0,0.414,2,0.881,3,0.117,4,0.092,5,0.098,21,0.005,23,0.425,29,0.208,32,1.13,37,0.176,40,0.881,55,0.709,58,0.004,59,0.004,65,1.445,122,1.697,270,2.497,272,1.408,275,2.917,276,4.277,277,3.199,278,1.586,306,3.067,310,2.497,313,3.067,323,4.824,350,4.63,352,2.866,353,3.611,354,2.497,355,4.63,377,4.389,397,4.389,418,5.674,455,3.611,483,4.933,484,3.787,494,6.343,497,6.647,504,2.694,505,5.047,506,4.019,507,5.191,508,4.616,509,3.713,510,2.694,511,4.933,512,4.933,513,3.067,514,3.067,515,3.308,516,2.929,517,4.933,518,6.377]],["title/classes/AllExceptionFilter.html",[0,0.228,580,4.261]],["body/classes/AllExceptionFilter.html",[0,0.307,2,1.025,3,0.136,4,0.107,5,0.114,7,0.41,10,2.384,11,0.82,18,0.464,20,1.576,21,0.005,22,1.14,23,0.299,29,0.184,36,1.14,37,0.143,56,1.385,58,0.004,59,0.004,67,4.707,77,1.901,94,1.576,152,2.348,170,1.692,249,3.924,264,3.427,329,2.213,341,2.805,394,3.311,462,2.855,580,7.578,581,8.468,582,6.931,583,7.578,584,7.018,585,5.732,586,7.893,587,6.931,588,4.676,589,4.5,590,5.744,591,5.391,592,5.744,593,5.744,594,6.215,595,6.215,596,6.215,597,6.931,598,6.931,599,4.876]],["title/classes/ApiSession.html",[0,0.228,600,3.617]],["body/classes/ApiSession.html",[0,0.295,2,0.984,3,0.13,4,0.103,5,0.109,7,0.393,8,0.935,11,0.787,15,1.923,18,0.647,20,1.513,21,0.005,22,1.094,23,0.416,37,0.137,39,2.034,40,0.873,55,0.725,58,0.004,59,0.004,74,2.444,122,2.56,170,1.23,216,2.454,313,4.626,352,4.323,600,5.809,601,9.839,602,5.964,603,4.626,604,8.256,605,4.739,606,8.256,607,5.964,608,5.964,609,5.964,610,6.651,611,5.964]],["title/controllers/AppController.html",[385,1.407,612,3.617]],["body/controllers/AppController.html",[0,0.185,1,2.681,3,0.082,4,0.064,5,0.069,7,0.247,11,0.715,18,0.405,20,1.374,21,0.005,22,1.278,23,0.306,25,2.681,29,0.192,32,0.794,36,0.688,37,0.086,38,1.941,39,1.278,40,0.903,41,1.676,43,1.416,53,2.2,55,0.632,56,1.553,58,0.003,59,0.003,65,0.968,74,0.989,77,1.356,78,1.613,94,1.374,100,2.013,106,2.909,112,1.07,127,1.02,152,1.416,170,1.677,193,3.662,200,1.609,216,2.632,243,1.226,246,1.588,263,2.445,264,1.692,267,1.874,270,2.975,272,0.989,289,2.046,353,2.536,385,1.941,387,1.316,394,3.612,395,1.786,399,3.669,423,2.264,430,1.971,456,1.931,476,1.786,559,2.459,612,4.25,613,3.253,614,5.417,615,4.181,616,3.465,617,4.206,618,4.181,619,4.699,620,5.23,621,4.181,622,4.181,623,6.888,624,5.499,625,4.181,626,4.181,627,4.699,628,4.699,629,4.699,630,4.699,631,4.699,632,4.181,633,2.389,634,4.606,635,3.083,636,2.821,637,4.699,638,3.113,639,4.25,640,3.452,641,4.699,642,3.083,643,4.454,644,4.454,645,3.253,646,4.699,647,3.253,648,3.253,649,3.27,650,4.699,651,3.253,652,3.253,653,3.253,654,3.253,655,3.253,656,3.253,657,3.253,658,3.253,659,3.253,660,3.253,661,3.253,662,4.454,663,4.454,664,3.253,665,3.253,666,3.083,667,3.253,668,3.253,669,3.253,670,3.253,671,3.253,672,3.253,673,3.083,674,3.253,675,3.253,676,2.821,677,2.821,678,2.942,679,4.25,680,3.253,681,2.821,682,3.253,683,3.083,684,3.083,685,2.821,686,2.105,687,3.253,688,4.699,689,4.699,690,3.253,691,3.253,692,3.253,693,4.699,694,5.518,695,3.253,696,4.699,697,3.787,698,3.253,699,3.253,700,3.253,701,3.253,702,3.253,703,3.253,704,3.253,705,3.253,706,3.083,707,3.083,708,4.699,709,3.253,710,3.253,711,4.699,712,3.253,713,3.253,714,4.699,715,3.253,716,2.821,717,2.715,718,3.253,719,4.699,720,4.699,721,4.699,722,3.253,723,4.699,724,4.699,725,4.699,726,3.253,727,4.699]],["title/modules/AppModule.html",[166,1.618,728,4]],["body/modules/AppModule.html",[0,0.18,3,0.08,4,0.063,5,0.067,10,1.399,21,0.005,23,0.175,24,2.261,29,0.222,30,1.738,36,0.669,37,0.084,53,1.262,56,1.184,58,0.003,59,0.003,70,4.491,78,1.854,83,5.654,100,3.693,101,2.642,102,2.393,103,2.325,111,3.648,116,2.203,132,1.193,134,1.536,139,1.959,157,1.879,166,2.197,170,1.508,209,2.168,246,1.069,272,1.652,387,1.864,402,2.745,403,2.745,428,2.203,447,3,531,1.771,532,1.841,533,1.918,534,1.918,535,1.918,536,3.224,537,1.918,541,2.792,542,1.738,543,1.879,545,2.393,549,4.42,552,4.658,580,3.372,585,4.378,612,4.913,634,5.524,635,3,649,2.203,728,7.663,729,3.648,730,3.648,731,3.648,732,6.011,733,6.011,734,6.011,735,5.739,736,6.618,737,4.069,738,3.648,739,3.372,740,6.341,741,4.069,742,4.069,743,3,744,2.745,745,3.648,746,3.165,747,4.069,748,5.923,749,6.262,750,5.923,751,5.923,752,3.648,753,4.069,754,4.908,755,4.069,756,3.648,757,4.607,758,4.069,759,3.372,760,4.069,761,3.165,762,5.923,763,4.069,764,4.535,765,3,766,3.648,767,3,768,3,769,4.069,770,4.069,771,4.069,772,3.648,773,3.648,774,3.648,775,4.069,776,5.735,777,2.468,778,2.468,779,4.069,780,3.372,781,4.069,782,3.372,783,3.648,784,3.648,785,4.069,786,4.069,787,2.745,788,6.984,789,6.341,790,4.069,791,6.984,792,2.642,793,3,794,3.648,795,4.069,796,5.923,797,4.069,798,5.311,799,4.069,800,4.069,801,4.069,802,3.165,803,4.069,804,3.648,805,4.069,806,4.069,807,4.069,808,4.069,809,2.642,810,3.372,811,3.165,812,4.069,813,3.648,814,4.069,815,4.069,816,3.648,817,5.311,818,3.648,819,3.648,820,3.648,821,3.648,822,3.648,823,3.648,824,2.642,825,3.648,826,3.648,827,2.745,828,3.648,829,3.648,830,3.648,831,3.648,832,3.648,833,4.069,834,3.648,835,3.648,836,4.069,837,4.069,838,4.069,839,4.069,840,5.967,841,6.879,842,4.069]],["title/injectables/AppService.html",[136,1.333,634,3.339]],["body/injectables/AppService.html",[0,0.269,3,0.119,4,0.094,5,0.1,7,0.359,8,0.883,9,2.973,10,2.961,11,1.112,12,4.081,15,1.755,18,0.655,20,1.381,21,0.005,22,1.283,23,0.405,29,0.209,30,2.594,36,0.999,37,0.125,55,0.654,56,1.214,58,0.004,59,0.004,65,1.249,66,4.707,72,2.317,74,1.843,75,4.016,76,4.016,77,1.75,87,3.676,88,3.287,89,3.128,90,3.287,91,3.287,92,3.287,94,1.381,133,2.547,136,2.021,137,2.547,243,1.78,348,3.287,381,3.943,605,4.795,614,8.145,634,5.061,717,3.943,843,6.072,844,6.39,845,7.795,846,6.072,847,6.072,848,4.096,849,4.723,850,4.723,851,4.272,852,5.032,853,3.572,854,6.072,855,6.072,856,4.477,857,4.272,858,6.072]],["title/classes/AskTokenDto.html",[0,0.228,859,4]],["body/classes/AskTokenDto.html",[0,0.376,2,1.029,3,0.136,4,0.107,5,0.115,7,0.411,8,0.961,18,0.568,21,0.005,23,0.366,29,0.184,32,1.321,37,0.144,40,0.826,55,0.693,58,0.004,59,0.004,127,1.434,157,3.919,263,3.435,265,3.975,267,2.958,275,2.612,277,3.011,278,1.853,279,3.435,859,6.603,860,9.16,861,6.239,862,5.163,863,5.091,864,5.13,865,8.488,866,8.488,867,6.957,868,6.957,869,6.603,870,6.957]],["title/controllers/AuthController.html",[385,1.407,871,4.261]],["body/controllers/AuthController.html",[0,0.198,1,2.809,3,0.088,4,0.069,5,0.073,7,0.264,9,1.327,11,0.947,12,2.978,15,1.291,18,0.536,20,1.821,21,0.005,22,1.317,23,0.378,29,0.211,30,1.907,32,0.848,36,0.735,37,0.092,40,0.693,55,0.687,56,1.6,58,0.003,59,0.003,65,1.015,72,1.327,74,1.056,77,1.421,78,2.21,94,1.821,123,2.247,127,1.352,139,2.149,152,1.512,157,4.053,164,2.551,165,2.899,170,1.361,200,2.457,216,1.327,243,1.309,246,2.104,268,3.883,344,2.551,353,2.708,357,2.394,385,1.222,387,1.405,389,1.873,394,3.831,395,3.611,399,4.009,422,1.839,425,2.149,427,2.02,430,2.104,470,3.62,561,3.473,636,3.012,638,4.355,686,4.029,752,4.003,777,2.708,802,3.473,852,3.7,853,2.626,871,5.247,872,4.464,873,5.678,874,6.331,875,6.331,876,5.4,877,4.464,878,6.657,879,4.464,880,5.678,881,6.331,882,5.632,883,4.464,884,4.464,885,4.963,886,4.464,887,4.925,888,2.984,889,6.634,890,8.005,891,4.464,892,4.464,893,4.464,894,4.925,895,2.984,896,5.247,897,4.464,898,4.464,899,4.464,900,6.331,901,2.562,902,2.984,903,3.116,904,5.678,905,4.464,906,4.464,907,4.464,908,3.841,909,3.292,910,3.012,911,7.357,912,4.464,913,4.464,914,3.473,915,3.141,916,3.292,917,4.464,918,4.464,919,4.464,920,4.464,921,4.464,922,7.178,923,4.464,924,4.464,925,4.464,926,4.464,927,6.331,928,4.668,929,6.331,930,4.464,931,4.464,932,4.464,933,4.464,934,6.331,935,5.247,936,3.7,937,4.464,938,4.464,939,4.003,940,4.464,941,4.464,942,4.464,943,4.464,944,4.464,945,4.464,946,4.464]],["title/modules/AuthModule.html",[166,1.618,947,3.617]],["body/modules/AuthModule.html",[0,0.263,3,0.116,4,0.092,5,0.098,21,0.005,29,0.218,36,0.976,37,0.123,58,0.004,59,0.004,78,1.747,83,5.898,103,3.39,166,2.679,387,2.416,530,5.989,531,2.583,532,2.685,533,2.796,534,2.796,535,2.796,536,3.931,537,4.013,541,3.619,542,2.535,543,2.739,549,4.532,552,4.387,740,6.623,776,5.403,871,7.056,908,6.172,910,4.002,947,7.253,948,5.32,949,5.32,950,5.32,951,5.32,952,6.445,953,7.432,954,7.432,955,5.933,956,5.933,957,5.32,958,4.916,959,5.933,960,4.916,961,5.933,962,4.916,963,4.374,964,5.933,965,5.933,966,5.32,967,5.933,968,5.933,969,5.933,970,5.933]],["title/injectables/AuthService.html",[136,1.333,908,3.119]],["body/injectables/AuthService.html",[0,0.118,3,0.052,4,0.041,5,0.07,7,0.157,8,0.484,9,2.902,10,1.842,11,1.005,12,3.277,15,1.235,18,0.622,20,1.716,21,0.005,22,1.242,23,0.379,25,1.896,29,0.202,30,1.135,36,0.437,37,0.055,40,0.816,42,0.989,43,0.9,44,1.057,53,1.325,55,0.668,56,1.757,58,0.002,59,0.002,65,0.685,66,3.633,67,1.477,68,5.585,72,1.824,73,5.091,74,2.196,75,2.201,76,2.201,77,0.959,78,2.157,87,2.483,88,1.439,89,1.369,90,1.439,91,1.439,92,1.439,94,1.716,100,1.28,101,1.726,102,1.563,106,2.057,112,1.371,122,2.047,123,1.338,136,1.108,137,1.115,157,2.473,162,2.501,170,1.743,200,2.374,209,1.961,216,2.407,222,1.227,243,0.779,244,2.926,246,2.42,249,2.528,250,3.954,268,4.64,286,2.36,306,1.369,310,3.165,313,2.76,325,4.439,326,1.96,332,1.253,339,1.519,344,1.519,381,1.726,476,1.825,546,2.068,562,2.203,563,2.203,600,1.87,603,3.161,617,1.439,620,3.15,679,3.006,792,1.726,849,2.068,850,2.068,851,1.87,852,2.203,853,1.563,856,1.96,857,1.87,873,3.831,876,3.614,878,5.294,885,2.882,908,2.592,914,2.068,915,1.87,916,1.96,928,4.956,939,7.882,963,1.96,971,2.658,972,5.357,973,5.357,974,5.357,975,5.357,976,5.357,977,5.357,978,4.272,979,5.357,980,4.272,981,4.272,982,4.272,983,4.73,984,7.546,985,4.272,986,4.272,987,2.658,988,4.272,989,2.658,990,2.658,991,2.658,992,4.272,993,2.658,994,2.658,995,4.272,996,2.658,997,4.272,998,2.658,999,2.441,1000,2.807,1001,3.54,1002,2.658,1003,5.87,1004,2.658,1005,4.272,1006,4.272,1007,2.658,1008,4.272,1009,3.831,1010,3.831,1011,2.658,1012,2.658,1013,3.54,1014,3.15,1015,3.15,1016,2.658,1017,2.658,1018,2.658,1019,3.831,1020,2.383,1021,2.658,1022,1.308,1023,2.203,1024,3.54,1025,3.54,1026,2.658,1027,2.658,1028,2.068,1029,2.068,1030,2.658,1031,1.96,1032,2.068,1033,4.272,1034,2.658,1035,2.658,1036,2.658,1037,2.658,1038,2.658,1039,2.658,1040,2.068,1041,2.068,1042,2.658,1043,2.658,1044,2.658,1045,2.658,1046,4.272,1047,2.658,1048,4.773,1049,2.658,1050,4.439,1051,2.658,1052,6.136,1053,2.658,1054,2.658,1055,2.658,1056,2.658,1057,2.658,1058,2.658,1059,2.658,1060,4.272,1061,2.658,1062,2.658,1063,4.272,1064,2.658,1065,2.658,1066,2.658,1067,4.272,1068,2.658,1069,2.658,1070,2.658,1071,2.658,1072,1.96,1073,2.658,1074,2.658,1075,4.272,1076,2.658,1077,2.658,1078,2.658,1079,4.272,1080,1.96,1081,2.658,1082,2.658,1083,3.54,1084,4.272,1085,6.136,1086,5.357,1087,2.658,1088,2.658,1089,2.658,1090,2.658,1091,2.658,1092,2.658,1093,2.658,1094,2.383,1095,2.658,1096,2.658,1097,2.658,1098,2.658,1099,2.658,1100,2.383,1101,4.272,1102,2.658,1103,2.658,1104,2.658,1105,2.383]],["title/interfaces/AutoIncrementPluginOptions.html",[38,1.407,1106,3.791]],["body/interfaces/AutoIncrementPluginOptions.html",[3,0.097,4,0.076,5,0.081,7,0.292,8,0.769,11,1.198,21,0.005,22,1.278,23,0.429,29,0.107,37,0.16,38,1.859,40,0.886,41,2.576,42,1.837,43,1.673,44,1.964,58,0.003,59,0.003,60,2.035,121,2.85,122,2.385,134,1.281,185,4.416,196,4.185,256,5.432,257,2.75,263,2.75,286,3.193,292,1.868,332,2.328,476,2.903,624,4.121,810,5.63,827,4.583,1000,3.43,1106,5.009,1107,4.093,1108,4.093,1109,6.369,1110,6.932,1111,7.501,1112,6.507,1113,6.932,1114,7.501,1115,7.501,1116,7.269,1117,7.358,1118,6.092,1119,6.932,1120,6.092,1121,7.511,1122,4.583,1123,8.607,1124,6.092,1125,6.092,1126,5.63,1127,6.092,1128,6.092,1129,4.921,1130,5.009,1131,6.092,1132,4.78,1133,5.63,1134,6.092,1135,6.092,1136,6.092,1137,3.475,1138,3.842,1139,4.093,1140,4.093]],["title/interfaces/AutoIncrementPluginTrackerSpec.html",[38,1.407,1140,4.261]],["body/interfaces/AutoIncrementPluginTrackerSpec.html",[3,0.113,4,0.089,5,0.095,7,0.34,8,0.853,21,0.005,22,1.239,23,0.398,29,0.125,37,0.173,38,2.06,40,0.882,41,2.562,42,2.141,43,1.949,44,2.289,58,0.004,59,0.004,60,2.37,121,2.413,122,2.146,134,1.492,185,5.095,196,4.375,256,4.888,257,2.329,263,2.329,286,3.036,292,2.847,332,2.712,476,2.458,624,5.398,810,4.768,827,3.882,1106,4.242,1107,4.768,1108,4.768,1109,6.488,1110,4.768,1111,5.16,1112,4.476,1113,4.768,1114,5.16,1115,5.16,1116,6.953,1117,6.923,1118,5.16,1119,6.238,1120,5.16,1121,8.205,1122,3.882,1123,8.496,1124,5.16,1125,5.16,1126,4.768,1127,5.16,1128,5.16,1129,4.428,1130,4.242,1131,5.16,1132,4.048,1133,4.768,1134,5.16,1135,5.16,1136,5.16,1137,4.048,1138,4.476,1139,4.768,1140,6.238]],["title/interfaces/BackendResultInfoInterface.html",[38,1.407,1141,4.261]],["body/interfaces/BackendResultInfoInterface.html",[3,0.143,4,0.112,5,0.12,7,0.43,8,0.988,11,1.146,21,0.005,23,0.402,37,0.18,38,2.387,40,0.838,41,2.686,58,0.004,59,0.004,60,2.998,205,3.532,216,2.878,264,4.007,329,3.091,341,2.946,1141,8.025,1142,6.032,1143,5.662,1144,5.367,1145,4.726,1146,6.032]],["title/interfaces/BackendResultInterface.html",[38,1.407,1144,3.791]],["body/interfaces/BackendResultInterface.html",[3,0.141,4,0.111,5,0.118,7,0.424,8,0.98,11,1.141,21,0.005,23,0.415,37,0.179,38,2.367,40,0.834,41,2.674,58,0.004,59,0.004,60,2.957,205,2.714,216,2.134,264,3.992,329,2.291,341,3.901,1141,8.399,1142,5.948,1143,5.583,1144,6.378,1145,6.258,1146,7.987]],["title/classes/BackendsCommand.html",[0,0.228,1147,4]],["body/classes/BackendsCommand.html",[0,0.348,2,0.909,3,0.12,4,0.095,5,0.101,7,0.363,9,1.826,11,0.93,12,4.017,15,2.27,18,0.526,20,1.786,21,0.005,22,1.501,23,0.338,29,0.188,30,2.625,37,0.162,40,0.79,42,2.922,43,2.66,44,3.124,45,4.046,46,4.252,55,0.603,58,0.004,59,0.004,65,1.259,72,1.826,74,1.453,77,1.763,78,2.144,94,1.397,170,1.453,200,2.306,209,3.34,243,2.302,246,1.615,268,3.243,272,1.453,315,5.1,316,5.621,320,5.1,321,3.851,322,3.851,332,3.702,333,5.1,334,5.1,335,5.621,345,3.851,346,3.989,348,3.326,380,5.298,381,3.989,384,4.323,1147,6.109,1148,5.509,1149,6.144,1150,6.144,1151,5.84,1152,4.779,1153,5.509,1154,6.508,1155,3.243,1156,5.091,1157,5.509,1158,5.509,1159,4.145]],["title/controllers/BackendsController.html",[385,1.407,1160,4.261]],["body/controllers/BackendsController.html",[0,0.143,3,0.063,4,0.05,5,0.053,7,0.191,9,0.959,10,1.711,11,0.923,15,0.932,18,0.494,20,1.678,21,0.005,22,1.214,23,0.318,25,1.431,29,0.206,32,0.612,36,0.531,37,0.067,39,2.256,40,0.871,41,1.685,53,2.52,55,0.665,56,1.721,58,0.002,59,0.002,72,1.806,73,4.098,74,1.177,77,1.117,78,2.275,94,1.678,100,1.553,101,2.094,102,1.897,106,2.925,108,4.143,112,0.825,116,1.746,127,1.246,133,1.353,134,0.836,139,1.553,152,1.093,156,2.378,157,2.297,162,1.2,170,1.681,200,1.819,216,2.56,244,1.404,246,1.939,249,1.329,263,2.764,272,0.763,325,3.573,329,1.589,341,2.014,344,1.843,385,0.883,387,1.015,389,1.353,394,3.759,395,3.931,399,3.975,422,1.329,425,1.553,427,1.46,559,2.927,561,2.509,589,3.945,599,3.501,636,2.176,638,4.017,686,3.714,887,3.871,894,3.871,895,2.345,903,2.449,915,2.269,935,2.673,936,2.673,999,1.843,1014,5.035,1015,3.669,1129,1.897,1145,3.231,1151,4.098,1156,2.673,1159,2.176,1160,4.124,1161,3.225,1162,6.075,1163,6.075,1164,6.075,1165,4.976,1166,6.075,1167,3.225,1168,5.659,1169,9.085,1170,3.225,1171,3.697,1172,5.035,1173,6.124,1174,3.225,1175,3.225,1176,5.659,1177,6.075,1178,6.075,1179,6.075,1180,6.617,1181,3.225,1182,3.871,1183,4.976,1184,3.225,1185,3.225,1186,3.225,1187,4.462,1188,4.462,1189,4.462,1190,4.976,1191,3.361,1192,3.119,1193,2.396,1194,4.976,1195,3.871,1196,4.124,1197,3.225,1198,3.225,1199,3.225,1200,6.829,1201,3.871,1202,4.462,1203,4.462,1204,3.225,1205,3.225,1206,5.659,1207,3.225,1208,3.225,1209,4.976,1210,3.225,1211,4.976,1212,2.892,1213,3.225,1214,3.225,1215,2.892,1216,3.225,1217,4.976,1218,2.378,1219,2.892,1220,1.897,1221,3.225,1222,3.225,1223,3.225,1224,6.829,1225,4.976,1226,6.075,1227,3.225,1228,3.225,1229,4.976,1230,2.892,1231,3.669,1232,3.225,1233,3.225,1234,3.225,1235,3.225,1236,3.225,1237,6.829,1238,6.829,1239,3.225,1240,6.124,1241,3.225,1242,3.225,1243,3.225,1244,3.225,1245,3.225,1246,3.225,1247,3.225,1248,3.225,1249,3.225,1250,2.892,1251,3.871,1252,3.225,1253,3.871,1254,3.225,1255,3.871,1256,3.225,1257,3.501,1258,3.225,1259,3.225,1260,3.225,1261,3.225,1262,3.225,1263,3.225,1264,3.225,1265,2.892,1266,2.892,1267,2.892,1268,3.225,1269,3.225,1270,3.225,1271,3.225,1272,4.462,1273,3.225,1274,3.225,1275,3.225,1276,3.225,1277,3.225,1278,3.225,1279,4.462,1280,3.225,1281,3.225,1282,3.669,1283,3.225]],["title/modules/BackendsModule.html",[166,1.618,1284,3.339]],["body/modules/BackendsModule.html",[0,0.283,3,0.125,4,0.098,5,0.105,21,0.005,29,0.217,36,1.05,37,0.132,58,0.004,59,0.004,103,3.646,166,2.772,387,2.531,530,6.104,531,2.778,532,2.888,533,3.008,534,3.008,535,3.008,536,4.068,537,4.153,541,3.792,542,2.726,543,2.947,549,4.049,740,6.258,1151,6.934,1160,7.302,1215,5.723,1284,6.749,1285,5.723,1286,5.723,1287,5.723,1288,5.723,1289,6.323,1290,6.851,1291,6.851,1292,6.382,1293,6.382,1294,6.382,1295,5.723,1296,5.723,1297,5.723]],["title/classes/BackendsSyncallCommand.html",[0,0.228,1154,4.261]],["body/classes/BackendsSyncallCommand.html",[0,0.347,2,0.903,3,0.12,4,0.094,5,0.1,7,0.361,9,1.814,11,0.925,12,4.012,15,2.261,18,0.524,20,1.779,21,0.005,22,1.497,23,0.337,29,0.187,30,2.607,37,0.162,40,0.788,42,2.909,43,2.649,44,3.11,45,4.029,46,4.233,55,0.601,58,0.004,59,0.004,65,1.253,72,1.814,74,1.443,77,1.756,78,2.14,94,1.388,170,1.447,200,2.299,209,3.332,243,2.292,246,1.604,268,3.221,272,1.443,315,5.078,316,5.603,320,5.078,321,3.825,322,3.825,332,3.686,333,5.078,334,5.078,335,5.603,345,3.825,346,3.962,348,3.304,380,5.275,381,3.962,384,4.293,1147,4.747,1148,5.472,1151,6.603,1152,4.747,1153,5.472,1154,7.151,1155,3.221,1156,5.057,1157,5.472,1158,5.472,1159,4.117,1298,6.102,1299,6.102]],["title/classes/ChangePasswordDto.html",[0,0.228,1300,3.791]],["body/classes/ChangePasswordDto.html",[0,0.359,2,0.953,3,0.126,4,0.099,5,0.106,7,0.381,8,0.916,18,0.592,21,0.005,23,0.435,29,0.176,32,1.222,37,0.133,40,0.891,53,2.509,55,0.704,58,0.004,59,0.004,127,1.494,157,3.735,205,3.06,263,3.274,265,5.055,267,3.027,275,2.646,277,3.051,278,1.715,279,3.581,310,3.893,863,4.917,869,6.293,1300,5.965,1301,9.281,1302,5.336,1303,6.224,1304,7.331,1305,6.704,1306,6.438,1307,8.09,1308,8.09,1309,6.438,1310,5.774]],["title/interfaces/CipherData.html",[38,1.407,1311,4.261]],["body/interfaces/CipherData.html",[0,0.072,3,0.032,4,0.025,5,0.027,7,0.096,8,0.321,9,1.336,15,0.471,18,0.109,21,0.005,23,0.122,24,1.574,29,0.195,36,0.268,37,0.034,38,0.775,39,0.498,40,0.621,41,0.786,53,2.656,55,0.539,56,1.694,58,0.001,59,0.001,60,0.671,65,0.261,66,1.364,70,0.859,72,1.661,73,3.032,74,1.322,78,1.795,83,1.718,100,1.364,101,1.057,102,0.958,103,0.93,106,3.982,112,2.117,122,0.464,136,0.735,139,2.452,162,0.606,170,1.792,200,1.967,219,1.765,243,0.477,244,2.769,246,2.512,249,2.748,250,4.552,253,2.536,264,0.659,268,2.688,272,1.322,306,0.839,310,2.91,329,1.784,341,2.699,352,1.364,354,2.344,394,1.758,422,0.671,454,1.81,462,2.098,476,2.849,542,1.92,603,4.601,633,4.099,649,0.881,677,3.436,678,1.145,716,1.911,761,1.266,764,2.441,765,1.2,778,2.28,787,3.032,792,1.057,793,1.2,811,2.203,851,1.145,853,0.958,859,2.203,862,4.834,863,4.533,882,1.145,888,3.648,895,2.999,901,3.856,902,2.119,903,0.801,915,2.645,928,2.772,1015,2.088,1050,2.347,1080,2.088,1083,1.349,1145,1.839,1151,1.911,1152,1.266,1155,2.373,1159,1.098,1171,3.611,1191,1.394,1192,1.02,1193,1.364,1195,1.266,1218,1.2,1220,0.958,1251,2.924,1253,2.924,1255,2.924,1257,2.645,1300,2.088,1303,2.645,1304,1.349,1311,2.347,1312,1.46,1313,1.145,1314,1.46,1315,1.46,1316,1.46,1317,1.46,1318,1.46,1319,1.46,1320,1.46,1321,1.349,1322,2.203,1323,2.088,1324,1.349,1325,1.993,1326,1.46,1327,1.2,1328,3.382,1329,1.46,1330,2.54,1331,2.088,1332,3.115,1333,1.349,1334,2.088,1335,1.349,1336,1.349,1337,2.645,1338,1.266,1339,0.93,1340,1.349,1341,2.088,1342,1.349,1343,2.772,1344,1.266,1345,2.088,1346,1.349,1347,1.839,1348,1.098,1349,1.057,1350,1.02,1351,1.057,1352,4.631,1353,6.789,1354,4.031,1355,2.347,1356,1.2,1357,1.46,1358,1.349,1359,1.46,1360,1.349,1361,1.46,1362,1.46,1363,1.46,1364,1.46,1365,1.266,1366,3.371,1367,4.533,1368,5.445,1369,5.108,1370,2.347,1371,1.718,1372,2.211,1373,2.356,1374,4.695,1375,1.349,1376,1.911,1377,1.46,1378,4.642,1379,1.349,1380,1.46,1381,4.692,1382,5.011,1383,4.631,1384,5.981,1385,2.088,1386,3.162,1387,2.54,1388,2.54,1389,5.188,1390,5.705,1391,3.115,1392,3.371,1393,5.327,1394,6.434,1395,4.567,1396,4.22,1397,4.977,1398,1.349,1399,1.549,1400,1.266,1401,3.496,1402,1.46,1403,1.46,1404,1.349,1405,1.46,1406,4.031,1407,2.54,1408,5.385,1409,2.54,1410,3.371,1411,3.371,1412,1.46,1413,1.46,1414,1.46,1415,1.46,1416,2.54,1417,1.46,1418,3.115,1419,2.54,1420,2.54,1421,2.347,1422,1.46,1423,1.46,1424,2.54,1425,2.54,1426,1.46,1427,1.46,1428,2.54,1429,2.54,1430,2.645,1431,1.46,1432,2.54,1433,2.54,1434,2.347,1435,3.202,1436,2.536,1437,2.772,1438,3.988,1439,4.567,1440,3.755,1441,1.349,1442,1.2,1443,1.46,1444,1.46,1445,3.371,1446,1.46,1447,1.46,1448,1.46,1449,5.581,1450,2.924,1451,2.347,1452,4.031,1453,2.54,1454,1.46,1455,2.645,1456,3.032,1457,1.46,1458,1.46,1459,3.77,1460,1.46,1461,1.057,1462,2.347,1463,1.46,1464,2.54,1465,2.54,1466,1.46,1467,1.46,1468,1.839,1469,0.881,1470,1.46,1471,1.46,1472,1.349,1473,1.46,1474,1.46,1475,1.266,1476,2.54,1477,1.349,1478,4.031,1479,1.46,1480,1.46,1481,1.46,1482,2.54,1483,3.371,1484,1.46,1485,1.46,1486,1.145,1487,1.266,1488,1.46,1489,2.54,1490,2.54,1491,2.347,1492,1.349,1493,1.349,1494,1.46,1495,2.54,1496,2.347,1497,1.349,1498,1.2,1499,3.371,1500,1.46,1501,1.46,1502,1.46,1503,3.371,1504,3.115,1505,2.536,1506,3.371,1507,2.645,1508,1.46,1509,1.46,1510,3.371,1511,3.371,1512,1.349,1513,1.46,1514,1.46,1515,1.02,1516,1.46,1517,1.46,1518,1.46,1519,1.46,1520,1.46,1521,2.54,1522,1.2,1523,1.46,1524,1.46,1525,2.54,1526,1.46,1527,1.46,1528,1.46,1529,3.371,1530,1.46,1531,1.46,1532,1.349,1533,4.567,1534,1.46,1535,1.2,1536,1.495,1537,1.46,1538,1.46,1539,1.46,1540,1.46,1541,1.46,1542,1.46,1543,1.266,1544,2.54,1545,1.46,1546,1.46,1547,2.54,1548,2.54,1549,3.371,1550,2.54,1551,1.46,1552,2.54,1553,2.54,1554,2.54,1555,2.54,1556,1.46,1557,1.46,1558,2.54,1559,2.54,1560,2.54,1561,2.54,1562,2.54,1563,2.54,1564,2.54,1565,2.54,1566,2.54,1567,2.54,1568,1.46,1569,1.349,1570,1.46,1571,1.46,1572,1.46,1573,1.46,1574,1.46,1575,1.46,1576,2.54,1577,1.46,1578,1.46,1579,1.46,1580,1.46,1581,1.46,1582,3.371,1583,2.54,1584,2.54,1585,2.54,1586,1.46,1587,2.54,1588,1.145,1589,1.46,1590,1.266,1591,2.54,1592,2.54,1593,2.54,1594,2.54,1595,1.349,1596,1.46,1597,1.46,1598,2.54,1599,2.203,1600,1.145,1601,1.057,1602,1.46,1603,2.54,1604,1.46,1605,1.46,1606,1.46,1607,1.098,1608,1.46,1609,1.46,1610,2.203,1611,1.349,1612,1.46,1613,1.46,1614,2.54,1615,1.46,1616,1.46,1617,1.46,1618,1.266,1619,1.46,1620,1.46,1621,1.46,1622,1.46,1623,1.46,1624,1.46,1625,1.46,1626,1.46,1627,1.46,1628,1.46,1629,2.634,1630,2.54,1631,1.266,1632,1.46,1633,1.349,1634,1.46,1635,1.46,1636,1.349,1637,1.46,1638,1.46,1639,1.46,1640,0.958,1641,1.46,1642,1.46]],["title/modules/CliModule.html",[166,1.618,1643,4]],["body/modules/CliModule.html",[0,0.233,3,0.103,4,0.081,5,0.087,21,0.005,23,0.227,29,0.222,36,0.866,37,0.109,56,1.052,58,0.003,59,0.003,70,4.876,78,1.953,83,5.964,100,2.533,101,3.416,102,3.095,103,3.006,116,2.848,132,1.542,134,1.84,166,2.525,170,0.973,209,1.926,272,1.244,299,5.23,347,3.702,428,2.848,530,5.79,531,2.29,532,2.381,533,2.48,534,2.48,535,2.48,536,3.275,537,2.48,541,3.343,542,2.248,543,2.429,545,3.095,549,4.649,552,4.907,553,4.718,585,3.298,649,2.848,738,4.718,739,4.36,740,6.975,743,3.879,744,3.549,745,4.718,746,4.093,766,4.718,767,3.879,772,4.718,773,4.718,774,4.718,776,6.042,789,4.093,816,4.718,817,6.361,818,4.718,819,4.718,820,4.718,821,4.718,822,4.718,823,4.718,824,3.416,825,4.718,826,4.718,827,3.549,828,4.718,829,4.718,830,4.718,831,4.718,832,4.718,834,4.718,835,4.718,947,6.499,952,6.232,960,4.36,1147,4.093,1284,5.998,1643,7.773,1644,4.718,1645,5.261,1646,5.261,1647,5.261,1648,3.879,1649,5.23,1650,5.261,1651,5.261,1652,5.261,1653,4.36,1654,5.261,1655,5.261,1656,5.261]],["title/classes/ConcernedToPart.html",[0,0.228,1657,4.261]],["body/classes/ConcernedToPart.html",[0,0.292,2,0.973,3,0.129,4,0.101,5,0.108,7,0.389,8,0.929,11,0.97,18,0.598,21,0.005,22,1.47,23,0.423,29,0.178,37,0.169,40,0.871,55,0.707,58,0.004,59,0.004,65,1.054,112,1.684,121,3.439,122,1.876,124,3.435,127,1.509,128,4.211,131,4.408,132,1.928,133,2.759,134,1.706,167,6.587,170,1.217,219,1.825,263,3.616,272,2.212,289,3.168,292,3.101,293,3.167,1657,6.795,1658,9.353,1659,6.579,1660,6.579,1661,6.579,1662,6.579,1663,5.899,1664,6.579]],["title/classes/ConcernedToPartDTO.html",[0,0.228,1665,3.791]],["body/classes/ConcernedToPartDTO.html",[0,0.372,2,1.01,3,0.134,4,0.105,5,0.112,7,0.404,8,0.95,11,0.993,18,0.608,21,0.005,22,1.495,23,0.391,29,0.197,32,1.296,37,0.141,40,0.82,55,0.711,58,0.004,59,0.004,124,3.226,127,1.534,133,2.863,134,1.77,167,6.697,263,3.676,275,2.701,277,2.986,278,1.818,485,4.803,492,5.033,505,4.429,508,4.542,509,3.337,1665,6.186,1666,9.475,1667,6.826,1668,6.826,1669,5.657,1670,6.826,1671,6.826]],["title/interfaces/ConfigInstance.html",[38,1.407,1672,4.261]],["body/interfaces/ConfigInstance.html",[3,0.111,4,0.059,5,0.063,7,0.227,8,0.642,21,0.005,23,0.443,29,0.196,32,0.728,37,0.139,38,1.551,39,2.063,40,0.869,41,1.063,42,1.426,43,1.298,44,1.524,45,1.974,46,2.075,47,2.696,58,0.003,59,0.003,60,1.579,70,3.561,102,4.899,112,0.981,132,1.123,134,2.063,157,1.769,162,1.426,209,3.49,270,2.377,272,1.595,285,2.325,286,1.863,310,2.377,357,3.769,375,4.84,428,3.068,585,4.672,617,3.068,649,3.068,676,2.585,681,2.585,685,5.619,743,4.179,744,3.824,746,4.409,767,4.179,789,4.409,824,4.84,844,2.696,876,2.585,885,5.619,903,1.886,910,2.585,958,4.697,962,4.697,963,2.826,1022,3.319,1032,5.247,1072,2.826,1122,2.585,1328,1.806,1365,6.188,1373,4.987,1450,4.409,1672,5.59,1673,3.436,1674,5.597,1675,7.134,1676,7.134,1677,6.902,1678,5.866,1679,6.684,1680,5.083,1681,5.083,1682,5.083,1683,4.697,1684,2.981,1685,5.083,1686,3.988,1687,4.697,1688,4.697,1689,4.179,1690,5.083,1691,5.083,1692,5.083,1693,5.083,1694,6.049,1695,4.697,1696,4.697,1697,4.697,1698,4.697,1699,5.083,1700,3.436,1701,3.436,1702,3.436,1703,3.436,1704,3.436,1705,3.436,1706,3.436,1707,3.436,1708,3.176,1709,3.436,1710,7.727,1711,3.436,1712,3.436,1713,3.436,1714,3.436,1715,3.436,1716,3.436,1717,3.436,1718,3.436,1719,3.436,1720,3.436,1721,3.436,1722,3.436,1723,3.436,1724,4.697,1725,5.083,1726,3.436,1727,3.436,1728,3.436,1729,3.436,1730,3.436,1731,3.436,1732,3.436,1733,3.436,1734,3.436,1735,3.436,1736,3.436,1737,3.436,1738,3.176,1739,3.436,1740,3.436,1741,3.436,1742,3.436,1743,3.436,1744,3.436,1745,3.436,1746,3.436,1747,3.436,1748,3.436,1749,2.981]],["title/classes/ConfigObjectAttributeDTO.html",[0,0.228,1750,4]],["body/classes/ConfigObjectAttributeDTO.html",[0,0.416,2,0.898,3,0.119,4,0.094,5,0.1,7,0.359,8,0.883,18,0.629,21,0.005,22,1.495,23,0.437,29,0.187,37,0.178,40,0.866,55,0.729,58,0.004,59,0.004,127,1.587,270,3.269,272,1.843,276,4.785,277,3.288,278,1.617,282,4.453,283,3.469,289,2.916,506,4.058,509,3.1,510,2.748,516,3.836,1750,7.066,1751,5.032,1752,7.527,1753,5.222,1754,6.072,1755,6.072,1756,6.072,1757,6.072,1758,6.072,1759,6.697,1760,6.072,1761,6.072,1762,6.459,1763,3.128,1764,5.032,1765,5.032,1766,6.697,1767,4.272]],["title/classes/ConfigObjectObjectClassDTO.html",[0,0.228,1766,4]],["body/classes/ConfigObjectObjectClassDTO.html",[0,0.422,2,0.936,3,0.124,4,0.098,5,0.104,7,0.374,8,0.906,18,0.588,21,0.005,22,1.517,23,0.425,29,0.191,37,0.181,40,0.872,55,0.725,58,0.004,59,0.004,127,1.482,270,2.653,272,1.892,276,4.447,277,3.312,278,1.685,282,5.269,283,3.614,289,2.143,506,4.136,509,3.182,510,2.863,516,3.937,1750,6.826,1751,5.242,1752,7.642,1753,3.837,1759,6.224,1762,7.272,1763,3.259,1764,5.242,1765,5.242,1766,7.174,1767,4.451,1768,6.326,1769,6.326,1770,6.326]],["title/classes/ConfigObjectSchemaDTO.html",[0,0.228,1767,3.617]],["body/classes/ConfigObjectSchemaDTO.html",[0,0.424,2,0.953,3,0.126,4,0.099,5,0.106,7,0.381,8,0.916,18,0.542,21,0.005,22,1.331,23,0.421,29,0.192,37,0.183,40,0.845,55,0.722,58,0.004,59,0.004,127,1.367,270,2.701,272,1.913,276,4.496,277,3.256,278,1.715,282,5.303,283,5.055,289,2.181,506,4.17,509,3.218,510,2.914,516,3.981,1750,7.219,1751,5.336,1752,6.704,1753,3.906,1759,6.293,1762,6.704,1763,3.317,1764,5.336,1765,5.336,1766,7.219,1767,5.692,1771,6.704,1772,6.704,1773,6.438,1774,6.438]],["title/classes/ConsoleSession.html",[0,0.228,1025,4.261]],["body/classes/ConsoleSession.html",[0,0.304,2,1.014,3,0.134,4,0.106,5,0.113,7,0.405,8,0.952,15,2.63,18,0.635,21,0.005,23,0.392,37,0.142,40,0.858,55,0.72,58,0.004,59,0.004,74,2.416,122,2.594,286,2.991,313,4.688,352,4.38,602,6.144,607,6.144,608,7.541,609,6.144,1000,3.558,1025,6.969,1775,9.737,1776,8.409,1777,6.995]],["title/controllers/CoreController.html",[385,1.407,1778,4.261]],["body/controllers/CoreController.html",[0,0.338,3,0.15,4,0.118,5,0.126,21,0.005,29,0.207,32,1.449,36,1.256,37,0.158,55,0.532,58,0.004,59,0.004,74,1.805,385,2.088,387,2.401,389,3.201,427,3.453,456,3.523,457,3.755,1778,7.434,1779,7.631,1780,6.843,1781,6.615,1782,6.843,1783,7.631,1784,7.631]],["title/modules/CoreModule.html",[166,1.618,732,3.791]],["body/modules/CoreModule.html",[0,0.251,3,0.111,4,0.087,5,0.093,18,0.379,21,0.005,29,0.22,30,2.416,36,0.931,37,0.117,55,0.394,56,1.13,58,0.004,59,0.004,77,1.27,94,1.286,166,2.781,387,2.342,454,3.583,530,5.911,531,2.462,532,2.559,533,2.665,534,2.665,535,2.665,536,3.841,537,2.665,541,3.508,542,2.416,543,2.611,549,4.187,732,7.7,947,6.634,952,6.361,966,5.071,1022,2.783,1284,6.123,1290,6.634,1291,6.634,1295,5.071,1296,5.071,1297,5.071,1778,6.894,1780,5.071,1781,6.953,1782,5.071,1785,5.071,1786,5.071,1787,5.071,1788,6.634,1789,6.953,1790,5.655,1791,6.471,1792,5.655,1793,6.471,1794,4.686,1795,5.655,1796,5.655,1797,5.655,1798,5.655,1799,5.655,1800,4.686,1801,4.686,1802,4.686]],["title/injectables/CoreService.html",[136,1.333,1781,3.791]],["body/injectables/CoreService.html",[0,0.346,3,0.153,4,0.12,5,0.129,15,2.781,18,0.523,21,0.005,29,0.17,36,1.285,37,0.161,55,0.634,58,0.004,59,0.004,136,2.359,137,3.277,1781,6.706,1803,7.812,1804,7.812]],["title/classes/CustomFieldsDto.html",[0,0.228,484,2.53]],["body/classes/CustomFieldsDto.html",[0,0.388,2,1.086,3,0.144,4,0.113,5,0.121,7,0.434,8,0.993,11,1.037,18,0.491,21,0.005,23,0.378,29,0.19,37,0.152,39,2.243,40,0.635,55,0.653,58,0.004,59,0.004,127,1.239,278,1.955,294,4.047,295,3.458,296,3.458,351,5.355,357,2.775,484,4.313,502,4.599,506,4.131,509,3.486,1805,8.765,1806,7.337,1807,7.337,1808,4.313]],["title/classes/DataPart.html",[0,0.228,1809,4.261]],["body/classes/DataPart.html",[0,0.303,2,1.01,3,0.134,4,0.105,5,0.112,7,0.404,8,0.95,11,0.993,18,0.562,21,0.005,23,0.432,29,0.182,37,0.188,40,0.877,55,0.69,58,0.004,59,0.004,65,1.094,112,1.747,121,3.519,122,1.946,127,1.417,128,3.954,131,4.281,132,2.001,134,1.77,170,1.552,272,1.984,286,2.986,289,2.842,292,3.173,293,3.287,329,2.9,1809,6.953,1810,6.826,1811,6.826,1812,9.083,1813,6.826,1814,6.121,1815,6.826]],["title/classes/DeleteIdentitiesDto.html",[0,0.228,1168,4.261]],["body/classes/DeleteIdentitiesDto.html",[0,0.392,2,1.101,3,0.146,4,0.115,5,0.123,7,0.44,8,1.001,18,0.498,21,0.005,23,0.381,29,0.192,32,1.413,37,0.154,40,0.765,55,0.657,58,0.004,59,0.004,127,1.257,275,2.52,278,1.983,288,5.2,515,4.913,999,5.388,1168,7.326,1816,8.84,1817,6.674,1818,6.674,1819,6.674]],["title/injectables/DtoValidationPipe.html",[136,1.333,757,4]],["body/injectables/DtoValidationPipe.html",[0,0.227,3,0.1,4,0.079,5,0.084,7,0.302,9,1.52,10,1.758,11,0.936,15,1.478,18,0.53,20,1.799,21,0.005,22,1.301,23,0.341,29,0.172,30,2.184,36,0.841,37,0.106,38,1.399,39,1.563,40,0.735,53,1.586,55,0.664,56,1.697,58,0.003,59,0.003,65,1.115,74,1.209,77,1.562,78,1.799,94,1.582,123,4.272,136,1.804,137,2.145,139,4.512,152,1.732,170,1.57,187,2.462,200,1.853,243,1.499,246,1.344,272,1.645,284,4.914,286,1.681,329,2.221,341,3.201,389,3.56,422,2.106,462,2.106,476,2.972,633,3.975,757,6.151,776,3.597,792,3.32,809,4.517,901,2.069,1000,3.092,1029,3.977,1393,3.597,1515,3.205,1820,7.611,1821,4.237,1822,7.091,1823,5.831,1824,7.591,1825,5.113,1826,5.113,1827,5.765,1828,7.034,1829,5.113,1830,6.239,1831,6.907,1832,5.113,1833,5.412,1834,4.585,1835,4.585,1836,4.585,1837,4.585,1838,4.585,1839,4.585,1840,5.13,1841,4.585,1842,2.768,1843,4.585,1844,3.977,1845,4.585,1846,4.585,1847,4.237,1848,4.585,1849,4.237,1850,4.585,1851,4.585,1852,4.585,1853,4.585,1854,4.585,1855,4.585,1856,6.239,1857,4.585,1858,4.585,1859,4.585,1860,4.585,1861,4.585,1862,4.585,1863,6.239,1864,4.585,1865,4.585,1866,4.585]],["title/classes/EmployeeNumber1700395200.html",[0,0.228,1867,4.611]],["body/classes/EmployeeNumber1700395200.html",[0,0.253,2,0.845,3,0.112,4,0.088,5,0.094,7,0.337,8,0.848,10,3.051,11,0.676,15,2.165,18,0.594,20,1.298,21,0.005,22,0.939,23,0.246,29,0.182,36,0.939,37,0.118,40,0.494,41,1.584,53,2.323,55,0.642,58,0.004,59,0.004,72,2.864,74,1.976,77,1.681,78,2.15,94,1.703,116,4.803,122,2.135,132,1.673,134,1.48,170,1.546,196,2.636,200,2.363,238,3.463,246,2.197,256,4.863,268,4.412,286,2.462,928,6.542,1000,2.232,1328,3.53,1469,3.09,1867,6.715,1868,9.212,1869,8.261,1870,5.709,1871,8.872,1872,8.261,1873,5.119,1874,7.489,1875,6.206,1876,7.489,1877,5.709,1878,5.709,1879,6.206,1880,5.709,1881,4.731,1882,5.709,1883,5.709,1884,6.139,1885,8.357,1886,5.269,1887,7.489,1888,7.489,1889,6.206,1890,5.709,1891,5.709,1892,7.489,1893,5.709,1894,5.709,1895,4.209]],["title/injectables/EnsureIdentitiesIndexMiddleware.html",[136,1.333,1896,4.261]],["body/injectables/EnsureIdentitiesIndexMiddleware.html",[0,0.279,3,0.124,4,0.097,5,0.104,7,0.472,11,0.945,15,2.308,18,0.535,20,1.816,21,0.005,22,1.314,23,0.344,29,0.206,36,1.037,37,0.13,55,0.61,58,0.004,59,0.004,67,3.504,72,1.874,74,1.491,77,1.792,78,1.993,94,1.434,132,1.848,134,1.635,136,2.07,137,2.644,139,4.434,152,2.135,156,4.648,196,4.252,238,3.824,244,2.744,246,1.657,249,2.597,332,4.341,394,3.601,399,3.743,901,2.551,902,2.971,1117,6.21,1129,3.708,1231,5.886,1328,4.341,1399,2.597,1437,4.648,1896,6.616,1897,8.761,1898,6.304,1899,6.304,1900,6.304,1901,7.983,1902,7.983,1903,4.561,1904,6.304,1905,6.304,1906,6.304,1907,7.983,1908,5.653,1909,6.304,1910,6.304,1911,6.304,1912,6.304,1913,6.304,1914,4.648]],["title/classes/ErrorSchemaDto.html",[0,0.228,1915,4.611]],["body/classes/ErrorSchemaDto.html",[0,0.29,2,0.968,3,0.128,4,0.101,5,0.108,7,0.387,8,0.926,11,1.105,18,0.625,21,0.005,23,0.422,29,0.178,32,1.242,36,1.077,37,0.135,39,2.499,40,0.832,42,2.434,43,2.216,44,2.603,55,0.718,58,0.004,59,0.004,127,1.577,219,1.815,275,2.865,284,4.592,329,2.845,332,3.084,357,3.091,422,3.671,462,3.671,1515,4.101,1915,7.328,1916,9.608,1917,6.543,1918,8.912,1919,6.543,1920,6.543,1921,5.422,1922,6.543,1923,6.543,1924,2.903]],["title/classes/ExecuteJobDto.html",[0,0.228,1176,4.261]],["body/classes/ExecuteJobDto.html",[0,0.361,2,0.961,3,0.127,4,0.1,5,0.107,7,0.384,8,0.921,11,0.963,18,0.595,21,0.005,23,0.428,29,0.193,32,1.233,37,0.134,40,0.847,55,0.705,58,0.004,59,0.004,127,1.5,157,3.756,205,3.521,263,3.88,267,2.523,275,2.655,278,1.73,279,2.629,285,4.935,505,4.294,508,4.404,509,3.533,869,6.329,999,5.075,1176,6.742,1218,6.55,1219,5.825,1220,3.821,1763,3.347,1808,4.003,1925,9.311,1926,6.496,1927,6.25,1928,6.496,1929,6.496,1930,6.496,1931,6.496,1932,5.383,1933,6.496,1934,6.496]],["title/interfaces/ExecuteJobOptions.html",[38,1.407,1935,4.611]],["body/interfaces/ExecuteJobOptions.html",[3,0.123,4,0.096,5,0.103,7,0.369,8,0.899,11,1.246,21,0.005,23,0.439,29,0.173,37,0.129,38,1.71,40,0.755,41,2.421,58,0.004,59,0.004,60,2.575,78,2.088,97,4.608,124,3.355,133,2.621,134,1.621,270,4.349,1180,8.233,1251,7.142,1253,7.142,1255,7.142,1257,6.668,1504,7.608,1935,7.12,1936,6.25,1937,6.25,1938,5.755,1939,9.181,1940,8.233,1941,6.769,1942,9.181]],["title/classes/FileUploadDto.html",[0,0.228,1943,3.339]],["body/classes/FileUploadDto.html",[0,0.4,2,0.793,3,0.105,4,0.083,5,0.142,7,0.317,8,0.814,18,0.359,21,0.005,23,0.434,29,0.196,32,1.018,37,0.179,39,2.197,40,0.9,42,1.995,43,1.816,44,2.133,55,0.706,58,0.003,59,0.003,65,1.298,112,2.428,122,1.529,127,0.906,270,3.013,272,1.916,275,2.875,276,3.993,277,2.967,278,1.428,286,2.362,289,3.266,294,3.317,295,2.528,296,2.528,329,1.712,455,3.253,484,3.535,504,2.427,505,4.569,508,4.386,509,3.835,513,2.763,514,2.763,697,3.361,1022,3.987,1220,3.154,1753,4.358,1763,2.763,1808,3.987,1924,2.379,1943,4.665,1944,4.171,1945,4.809,1946,5.297,1947,5.362,1948,5.589,1949,3.954,1950,4.665,1951,5.297,1952,3.618,1953,4.665,1954,4.171,1955,3.773,1956,3.482,1957,4.171,1958,3.618,1959,3.773,1960,4.171,1961,3.954,1962,3.482,1963,5.589,1964,3.954,1965,3.482,1966,3.773,1967,3.773]],["title/classes/Filestorage.html",[0,0.228,1968,3.339]],["body/classes/Filestorage.html",[0,0.205,2,0.685,3,0.091,4,0.071,5,0.107,7,0.274,8,0.736,11,1.135,18,0.642,21,0.005,23,0.451,29,0.163,37,0.134,39,2.294,40,0.896,42,2.792,43,2.542,44,2.985,55,0.725,56,0.925,58,0.003,59,0.003,65,0.742,112,2.48,119,3.61,127,1.619,128,3.062,131,4.568,132,1.357,164,2.645,170,0.857,205,3.359,257,2.629,270,3.412,272,2.238,286,2.136,289,3.154,292,2.457,293,2.229,332,2.182,351,4.287,357,2.838,360,3.123,372,2.808,376,2.902,455,4.552,697,4.704,1022,4.216,1132,3.257,1220,2.723,1924,2.882,1950,4.873,1951,5.533,1952,3.123,1956,5.282,1959,5.28,1961,5.533,1962,4.873,1964,5.533,1968,5.282,1969,4.63,1970,8.349,1971,4.63,1972,4.63,1973,4.63,1974,4.63,1975,4.63,1976,4.63,1977,4.63,1978,4.63,1979,4.63,1980,4.63,1981,3.837,1982,4.152,1983,4.63,1984,4.63,1985,4.63]],["title/controllers/FilestorageController.html",[385,1.407,1986,4.261]],["body/controllers/FilestorageController.html",[0,0.13,1,2.045,3,0.057,4,0.045,5,0.123,7,0.173,9,0.869,11,0.961,15,0.845,18,0.544,20,1.847,21,0.005,22,1.499,23,0.415,25,1.297,29,0.204,32,0.555,36,0.481,37,0.06,40,0.861,55,0.684,56,1.496,58,0.002,59,0.002,65,0.739,72,1.37,74,1.349,77,1.035,78,2.223,94,1.847,112,1.803,122,2.674,124,3.41,127,1.371,133,1.226,134,0.758,152,1.561,170,1.582,186,2.484,187,2.219,193,2.689,200,2.477,216,2.764,222,1.35,233,1.583,243,0.857,246,2.248,257,2.621,272,0.691,286,1.515,289,2.194,385,0.8,387,0.92,389,1.226,390,4.205,391,4.014,392,3.576,393,2.156,394,3.837,395,3.727,399,4.274,400,2.057,401,4.556,402,5.478,403,5.478,404,4.014,407,2.156,408,3.398,411,1.833,412,4.861,413,4.205,414,5.267,415,4.556,416,2.057,419,3.585,422,1.204,423,1.583,424,2.274,425,2.219,426,4.957,427,1.323,428,1.583,429,1.833,430,1.378,432,4.575,434,2.274,435,2.057,436,3.109,437,2.057,438,2.057,439,1.972,440,2.274,441,2.274,442,2.057,443,2.057,444,2.057,445,4.575,448,2.796,449,1.833,450,1.833,454,1.408,455,3.928,457,1.439,461,2.156,462,3.084,463,2.057,468,2.889,469,2.057,470,3.467,471,3.467,472,4.014,474,4.556,475,2.057,478,2.274,480,2.156,559,1.72,639,4.014,1000,1.802,1022,4.111,1456,1.972,1943,1.898,1953,4.861,1956,5.272,1962,5.554,1965,4.575,1966,4.556,1968,1.898,1986,3.82,1987,2.924,1988,5.705,1989,5.705,1990,5.705,1991,4.728,1992,2.924,1993,2.924,1994,2.924,1995,2.924,1996,2.924,1997,2.924,1998,2.924,1999,2.924,2000,2.924,2001,2.924,2002,2.924,2003,2.924,2004,2.924,2005,2.924,2006,2.924,2007,2.924,2008,5.705,2009,2.924,2010,2.924,2011,2.924,2012,3.82,2013,2.423,2014,2.423,2015,2.423,2016,2.274,2017,2.423,2018,2.423,2019,2.924,2020,2.993,2021,2.924,2022,3.398,2023,3.243,2024,2.924,2025,2.924,2026,2.274,2027,2.423,2028,2.423,2029,2.423,2030,2.423,2031,2.924,2032,2.924,2033,4.609,2034,2.924,2035,2.924,2036,4.609,2037,2.924,2038,5.807,2039,2.924,2040,4.609,2041,4.609,2042,2.924,2043,2.924,2044,4.133,2045,5.366,2046,5.807,2047,2.924,2048,4.133,2049,2.924,2050,2.924,2051,2.924,2052,2.924]],["title/classes/FilestorageCreateDto.html",[0,0.228,1953,3.339]],["body/classes/FilestorageCreateDto.html",[0,0.367,2,0.628,3,0.083,4,0.065,5,0.101,7,0.251,8,0.692,11,1.173,18,0.638,21,0.005,23,0.444,29,0.18,32,0.806,37,0.162,39,1.867,40,0.901,42,1.579,43,1.438,44,1.688,55,0.725,58,0.003,59,0.003,65,1.254,87,1.718,112,2.505,122,1.21,127,1.609,219,1.178,270,3.282,272,2.042,275,2.77,276,3.394,277,2.725,278,1.131,286,2.572,289,3.358,294,2.82,295,2.001,296,2.001,329,1.95,351,3.489,357,2.705,455,4.339,484,3.85,502,2.661,503,2.756,504,1.921,505,4.13,508,3.873,509,3.621,513,2.187,514,2.187,697,4.484,1022,4.377,1220,2.497,1753,2.575,1763,2.187,1808,3.52,1924,1.884,1932,5.061,1943,2.756,1944,3.302,1946,3.13,1948,4.751,1949,3.13,1950,4.645,1951,5.275,1952,2.864,1953,4.645,1954,3.302,1955,2.987,1956,4.645,1957,4.751,1958,4.12,1959,5.033,1960,5.565,1961,5.275,1962,4.645,1963,6.086,1964,5.275,1965,2.756,1966,2.987,1967,2.987,2053,4.245,2054,5.477,2055,4.245,2056,4.245,2057,3.807,2058,4.245,2059,3.807,2060,4.245,2061,3.807,2062,4.245,2063,5.477,2064,4.245,2065,4.245,2066,4.245,2067,3.807,2068,4.245]],["title/classes/FilestorageDto.html",[0,0.228,1965,3.339]],["body/classes/FilestorageDto.html",[0,0.362,2,0.605,3,0.08,4,0.063,5,0.098,7,0.242,8,0.673,11,1.167,18,0.64,21,0.005,23,0.443,29,0.177,32,0.776,37,0.159,39,1.817,40,0.901,42,1.521,43,1.384,44,1.626,55,0.725,58,0.003,59,0.003,65,1.232,87,3.826,112,2.489,122,1.996,127,1.614,219,1.134,270,3.224,272,2.015,275,2.751,276,3.303,277,2.685,278,1.089,286,2.527,289,3.339,294,2.744,295,1.926,296,1.926,329,1.897,351,3.395,357,2.648,455,4.247,484,3.445,502,2.562,503,2.654,504,1.849,505,4.058,508,3.79,509,3.584,513,2.106,514,2.106,519,3.179,697,4.389,1022,4.327,1220,2.404,1753,2.479,1763,2.106,1808,3.445,1924,1.814,1932,4.924,1943,2.654,1944,3.179,1946,3.013,1948,4.622,1949,3.013,1950,4.546,1951,5.163,1952,2.757,1953,6.265,1954,3.179,1955,2.875,1956,4.546,1957,4.622,1958,4.009,1959,4.926,1960,5.447,1961,5.163,1962,4.546,1963,5.98,1964,5.163,1965,3.858,1966,2.875,1967,2.875,2054,5.329,2057,3.665,2059,3.665,2061,3.665,2063,5.329,2067,3.665,2069,4.087,2070,4.087,2071,4.087,2072,4.087,2073,4.087,2074,4.087,2075,4.087,2076,4.087,2077,4.087,2078,4.087,2079,4.087]],["title/modules/FilestorageModule.html",[166,1.618,1788,3.617]],["body/modules/FilestorageModule.html",[0,0.291,3,0.129,4,0.101,5,0.108,21,0.005,22,1.081,29,0.213,36,1.081,37,0.136,58,0.004,59,0.004,132,1.925,166,2.809,387,2.577,531,2.859,532,2.972,533,3.095,534,3.095,535,3.095,536,4.122,537,4.207,541,3.861,542,2.805,543,3.032,545,3.863,549,3.305,550,4.116,552,3.752,1788,7.184,1968,4.264,1982,7.345,1986,7.398,2020,6.699,2022,6.039,2023,7.259,2080,5.889,2081,5.889,2082,5.889,2083,6.567,2084,6.567,2085,6.567,2086,5.108,2087,6.567]],["title/classes/FilestorageUpdateDto.html",[0,0.228,1966,3.617]],["body/classes/FilestorageUpdateDto.html",[0,0.403,2,0.813,3,0.108,4,0.085,5,0.12,21,0.005,23,0.433,29,0.198,32,1.043,37,0.181,39,2.232,40,0.898,42,2.043,43,1.861,44,2.185,55,0.701,58,0.004,59,0.004,65,1.4,112,2.443,122,1.566,270,3.062,272,1.939,275,2.885,276,4.057,277,2.991,278,1.463,286,2.4,289,3.283,294,3.371,295,2.589,296,2.589,329,1.753,455,3.332,484,3.592,504,2.485,505,4.613,508,4.439,509,3.856,513,2.83,514,2.83,697,3.443,1022,4.035,1220,3.231,1753,3.332,1763,2.83,1808,4.035,1924,2.437,1943,3.566,1944,4.273,1946,4.05,1948,5.679,1949,4.05,1950,4.74,1951,5.383,1952,3.705,1953,4.74,1954,4.273,1955,3.864,1956,3.566,1957,4.273,1958,3.705,1959,3.864,1960,4.273,1961,4.05,1962,3.566,1963,5.679,1964,4.05,1965,3.566,1966,5.136,1967,5.136]],["title/classes/ForcePasswordDto.html",[0,0.228,2088,4.261]],["body/classes/ForcePasswordDto.html",[0,0.371,2,1.004,3,0.133,4,0.105,5,0.112,7,0.401,8,0.947,18,0.56,21,0.005,23,0.426,29,0.182,32,1.289,37,0.14,40,0.876,53,2.593,55,0.689,58,0.004,59,0.004,127,1.412,157,3.86,205,3.162,262,6.087,263,3.93,265,4.777,266,6.504,267,2.933,269,6.087,274,6.087,275,2.583,277,2.979,278,1.808,279,3.384,310,4.073,1303,6.375,1305,6.929,2088,6.929,2089,9.06]],["title/classes/Form.html",[0,0.228,2090,3.469]],["body/classes/Form.html",[0,0.255,2,0.851,3,0.113,4,0.089,5,0.095,7,0.34,8,0.853,18,0.656,21,0.005,23,0.443,29,0.201,37,0.156,39,1.759,40,0.872,41,2.088,58,0.004,59,0.004,65,0.922,112,1.473,119,4.184,127,1.654,128,3.954,131,4.822,132,1.687,170,1.064,182,5.448,205,2.847,219,2.088,267,2.602,286,2.926,292,2.847,293,2.77,294,3.476,295,2.712,296,2.712,357,2.176,372,3.49,376,3.607,1132,4.048,1924,3.34,2090,5.078,2091,5.754,2092,5.903,2093,4.793,2094,5.448,2095,5.259,2096,4.323,2097,5.754,2098,5.754,2099,5.754,2100,6.923,2101,7.523,2102,5.754,2103,5.754,2104,5.754,2105,5.754,2106,5.433,2107,5.754,2108,3.607,2109,4.768,2110,5.754,2111,4.768,2112,5.16,2113,5.16,2114,5.754]],["title/controllers/FormController.html",[385,1.407,2115,4.261]],["body/controllers/FormController.html",[0,0.175,1,2.573,3,0.078,4,0.061,5,0.065,7,0.234,9,1.175,11,0.954,18,0.54,20,1.833,21,0.005,22,1.469,23,0.413,29,0.212,32,0.751,36,0.65,37,0.082,40,0.595,55,0.679,56,1.611,58,0.003,59,0.003,65,0.929,74,1.372,77,1.302,78,2.216,94,1.833,122,2.707,124,3.502,127,1.361,133,1.658,134,1.025,152,1.339,170,1.491,186,2.525,187,1.903,193,3.238,200,1.545,216,2.752,222,1.825,233,2.14,243,1.159,246,2.118,257,3.261,267,1.226,385,1.082,387,1.244,389,1.658,390,4.46,391,4.08,392,4.306,393,2.915,394,3.835,395,3.956,399,4.236,400,2.781,401,4.08,402,5.682,403,5.682,404,4.833,407,2.915,408,4.276,411,2.478,412,5.469,413,4.913,414,5.925,415,5.324,416,2.781,419,4.512,422,1.629,423,2.14,424,3.075,425,2.792,426,5.324,427,1.789,428,2.14,429,2.478,430,1.863,431,2.915,432,5.232,433,2.915,434,3.075,435,2.781,436,3.913,437,2.781,438,2.781,439,2.667,440,3.075,441,3.075,442,2.781,443,2.781,444,2.781,445,4.913,448,3.518,449,2.478,450,2.478,454,1.903,456,1.825,457,1.945,459,3.276,460,3.075,461,2.915,462,3.319,463,2.781,468,3.635,469,2.781,470,3.723,471,3.723,472,4.833,474,2.781,475,2.781,478,3.075,480,2.915,589,4.913,640,3.314,2090,2.667,2093,2.259,2095,2.478,2096,2.037,2115,4.806,2116,3.953,2117,6.716,2118,3.953,2119,3.953,2120,3.953,2121,3.953,2122,3.953,2123,3.953,2124,3.953,2125,3.953,2126,5.579,2127,3.953,2128,3.953,2129,3.953,2130,4.276,2131,3.545,2132,3.953,2133,3.953,2134,3.953,2135,3.953,2136,5.8,2137,3.953,2138,3.953,2139,3.953,2140,3.953,2141,3.953]],["title/classes/FormCreateDto.html",[0,0.228,2142,4]],["body/classes/FormCreateDto.html",[0,0.397,2,0.777,3,0.103,4,0.081,5,0.086,7,0.311,8,0.803,11,1.093,18,0.651,21,0.005,23,0.441,29,0.205,32,0.997,37,0.166,39,2.167,40,0.865,55,0.494,58,0.003,59,0.003,65,1.376,87,2.126,112,2.363,123,3.567,127,1.643,182,5.207,267,2.487,272,1.676,275,2.773,277,2.946,278,1.399,289,2.716,294,3.272,295,2.476,296,2.476,357,2.68,504,2.377,506,3.34,509,3.414,510,2.377,515,2.92,516,2.585,1763,2.707,1771,4.354,1772,4.354,1808,3.946,1924,2.331,2092,5.641,2093,4.581,2094,5.207,2095,5.026,2096,4.131,2106,4.717,2108,3.293,2117,3.874,2126,3.874,2142,6.238,2143,4.354,2144,5.38,2145,6.354,2146,5.254,2147,4.354,2148,5.254,2149,5.254,2150,5.254,2151,5.641,2152,5.254,2153,5.254,2154,5.254,2155,4.711,2156,6.645,2157,5.254,2158,5.225,2159,4.354,2160,4.711,2161,3.544,2162,6.329,2163,4.354,2164,4.354,2165,4.354]],["title/classes/FormDto.html",[0,0.228,2117,3.791]],["body/classes/FormDto.html",[0,0.394,2,0.76,3,0.101,4,0.079,5,0.085,7,0.304,8,0.79,11,1.085,18,0.648,21,0.005,23,0.44,29,0.204,32,0.975,37,0.164,39,2.133,40,0.862,55,0.486,58,0.003,59,0.003,65,1.363,87,3.917,112,2.347,123,3.512,127,1.635,182,5.146,267,2.458,272,1.65,275,2.759,277,2.923,278,1.368,289,2.685,294,3.221,295,2.42,296,2.42,357,2.639,504,2.324,506,3.289,509,3.382,510,2.324,515,2.854,516,2.527,1763,2.645,1771,4.255,1772,4.255,1808,3.9,1924,2.278,2092,5.576,2093,4.528,2094,5.146,2095,4.968,2096,4.083,2106,4.662,2108,3.219,2117,5.144,2126,3.786,2142,7.683,2143,4.255,2144,4.968,2145,6.257,2147,4.255,2151,5.576,2155,4.604,2156,6.568,2158,5.144,2159,4.255,2160,4.604,2161,3.464,2162,6.269,2163,4.255,2164,4.255,2165,4.255,2166,5.135,2167,5.135,2168,5.135,2169,5.135,2170,5.135,2171,5.135,2172,5.135,2173,5.135]],["title/classes/FormFieldDto.html",[0,0.228,2174,4.261]],["body/classes/FormFieldDto.html",[0,0.33,2,0.838,3,0.111,4,0.087,5,0.093,7,0.335,8,0.844,18,0.667,21,0.005,23,0.442,29,0.181,32,1.075,37,0.117,40,0.869,41,2.454,58,0.004,59,0.004,127,1.683,196,3.844,275,2.863,277,2.908,278,1.509,294,4.356,295,2.67,296,2.67,357,3.475,506,4.446,1000,3.255,2151,5.857,2174,6.174,2175,5.664,2176,5.857,2177,5.857,2178,5.857,2179,5.857,2180,5.857,2181,5.857,2182,5.617,2183,5.219,2184,5.857,2185,9.189,2186,5.664,2187,5.664,2188,5.664,2189,5.664,2190,5.664,2191,6.174,2192,5.664,2193,5.664,2194,5.664,2195,5.664,2196,5.664,2197,4.757,2198,6.775]],["title/classes/FormFieldPart.html",[0,0.228,2199,4.261]],["body/classes/FormFieldPart.html",[0,0.233,2,0.777,3,0.103,4,0.081,5,0.086,7,0.311,8,0.803,18,0.658,21,0.005,23,0.445,29,0.154,37,0.146,40,0.859,41,2.381,58,0.003,59,0.003,127,1.66,128,4.224,131,4.807,132,1.54,170,0.972,196,3.702,205,3.906,219,2.486,286,3.231,292,2.68,293,2.529,294,4.263,295,2.476,296,2.476,357,3.389,1000,3.135,2176,5.641,2177,5.641,2178,5.641,2179,5.641,2180,5.641,2181,5.641,2182,5.409,2183,5.026,2184,5.641,2198,6.608,2199,5.872,2200,5.254,2201,5.254,2202,5.254,2203,5.254,2204,5.254,2205,5.254,2206,5.254,2207,5.254,2208,5.254,2209,5.254,2210,5.254,2211,5.254,2212,5.254]],["title/modules/FormModule.html",[166,1.618,2213,4]],["body/modules/FormModule.html",[0,0.31,3,0.137,4,0.108,5,0.115,21,0.005,22,1.149,29,0.213,36,1.149,37,0.144,58,0.004,59,0.004,132,2.047,166,2.887,387,2.677,531,3.04,532,3.16,533,3.292,534,3.292,535,3.292,536,4.236,537,3.292,541,4.01,542,2.984,543,3.225,545,4.108,549,3.515,550,4.378,552,3.99,2090,4.712,2113,7.629,2115,7.603,2130,7.341,2131,6.263,2213,7.745,2214,6.263,2215,6.263,2216,6.984,2217,6.263,2218,6.984,2219,6.984]],["title/classes/FormSectionDto.html",[0,0.228,2162,3.791]],["body/classes/FormSectionDto.html",[0,0.373,2,0.855,3,0.113,4,0.089,5,0.095,7,0.342,8,0.855,11,1.123,18,0.635,21,0.005,23,0.444,29,0.201,32,1.098,37,0.119,40,0.849,58,0.004,59,0.004,112,2.428,127,1.603,267,2.608,272,1.786,275,2.755,277,2.931,278,1.54,289,3.02,357,2.856,506,3.964,509,3.546,510,2.616,516,3.716,1763,2.979,1808,4.138,2093,4.805,2106,4.946,2108,3.624,2147,6.258,2151,4.068,2162,6.995,2174,7.665,2183,5.271,2220,5.781,2221,5.271,2222,6.969,2223,5.781,2224,7.551,2225,5.781,2226,5.781,2227,5.781,2228,5.781,2229,5.781,2230,5.781,2231,5.781,2232,5.781,2233,5.781,2234,5.781,2235,4.497,2236,4.497]],["title/classes/FormSectionPart.html",[0,0.228,2109,4.261]],["body/classes/FormSectionPart.html",[0,0.27,2,0.901,3,0.119,4,0.094,5,0.1,7,0.36,8,0.885,11,1.139,18,0.644,21,0.005,23,0.446,29,0.187,37,0.161,40,0.884,41,2.167,58,0.004,59,0.004,112,1.559,122,1.737,127,1.625,128,4.535,131,4.611,132,1.786,170,1.127,219,1.69,267,2.674,286,2.568,292,2.954,293,2.933,1924,3.466,2093,4.926,2100,7.708,2101,5.463,2106,5.531,2108,3.819,2109,6.473,2112,5.463,2183,5.405,2199,5.049,2221,5.405,2222,7.145,2237,6.092,2238,6.092,2239,6.092,2240,6.092,2241,6.092,2242,6.092,2243,6.092,2244,6.092,2245,6.092]],["title/injectables/FormService.html",[136,1.333,2130,3.791]],["body/injectables/FormService.html",[0,0.158,3,0.07,4,0.055,5,0.059,7,0.21,8,0.607,9,2.682,10,2.219,11,1.132,12,3.71,15,1.55,18,0.646,20,2.254,21,0.005,22,1.508,23,0.433,25,4.378,29,0.176,30,1.52,36,0.585,37,0.074,49,2.831,55,0.687,58,0.003,59,0.003,65,0.859,66,3.459,72,1.594,74,1.526,75,2.763,76,2.763,77,1.204,78,2.244,87,3.873,88,1.926,89,1.833,90,1.926,91,1.926,92,1.926,94,2.052,122,1.84,124,3.115,132,1.043,134,0.923,136,1.391,137,1.492,162,3.729,179,5.947,181,4.503,185,2.831,186,2.334,187,2.582,188,3.154,189,3.154,190,3.154,191,2.98,192,3.361,193,3.819,194,3.253,195,2.31,196,3.559,198,2.23,200,2.404,207,2.158,208,5.308,209,3.612,210,2.23,211,4.885,212,4.173,213,2.158,214,3.253,215,2.4,216,1.057,217,2.158,218,5.671,219,2.76,220,2.23,221,2.158,222,4.089,223,5.308,224,2.23,225,2.158,226,2.23,227,2.23,228,2.23,229,2.158,230,2.23,231,2.23,232,2.23,233,1.926,234,4.358,235,2.31,236,2.23,237,2.23,238,2.158,239,2.31,243,1.043,2090,2.4,2130,3.954,2217,3.19,2246,3.558,2247,3.558,2248,3.558]],["title/classes/FormUpdateDto.html",[0,0.228,2126,3.791]],["body/classes/FormUpdateDto.html",[0,0.42,2,0.926,3,0.123,4,0.097,5,0.103,21,0.005,23,0.396,29,0.214,32,1.189,37,0.18,39,2.43,40,0.852,58,0.004,59,0.004,65,1.472,112,2.235,182,4.065,267,1.942,272,1.88,275,2.867,277,3.117,278,1.668,289,2.958,294,3.67,295,2.951,296,2.951,504,2.833,506,3.746,509,3.654,510,2.833,515,3.48,516,3.081,1763,3.226,1808,4.298,1924,2.778,2092,4.405,2093,3.577,2094,4.065,2095,3.924,2096,3.226,2106,4.675,2108,3.924,2117,4.616,2126,5.861,2142,6.183,2143,5.188,2144,4.982,2156,6.587,2161,4.224,2162,6.774,2163,5.188,2164,5.188,2165,6.587]],["title/classes/FusionDto.html",[0,0.228,2249,4.261]],["body/classes/FusionDto.html",[0,0.372,2,1.012,3,0.134,4,0.105,5,0.113,7,0.404,8,0.951,18,0.563,21,0.005,23,0.427,29,0.182,32,1.298,37,0.141,40,0.877,55,0.69,58,0.004,59,0.004,127,1.419,263,3.837,265,4.799,266,7.375,267,2.941,268,5.005,275,2.592,277,2.989,278,1.822,279,3.4,2249,6.961,2250,6.839,2251,9.091,2252,9.091,2253,7.532,2254,6.839,2255,8.399,2256,6.839]],["title/interfaces/GithubAsset.html",[38,1.407,662,3.791]],["body/interfaces/GithubAsset.html",[0,0.201,1,2.842,3,0.089,4,0.07,5,0.075,18,0.304,21,0.005,22,1.054,23,0.195,29,0.197,32,0.861,36,0.747,37,0.094,38,2.031,39,1.958,40,0.905,41,1.777,43,1.537,53,2.302,55,0.562,56,1.484,58,0.003,59,0.003,60,1.869,61,3.192,65,0.727,74,1.073,78,1.032,100,2.184,106,3.083,112,1.161,152,1.537,170,1.714,193,3.018,200,1.209,216,2.696,243,1.33,246,1.683,263,2.592,264,1.836,267,1.407,270,3.113,272,1.073,289,1.537,353,2.752,385,2.031,394,3.153,395,1.938,399,3.445,423,2.456,430,2.138,456,2.095,476,1.938,559,2.669,612,3.192,613,3.529,617,3.467,619,3.529,620,4.722,623,6.615,624,5.158,627,3.529,628,3.529,629,3.529,630,3.529,631,3.529,633,2.592,634,4.819,635,3.345,636,3.061,637,4.982,638,3.3,639,4.506,640,3.659,641,4.982,642,3.345,643,4.722,644,4.722,645,3.529,646,4.982,647,3.529,648,3.529,649,3.467,650,4.982,651,3.529,652,3.529,653,3.529,654,3.529,655,3.529,656,3.529,657,3.529,658,3.529,659,3.529,660,3.529,661,3.529,662,5.473,663,4.722,664,3.529,665,3.529,666,3.345,667,3.529,668,3.529,669,3.529,670,3.529,671,3.529,672,3.529,673,3.345,674,3.529,675,3.529,676,3.061,677,3.061,678,3.192,679,4.506,680,3.529,681,3.061,682,3.529,683,3.345,684,3.345,685,3.061,686,2.284,687,3.529,688,4.982,689,4.982,690,3.529,691,3.529,692,3.529,693,4.982,694,5.774,695,3.529,696,4.982,697,4.014,698,3.529,699,3.529,700,3.529,701,3.529,702,3.529,703,3.529,704,3.529,705,3.529,706,3.345,707,3.345,708,4.982,709,3.529,710,3.529,711,4.982,712,3.529,713,3.529,714,4.982,715,3.529,716,3.061,717,2.946,718,3.529,719,4.982,720,4.982,721,4.982,722,3.529,723,4.982,724,4.982,725,4.982,726,3.529,727,4.982,2257,4.537]],["title/interfaces/GithubAuthor.html",[38,1.407,644,3.791]],["body/interfaces/GithubAuthor.html",[0,0.173,1,2.547,3,0.076,4,0.06,5,0.064,7,0.23,8,0.65,21,0.005,22,0.944,23,0.435,29,0.188,32,0.74,36,0.641,37,0.081,38,1.865,39,1.192,40,0.918,41,2.085,43,1.32,53,2.113,55,0.524,56,1.362,58,0.003,59,0.003,60,1.606,65,0.625,74,0.922,78,0.887,100,1.877,106,2.764,112,0.998,152,1.32,170,1.645,193,2.705,200,1.038,216,2.575,243,1.143,246,1.509,263,3.242,264,1.578,267,1.209,270,3.36,272,0.922,289,1.32,353,2.365,385,1.865,394,2.939,395,1.665,399,3.211,423,2.11,430,1.837,456,1.8,476,1.665,559,2.293,612,2.742,613,3.032,617,3.107,619,3.032,620,4.232,623,6.232,624,4.86,627,3.032,628,3.032,629,3.032,630,3.032,631,3.032,633,2.227,634,4.424,635,2.874,636,2.63,637,4.465,638,2.957,639,4.038,640,3.28,641,4.465,642,2.874,643,4.232,644,5.024,645,5.846,646,6.232,647,5.846,648,5.846,649,4.337,650,6.232,651,5.846,652,5.846,653,5.846,654,5.846,655,5.846,656,5.846,657,5.846,658,5.846,659,5.846,660,5.846,661,5.846,662,4.232,663,4.232,664,3.032,665,3.032,666,2.874,667,3.032,668,3.032,669,3.032,670,3.032,671,3.032,672,3.032,673,2.874,674,3.032,675,3.032,676,2.63,677,2.63,678,2.742,679,4.038,680,3.032,681,2.63,682,3.032,683,2.874,684,2.874,685,2.63,686,1.962,687,3.032,688,4.465,689,4.465,690,3.032,691,3.032,692,3.032,693,4.465,694,5.3,695,3.032,696,4.465,697,3.598,698,3.032,699,3.032,700,3.032,701,3.032,702,3.032,703,3.032,704,3.032,705,3.032,706,2.874,707,2.874,708,4.465,709,3.032,710,3.032,711,4.465,712,3.032,713,3.032,714,4.465,715,3.032,716,2.63,717,2.531,718,3.032,719,4.465,720,4.465,721,4.465,722,3.032,723,4.465,724,4.465,725,4.465,726,3.032,727,4.465]],["title/interfaces/GithubUpdate.html",[38,1.407,663,3.791]],["body/interfaces/GithubUpdate.html",[0,0.174,1,2.561,3,0.077,4,0.061,5,0.065,7,0.232,8,0.654,21,0.005,22,1.322,23,0.429,29,0.189,32,0.746,36,0.646,37,0.081,38,1.873,39,1.201,40,0.915,41,2.093,43,1.33,53,2.122,55,0.525,56,1.368,58,0.003,59,0.003,60,1.618,65,0.629,74,0.929,78,0.893,100,1.891,106,2.779,112,1.005,152,1.33,170,1.648,193,2.721,200,1.046,216,2.582,243,1.151,246,1.517,263,3.252,264,1.59,267,1.218,270,3.643,272,0.929,289,1.33,353,2.382,385,1.873,394,2.949,395,3.223,399,3.223,423,2.126,430,1.851,456,1.813,476,1.678,559,2.31,612,2.763,613,3.055,617,3.125,619,3.055,620,4.256,623,6.251,624,4.875,627,3.055,628,3.055,629,3.055,630,3.055,631,3.055,633,2.244,634,4.443,635,2.896,636,2.65,637,4.49,638,2.974,639,4.061,640,3.298,641,4.49,642,2.896,643,4.256,644,5.562,645,3.055,646,6.251,647,3.055,648,3.055,649,4.35,650,6.251,651,3.055,652,3.055,653,3.055,654,3.055,655,3.055,656,3.055,657,3.055,658,3.055,659,3.055,660,3.055,661,3.055,662,5.562,663,5.046,664,5.868,665,5.868,666,5.562,667,5.868,668,5.868,669,5.868,670,5.868,671,5.868,672,5.868,673,5.562,674,5.868,675,5.868,676,2.65,677,2.65,678,2.763,679,4.061,680,3.055,681,2.65,682,3.055,683,2.896,684,2.896,685,2.65,686,1.977,687,3.055,688,4.49,689,4.49,690,3.055,691,3.055,692,3.055,693,4.49,694,5.323,695,3.055,696,4.49,697,3.618,698,3.055,699,3.055,700,3.055,701,3.055,702,3.055,703,3.055,704,3.055,705,3.055,706,2.896,707,2.896,708,4.49,709,3.055,710,3.055,711,4.49,712,3.055,713,3.055,714,4.49,715,3.055,716,2.65,717,2.55,718,3.055,719,4.49,720,4.49,721,4.49,722,3.055,723,4.49,724,4.49,725,4.49,726,3.055,727,4.49]],["title/classes/Identities.html",[0,0.228,1328,2.424]],["body/classes/Identities.html",[0,0.162,2,0.542,3,0.072,4,0.056,5,0.06,7,0.324,8,0.621,11,0.863,18,0.644,21,0.005,23,0.442,29,0.205,37,0.136,39,1.12,40,0.773,41,2.422,55,0.726,56,0.732,58,0.003,59,0.003,65,0.587,112,2.362,119,3.046,121,2.298,124,3.149,127,1.625,128,4.533,131,4.566,132,1.073,133,1.536,134,0.95,162,2.443,170,0.677,205,2.072,219,2.56,257,2.95,264,1.482,270,3.057,272,1.553,280,4.62,286,3.257,288,2.154,289,3.079,292,2.072,293,1.763,294,2.53,295,1.726,296,1.726,297,5.888,351,3.752,354,2.754,357,1.385,360,2.47,372,2.221,375,2.378,376,2.295,591,2.849,902,2.583,1106,2.7,1109,2.378,1110,3.035,1112,2.849,1113,3.035,1171,1.982,1191,3.231,1328,3.095,1339,4.459,1347,5.068,1348,2.47,1349,2.378,1350,4.892,1351,2.378,1435,2.758,1455,2.576,1505,3.697,1601,4.264,1607,2.47,1629,4.115,1633,3.035,1640,3.862,1889,4.541,1924,3.874,1959,4.62,2258,3.284,2259,3.752,2260,4.62,2261,6.566,2262,6.566,2263,4.323,2264,6.566,2265,6.566,2266,6.566,2267,4.43,2268,6.566,2269,6.566,2270,3.662,2271,3.662,2272,3.662,2273,3.662,2274,3.662,2275,3.662,2276,5.888,2277,3.662,2278,5.442,2279,5.888,2280,3.662,2281,3.662,2282,3.662,2283,3.662,2284,5.265,2285,3.662,2286,3.662,2287,3.662,2288,3.662,2289,2.7,2290,3.662,2291,2.47,2292,3.662,2293,3.662,2294,3.662,2295,3.284,2296,4.914,2297,3.284,2298,3.284,2299,3.284,2300,3.662,2301,3.284,2302,3.662,2303,3.662,2304,3.662,2305,2.378,2306,2.849,2307,3.662,2308,3.284,2309,3.662,2310,3.035,2311,3.662,2312,3.035,2313,3.662,2314,3.662,2315,3.662,2316,3.284]],["title/controllers/IdentitiesActivationController.html",[385,1.407,2317,4.261]],["body/controllers/IdentitiesActivationController.html",[0,0.273,1,3.492,3,0.121,4,0.095,5,0.101,7,0.364,11,0.73,18,0.413,20,1.402,21,0.005,22,1.014,23,0.266,29,0.213,32,1.17,36,1.014,37,0.127,55,0.636,56,1.573,58,0.004,59,0.004,65,1.261,74,1.458,77,1.767,78,1.972,94,1.402,127,1.041,152,2.088,170,1.141,200,2.097,216,2.34,219,1.71,243,1.807,244,2.684,246,1.62,249,2.54,260,7.106,264,3.186,272,1.458,329,1.968,341,2.495,348,3.337,385,1.687,387,1.94,389,2.586,394,3.572,395,4.032,399,3.704,422,2.54,423,4.261,425,2.968,427,2.79,430,2.906,457,3.034,462,3.242,470,3.034,471,3.873,638,4.055,640,4.497,686,3.103,1328,2.906,1350,3.864,1351,4.003,1391,5.109,1438,4.934,1477,6.522,1515,3.864,1607,4.159,2317,6.522,2318,5.537,2319,6.165,2320,6.165,2321,6.165,2322,7.871,2323,6.165,2324,6.165,2325,6.522,2326,4.159,2327,5.109,2328,5.528,2329,5.528,2330,4.337,2331,4.337,2332,6.165,2333,6.165,2334,6.165,2335,6.165,2336,6.165,2337,4.545,2338,4.337]],["title/classes/IdentitiesCreateDto.html",[0,0.228,2339,3.617]],["body/classes/IdentitiesCreateDto.html",[0,0.395,2,0.694,3,0.092,4,0.072,5,0.077,7,0.277,8,0.742,11,0.776,18,0.597,21,0.005,23,0.426,29,0.211,32,0.89,37,0.169,40,0.567,41,1.818,55,0.709,58,0.003,59,0.003,65,1.38,112,1.677,127,1.507,219,1.301,255,3.299,264,1.898,267,2.033,275,2.61,278,1.249,279,2.653,282,4.317,283,4.317,289,1.589,354,3.169,484,2.308,504,2.122,506,2.21,509,3.548,510,2.122,513,2.416,514,2.416,605,2.475,888,3.089,895,3.856,901,3.311,1193,3.156,1339,4.919,1347,5.59,1348,3.164,1349,3.045,1350,5.396,1351,3.045,1399,2.7,1536,3.46,1640,4.445,1763,2.416,1808,3.225,1924,3.63,2144,4.736,2161,3.164,2197,4.919,2259,4.317,2260,5.316,2263,3.989,2267,5.098,2284,5.098,2289,3.458,2291,3.164,2305,4.256,2339,5.316,2340,3.648,2341,5.099,2342,6.017,2343,4.205,2344,4.674,2345,5.099,2346,4.611,2347,4.611,2348,5.756,2349,5.312,2350,5.312,2351,4.422,2352,4.611,2353,5.099,2354,5.099,2355,4.611,2356,4.69,2357,4.205,2358,4.69,2359,5.591,2360,4.205,2361,4.69,2362,4.205,2363,4.69,2364,4.205,2365,4.69,2366,4.205,2367,4.69,2368,3.648,2369,3.648,2370,3.648,2371,3.648,2372,3.648,2373,3.648,2374,3.648,2375,4.422,2376,3.648,2377,3.648,2378,3.648,2379,3.648,2380,2.845,2381,4.422,2382,3.648,2383,3.299,2384,3.648]],["title/controllers/IdentitiesCrudController.html",[385,1.407,2385,4.261]],["body/controllers/IdentitiesCrudController.html",[0,0.103,1,1.7,3,0.046,4,0.036,5,0.038,7,0.137,9,1.685,11,0.941,15,0.672,18,0.533,20,1.809,21,0.005,22,1.418,23,0.399,29,0.201,32,0.441,36,0.383,37,0.048,39,1.172,40,0.645,41,1.063,53,1.189,55,0.678,56,1.723,58,0.002,59,0.002,65,0.614,72,0.691,74,1.483,77,0.86,78,2.205,94,1.809,106,1.845,121,0.975,122,2.491,123,1.17,124,3.261,127,1.305,133,0.975,134,0.603,152,0.788,162,0.865,170,1.569,185,2.58,186,2.128,187,1.12,193,2.304,200,2.448,216,2.71,222,1.074,233,1.259,243,0.682,244,1.668,246,2.143,249,1.579,257,2.73,263,0.941,264,0.941,268,2.992,284,3.84,285,1.411,294,2.617,295,1.096,296,1.096,329,2.38,339,1.329,341,2.294,354,2.05,357,2.144,375,1.51,385,0.636,387,0.732,389,0.975,390,3.68,391,3.439,392,3.064,393,1.715,394,3.804,395,4.031,399,4.207,400,1.636,401,2.696,402,4.812,403,4.812,404,2.696,407,1.715,408,1.715,411,1.458,412,5.165,413,5.015,414,6.515,415,5.967,416,1.636,419,4.409,422,0.958,423,1.259,424,1.809,425,1.845,426,4.41,427,1.052,428,1.259,429,1.458,430,1.096,431,1.715,432,3.68,433,1.715,436,1.569,437,1.636,438,1.636,439,1.569,440,1.809,441,1.809,442,1.636,443,1.636,444,1.636,445,4.07,446,1.809,447,1.715,448,2.325,449,1.458,450,1.458,454,1.12,457,1.144,460,1.809,462,3.55,463,1.636,468,4.672,469,1.636,470,3.801,471,3.801,472,3.439,474,3.988,475,2.696,478,1.809,480,1.715,633,2.189,638,2.92,686,2.46,888,2.672,895,1.806,901,1.978,903,3.319,1000,0.909,1173,5.083,1325,2.696,1327,1.715,1328,1.806,1339,2.792,1371,2.965,1374,1.411,1378,1.368,1389,4.409,1399,2.582,1469,1.259,1505,2.585,1507,1.636,1515,2.402,1600,2.696,1640,1.368,1842,1.259,1844,2.981,1895,1.715,1940,2.085,1968,1.51,2020,2.488,2022,1.715,2023,2.696,2026,1.809,2086,1.809,2221,1.458,2259,1.329,2260,1.636,2263,1.228,2291,1.569,2318,5.737,2326,1.569,2330,1.636,2331,1.636,2337,2.825,2338,2.696,2339,3.988,2344,1.329,2380,4.327,2381,4.812,2385,3.176,2386,2.325,2387,4.888,2388,4.888,2389,4.888,2390,4.888,2391,2.325,2392,2.325,2393,4.409,2394,5.083,2395,4.179,2396,4.697,2397,2.325,2398,2.325,2399,3.832,2400,2.325,2401,2.825,2402,3.832,2403,2.325,2404,2.325,2405,2.325,2406,2.325,2407,2.325,2408,2.325,2409,2.325,2410,2.325,2411,2.325,2412,2.325,2413,3.832,2414,2.325,2415,2.325,2416,2.325,2417,2.325,2418,2.325,2419,2.325,2420,2.825,2421,3.436,2422,2.696,2423,3.832,2424,2.325,2425,1.715,2426,1.809,2427,2.254,2428,1.809,2429,1.927,2430,1.927,2431,2.325,2432,3.832,2433,3.832,2434,3.832,2435,3.832,2436,2.981,2437,3.832,2438,1.927,2439,1.228,2440,1.927,2441,1.927,2442,1.927,2443,1.927,2444,2.325,2445,1.927,2446,2.085,2447,2.085,2448,1.927,2449,1.927,2450,1.636,2451,1.51,2452,1.927,2453,1.927,2454,2.325,2455,2.325,2456,3.832,2457,4.888,2458,2.325,2459,2.325,2460,2.325,2461,2.325,2462,3.436,2463,1.636,2464,2.325,2465,2.325,2466,2.325,2467,1.809,2468,2.325,2469,2.325,2470,2.325,2471,2.085,2472,2.325,2473,3.832,2474,2.325,2475,2.325,2476,1.715,2477,2.325,2478,2.085,2479,2.325,2480,2.325,2481,2.325,2482,2.325,2483,2.325,2484,2.325,2485,2.325,2486,2.085,2487,2.325,2488,2.325]],["title/controllers/IdentitiesDoublonController.html",[385,1.407,2489,4.261]],["body/controllers/IdentitiesDoublonController.html",[0,0.24,1,3.21,3,0.106,4,0.084,5,0.089,7,0.32,9,1.611,11,0.856,18,0.485,20,1.645,21,0.005,22,1.19,23,0.312,29,0.21,32,1.029,36,0.892,37,0.112,55,0.663,56,1.446,58,0.003,59,0.003,65,1.159,74,1.711,77,1.624,78,2.119,94,1.645,123,2.727,127,1.222,152,1.835,170,1.507,200,2.315,216,2.15,219,1.503,222,2.502,243,1.588,246,1.902,257,3.665,264,2.193,348,2.933,354,2.273,385,1.483,387,1.705,389,2.273,394,3.719,395,3.713,399,4.064,422,2.232,425,2.609,427,2.452,430,2.554,448,4.389,449,3.397,450,3.397,454,2.609,457,2.666,462,2.98,468,4.535,470,3.56,471,4.008,638,4.196,640,4.134,686,3.641,902,3.41,1172,5.334,1191,3.56,1328,2.554,1399,2.98,1601,3.518,1640,3.187,2249,7.202,2259,3.096,2263,2.86,2305,4.698,2308,7.304,2318,5.73,2326,3.655,2330,3.812,2331,3.812,2380,3.287,2425,3.995,2489,5.995,2490,5.419,2491,7.235,2492,5.419,2493,5.419,2494,7.235,2495,5.419,2496,5.419,2497,5.419,2498,5.419,2499,5.995,2500,7.235,2501,7.235,2502,5.419,2503,5.419,2504,6.488,2505,4.859,2506,5.419,2507,5.419,2508,5.419,2509,4.859,2510,5.419,2511,7.235,2512,5.419,2513,5.419]],["title/classes/IdentitiesDto.html",[0,0.228,2380,3.119]],["body/classes/IdentitiesDto.html",[0,0.393,2,0.684,3,0.091,4,0.071,5,0.076,7,0.273,8,0.735,11,0.768,18,0.595,21,0.005,23,0.425,29,0.211,32,0.878,37,0.168,40,0.562,41,1.8,55,0.708,58,0.003,59,0.003,65,1.372,87,3.594,112,1.661,127,1.5,219,1.283,255,3.253,264,1.871,267,2.013,275,2.6,278,1.232,279,2.627,282,4.285,283,4.285,289,1.566,354,3.145,484,2.275,504,2.092,506,2.179,509,3.532,510,2.092,513,2.382,514,2.382,605,2.441,888,3.059,895,3.832,901,3.291,1193,3.125,1339,4.893,1347,5.561,1348,3.119,1349,3.002,1350,5.368,1351,3.002,1399,2.674,1536,3.426,1640,4.411,1763,2.382,1808,3.194,1924,3.608,2144,4.068,2161,3.119,2197,4.893,2259,4.285,2260,5.276,2263,3.958,2267,5.059,2284,5.059,2289,3.409,2291,3.119,2305,4.214,2339,6.655,2340,3.597,2341,3.597,2342,5.99,2343,4.146,2344,4.646,2345,5.049,2346,4.566,2347,4.566,2348,5.72,2349,5.28,2350,5.28,2351,4.378,2352,4.566,2353,5.049,2354,5.049,2355,4.566,2357,4.146,2359,5.566,2360,4.146,2362,4.146,2364,4.146,2366,4.146,2368,3.597,2369,3.597,2370,3.597,2371,3.597,2372,3.597,2373,3.597,2374,3.597,2375,4.378,2376,3.597,2377,3.597,2378,3.597,2379,3.597,2380,3.937,2381,4.378,2382,3.597,2383,3.253,2384,3.597,2514,4.624,2515,4.624,2516,4.624,2517,4.624,2518,4.624,2519,4.624]],["title/controllers/IdentitiesForcePasswordController.html",[385,1.407,2520,4.261]],["body/controllers/IdentitiesForcePasswordController.html",[0,0.231,1,3.126,3,0.102,4,0.08,5,0.086,7,0.308,11,0.834,18,0.472,20,1.602,21,0.005,22,1.159,23,0.304,29,0.211,32,0.989,36,0.857,37,0.108,55,0.656,56,1.71,58,0.003,59,0.003,65,1.129,74,1.232,77,1.582,78,2.095,94,1.602,127,1.19,152,1.764,165,3.382,170,1.303,200,2.278,216,2.542,219,1.954,243,1.527,244,3.067,246,1.852,249,2.902,260,4.052,264,2.851,310,2.185,329,2.249,341,2.851,348,2.82,385,1.425,387,1.639,389,2.185,394,3.682,395,4.147,399,3.817,422,2.146,425,2.508,427,2.357,430,2.455,457,2.563,462,3.523,470,3.467,471,4.209,638,4.113,640,4.561,686,3.546,888,3.321,901,3.728,1322,4.052,1328,2.455,1368,6.306,1369,5.386,1438,4.416,1515,4.416,2088,7.088,2318,5.617,2325,4.316,2326,4.753,2327,4.316,2328,4.67,2329,6.317,2330,3.664,2331,3.664,2337,5.194,2338,4.956,2520,5.838,2521,5.208,2522,7.045,2523,7.045,2524,5.208,2525,5.208,2526,7.088,2527,5.208,2528,5.208,2529,5.208,2530,7.088,2531,5.208,2532,7.045,2533,7.045,2534,6.317,2535,4.67,2536,5.208,2537,5.208,2538,5.838,2539,4.67,2540,5.208,2541,5.208,2542,4.67,2543,5.208,2544,5.208,2545,5.208,2546,5.208,2547,5.208,2548,5.208]],["title/controllers/IdentitiesJsonFormsController.html",[385,1.407,2549,4.261]],["body/controllers/IdentitiesJsonFormsController.html",[0,0.2,1,2.827,3,0.088,4,0.069,5,0.105,7,0.266,11,0.951,18,0.538,20,1.828,21,0.005,22,1.322,23,0.346,29,0.184,32,0.855,36,0.741,37,0.093,40,0.64,55,0.684,56,1.606,58,0.003,59,0.003,65,1.021,74,1.065,77,1.43,78,2.214,94,1.828,127,1.357,152,1.525,162,3.155,170,1.487,186,3.218,193,3.484,200,2.463,216,2.389,243,1.32,246,2.112,286,1.48,292,3.423,385,1.232,387,1.417,389,1.889,392,4.633,394,3.837,395,3.623,399,4.072,411,2.823,422,1.855,423,2.438,425,2.168,427,2.038,430,2.123,456,2.079,457,2.216,462,3.311,470,3.955,471,3.955,559,2.649,605,3.902,616,3.732,638,4.369,686,4.045,848,6.237,894,4.955,895,3.788,901,2.578,1000,1.761,1022,2.216,1031,5.925,1137,4.482,1155,4.88,1172,4.697,1191,3.955,2111,7.661,2349,4.136,2549,5.279,2550,4.503,2551,4.503,2552,5.712,2553,5.712,2554,4.503,2555,4.503,2556,7.206,2557,6.251,2558,5.925,2559,6.66,2560,4.503,2561,4.503,2562,4.503,2563,6.37,2564,5.712,2565,6.251,2566,7.206,2567,4.503,2568,4.503,2569,4.503,2570,4.038,2571,4.503,2572,4.482,2573,4.038,2574,4.503,2575,4.503,2576,4.503,2577,4.503,2578,4.503,2579,4.503,2580,4.503,2581,4.503,2582,4.503,2583,4.038,2584,4.038,2585,4.038,2586,4.038,2587,4.503,2588,4.038,2589,4.503,2590,5.279,2591,4.038,2592,2.823,2593,4.503]],["title/modules/IdentitiesJsonformsModule.html",[166,1.618,2594,3.791]],["body/modules/IdentitiesJsonformsModule.html",[0,0.317,3,0.14,4,0.11,5,0.118,21,0.005,29,0.202,36,1.179,37,0.148,58,0.004,59,0.004,166,2.919,387,2.718,531,3.118,532,3.242,533,3.376,534,3.376,535,3.376,536,4.283,537,4.373,541,4.072,542,3.06,543,3.307,2549,7.688,2572,7.339,2573,6.424,2594,7.47,2595,6.424,2596,6.424,2597,6.424,2598,7.164,2599,7.164]],["title/injectables/IdentitiesJsonformsService.html",[136,1.333,2572,3.617]],["body/injectables/IdentitiesJsonformsService.html",[0,0.131,3,0.058,4,0.045,5,0.148,7,0.339,8,0.525,9,2.232,10,1.972,11,0.93,12,2.32,15,1.657,18,0.585,20,1.304,21,0.005,22,0.943,23,0.383,25,1.307,29,0.163,36,0.485,37,0.061,39,2.162,40,0.742,53,2.016,55,0.654,56,1.747,58,0.002,59,0.002,65,0.743,66,3.783,67,1.637,68,2.291,70,3.964,72,2.335,74,1.096,75,2.388,76,2.388,77,1.041,78,2.021,87,2.631,88,1.594,89,1.517,90,1.594,91,1.594,92,1.594,94,1.708,106,2.232,112,0.754,136,1.202,137,1.235,162,2.631,170,1.831,186,1.282,191,3.186,200,2.168,209,2.749,216,1.378,243,0.863,244,3.269,249,3.093,272,0.696,286,1.524,289,1.57,292,3.451,329,1.83,341,3.039,357,1.753,624,2.812,777,2.812,849,2.291,850,2.291,851,2.072,856,4.794,857,4.574,1022,3.695,1023,2.441,1024,2.441,1031,3.418,1041,2.291,1137,4.033,1155,2.447,1328,2.185,1449,2.291,1486,2.072,1684,2.291,1833,3.606,1903,2.649,2183,3.593,2338,5.283,2471,2.641,2476,4.227,2552,5.83,2572,3.261,2583,2.641,2590,6.746,2592,2.906,2600,2.945,2601,5.83,2602,6.734,2603,4.636,2604,2.945,2605,2.945,2606,2.641,2607,2.945,2608,2.945,2609,2.945,2610,2.945,2611,2.945,2612,4.636,2613,2.945,2614,2.945,2615,2.072,2616,2.641,2617,2.945,2618,5.5,2619,4.033,2620,2.441,2621,2.641,2622,2.641,2623,6.552,2624,5.14,2625,2.641,2626,7.071,2627,2.945,2628,2.945,2629,5.86,2630,4.157,2631,2.641,2632,4.157,2633,2.945,2634,2.945,2635,2.641,2636,7.509,2637,2.641,2638,2.441,2639,2.641,2640,2.291,2641,5.732,2642,4.157,2643,6.734,2644,2.945,2645,6.734,2646,2.945,2647,2.641,2648,2.641,2649,2.945,2650,2.945,2651,4.636,2652,2.641,2653,2.945,2654,4.157,2655,2.945,2656,5.732,2657,2.945,2658,4.157,2659,4.636,2660,4.636,2661,4.636,2662,7.071,2663,2.945,2664,2.945,2665,2.945,2666,2.945,2667,2.291,2668,2.945,2669,2.641,2670,4.636,2671,4.636,2672,2.945,2673,2.945,2674,2.441,2675,2.945,2676,2.641,2677,2.945,2678,2.945,2679,2.945,2680,1.987,2681,2.945,2682,4.636,2683,2.945,2684,4.636,2685,2.945,2686,2.945,2687,2.945,2688,2.945,2689,2.945,2690,2.641,2691,2.641,2692,7.046,2693,4.157,2694,6.502,2695,4.157,2696,6.734,2697,4.157,2698,4.157,2699,2.945,2700,2.291,2701,2.945,2702,2.945,2703,2.945,2704,2.945,2705,2.945,2706,4.157,2707,2.945,2708,2.641,2709,2.641,2710,2.945,2711,2.641,2712,2.945,2713,2.945,2714,2.945,2715,2.945,2716,2.945,2717,4.636,2718,2.945,2719,5.83,2720,2.945,2721,2.945,2722,2.945]],["title/modules/IdentitiesModule.html",[166,1.618,1289,3.339]],["body/modules/IdentitiesModule.html",[0,0.217,3,0.096,4,0.075,5,0.08,11,0.578,18,0.327,20,1.111,21,0.005,22,1.11,23,0.21,29,0.225,30,2.087,36,0.804,37,0.101,55,0.47,58,0.003,59,0.003,67,2.715,77,1.097,94,1.111,132,1.432,166,2.43,387,2.122,530,5.663,531,2.127,532,2.211,533,2.303,534,2.303,535,2.303,536,3.566,537,3.64,541,3.178,542,2.087,543,2.256,545,2.874,549,3.887,550,3.062,552,2.791,735,6.095,749,6.047,756,4.381,759,4.049,776,3.437,840,3.8,841,4.381,960,4.049,1284,4.379,1289,6.59,1325,6.638,1327,3.602,1328,3.178,1653,4.049,1788,6.356,1896,4.049,1903,2.791,2312,5.588,2317,6.4,2325,5.588,2326,6.604,2327,4.049,2385,6.4,2426,3.8,2427,5.446,2428,3.8,2489,6.4,2504,6.047,2505,4.381,2520,6.4,2538,7.487,2539,4.381,2572,6.514,2594,4.972,2723,4.381,2724,4.381,2725,4.886,2726,4.381,2727,4.886,2728,6.4,2729,6.4,2730,4.381,2731,6.744,2732,8.327,2733,4.886,2734,4.381,2735,6.744,2736,6.744,2737,4.744,2738,4.886,2739,4.886,2740,4.886,2741,5.588,2742,4.886,2743,4.886,2744,6.047,2745,4.381,2746,4.886,2747,4.886,2748,4.886,2749,4.886,2750,4.886,2751,4.886,2752,4.886,2753,4.886,2754,4.886,2755,4.886]],["title/controllers/IdentitiesPhotoController.html",[385,1.407,2729,4.261]],["body/controllers/IdentitiesPhotoController.html",[0,0.172,1,2.543,3,0.076,4,0.06,5,0.143,7,0.23,9,2.232,11,0.678,15,1.124,18,0.384,20,1.303,21,0.005,22,1.235,23,0.361,25,1.726,29,0.22,32,0.738,34,3.223,36,0.64,37,0.08,39,2.447,40,0.785,53,2.11,55,0.632,56,0.778,58,0.003,59,0.003,65,0.918,72,1.703,74,1.893,77,1.287,78,1.904,94,1.303,106,3.276,112,1.741,123,1.958,127,0.968,152,1.941,157,2.646,167,2.868,170,1.549,200,2,205,2.167,212,3.102,216,2.232,219,1.59,222,1.796,243,1.14,246,2.201,257,3.24,263,3.039,267,1.777,268,3.025,272,1.355,286,1.279,289,1.318,292,2.167,325,4.003,326,2.868,344,2.222,354,1.631,385,1.064,387,1.224,389,1.631,390,2.526,394,3.386,395,3.42,399,3.796,412,5.89,413,5.622,422,1.602,425,1.873,427,1.76,428,2.106,429,2.438,430,1.833,432,3.721,436,2.624,439,2.624,448,3.476,449,2.438,450,2.438,454,1.873,457,1.914,462,1.602,470,1.914,471,1.914,504,1.76,546,3.026,559,2.288,561,3.026,605,3.592,636,2.624,639,4.032,853,2.288,901,3.389,902,2.701,915,2.737,916,2.868,935,3.223,936,3.223,1000,1.521,1014,5.536,1022,3.348,1220,2.288,1265,3.488,1266,3.488,1267,3.488,1325,4.032,1327,2.868,1328,3.539,1435,2.885,1472,4.749,1640,2.288,1943,2.526,1950,2.526,1952,2.624,1953,2.526,1955,2.737,1956,4.418,1962,4.418,1965,4.418,1967,2.737,1968,2.526,1991,5.639,2012,4.749,2013,3.223,2014,3.223,2015,3.223,2016,3.026,2017,3.223,2018,3.223,2020,3.721,2022,2.868,2023,4.032,2026,3.026,2027,3.223,2028,3.223,2029,3.223,2030,3.223,2038,3.488,2044,3.488,2045,4.749,2046,5.139,2048,3.488,2086,3.026,2259,2.222,2263,2.053,2318,4.787,2326,2.624,2330,2.737,2331,2.737,2380,2.359,2395,4.226,2425,2.868,2426,3.026,2427,3.371,2428,3.026,2429,3.223,2430,3.223,2436,5.293,2467,4.458,2729,4.749,2756,3.89,2757,6.805,2758,6.102,2759,3.89,2760,3.89,2761,5.731,2762,5.731,2763,5.731,2764,4.749,2765,3.476,2766,4.032,2767,5.139,2768,4.226,2769,4.458,2770,3.89,2771,3.488,2772,3.488,2773,3.89,2774,3.89,2775,3.488,2776,3.488,2777,3.223,2778,3.89,2779,3.488,2780,5.139,2781,5.139,2782,5.731,2783,5.139,2784,3.488,2785,3.488,2786,3.89,2787,3.89,2788,3.89]],["title/classes/IdentitiesUpdateDto.html",[0,0.228,2381,3.469]],["body/classes/IdentitiesUpdateDto.html",[0,0.415,2,0.818,3,0.108,4,0.085,5,0.091,21,0.005,23,0.404,29,0.217,32,1.049,37,0.181,40,0.478,41,1.533,55,0.666,58,0.004,59,0.004,65,1.461,112,1.414,255,3.888,264,2.236,267,1.714,275,2.725,278,1.472,279,2.236,282,4.188,283,4.188,289,1.872,354,2.318,484,2.719,504,2.501,506,2.605,509,3.726,510,2.501,513,2.847,514,2.847,605,2.917,888,2.605,895,3.455,901,2.967,1193,2.66,1339,4.699,1347,5.34,1348,3.728,1349,3.588,1350,5.156,1351,3.588,1399,2.276,1536,2.917,1640,3.25,1763,2.847,1808,3.607,1924,3.887,2144,4.595,2161,3.728,2197,5.208,2259,3.157,2260,3.888,2263,2.917,2267,3.728,2284,4.945,2289,4.074,2291,3.728,2305,3.588,2339,5.157,2340,4.299,2341,4.299,2342,5.909,2344,4.188,2345,4.299,2346,3.888,2347,3.888,2348,5.157,2349,4.759,2350,4.759,2351,3.728,2352,3.888,2353,4.299,2354,4.299,2355,3.888,2359,5.491,2368,4.299,2369,4.299,2370,4.299,2371,4.299,2372,4.299,2373,4.299,2374,4.299,2375,4.945,2376,4.299,2377,4.299,2378,4.299,2379,4.299,2380,3.352,2381,5.549,2382,5.702,2383,3.888,2384,4.299]],["title/controllers/IdentitiesUpsertController.html",[385,1.407,2728,4.261]],["body/controllers/IdentitiesUpsertController.html",[0,0.163,1,2.441,3,0.072,4,0.057,5,0.14,7,0.218,9,2.172,11,0.651,15,1.064,18,0.368,20,1.251,21,0.005,22,0.905,23,0.354,25,1.633,29,0.217,32,0.699,36,0.606,37,0.076,39,1.682,40,0.81,53,1.706,55,0.592,56,1.461,58,0.003,59,0.003,65,0.882,72,1.094,74,1.85,77,1.235,78,1.866,94,1.251,106,1.772,112,1.686,121,1.544,123,1.852,127,0.929,133,1.544,134,0.955,152,1.863,164,2.103,170,1.573,194,5.159,200,1.947,212,3.956,216,2.439,219,1.526,222,1.699,243,1.079,246,1.731,257,3.165,264,1.49,268,2.904,272,1.301,284,1.896,286,1.21,288,2.165,294,2.54,295,1.735,296,1.735,329,2.103,339,2.103,354,2.763,357,2.08,385,1.007,387,1.158,389,1.544,394,3.325,395,3.947,399,3.633,412,5.078,413,4.745,422,1.516,425,1.772,427,1.665,428,1.992,429,2.307,430,1.735,431,2.714,432,3.572,433,2.714,448,3.337,449,2.307,450,2.307,454,1.772,457,1.811,462,2.713,470,1.811,471,2.707,476,1.572,504,1.665,559,2.165,589,2.39,605,3.477,633,2.103,686,1.852,853,2.165,903,1.811,916,2.714,1000,1.439,1022,2.707,1031,2.714,1032,2.863,1171,1.992,1220,2.165,1240,3.3,1328,3.104,1339,2.103,1371,3.337,1374,4.433,1399,2.266,1469,3.565,1505,2.483,1588,2.589,1640,2.165,1895,4.856,1943,2.39,1950,2.39,1952,2.483,1953,2.39,1955,2.589,1956,3.572,1958,2.483,1965,4.277,1967,2.589,1968,2.39,1981,3.05,1991,5.458,2012,4.558,2013,3.05,2014,3.05,2015,3.05,2016,2.863,2017,3.05,2018,3.05,2020,3.572,2022,2.714,2023,3.87,2026,2.863,2027,3.05,2028,3.05,2029,3.05,2030,3.05,2086,2.863,2221,2.307,2259,2.103,2263,1.943,2291,2.483,2318,4.634,2326,2.483,2330,2.589,2331,2.589,2344,2.103,2380,3.995,2383,5.141,2395,2.714,2396,3.05,2420,4.056,2425,2.714,2426,2.863,2427,3.235,2428,2.863,2429,3.05,2430,3.05,2436,4.279,2438,3.05,2439,1.943,2440,3.05,2441,3.05,2442,3.05,2443,3.05,2445,3.05,2446,3.3,2447,5.906,2448,4.558,2449,3.05,2450,2.589,2451,2.39,2452,3.05,2453,3.05,2467,5.684,2526,6.056,2728,4.558,2744,4.932,2745,3.3,2758,5.906,2771,3.3,2772,3.3,2775,3.3,2776,3.3,2779,3.3,2780,3.3,2781,3.3,2783,3.3,2784,3.3,2785,3.3,2789,3.68,2790,3.68,2791,6.586,2792,6.586,2793,7.307,2794,3.68,2795,5.501,2796,3.68,2797,3.68,2798,3.68,2799,3.68,2800,3.68,2801,3.68,2802,2.863,2803,3.68,2804,3.68,2805,3.68,2806,3.68,2807,3.68,2808,3.68,2809,3.68,2810,3.68,2811,3.68,2812,3.68,2813,3.68,2814,3.68,2815,3.3,2816,3.68,2817,3.68,2818,3.68,2819,3.68,2820,3.68,2821,3.68]],["title/classes/IdentitiesUpsertDto.html",[0,0.228,2383,3.617]],["body/classes/IdentitiesUpsertDto.html",[0,0.412,2,0.797,3,0.106,4,0.083,5,0.089,7,0.318,8,0.816,11,0.853,18,0.361,21,0.005,23,0.409,29,0.216,32,1.023,37,0.179,40,0.466,41,1.494,55,0.681,58,0.003,59,0.003,65,1.448,112,1.378,127,0.91,255,5.713,264,2.18,267,1.671,275,2.708,278,1.435,279,2.18,282,4.117,283,4.117,289,1.825,354,2.259,484,2.651,504,2.437,506,2.539,509,3.699,510,2.437,513,2.775,514,2.775,605,3.804,888,2.539,895,3.396,901,2.916,1193,2.593,1339,4.64,1347,5.273,1348,3.634,1349,3.497,1350,5.09,1351,3.497,1399,2.219,1536,2.843,1640,3.168,1763,2.775,1808,3.546,1924,3.847,2144,4.517,2161,3.634,2197,5.164,2259,3.077,2260,3.79,2263,2.843,2267,3.634,2284,4.861,2289,3.971,2291,3.634,2305,3.497,2339,5.07,2340,4.19,2341,4.19,2342,5.849,2344,4.117,2345,4.19,2346,3.79,2347,3.79,2348,5.07,2349,4.679,2350,4.679,2351,3.634,2352,3.79,2353,4.19,2354,4.19,2355,3.79,2359,5.435,2368,4.19,2369,4.19,2370,4.19,2371,4.19,2372,4.19,2373,4.19,2374,4.19,2375,4.861,2376,4.19,2377,4.19,2378,4.19,2379,4.19,2380,3.267,2381,4.861,2382,4.19,2383,5.07,2384,5.605,2822,5.386,2823,5.386]],["title/controllers/IdentitiesValidationController.html",[385,1.407,2824,4.261]],["body/controllers/IdentitiesValidationController.html",[0,0.227,1,3.093,3,0.101,4,0.079,5,0.084,7,0.303,11,0.937,18,0.53,20,1.801,21,0.005,22,1.303,23,0.341,29,0.204,32,0.973,36,0.844,37,0.106,55,0.592,56,1.699,58,0.003,59,0.003,65,1.117,74,1.213,77,1.565,78,2.201,94,1.801,127,1.338,152,1.737,170,1.465,200,2.442,216,2.526,243,1.503,244,2.232,246,2.081,249,2.112,280,5.979,284,2.642,292,2.995,294,2.367,295,2.417,296,2.417,329,1.637,341,2.075,348,2.776,385,1.403,387,1.613,389,2.151,392,4.369,394,3.826,395,3.797,399,4.077,411,3.214,422,2.112,423,2.776,425,3.356,427,2.32,430,2.417,457,2.523,461,3.781,462,3.501,463,3.607,470,3.43,471,3.43,616,4.249,638,4.378,686,3.986,894,5.422,895,3.285,902,3.285,1155,4.486,1172,5.139,1191,3.43,1399,2.871,1515,3.214,1842,3.773,2337,3.781,2338,3.607,2427,4.1,2462,4.598,2553,6.251,2558,5.139,2559,5.776,2565,6.61,2566,7.62,2570,4.598,2584,4.598,2585,4.598,2586,4.598,2588,4.598,2591,4.598,2824,5.776,2825,5.127,2826,5.127,2827,5.343,2828,5.127,2829,7.131,2830,5.127,2831,5.127,2832,5.127,2833,5.127,2834,6.97,2835,5.127,2836,4.598,2837,4.598,2838,5.127,2839,5.127,2840,5.127,2841,4.598]],["title/classes/IdentitiesValidationFilter.html",[0,0.228,2741,4.261]],["body/classes/IdentitiesValidationFilter.html",[0,0.305,2,1.02,3,0.135,4,0.106,5,0.113,7,0.407,10,2.37,11,0.816,18,0.462,20,1.567,21,0.005,22,1.134,23,0.297,29,0.198,36,1.134,37,0.142,56,1.378,58,0.004,59,0.004,67,4.69,77,1.895,94,1.567,152,2.334,170,1.687,249,3.758,264,3.415,284,3.551,329,2.2,394,3.3,462,2.839,583,7.559,584,6.993,585,5.718,586,7.877,588,4.649,590,5.711,591,5.361,592,5.711,593,5.711,595,6.18,2620,5.711,2741,7.559,2842,8.439,2843,6.18,2844,7.009,2845,6.891,2846,6.891,2847,6.891,2848,6.891,2849,6.891]],["title/modules/IdentitiesValidationModule.html",[166,1.618,2737,3.617]],["body/modules/IdentitiesValidationModule.html",[0,0.317,3,0.14,4,0.11,5,0.118,21,0.005,29,0.202,36,1.179,37,0.148,58,0.004,59,0.004,166,2.919,387,2.718,531,3.118,532,3.242,533,3.376,534,3.376,535,3.376,536,4.283,537,4.373,541,4.072,542,3.06,543,3.307,2427,6.136,2737,7.128,2824,7.688,2837,6.424,2850,6.424,2851,6.424,2852,7.164,2853,7.164,2854,7.164]],["title/injectables/IdentitiesValidationService.html",[136,1.333,2427,3.024]],["body/injectables/IdentitiesValidationService.html",[0,0.074,2,0.428,3,0.033,4,0.08,5,0.115,7,0.27,8,0.327,10,1.948,11,0.857,15,0.836,18,0.542,20,1.647,21,0.005,22,1.226,23,0.302,29,0.169,36,0.274,37,0.034,39,2.795,40,0.753,41,1.687,52,1.229,53,2.466,55,0.625,56,1.489,58,0.001,59,0.001,67,0.926,70,2.728,72,2.585,77,0.649,78,2.09,83,2.771,94,1.774,103,0.952,106,3.487,112,0.98,136,0.75,137,0.699,162,2.841,170,1.823,187,0.803,191,1.607,200,2.078,205,1.954,216,2.629,219,1.434,244,1.989,246,1.691,249,1.882,253,1.95,267,1.187,270,1.213,272,1.339,280,4.278,282,3.474,283,3.236,284,2.918,286,1.862,288,3.04,289,1.751,292,2.887,329,1.941,341,2.292,343,1.082,345,1.045,348,0.902,423,3.484,476,1.952,516,1.423,589,1.082,594,1.495,611,1.495,633,0.952,716,1.125,777,3.135,827,1.95,849,1.297,850,1.297,853,0.98,856,2.822,857,3.214,888,1.363,901,2.292,902,1.804,903,0.82,1000,2.516,1022,3.317,1023,1.381,1024,1.381,1041,4.406,1122,1.125,1155,1.526,1171,0.902,1191,2.992,1193,0.803,1201,1.297,1231,1.229,1328,2.67,1355,1.381,1367,1.607,1378,0.98,1379,1.381,1385,2.132,1386,2.693,1399,0.687,1435,1.455,1442,2.132,1449,1.297,1456,1.125,1459,1.95,1461,1.082,1468,1.082,1491,1.381,1532,3.786,1536,2.728,1588,1.173,1684,1.297,1749,1.297,1767,2.034,1823,4.176,1831,2.978,1840,2.822,1842,4.133,1886,4.93,1903,1.652,1981,4.693,2100,1.297,2221,2.864,2263,0.88,2338,3.214,2342,3.821,2344,1.652,2350,1.082,2351,1.125,2427,1.7,2436,1.297,2439,2.411,2440,3.786,2441,2.396,2450,1.173,2451,1.877,2463,1.173,2476,2.822,2590,4.283,2601,4.097,2602,5.079,2606,2.592,2615,1.173,2616,1.495,2618,5.939,2619,2.693,2620,1.381,2621,2.592,2622,3.433,2623,5.167,2624,3.433,2625,1.495,2629,3.172,2630,2.592,2631,1.495,2632,2.592,2635,1.495,2637,3.433,2638,1.381,2639,1.495,2640,1.297,2643,4.097,2645,4.097,2647,1.495,2648,1.495,2652,2.592,2654,2.592,2674,2.396,2690,1.495,2691,1.495,2692,4.097,2693,1.495,2695,1.495,2696,4.097,2697,1.495,2698,1.495,2700,1.297,2706,1.495,2708,1.495,2709,1.495,2711,1.495,2764,1.381,2827,4.728,2836,1.495,2855,1.667,2856,2.592,2857,2.891,2858,2.891,2859,2.891,2860,2.891,2861,2.891,2862,2.891,2863,2.891,2864,2.592,2865,1.667,2866,2.891,2867,2.891,2868,1.667,2869,2.592,2870,2.891,2871,1.667,2872,1.667,2873,1.667,2874,1.667,2875,2.891,2876,1.667,2877,2.891,2878,1.667,2879,2.891,2880,7.465,2881,1.667,2882,2.592,2883,2.891,2884,1.667,2885,2.891,2886,1.667,2887,1.495,2888,2.592,2889,3.828,2890,1.667,2891,4.568,2892,4.568,2893,2.891,2894,2.891,2895,2.592,2896,1.667,2897,2.592,2898,2.592,2899,1.667,2900,1.667,2901,1.667,2902,1.667,2903,1.667,2904,1.495,2905,1.667,2906,1.495,2907,1.667,2908,1.667,2909,1.667,2910,2.132,2911,1.667,2912,1.667,2913,1.667,2914,1.667,2915,1.667,2916,1.667,2917,1.667,2918,1.667,2919,1.667,2920,1.667,2921,1.667,2922,1.667,2923,1.667,2924,1.667,2925,1.297,2926,1.667,2927,1.667,2928,1.667,2929,6.08,2930,6.08,2931,2.891,2932,6.08,2933,3.828,2934,2.132,2935,1.381,2936,1.667,2937,1.667,2938,1.667,2939,2.891,2940,1.381,2941,1.667,2942,1.667,2943,1.667,2944,1.495,2945,2.891,2946,1.667,2947,1.667,2948,1.667,2949,4.568,2950,3.828,2951,3.828,2952,4.568,2953,1.495,2954,1.667,2955,5.664,2956,3.828,2957,4.568,2958,3.828,2959,7.364,2960,4.568,2961,7.364,2962,2.891,2963,1.667,2964,2.891,2965,8.911,2966,1.667,2967,1.229,2968,1.495,2969,1.667,2970,3.828,2971,2.891,2972,1.667,2973,1.667,2974,1.495,2975,1.495,2976,1.667,2977,1.667,2978,1.667,2979,2.891,2980,1.667,2981,1.667,2982,1.667,2983,4.283,2984,1.667,2985,1.667,2986,1.297,2987,1.667,2988,1.667,2989,3.433,2990,1.667,2991,1.173,2992,1.495,2993,1.495,2994,1.173,2995,1.667,2996,1.495,2997,1.667,2998,1.667,2999,3.172,3000,1.667,3001,3.828,3002,1.229,3003,4.568,3004,1.667,3005,3.828,3006,1.667,3007,1.667,3008,2.592,3009,1.667,3010,1.667,3011,1.667,3012,1.667,3013,1.667,3014,1.667,3015,2.891,3016,2.891,3017,1.667,3018,1.495,3019,1.667,3020,1.495,3021,1.667,3022,1.495,3023,1.495,3024,1.495,3025,1.667,3026,1.667,3027,1.667,3028,1.667,3029,1.667,3030,1.495,3031,1.667,3032,1.667,3033,1.495,3034,1.667,3035,1.667,3036,1.667,3037,2.891,3038,1.667,3039,1.667,3040,2.891,3041,1.667,3042,1.667,3043,1.667,3044,1.667,3045,1.667,3046,1.667,3047,1.667,3048,1.667,3049,1.297,3050,1.667,3051,1.667,3052,1.667,3053,3.368,3054,2.891,3055,1.667,3056,1.667,3057,1.667,3058,1.667,3059,1.667,3060,1.667,3061,1.667,3062,2.891,3063,1.667,3064,1.667,3065,1.667,3066,1.667,3067,1.667]],["title/classes/InitAccountDto.html",[0,0.228,1331,3.791]],["body/classes/InitAccountDto.html",[0,0.39,2,1.092,3,0.145,4,0.114,5,0.122,7,0.436,8,0.996,18,0.494,21,0.005,23,0.318,29,0.191,32,1.402,37,0.153,40,0.762,55,0.655,58,0.004,59,0.004,127,1.247,267,2.728,275,2.508,277,2.892,278,1.966,279,2.988,863,5.524,864,5.443,1331,6.486,3068,7.29,3069,7.382,3070,7.382,3071,7.382,3072,7.382]],["title/classes/InitInfoPart.html",[0,0.228,2278,4.261]],["body/classes/InitInfoPart.html",[0,0.307,2,1.025,3,0.136,4,0.107,5,0.114,7,0.41,8,0.959,11,1.127,18,0.567,21,0.005,23,0.41,29,0.184,37,0.175,55,0.692,58,0.004,59,0.004,65,1.111,112,1.774,121,3.552,122,1.976,127,1.43,128,3.991,131,4.31,132,2.032,134,1.797,170,1.282,292,3.202,293,3.337,1629,4.788,2278,7.018,2279,6.215,3073,9.144,3074,6.931,3075,9.144,3076,9.144,3077,6.931,3078,6.931,3079,6.931]],["title/classes/InitManyDto.html",[0,0.228,1345,3.791]],["body/classes/InitManyDto.html",[0,0.38,2,1.047,3,0.139,4,0.109,5,0.117,7,0.419,8,0.972,18,0.474,21,0.005,23,0.305,29,0.201,32,1.344,37,0.146,55,0.643,58,0.004,59,0.004,124,3.298,127,1.196,133,2.969,134,1.836,263,3.472,267,2.196,275,2.446,278,1.886,515,4.768,902,4.043,1202,7.692,1328,3.337,1345,6.325,1370,7.109,1399,3.534,1468,5.57,1475,6.673,1599,6.673,1600,6.035,2486,8.276,3068,7.109,3080,7.08,3081,7.08,3082,7.08,3083,7.08]],["title/classes/InitResetDto.html",[0,0.228,1341,3.791]],["body/classes/InitResetDto.html",[0,0.371,2,1.004,3,0.133,4,0.105,5,0.112,7,0.401,8,0.947,18,0.56,21,0.005,23,0.418,29,0.182,32,1.289,37,0.14,40,0.724,41,2.319,55,0.689,58,0.004,59,0.004,127,1.412,157,3.86,257,3.384,263,3.384,265,3.878,267,2.933,275,2.583,277,2.749,278,1.808,279,3.384,476,4.04,862,4.526,863,5.036,869,6.504,1230,8.48,1341,6.165,1373,5.241,2197,4.777,3068,7.508,3084,6.788,3085,5.625,3086,6.788,3087,6.788]],["title/interfaces/InternalLogOptions.html",[38,1.407,3088,4]],["body/interfaces/InternalLogOptions.html",[0,0.174,3,0.077,4,0.06,5,0.065,7,0.232,8,0.653,9,1.165,11,0.892,21,0.005,23,0.294,24,4.824,29,0.164,36,0.645,37,0.156,38,1.577,40,0.857,53,1.216,55,0.401,56,1.678,58,0.003,59,0.003,60,1.614,65,0.628,72,1.165,78,0.891,108,4.146,116,4.079,123,2.901,132,1.149,134,1.773,136,1.495,139,4.375,152,1.328,157,1.81,162,3.124,164,3.293,170,1.8,205,3.282,209,3.659,216,1.713,243,1.149,244,2.509,246,1.03,249,2.374,250,4.432,257,3.398,329,2.843,341,1.586,456,1.81,744,3.888,809,2.545,824,2.545,999,2.239,1486,2.757,1629,1.847,1686,4.808,1777,5.039,1886,5.907,1903,2.239,1924,1.739,2463,6.106,2680,2.644,3053,5.556,3088,5.317,3089,3.049,3090,5.92,3091,5.862,3092,4.776,3093,4.483,3094,4.483,3095,4.483,3096,3.049,3097,3.248,3098,3.248,3099,3.248,3100,4.483,3101,5.664,3102,3.248,3103,3.248,3104,3.248,3105,3.248,3106,3.248,3107,3.248,3108,3.248,3109,3.248,3110,3.248,3111,8.247,3112,4.776,3113,3.049,3114,8.208,3115,6.958,3116,6.958,3117,6.958,3118,6.958,3119,6.927,3120,6.958,3121,3.248,3122,3.248,3123,3.248,3124,3.248,3125,3.248,3126,4.483,3127,3.248,3128,3.248,3129,3.248,3130,3.248,3131,3.248,3132,3.248,3133,3.248,3134,3.248,3135,3.248,3136,3.248,3137,4.808,3138,2.89,3139,4.776,3140,5.664,3141,3.248,3142,3.248,3143,3.248,3144,3.248,3145,3.248,3146,3.248,3147,3.248,3148,3.248,3149,3.248]],["title/injectables/InternalLogger.html",[136,1.333,3096,4]],["body/injectables/InternalLogger.html",[0,0.15,3,0.066,4,0.052,5,0.056,7,0.2,8,0.585,9,1.862,11,1.009,15,0.979,18,0.597,20,1.939,21,0.005,22,1.403,23,0.39,24,4.596,25,1.503,29,0.152,36,0.557,37,0.145,38,1.414,40,0.828,53,1.051,55,0.526,56,1.589,58,0.002,59,0.002,65,0.828,72,1.862,77,1.16,78,1.425,94,1.939,108,3.8,116,4.476,123,2.601,132,0.993,134,1.625,136,1.34,137,1.421,139,3.374,152,1.148,157,1.564,162,2.958,164,2.952,170,1.755,205,3.127,209,3.62,216,1.536,243,0.993,244,2.249,246,0.891,249,2.129,250,4.122,257,3.218,329,3,341,2.535,357,1.954,456,1.564,744,3.486,809,4.067,824,2.2,999,2.952,1486,4.93,1629,1.597,1686,4.407,1777,4.618,1886,5.594,1903,4.871,1924,1.503,2463,5.818,2680,2.286,3053,2.498,3088,5.451,3089,2.636,3090,3.81,3091,4.02,3092,5.191,3093,4.02,3094,5.451,3095,4.02,3096,4.02,3097,4.282,3098,2.808,3099,2.808,3100,4.02,3101,5.191,3102,2.808,3103,2.808,3104,2.808,3105,2.808,3106,2.808,3107,2.808,3108,2.808,3109,2.808,3110,4.282,3111,8.417,3112,4.282,3113,2.636,3114,8.031,3115,6.589,3116,6.589,3117,6.589,3118,6.589,3119,6.632,3120,6.589,3121,2.808,3122,4.282,3123,5.191,3124,2.808,3125,4.282,3126,5.451,3127,2.808,3128,4.282,3129,2.808,3130,4.282,3131,5.191,3132,2.808,3133,4.282,3134,5.191,3135,2.808,3136,5.191,3137,4.407,3138,2.498,3139,4.282,3140,5.191,3141,2.808,3142,2.808,3143,2.808,3144,2.808,3145,2.808,3146,2.808,3147,2.808,3148,2.808,3149,2.808,3150,3.388,3151,5.167,3152,3.388,3153,3.388,3154,3.388,3155,3.388,3156,3.388,3157,3.388,3158,3.388,3159,3.388,3160,3.388]],["title/interfaces/InternalLoggerOptions.html",[38,1.407,3094,4]],["body/interfaces/InternalLoggerOptions.html",[0,0.175,3,0.078,4,0.061,5,0.065,7,0.234,8,0.657,9,1.176,21,0.005,23,0.326,24,4.839,29,0.164,36,0.651,37,0.156,38,1.588,40,0.849,53,1.227,55,0.404,56,1.684,58,0.003,59,0.003,60,1.63,65,0.634,72,1.176,78,0.9,108,4.169,116,4.098,123,2.921,132,1.16,134,2.185,136,1.505,139,3.645,152,1.341,157,1.827,162,3.135,164,3.316,170,1.803,205,3.292,209,3.663,216,1.725,243,1.16,244,2.527,246,1.04,249,2.391,250,4.453,257,3.41,329,2.851,341,1.602,357,2.195,456,1.827,744,3.916,809,2.57,824,2.57,999,2.261,1486,2.784,1629,1.865,1686,6.282,1777,5.068,1886,5.928,1903,2.261,1924,1.756,2463,6.125,2680,2.67,3053,2.918,3088,4.515,3089,3.079,3090,4.28,3091,4.515,3092,4.81,3093,4.515,3094,5.347,3095,4.515,3096,3.079,3097,3.28,3098,3.28,3099,3.28,3100,4.515,3101,5.696,3102,3.28,3103,3.28,3104,3.28,3105,3.28,3106,3.28,3107,3.28,3108,3.28,3109,3.28,3110,3.28,3111,8.258,3112,4.81,3113,3.079,3114,8.219,3115,6.982,3116,6.982,3117,6.982,3118,6.982,3119,6.946,3120,6.982,3121,3.28,3122,3.28,3123,3.28,3124,3.28,3125,3.28,3126,4.515,3127,3.28,3128,3.28,3129,3.28,3130,3.28,3131,3.28,3132,3.28,3133,3.28,3134,3.28,3135,3.28,3136,3.28,3137,4.836,3138,2.918,3139,4.81,3140,5.696,3141,3.28,3142,3.28,3143,3.28,3144,3.28,3145,3.28,3146,3.28,3147,3.28,3148,3.28,3149,3.28]],["title/classes/Jobs.html",[0,0.228,1192,3.223]],["body/classes/Jobs.html",[0,0.218,2,0.729,3,0.097,4,0.076,5,0.081,7,0.291,8,0.768,11,1.186,18,0.65,21,0.005,23,0.443,29,0.19,37,0.16,40,0.856,41,1.881,55,0.726,58,0.003,59,0.003,65,0.789,112,1.26,119,3.769,121,2.844,124,2.982,127,1.64,128,4.576,131,4.621,132,1.444,133,2.066,134,1.277,170,0.911,205,3.575,219,2.318,272,1.976,286,2.977,289,2.83,292,2.565,293,2.371,354,3.253,372,2.988,376,3.087,778,4.705,1155,4.094,1192,4.861,1629,4.456,1657,6.427,1663,6.955,1924,3.009,1927,5.456,1938,4.861,1941,5.718,3161,4.417,3162,5.718,3163,7.756,3164,5.232,3165,7.756,3166,4.925,3167,4.925,3168,4.925,3169,4.925,3170,4.925,3171,4.925,3172,4.925,3173,4.925,3174,6.461,3175,4.925,3176,4.925,3177,4.925,3178,3.831,3179,4.925,3180,4.417,3181,4.925,3182,4.417,3183,4.925]],["title/controllers/JobsController.html",[385,1.407,3184,4.261]],["body/controllers/JobsController.html",[0,0.221,1,3.032,3,0.098,4,0.077,5,0.082,7,0.294,9,1.48,11,0.809,18,0.458,20,1.554,21,0.005,22,1.283,23,0.362,29,0.217,32,0.945,36,0.819,37,0.103,40,0.431,55,0.648,56,1.366,58,0.003,59,0.003,65,1.095,74,1.616,77,1.534,78,2.067,94,1.554,122,2.393,123,2.506,124,2.999,127,1.154,133,2.089,134,1.291,139,4.041,152,1.687,156,6.486,164,2.845,170,1.264,200,2.236,216,2.495,222,2.299,243,1.46,246,1.796,257,3.766,263,2.015,272,1.178,310,2.089,354,2.089,385,1.363,387,1.567,389,2.089,390,5.451,392,5.262,394,3.639,399,4.049,400,3.503,401,4.807,402,4.609,403,4.609,404,3.503,411,3.121,412,5.9,413,5.451,414,6.393,415,5.906,416,3.503,422,2.051,423,2.696,426,4.807,427,2.253,428,2.696,429,3.121,430,2.347,432,4.436,436,3.359,437,3.503,438,3.503,439,3.359,442,3.503,443,3.503,444,3.503,445,4.436,446,3.873,447,3.671,448,4.145,449,3.121,450,3.121,454,2.397,456,2.299,457,2.45,462,2.815,466,4.126,467,4.126,468,4.283,469,3.503,470,3.362,471,3.362,472,3.503,474,3.503,475,3.503,476,2.127,778,3.021,1155,2.628,1192,3.121,1927,3.503,3162,3.671,3164,3.359,3184,5.662,3185,4.979,3186,4.979,3187,4.979,3188,4.979,3189,3.671,3190,4.979,3191,5.038,3192,4.465,3193,4.979,3194,4.979,3195,4.979,3196,6.832,3197,4.979,3198,4.979,3199,4.979,3200,4.979]],["title/classes/JobsCreateDto.html",[0,0.228,3201,4]],["body/classes/JobsCreateDto.html",[0,0.399,2,0.789,3,0.105,4,0.082,5,0.088,7,0.315,8,0.81,11,0.847,18,0.653,21,0.005,23,0.436,29,0.206,32,1.012,37,0.167,40,0.834,41,1.985,55,0.73,58,0.003,59,0.003,65,1.384,87,2.158,122,1.52,124,2.752,127,1.648,133,2.236,134,1.383,205,3.265,275,2.81,277,2.839,278,1.42,351,4.089,354,3.388,357,2.016,484,4.249,498,4.147,502,3.342,503,3.461,504,2.412,505,3.777,506,3.373,508,4.373,510,2.412,513,2.747,514,2.747,778,4.9,1155,4.264,1665,6.837,1669,4.418,1808,3.975,1927,5.683,1938,5.064,1941,5.956,2151,5.683,2191,4.418,2197,4.089,3162,5.956,3164,5.45,3174,3.931,3178,4.147,3189,3.931,3201,6.284,3202,4.418,3203,5.331,3204,5.331,3205,5.331,3206,5.331,3207,6.417,3208,5.331,3209,5.331,3210,5.331,3211,5.331,3212,4.418,3213,4.418,3214,4.147,3215,4.418]],["title/classes/JobsDto.html",[0,0.228,3189,3.791]],["body/classes/JobsDto.html",[0,0.393,2,0.756,3,0.1,4,0.079,5,0.084,7,0.302,8,0.788,11,0.823,18,0.655,21,0.005,23,0.436,29,0.204,32,0.971,37,0.163,40,0.847,41,1.93,55,0.73,58,0.003,59,0.003,65,1.36,87,3.914,122,2.255,124,2.675,127,1.652,133,2.145,134,1.326,205,3.21,275,2.788,277,2.79,278,1.362,351,3.975,354,3.317,357,1.934,484,3.891,498,3.977,502,3.205,503,3.32,504,2.314,505,3.672,506,3.279,508,4.281,510,2.314,513,2.634,514,2.634,519,3.977,778,4.797,1155,4.174,1665,6.754,1669,4.237,1808,3.891,1927,5.564,1938,4.957,1941,5.831,2151,5.564,2191,4.237,2197,3.975,3162,5.831,3164,5.335,3174,3.77,3178,3.977,3189,5.13,3201,7.678,3202,4.237,3207,6.239,3212,4.237,3213,4.237,3214,3.977,3215,4.237,3216,5.113,3217,5.113,3218,5.113,3219,5.113,3220,5.113,3221,5.113,3222,5.113,3223,5.113,3224,5.113]],["title/modules/JobsModule.html",[166,1.618,1290,3.617]],["body/modules/JobsModule.html",[0,0.303,3,0.134,4,0.105,5,0.113,21,0.005,22,1.125,29,0.211,36,1.125,37,0.141,58,0.004,59,0.004,132,2.005,166,2.86,387,2.643,531,2.977,532,3.095,533,3.224,534,3.224,535,3.224,536,4.197,537,4.285,541,3.959,542,2.922,543,3.158,545,4.023,549,3.442,550,4.287,552,3.908,1192,4.287,1290,7.06,3182,7.532,3184,7.534,3191,7.647,3192,6.133,3225,6.133,3226,6.133,3227,6.133,3228,6.839,3229,6.133,3230,6.839,3231,6.839]],["title/injectables/JobsService.html",[136,1.333,3191,3.791]],["body/injectables/JobsService.html",[0,0.16,3,0.071,4,0.056,5,0.059,7,0.213,8,0.614,9,2.643,10,2.239,11,1.135,12,2.635,15,1.044,18,0.647,20,2.258,21,0.005,22,1.513,23,0.434,25,4.387,29,0.169,36,0.594,37,0.075,49,2.862,55,0.694,58,0.003,59,0.003,65,0.869,66,3.485,72,1.612,74,1.282,75,2.794,76,2.794,77,1.217,78,2.249,87,3.883,88,1.955,89,1.86,90,1.955,91,1.955,92,1.955,94,2.06,122,1.856,124,3.133,132,1.058,134,0.936,136,1.406,137,1.515,162,3.735,179,5.963,181,4.537,185,2.862,186,2.36,187,2.611,188,3.189,189,3.189,190,3.189,191,3.014,192,3.399,193,3.84,194,3.289,195,2.345,196,3.582,198,2.263,200,2.413,207,2.19,208,5.328,209,3.62,210,2.263,211,4.904,212,4.2,213,2.19,214,3.289,215,2.436,216,1.073,217,2.19,218,5.685,219,2.766,220,2.263,221,2.19,222,4.106,223,5.328,224,2.263,225,2.19,226,2.263,227,2.263,228,2.263,229,2.19,230,2.263,231,2.263,232,2.263,233,1.955,234,4.391,235,2.345,236,2.263,237,2.263,238,2.19,239,2.345,243,1.058,1192,2.263,3191,3.998,3229,3.238,3232,3.611,3233,3.611,3234,3.611]],["title/classes/JobsUpdateDto.html",[0,0.228,3214,4]],["body/classes/JobsUpdateDto.html",[0,0.424,2,0.953,3,0.126,4,0.099,5,0.106,21,0.005,23,0.4,29,0.215,32,1.222,37,0.183,40,0.828,41,1.786,55,0.704,58,0.004,59,0.004,65,1.487,122,1.836,124,2.476,133,2.701,134,1.67,205,3.06,275,2.902,277,3.051,278,1.715,354,2.701,484,3.981,504,2.914,505,4.271,506,3.813,508,4.789,510,2.914,513,3.317,514,3.317,778,3.906,1155,3.399,1665,6.843,1808,4.353,1927,4.53,1938,4.036,1941,4.747,2197,4.622,3162,4.747,3164,4.344,3174,4.747,3178,5.008,3189,4.747,3201,6.293,3202,5.336,3212,5.336,3213,5.336,3214,6.293,3215,6.704]],["title/injectables/JwtStrategy.html",[136,1.333,953,4]],["body/injectables/JwtStrategy.html",[0,0.254,3,0.112,4,0.088,5,0.094,7,0.339,8,0.85,9,2.488,10,3.254,11,0.888,15,2.169,18,0.561,20,1.707,21,0.005,22,1.235,23,0.361,29,0.213,36,0.942,37,0.118,53,2.327,55,0.583,56,1.673,58,0.004,59,0.004,65,1.203,70,4.418,72,1.702,74,1.354,77,1.685,78,1.904,83,5.388,94,1.302,103,3.272,112,2.142,136,1.946,137,2.402,139,4.277,152,1.94,157,3.465,170,1.059,200,1.999,243,1.679,246,1.505,268,3.023,272,1.354,286,1.883,787,5.063,802,5.837,878,5.533,885,5.647,908,5.388,910,3.863,914,4.455,953,5.837,957,5.135,999,4.782,1000,2.239,1013,6.219,1014,5.533,1019,6.729,1020,5.135,1100,5.135,1678,4.222,1847,4.746,2827,5.647,3235,5.727,3236,6.729,3237,5.135,3238,7.504,3239,5.135,3240,6.936,3241,8.883,3242,5.727,3243,7.504,3244,5.135,3245,5.727,3246,5.135,3247,5.727,3248,5.727,3249,5.727,3250,5.727,3251,5.727,3252,5.135,3253,5.727,3254,5.727,3255,5.135,3256,7.504,3257,6.729,3258,5.727,3259,5.135]],["title/classes/Keyrings.html",[0,0.228,3260,3.339]],["body/classes/Keyrings.html",[0,0.275,2,0.918,3,0.122,4,0.096,5,0.102,7,0.367,8,0.895,11,1.084,18,0.613,21,0.005,22,1.431,23,0.433,29,0.189,37,0.18,40,0.882,55,0.713,58,0.004,59,0.004,65,0.995,112,1.588,119,4.394,121,3.316,127,1.547,128,4.316,131,4.458,132,1.819,134,1.61,170,1.148,219,2.193,272,2.166,286,2.599,292,2.99,293,2.988,360,6.178,372,3.765,376,3.891,603,4.482,1629,4.316,3260,5.648,3261,5.566,3262,6.12,3263,6.12,3264,6.207,3265,6.207,3266,6.207,3267,6.207,3268,5.566,3269,6.207,3270,5.566,3271,6.207]],["title/classes/KeyringsCommand.html",[0,0.228,1648,3.791]],["body/classes/KeyringsCommand.html",[0,0.351,2,0.76,3,0.101,4,0.079,5,0.085,7,0.304,9,1.526,11,0.826,12,3.864,15,2.017,18,0.467,20,1.587,21,0.005,22,1.571,23,0.301,29,0.204,30,2.194,37,0.164,39,1.57,40,0.77,42,2.596,43,2.363,44,2.775,45,3.595,46,3.777,53,1.593,55,0.552,56,1.026,58,0.003,59,0.003,65,1.118,72,2.356,74,1.874,77,1.566,78,1.934,94,1.168,112,1.314,122,1.464,170,1.573,186,3.45,200,2.111,209,3.358,219,1.424,243,2.045,244,2.235,246,2.083,249,2.115,308,3.464,313,2.645,315,4.53,316,5.146,317,4.909,318,4.909,319,4.909,320,4.53,321,3.219,322,3.219,328,4.909,329,1.639,331,3.612,332,3.289,333,4.53,334,4.53,335,5.146,339,3.986,340,4.909,341,2.824,342,3.612,343,3.334,345,3.219,346,3.334,348,2.78,352,2.472,380,4.707,381,3.334,384,3.612,600,4.909,603,2.645,617,2.78,876,3.464,908,4.807,909,3.786,983,4.968,1003,5.427,1028,3.994,1048,3.994,1648,5.144,1649,3.786,3260,5.521,3272,4.255,3273,5.135,3274,5.135,3275,3.334,3276,3.994,3277,3.786,3278,3.994,3279,4.255,3280,5.427,3281,5.782,3282,4.255,3283,4.255,3284,5.782,3285,4.255,3286,4.255,3287,5.782,3288,4.255,3289,4.255,3290,4.255,3291,4.255,3292,4.255,3293,5.782,3294,4.255]],["title/controllers/KeyringsController.html",[385,1.407,3295,4.261]],["body/controllers/KeyringsController.html",[0,0.19,1,2.728,3,0.084,4,0.066,5,0.071,7,0.253,9,1.274,11,0.93,18,0.526,20,1.787,21,0.005,22,1.425,23,0.393,29,0.214,32,0.814,36,0.705,37,0.089,40,0.532,55,0.678,56,1.571,58,0.003,59,0.003,65,0.985,74,1.454,77,1.38,78,2.194,94,1.787,122,2.602,124,3.33,127,1.327,133,1.797,134,1.111,152,1.452,164,2.448,170,1.454,186,2.677,187,2.063,200,2.431,216,2.713,222,1.978,243,1.256,246,2.065,257,2.489,263,1.734,385,1.173,387,1.348,389,1.797,390,5.102,391,5.06,392,4.925,393,3.159,394,3.805,395,3.555,399,4.188,400,3.015,401,4.326,402,5.301,403,5.301,404,4.326,407,3.159,408,4.534,411,2.686,412,5.623,413,5.102,414,6.093,415,5.528,416,3.015,422,1.765,423,2.32,425,2.96,426,5.06,427,1.939,428,2.32,429,2.686,430,2.02,431,3.159,432,5.102,433,3.159,434,3.333,435,3.015,436,4.148,437,3.015,438,3.015,439,2.891,442,3.015,443,3.015,444,3.015,445,4.67,446,3.333,447,3.159,448,3.73,449,2.686,450,2.686,454,2.063,456,1.978,457,2.109,459,3.551,460,3.333,461,3.159,462,3.237,463,3.015,466,3.551,467,3.551,468,3.854,469,3.015,470,3.539,471,3.539,472,4.326,474,4.326,475,3.015,476,2.627,480,3.159,603,3.168,983,3.854,3260,2.782,3262,3.015,3263,3.015,3275,5.102,3276,3.333,3278,3.333,3295,5.096,3296,4.285,3297,4.285,3298,5.594,3299,4.285,3300,4.285,3301,4.285,3302,4.285,3303,4.285,3304,4.285,3305,4.285,3306,4.285,3307,4.285,3308,4.285,3309,6.149,3310,4.285,3311,4.285]],["title/classes/KeyringsCreateCommand.html",[0,0.228,3280,4]],["body/classes/KeyringsCreateCommand.html",[0,0.348,2,0.747,3,0.099,4,0.078,5,0.083,7,0.298,9,1.501,11,0.816,12,3.848,15,1.994,18,0.462,20,1.569,21,0.005,22,1.565,23,0.297,29,0.203,30,2.157,37,0.162,39,1.544,40,0.765,42,2.566,43,2.336,44,2.744,45,3.554,46,3.734,53,1.566,55,0.547,56,1.009,58,0.003,59,0.003,65,1.105,72,2.335,74,1.858,77,1.549,78,1.92,94,1.148,112,1.292,122,1.439,170,1.562,186,3.42,200,2.093,209,3.341,219,1.401,243,2.022,244,2.198,246,2.065,249,2.08,308,3.406,313,2.601,315,4.479,316,5.101,317,5.94,318,4.853,319,4.853,320,4.479,321,3.165,322,3.165,328,4.853,329,1.612,331,5.527,332,3.251,333,4.479,334,4.479,335,5.101,339,3.941,340,4.853,341,2.792,342,3.552,343,3.278,345,3.165,346,3.278,348,2.733,352,2.431,380,4.653,381,3.278,384,3.552,600,4.853,603,2.601,617,2.733,876,3.406,908,5.666,909,3.723,983,5.855,1003,5.366,1028,3.927,1048,3.927,1648,3.723,1649,3.723,3260,5.482,3272,4.184,3275,3.278,3276,3.927,3277,3.723,3278,3.927,3279,4.184,3280,6.111,3281,5.716,3282,4.184,3283,4.184,3284,5.716,3285,4.184,3286,4.184,3287,5.716,3288,4.184,3289,4.184,3290,4.184,3291,4.184,3292,4.184,3293,5.716,3294,4.184,3312,5.049,3313,5.049]],["title/classes/KeyringsCreateDto.html",[0,0.228,3275,3.339]],["body/classes/KeyringsCreateDto.html",[0,0.383,2,0.904,3,0.12,4,0.094,5,0.101,7,0.361,8,0.887,11,1.14,18,0.63,21,0.005,22,1.421,23,0.422,29,0.188,32,1.16,37,0.162,40,0.858,55,0.721,58,0.004,59,0.004,65,1.384,87,2.474,122,1.743,127,1.59,272,2.042,275,2.596,277,2.994,278,1.628,351,4.473,357,2.312,484,4.481,492,5.772,502,3.832,503,3.969,505,4.559,508,4.238,513,3.149,514,3.149,516,4.25,603,4.45,1629,3.69,3262,6.076,3263,6.076,3275,5.608,3298,4.755,3314,5.482,3315,5.482,3316,5.482,3317,6.113,3318,6.113,3319,7.744,3320,6.113,3321,6.113,3322,5.482,3323,5.482]],["title/classes/KeyringsCreateQuestions.html",[0,0.228,1649,3.791]],["body/classes/KeyringsCreateQuestions.html",[0,0.354,2,0.771,3,0.102,4,0.08,5,0.086,7,0.308,9,1.548,11,0.616,12,3.616,15,1.506,18,0.349,20,1.185,21,0.005,22,1.615,23,0.224,29,0.205,30,2.225,37,0.165,39,1.593,40,0.797,42,2.621,43,2.386,44,2.802,45,3.63,46,3.814,53,1.615,55,0.491,56,1.041,58,0.003,59,0.003,65,1.129,72,2.373,74,1.888,77,1.582,78,1.602,94,1.185,112,1.333,122,1.485,127,0.88,170,1.582,186,3.475,200,1.877,209,3.131,219,1.445,243,2.065,244,2.267,246,2.098,249,2.146,305,4.67,308,4.753,313,2.683,315,4.574,316,5.184,317,4.956,318,4.956,319,4.956,320,4.574,321,3.265,322,3.265,328,4.956,329,1.663,331,3.664,332,3.321,333,4.574,334,4.574,335,4.574,339,4.025,340,4.956,341,2.851,342,3.664,343,3.382,345,3.265,346,3.382,348,2.82,352,2.508,600,4.956,603,2.683,617,2.82,876,3.514,908,4.843,909,3.84,983,5.004,1003,5.48,1028,4.052,1048,4.052,1648,3.84,1649,5.194,3260,5.554,3272,4.316,3275,3.382,3276,4.052,3277,3.84,3278,4.052,3279,5.838,3280,5.48,3281,5.838,3282,4.316,3283,4.316,3284,5.838,3285,4.316,3286,4.316,3287,5.838,3288,4.316,3289,4.316,3290,4.316,3291,4.316,3292,4.316,3293,5.838,3294,4.316,3324,7.045,3325,5.208]],["title/classes/KeyringsDto.html",[0,0.228,3298,4]],["body/classes/KeyringsDto.html",[0,0.376,2,0.873,3,0.116,4,0.091,5,0.097,7,0.349,8,0.867,11,1.129,18,0.639,21,0.005,22,1.398,23,0.424,29,0.185,32,1.121,37,0.158,40,0.869,55,0.722,58,0.004,59,0.004,65,1.361,87,3.769,122,2.422,127,1.612,272,2.009,275,2.562,277,2.955,278,1.573,351,4.374,357,2.233,484,4.18,492,5.644,502,3.701,503,3.833,505,4.484,508,4.144,513,3.042,514,3.042,516,4.18,519,4.593,603,4.377,1629,3.608,3262,5.976,3263,5.976,3275,6.306,3298,5.955,3314,5.294,3315,5.294,3316,5.294,3319,7.617,3322,5.294,3323,5.294,3326,5.904,3327,5.904,3328,5.904,3329,5.904,3330,5.904]],["title/modules/KeyringsModule.html",[166,1.618,952,3.469]],["body/modules/KeyringsModule.html",[0,0.303,3,0.134,4,0.105,5,0.113,21,0.005,22,1.125,29,0.211,36,1.125,37,0.141,58,0.004,59,0.004,132,2.005,166,2.86,387,2.643,531,2.977,532,3.095,533,3.224,534,3.224,535,3.224,536,4.197,537,4.285,541,3.959,542,2.922,543,3.158,545,4.023,549,3.442,550,4.287,552,3.908,952,6.77,983,6.501,3260,4.441,3270,7.532,3277,5.043,3295,7.534,3331,6.133,3332,6.133,3333,6.133,3334,6.839,3335,6.839,3336,6.839,3337,6.839]],["title/injectables/KeyringsService.html",[136,1.333,983,3.223]],["body/injectables/KeyringsService.html",[0,0.154,3,0.068,4,0.054,5,0.057,7,0.205,8,0.596,9,2.614,10,2.186,11,1.127,12,2.572,15,1.003,18,0.643,20,2.246,21,0.005,22,1.499,23,0.432,25,4.363,29,0.187,36,0.571,37,0.072,49,2.777,55,0.688,56,0.693,58,0.003,59,0.003,65,0.843,66,3.415,72,1.564,74,1.244,75,2.711,76,2.711,77,1.181,78,2.246,87,3.855,88,1.878,89,1.787,90,1.878,91,1.878,92,1.878,94,2.039,119,1.928,121,1.455,122,1.812,124,3.085,132,1.017,134,0.9,136,1.364,137,1.455,162,3.718,170,0.642,179,5.918,181,4.446,185,2.777,186,2.767,187,2.533,188,3.095,189,3.095,190,3.095,191,2.924,192,3.298,193,3.782,194,3.191,195,2.253,196,3.52,198,2.175,200,2.427,207,2.104,208,5.274,209,3.631,210,2.175,211,4.854,212,4.127,213,2.104,214,4.303,216,1.889,217,2.104,218,5.647,219,2.752,220,2.175,221,2.104,222,4.06,223,5.274,224,2.175,225,2.104,226,2.175,227,2.175,228,2.175,229,2.104,230,2.175,231,2.175,232,2.175,233,1.878,234,4.303,235,2.253,236,2.175,237,2.175,238,2.104,239,2.253,243,1.017,246,0.912,372,2.104,563,2.875,564,3.111,603,2.711,983,3.298,3260,2.253,3275,4.606,3277,2.558,3338,3.469,3339,3.469,3340,3.469,3341,3.469,3342,3.469,3343,3.469,3344,3.469]],["title/injectables/LocalStrategy.html",[136,1.333,954,4]],["body/injectables/LocalStrategy.html",[0,0.259,3,0.115,4,0.09,5,0.096,7,0.346,10,2.011,11,0.9,15,1.69,18,0.509,20,1.73,21,0.005,22,1.252,23,0.328,29,0.211,36,0.962,37,0.121,40,0.824,42,2.175,43,1.981,44,2.326,55,0.647,58,0.004,59,0.004,65,1.219,74,1.383,77,1.708,78,1.923,94,1.33,112,2.164,136,1.973,137,2.452,139,4.311,152,1.981,157,4.134,158,6.304,164,3.34,165,3.796,170,1.082,200,2.026,209,2.785,243,1.714,246,1.537,272,1.383,310,3.756,313,4.613,332,2.756,341,3.079,375,3.796,456,2.699,787,5.132,802,5.917,853,3.439,878,5.608,908,5.432,909,4.311,910,3.944,914,4.548,916,4.311,954,5.917,1013,4.845,1014,5.608,1129,3.439,1678,4.311,1903,4.346,2827,5.704,3236,6.821,3237,5.243,3239,5.243,3240,7.007,3244,5.243,3246,5.243,3252,5.243,3255,5.243,3257,6.821,3259,5.243,3345,5.847,3346,5.847,3347,5.847,3348,8.455,3349,5.847,3350,7.607,3351,5.847,3352,5.847,3353,5.847,3354,5.847,3355,5.847,3356,5.847,3357,5.847]],["title/classes/Logger.html",[0,0.228,10,1.768]],["body/classes/Logger.html",[0,0.25,2,0.834,3,0.111,4,0.087,5,0.093,7,0.333,8,0.841,10,3.036,11,1.045,18,0.591,21,0.005,23,0.425,24,4.907,29,0.192,37,0.182,40,0.874,55,0.703,58,0.004,59,0.004,65,0.904,112,1.443,119,4.128,121,3.484,127,1.491,128,4.161,131,4.325,132,1.652,134,1.462,162,2.097,170,1.374,216,2.469,219,1.564,267,2.304,268,2.976,272,2.088,279,3.573,286,2.731,289,2.991,292,2.809,293,2.714,329,2.371,332,3.501,372,3.42,376,3.534,1129,3.316,1132,3.966,1809,6.883,1814,7.449,1903,4.244,3119,6.461,3126,5.778,3358,5.055,3359,8.829,3360,5.638,3361,5.638,3362,5.638,3363,5.638,3364,5.638,3365,7.427,3366,5.055,3367,5.638,3368,5.055,3369,5.638,3370,5.055,3371,5.638,3372,5.638,3373,5.638,3374,5.638]],["title/controllers/LoggerController.html",[385,1.407,3375,4.261]],["body/controllers/LoggerController.html",[0,0.336,1,3.966,3,0.149,4,0.117,5,0.125,10,2.608,21,0.005,29,0.206,36,1.248,37,0.157,58,0.004,59,0.004,65,1.432,74,1.793,243,2.223,385,2.075,387,2.386,389,3.181,430,3.574,456,3.501,457,3.732,3375,7.407,3376,7.583,3377,6.59,3378,6.8,3379,7.583]],["title/modules/LoggerModule.html",[166,1.618,1789,3.791]],["body/modules/LoggerModule.html",[0,0.31,3,0.137,4,0.108,5,0.115,10,2.402,21,0.005,22,1.149,29,0.213,36,1.149,37,0.144,58,0.004,59,0.004,132,2.047,166,2.887,387,2.677,531,3.04,532,3.16,533,3.292,534,3.292,535,3.292,536,4.236,537,3.292,541,4.01,542,2.984,543,3.225,545,4.108,549,3.515,550,4.378,552,3.99,1789,7.341,3368,7.629,3375,7.603,3377,7.341,3378,6.263,3380,6.263,3381,6.263,3382,6.984,3383,6.263,3384,6.984,3385,6.984]],["title/injectables/LoggerService.html",[136,1.333,3377,3.791]],["body/injectables/LoggerService.html",[0,0.16,3,0.071,4,0.056,5,0.06,7,0.214,8,0.615,9,2.645,10,2.492,11,1.136,12,2.638,15,1.046,18,0.648,20,2.259,21,0.005,22,1.514,23,0.434,25,4.388,29,0.169,36,0.595,37,0.075,49,2.867,55,0.689,58,0.003,59,0.003,65,0.87,66,3.488,72,1.614,74,1.284,75,2.798,76,2.798,77,1.219,78,2.249,87,3.884,88,1.959,89,1.864,90,1.959,91,1.959,92,1.959,94,2.061,122,1.859,124,3.135,132,1.061,134,0.938,136,1.408,137,1.518,162,3.736,179,5.966,181,4.542,185,2.867,186,2.364,187,2.615,188,3.194,189,3.194,190,3.194,191,3.018,192,3.404,193,3.843,194,3.294,195,2.349,196,3.585,198,2.268,200,2.414,207,2.195,208,5.331,209,3.621,210,2.268,211,4.906,212,4.203,213,2.195,214,3.294,215,2.441,216,1.075,217,2.195,218,5.687,219,2.766,220,2.268,221,2.195,222,4.108,223,5.331,224,2.268,225,2.195,226,2.268,227,2.268,228,2.268,229,2.195,230,2.268,231,2.268,232,2.268,233,1.959,234,4.395,235,2.349,236,2.268,237,2.268,238,2.195,239,2.349,243,1.061,3377,4.004,3383,3.244,3386,3.618,3387,3.618,3388,3.618]],["title/classes/MailSettingsDto.html",[0,0.228,3389,4]],["body/classes/MailSettingsDto.html",[0,0.345,2,0.895,3,0.119,4,0.093,5,0.1,7,0.358,8,0.881,18,0.608,21,0.005,23,0.44,29,0.169,32,1.149,37,0.125,40,0.897,55,0.711,58,0.004,59,0.004,127,1.532,219,1.679,265,4.444,267,3.069,272,1.431,275,2.675,277,2.826,278,1.612,279,3.672,286,1.99,310,3.936,313,4.835,507,5.247,585,5.388,798,5.427,1000,2.366,1436,5.247,1695,7.123,3389,6.05,3390,6.052,3391,7.778,3392,6.052,3393,7.778,3394,6.052,3395,7.778,3396,8.595,3397,6.052,3398,7.778,3399,6.052,3400,6.052,3401,7.778,3402,6.975,3403,6.052,3404,7.778,3405,6.052,3406,7.778,3407,5.427]],["title/controllers/MailadmController.html",[385,1.407,3408,4.261]],["body/controllers/MailadmController.html",[0,0.26,3,0.115,4,0.091,5,0.097,7,0.347,10,2.021,11,0.903,18,0.511,20,1.736,21,0.005,22,1.256,23,0.329,29,0.202,32,1.115,36,0.967,37,0.121,55,0.676,56,1.525,58,0.004,59,0.004,77,1.713,78,2.167,94,1.736,127,1.289,152,1.99,170,1.412,200,2.39,216,2.667,219,2.117,246,2.006,256,4.955,264,3.088,385,1.608,387,1.849,389,2.464,394,3.793,395,3.62,399,4.144,422,2.42,425,2.829,427,2.659,456,2.713,470,3.755,471,3.755,638,4.366,640,4.842,686,3.841,764,5.503,765,4.332,862,3.18,1191,4.414,1381,5.368,1400,6.592,1421,4.869,1435,3.841,1438,4.783,1535,5.626,3389,6.978,3408,6.323,3409,5.875,3410,5.875,3411,5.268,3412,5.268,3413,5.626,3414,5.875,3415,5.875,3416,5.268,3417,5.268,3418,5.268,3419,5.875,3420,5.268,3421,5.875,3422,4.57,3423,5.268,3424,5.268,3425,5.268,3426,5.268,3427,5.875]],["title/injectables/MailadmService.html",[136,1.333,764,3.339]],["body/injectables/MailadmService.html",[0,0.144,3,0.064,4,0.05,5,0.053,7,0.192,8,0.567,9,2.842,10,2.099,11,1.132,12,2.47,18,0.655,20,2.27,21,0.005,22,1.516,23,0.434,25,4.321,29,0.133,36,0.535,37,0.067,40,0.641,49,2.641,53,1.008,55,0.695,56,1.22,58,0.002,59,0.002,65,0.802,66,3.3,72,1.487,74,1.183,75,2.578,76,2.578,77,1.123,78,2.311,87,3.92,88,1.759,89,1.674,90,1.759,91,1.759,92,1.759,94,2.14,122,1.74,124,3.007,136,1.298,137,1.363,162,3.688,170,0.601,176,6.007,179,5.621,180,4.146,181,3.136,182,4.451,183,4.146,184,4.146,185,2.641,186,2.178,187,2.409,188,2.943,189,2.943,190,2.943,191,2.781,192,3.136,193,3.686,194,3.035,196,1.5,198,2.036,200,2.564,201,2.692,203,4.146,204,2.692,205,1.892,207,1.971,208,5.183,209,3.565,210,2.036,211,4.854,212,4.008,213,1.971,214,3.035,215,2.191,216,1.814,217,1.971,218,5.581,219,2.727,220,2.036,221,1.971,222,3.984,223,5.183,224,2.036,225,1.971,226,2.036,227,2.036,228,2.036,229,1.971,230,2.036,231,2.036,232,2.036,233,1.759,234,4.158,235,2.109,236,2.036,237,2.036,246,1.315,764,3.249,778,3.035,3389,5.759,3420,2.913,3428,3.248,3429,6.855,3430,5.003,3431,3.248,3432,3.248,3433,5.003,3434,3.248,3435,3.248,3436,3.248,3437,3.248,3438,3.248,3439,3.248,3440,3.248,3441,3.248]],["title/controllers/ManagementController.html",[385,1.407,3442,4.261]],["body/controllers/ManagementController.html",[0,0.338,3,0.15,4,0.118,5,0.126,21,0.005,29,0.207,32,1.449,36,1.256,37,0.158,55,0.532,58,0.004,59,0.004,74,1.805,385,2.088,387,2.401,389,3.201,427,3.453,456,3.523,457,3.755,3442,7.434,3443,7.631,3444,6.843,3445,6.615,3446,6.843,3447,7.631,3448,7.631]],["title/modules/ManagementModule.html",[166,1.618,733,3.791]],["body/modules/ManagementModule.html",[0,0.286,3,0.127,4,0.1,5,0.106,18,0.433,21,0.005,29,0.212,30,2.76,36,1.063,37,0.134,55,0.45,56,1.292,58,0.004,59,0.004,77,1.451,94,1.47,166,2.924,387,2.551,454,3.904,531,2.813,532,2.924,533,3.046,534,3.046,535,3.046,536,4.091,537,3.046,541,3.822,542,2.76,543,2.983,549,4.46,733,7.51,1022,3.18,1289,6.343,1791,6.893,1793,6.893,1794,5.355,1800,5.355,1801,5.355,1802,5.355,3442,7.343,3444,5.794,3445,7.202,3446,5.794,3449,5.794,3450,5.794,3451,5.794,3452,7.202,3453,6.461,3454,6.461,3455,6.461,3456,5.794,3457,6.461]],["title/injectables/ManagementService.html",[136,1.333,3445,3.791]],["body/injectables/ManagementService.html",[0,0.346,3,0.153,4,0.12,5,0.129,15,2.781,18,0.523,21,0.005,29,0.17,36,1.285,37,0.161,55,0.634,58,0.004,59,0.004,136,2.359,137,3.277,3445,6.706,3458,7.812,3459,7.812]],["title/classes/MetadataDto.html",[0,0.228,2144,3.223]],["body/classes/MetadataDto.html",[0,0.411,2,1.062,3,0.141,4,0.111,5,0.118,7,0.424,8,0.98,11,1.024,18,0.481,21,0.005,23,0.415,29,0.209,32,1.363,37,0.148,55,0.647,58,0.004,59,0.004,123,4.673,127,1.212,275,2.466,278,1.912,506,4.077,509,3.441,510,3.248,1808,4.257,2144,5.422,2158,7.388,2159,5.948,3460,7.178,3461,7.178,3462,7.178]],["title/classes/MetadataPart.html",[0,0.228,126,4.261]],["body/classes/MetadataPart.html",[0,0.289,2,0.965,3,0.128,4,0.101,5,0.107,7,0.385,8,0.923,18,0.624,21,0.005,23,0.433,29,0.177,37,0.168,40,0.869,55,0.718,58,0.004,59,0.004,65,1.045,112,1.668,121,3.42,122,1.859,126,6.757,127,1.575,128,4.394,129,5.846,131,4.524,132,1.911,134,1.691,170,1.206,292,3.084,293,3.139,1629,4.733,3090,6.56,3138,6.56,3463,6.519,3464,7.979,3465,7.979,3466,6.519,3467,6.519,3468,6.519,3469,6.519,3470,6.519]],["title/classes/MetadataPartDto.html",[0,0.228,2158,3.791]],["body/classes/MetadataPartDto.html",[0,0.365,2,0.982,3,0.13,4,0.102,5,0.109,7,0.392,8,0.934,11,1.193,18,0.628,21,0.005,23,0.404,29,0.179,32,1.26,37,0.137,40,0.812,55,0.72,58,0.004,59,0.004,127,1.585,275,2.751,277,2.949,278,1.768,485,5.802,509,3.838,1629,4.422,2158,6.08,3090,6.614,3138,6.614,3464,8.044,3465,8.044,3471,6.639,3472,7.395,3473,6.639,3474,6.639,3475,6.639,3476,6.639,3477,8.044]],["title/modules/MigrationsModule.html",[166,1.618,734,3.791]],["body/modules/MigrationsModule.html",[0,0.314,3,0.139,4,0.109,5,0.117,18,0.475,21,0.005,29,0.187,36,1.167,37,0.147,55,0.494,56,1.418,58,0.004,59,0.004,77,1.593,78,1.953,94,1.613,166,3.021,200,2.288,454,4.135,531,3.088,532,3.21,533,3.343,534,3.343,535,3.343,536,4.265,537,3.343,541,4.048,542,3.03,543,3.275,734,7.368,768,7.368,1791,7.186,1793,5.518,3478,6.361,3479,6.361,3480,7.093,3481,7.093,3482,7.093]],["title/injectables/MigrationsService.html",[136,1.333,768,3.791]],["body/injectables/MigrationsService.html",[0,0.151,3,0.067,4,0.052,5,0.153,7,0.201,8,0.586,9,2.366,10,2.413,11,0.743,12,3.35,15,1.497,18,0.585,20,1.427,21,0.005,22,1.032,23,0.302,29,0.194,30,1.452,36,0.559,37,0.107,39,1.039,40,0.739,41,1.437,53,2.343,55,0.526,56,1.748,58,0.002,59,0.002,67,1.888,68,6.192,70,3.312,72,2.882,74,1.882,77,1.163,78,2.158,83,4.257,94,1.718,103,1.941,106,1.636,112,0.87,116,3.799,132,0.996,134,0.881,136,1.343,137,1.425,170,1.722,244,3.288,246,2.471,249,3.112,250,3.046,257,1.375,272,0.804,286,2.307,339,2.959,341,2.54,343,4.074,354,1.425,476,3.401,589,2.206,624,2.061,684,2.505,768,3.818,777,2.061,813,4.644,856,2.505,857,2.39,903,1.672,904,3.047,1000,2.454,1022,1.672,1040,2.643,1129,1.999,1182,4.028,1610,2.643,1629,1.601,1631,2.643,1724,2.816,1872,4.644,1873,3.047,1875,4.291,1879,4.291,1886,2.39,1938,3.246,2100,4.028,2476,3.818,2623,5.869,2640,2.643,2961,3.047,3240,4.291,3483,3.398,3484,6.275,3485,8.533,3486,7.017,3487,7.017,3488,5.178,3489,5.178,3490,5.178,3491,3.398,3492,3.398,3493,5.178,3494,3.398,3495,8.533,3496,5.178,3497,7.96,3498,3.398,3499,5.178,3500,3.398,3501,3.398,3502,5.178,3503,3.398,3504,4.644,3505,5.178,3506,3.398,3507,3.398,3508,9.634,3509,3.398,3510,3.398,3511,3.398,3512,3.398,3513,3.398,3514,5.178,3515,3.398,3516,3.398,3517,3.398,3518,3.398,3519,3.398,3520,3.398,3521,3.398,3522,3.398,3523,3.398,3524,3.398,3525,3.398,3526,3.398,3527,3.398,3528,3.398,3529,3.398,3530,2.505,3531,5.178,3532,9.066,3533,3.398,3534,6.275,3535,3.398,3536,7.554,3537,3.398,3538,3.047,3539,3.398,3540,6.275,3541,3.398,3542,5.178,3543,5.178,3544,3.398,3545,3.398,3546,5.178,3547,3.398,3548,3.398,3549,3.398,3550,3.398,3551,3.398,3552,5.178,3553,3.398,3554,3.398,3555,7.96,3556,3.398,3557,3.398,3558,5.178,3559,3.398,3560,3.047,3561,3.398,3562,3.398,3563,3.398,3564,3.398,3565,3.398,3566,3.398,3567,3.398,3568,3.398,3569,5.178,3570,3.398,3571,5.178,3572,3.398,3573,3.398,3574,3.398,3575,3.398,3576,3.398,3577,2.816,3578,3.398,3579,5.178,3580,3.398,3581,5.178,3582,3.047,3583,3.398,3584,3.398,3585,3.398,3586,3.398,3587,3.398,3588,5.178,3589,3.398,3590,3.398]],["title/classes/MongoDbTestInstance.html",[0,0.228,3591,4.261]],["body/classes/MongoDbTestInstance.html",[0,0.27,2,0.901,3,0.119,4,0.094,5,0.1,7,0.36,8,0.885,11,0.721,18,0.644,20,1.777,21,0.005,22,1.285,23,0.392,29,0.17,37,0.126,39,1.863,40,0.746,56,1.218,58,0.004,59,0.004,77,1.754,78,2.323,94,2.068,116,4.668,134,1.58,170,1.595,211,3.298,246,2.571,292,3.439,589,3.956,599,4.286,717,3.956,824,3.956,1130,6.706,1946,4.492,3093,4.739,3591,6.473,3592,6.092,3593,7.732,3594,7.732,3595,8.155,3596,7.005,3597,8.155,3598,6.092,3599,7.732,3600,6.092,3601,6.092,3602,7.811,3603,6.092,3604,6.092,3605,6.092,3606,4.492,3607,5.463,3608,7.811,3609,6.092,3610,6.092,3611,6.092,3612,6.092,3613,6.092,3614,6.092,3615,6.092,3616,6.092,3617,7.811,3618,6.092,3619,6.092,3620,6.092]],["title/interfaces/MongoosePlugin.html",[38,1.407,743,3.791]],["body/interfaces/MongoosePlugin.html",[3,0.118,4,0.064,5,0.068,7,0.245,8,0.68,11,0.916,21,0.005,23,0.304,29,0.2,32,0.787,37,0.146,38,1.644,39,2.159,40,0.882,41,1.151,42,1.543,43,1.405,44,1.65,45,2.137,46,2.245,47,2.918,58,0.003,59,0.003,60,1.709,70,3.727,102,4.153,112,1.062,132,1.216,134,1.558,157,1.915,162,1.543,209,3.617,270,3.247,272,1.67,285,4.283,286,1.975,310,2.519,375,5.026,428,3.251,585,4.852,617,3.251,649,3.251,676,2.798,681,2.798,685,4.763,743,5.206,744,4.052,746,4.672,767,4.429,789,4.672,824,5.026,844,5.446,876,2.798,885,4.763,903,2.041,910,2.798,958,4.977,962,4.977,963,3.058,1022,3.475,1032,6.662,1072,3.058,1122,2.798,1328,1.955,1365,4.672,1373,3.765,1450,4.672,1672,4.977,1673,3.719,1674,4.226,1675,5.386,1676,5.386,1677,5.851,1678,4.429,1679,5.386,1680,5.386,1681,5.386,1682,5.386,1683,4.977,1684,3.227,1685,5.386,1686,4.226,1687,4.977,1688,4.977,1689,4.429,1690,5.386,1691,5.386,1692,5.386,1693,5.386,1694,6.332,1695,4.977,1696,4.977,1697,4.977,1698,4.977,1699,5.386,1700,3.719,1701,3.719,1702,3.719,1703,3.719,1704,3.719,1705,3.719,1706,3.719,1707,3.719,1708,3.437,1709,3.719,1710,7.921,1711,3.719,1712,3.719,1713,3.719,1714,3.719,1715,3.719,1716,3.719,1717,3.719,1718,3.719,1719,3.719,1720,3.719,1721,3.719,1722,3.719,1723,3.719,1724,4.977,1725,5.386,1726,3.719,1727,3.719,1728,3.719,1729,3.719,1730,3.719,1731,3.719,1732,3.719,1733,3.719,1734,3.719,1735,3.719,1736,3.719,1737,3.719,1738,3.437,1739,3.719,1740,3.719,1741,3.719,1742,3.719,1743,3.719,1744,3.719,1745,3.719,1746,3.719,1747,3.719,1748,3.719,1749,3.227]],["title/classes/MongooseValidationFilter.html",[0,0.228,754,4.261]],["body/classes/MongooseValidationFilter.html",[0,0.323,2,0.81,3,0.107,4,0.084,5,0.09,7,0.324,9,2.434,10,1.883,11,0.862,18,0.488,20,1.657,21,0.005,22,1.199,23,0.314,29,0.19,36,0.901,37,0.113,39,1.674,42,2.037,43,1.855,44,2.178,55,0.57,56,1.095,58,0.003,59,0.003,67,4.049,77,1.636,94,1.657,134,1.42,139,3.508,152,1.855,170,1.764,249,3.373,278,1.459,284,4.218,285,4.419,329,1.748,332,2.581,341,2.949,394,2.849,422,2.256,462,2.256,583,6.785,584,6.038,585,5.132,586,7.233,588,4.915,590,4.538,591,4.26,592,4.538,593,4.538,596,4.91,754,6.785,792,3.556,809,4.731,1029,4.26,1122,3.694,1231,6.037,1250,6.533,1313,3.853,1831,7.535,1849,4.538,1903,3.129,2463,5.126,2843,4.91,2989,4.91,2999,4.538,3621,8.188,3622,7.286,3623,9.537,3624,9.687,3625,5.476,3626,7.286,3627,5.476,3628,5.476,3629,5.476,3630,5.476,3631,5.476,3632,5.476,3633,5.476,3634,5.476,3635,5.476,3636,5.476,3637,5.476,3638,5.476,3639,5.476,3640,5.476,3641,5.476,3642,5.476,3643,5.476,3644,5.476,3645,5.476]],["title/classes/NeedChangePasswordDto.html",[0,0.228,2530,4.261]],["body/classes/NeedChangePasswordDto.html",[0,0.385,2,1.07,3,0.142,4,0.112,5,0.119,7,0.428,8,0.984,18,0.485,21,0.005,23,0.401,29,0.189,32,1.374,37,0.149,40,0.837,55,0.649,58,0.004,59,0.004,127,1.222,157,4.013,165,5.644,205,3.287,263,4.001,265,4.134,266,6.761,267,2.696,275,2.478,277,2.857,278,1.927,279,2.928,1302,5.996,1310,6.488,2530,7.203,3646,8.691]],["title/classes/NotFoundDto.html",[0,0.228,3647,4.611]],["body/classes/NotFoundDto.html",[0,0.32,2,1.068,3,0.142,4,0.111,5,0.119,7,0.427,8,0.983,18,0.581,21,0.005,23,0.374,29,0.189,32,1.371,36,1.188,37,0.149,40,0.752,55,0.699,58,0.004,59,0.004,127,1.466,219,2.003,275,2.754,329,2.972,422,3.835,462,3.835,1921,5.984,1924,3.204,3647,7.785,3648,9.309,3649,7.221,3650,7.221,3651,7.221,3652,7.221]],["title/injectables/ObjectIdValidationPipe.html",[136,1.333,445,3.339]],["body/injectables/ObjectIdValidationPipe.html",[0,0.304,3,0.135,4,0.106,5,0.113,7,0.406,11,0.813,18,0.46,20,1.561,21,0.005,22,1.13,23,0.296,29,0.183,36,1.13,37,0.142,40,0.788,42,3.132,43,2.326,53,2.611,55,0.634,56,1.372,58,0.004,59,0.004,67,3.816,77,1.89,94,1.561,106,3.305,124,3.746,133,2.879,134,1.78,136,2.183,137,2.879,263,3.407,273,4.631,445,5.467,633,3.922,706,5.062,1000,2.684,1821,5.689,1823,6.208,1827,6.977,1828,7.867,3653,8.419,3654,9.106,3655,6.865,3656,8.419,3657,6.865,3658,6.865,3659,6.865]],["title/classes/PaginatedFilterDto.html",[0,0.228,2777,4.261]],["body/classes/PaginatedFilterDto.html",[0,0.346,2,1.156,3,0.153,4,0.12,5,0.129,18,0.523,21,0.005,37,0.161,39,2.781,40,0.787,42,2.906,43,2.646,44,3.107,58,0.004,59,0.004,61,5.496,332,3.682,2777,7.537,3660,8.156,3661,7.812,3662,7.812]],["title/classes/PaginatedResponseDto.html",[0,0.228,33,4]],["body/classes/PaginatedResponseDto.html",[0,0.31,2,1.033,3,0.137,4,0.108,5,0.115,7,0.413,8,0.964,18,0.614,21,0.005,23,0.395,29,0.185,32,1.326,33,6.618,36,1.149,37,0.144,41,2.36,55,0.714,58,0.004,59,0.004,127,1.55,216,2.727,219,1.937,275,2.839,422,3.78,462,3.78,468,5.751,471,3.437,1921,5.788,1924,3.099,3660,8.563,3663,6.984,3664,8.508,3665,6.984,3666,6.984,3667,6.984]],["title/controllers/PasswdController.html",[385,1.407,3668,4.261]],["body/controllers/PasswdController.html",[0,0.123,3,0.055,4,0.043,5,0.046,7,0.164,10,1.524,11,0.944,15,0.804,18,0.534,20,1.815,21,0.005,22,1.313,23,0.344,29,0.193,32,0.528,36,0.458,37,0.057,53,0.863,55,0.679,56,1.685,58,0.002,59,0.002,72,1.642,74,0.658,77,0.995,78,2.207,94,1.815,121,1.167,127,1.348,134,0.722,152,0.942,165,3.586,170,1.686,200,2.453,211,2.399,216,2.603,219,2.132,244,1.211,246,2.097,249,1.146,250,1.637,253,2.99,264,3.229,267,1.374,306,2.283,310,2.316,329,2.547,385,0.761,387,0.875,389,1.167,392,2.778,394,3.811,395,3.798,399,4.225,411,1.744,422,1.146,425,1.34,427,1.259,462,1.146,468,2.778,470,3.926,471,3.926,476,1.189,542,2.359,603,1.434,638,4.236,640,4.559,686,4.016,787,3.726,792,3.586,793,4.072,809,5.686,862,4.451,888,3.876,889,5.219,895,3.761,901,3.89,902,2.089,1155,1.469,1159,4.249,1182,4.899,1189,3.974,1191,2.181,1193,2.134,1257,4.431,1300,4.644,1321,2.306,1322,3.447,1323,4.644,1324,2.306,1328,1.311,1331,4.644,1332,4.577,1333,2.306,1334,4.644,1335,2.306,1336,2.306,1337,3.886,1338,2.164,1341,4.644,1342,2.306,1345,4.644,1346,2.306,1356,4.072,1368,6.215,1369,5.686,1372,3.705,1374,3.821,1381,5.155,1389,4.899,1393,3.118,1396,3.672,1397,2.306,1401,2.164,1418,2.306,1430,3.118,1434,3.672,1435,2.231,1436,2.99,1438,3.948,1459,2.99,1462,3.672,1468,2.878,1469,2.399,1475,3.447,1487,3.447,1496,3.672,1507,3.118,1536,2.339,1599,4.899,1600,3.118,1601,3.586,1908,2.495,2337,2.051,2509,2.495,2841,2.495,3413,3.268,3668,3.672,3669,2.782,3670,4.432,3671,3.974,3672,4.432,3673,3.974,3674,4.432,3675,2.782,3676,2.782,3677,5.402,3678,7.327,3679,4.432,3680,4.432,3681,2.782,3682,2.495,3683,2.495,3684,2.782,3685,2.782,3686,2.782,3687,2.782,3688,5.648,3689,4.432,3690,2.782,3691,2.782,3692,2.782,3693,2.782,3694,2.782,3695,2.782,3696,2.782,3697,2.782,3698,2.782,3699,2.782,3700,2.782,3701,2.782,3702,2.782,3703,4.432,3704,2.782,3705,2.782,3706,2.782,3707,4.432,3708,4.432,3709,4.432,3710,2.782,3711,2.495,3712,2.782,3713,2.782,3714,2.782,3715,2.782,3716,2.782,3717,2.782,3718,2.782,3719,2.782,3720,5.523,3721,4.952,3722,2.782,3723,2.782,3724,2.782,3725,2.782,3726,2.782,3727,2.782,3728,2.782,3729,2.782,3730,2.782,3731,2.495,3732,2.782,3733,2.495,3734,2.782,3735,2.782,3736,2.782,3737,2.782,3738,4.432,3739,4.432,3740,3.974,3741,4.432,3742,4.432,3743,2.782,3744,2.782,3745,2.782,3746,2.782,3747,2.782,3748,2.782,3749,2.782,3750,2.782,3751,2.782,3752,2.782,3753,2.782]],["title/modules/PasswdModule.html",[166,1.618,3452,3.791]],["body/modules/PasswdModule.html",[0,0.299,3,0.132,4,0.104,5,0.111,21,0.005,29,0.215,36,1.111,37,0.139,58,0.004,59,0.004,166,2.844,387,2.622,531,2.938,532,3.055,533,3.182,534,3.182,535,3.182,536,4.173,537,3.182,541,3.927,542,2.884,543,3.117,549,4.194,735,6.662,759,5.594,1284,6.412,1289,6.412,1356,7.281,1653,5.594,3452,7.634,3456,6.053,3668,7.49,3711,6.053,3754,6.053,3755,6.75,3756,6.053,3757,6.75,3758,6.75]],["title/controllers/PasswdadmController.html",[385,1.407,3759,4.261]],["body/controllers/PasswdadmController.html",[0,0.257,3,0.114,4,0.09,5,0.096,7,0.343,10,1.998,11,0.896,18,0.507,20,1.723,21,0.005,22,1.246,23,0.326,29,0.201,32,1.103,36,0.956,37,0.12,55,0.674,56,1.514,58,0.004,59,0.004,77,1.701,78,2.161,94,1.723,127,1.279,152,1.968,170,1.401,200,2.379,216,2.655,219,2.101,246,1.991,264,3.066,385,1.59,387,1.828,389,2.437,394,3.783,395,3.601,399,4.133,422,2.393,425,2.797,427,2.629,456,2.682,470,3.727,471,3.727,638,4.343,640,4.816,686,3.813,901,3.845,902,4.21,1337,5.93,1368,5.585,1369,3.919,1401,4.519,1492,7.402,1493,4.814,1535,5.585,2535,5.209,3413,5.585,3422,4.519,3671,6.792,3682,5.209,3683,5.209,3731,5.209,3733,5.209,3759,6.277,3760,5.809,3761,5.809,3762,7.575,3763,5.809,3764,5.809,3765,7.402,3766,5.809,3767,5.809,3768,5.809,3769,5.809,3770,5.809,3771,5.809,3772,5.809,3773,5.809,3774,5.809,3775,5.809]],["title/classes/PasswordPoliciesDto.html",[0,0.228,3765,4.261]],["body/classes/PasswordPoliciesDto.html",[0,0.222,2,0.481,3,0.064,4,0.05,5,0.053,7,0.192,8,0.567,18,0.624,21,0.005,23,0.444,29,0.109,32,0.617,37,0.067,40,0.763,41,2.859,55,0.718,58,0.002,59,0.002,112,1.28,127,1.574,257,3.84,265,2.859,267,3.114,270,3.528,271,4.487,272,1.849,275,2.682,276,3.392,277,2.006,278,0.865,279,3.771,286,3.063,306,3.532,310,3.528,329,2.188,542,2.929,677,4.625,857,3.52,864,2.395,888,2.358,889,4.146,895,2.358,901,3.404,903,3.373,1000,3.644,1367,3.81,1369,3.375,1371,3.035,1372,2.943,1373,3.136,1374,3.035,1381,4.823,1435,3.45,1438,4.297,1487,3.892,1569,4.146,2092,4.293,2197,5.034,2986,5.332,3023,4.487,3085,7.151,3530,3.689,3765,4.146,3776,9.408,3777,3.248,3778,6.102,3779,6.102,3780,6.102,3781,6.102,3782,6.102,3783,6.102,3784,6.102,3785,6.102,3786,6.102,3787,6.102,3788,6.102,3789,6.102,3790,6.102,3791,5.003,3792,5.003,3793,5.003,3794,3.248,3795,5.003,3796,6.855,3797,3.248,3798,6.855,3799,6.855,3800,6.855,3801,6.147,3802,5.003,3803,4.487,3804,3.248,3805,9.1,3806,8.411,3807,6.855,3808,4.487,3809,3.248,3810,5.003,3811,3.248,3812,4.487,3813,5.003,3814,3.248,3815,4.487,3816,3.248,3817,6.855,3818,6.855,3819,3.248,3820,3.248,3821,6.147,3822,4.487,3823,5.003,3824,4.487,3825,3.248,3826,5.003,3827,3.248,3828,5.003,3829,4.487,3830,5.003,3831,5.003,3832,4.146,3833,5.003,3834,3.248,3835,5.003,3836,4.146,3837,5.003,3838,5.003,3839,3.248,3840,6.855,3841,3.248]],["title/interfaces/RawBodyBufferOptions.html",[38,1.407,3842,4.611]],["body/interfaces/RawBodyBufferOptions.html",[3,0.139,4,0.11,5,0.117,7,0.42,8,0.974,11,1.183,21,0.005,23,0.398,29,0.154,37,0.178,38,1.945,40,0.89,56,1.421,58,0.004,59,0.004,60,2.928,272,1.681,395,3.673,1129,4.181,1688,5.89,1689,7.371,3842,8.291,3843,7.107,3844,7.107,3845,9.607,3846,9.607,3847,6.373,3848,7.107,3849,7.107,3850,8.599,3851,6.373,3852,7.107]],["title/classes/ResetByCodeDto.html",[0,0.228,1334,3.791]],["body/classes/ResetByCodeDto.html",[0,0.361,2,0.965,3,0.128,4,0.101,5,0.107,7,0.385,8,0.923,18,0.596,21,0.005,23,0.383,29,0.177,32,1.238,37,0.135,40,0.807,41,2.262,53,2.529,55,0.706,58,0.004,59,0.004,127,1.503,265,4.659,267,3.036,275,2.658,277,2.925,278,1.737,279,3.601,306,4.201,310,3.42,603,4.945,1303,6.26,1334,6.012,1373,5.111,1374,5.822,2197,4.659,3085,5.403,3673,7.312,3853,8.36,3854,6.519,3855,7.312,3856,7.726,3857,6.519,3858,8.154,3859,6.519,3860,8.154,3861,6.519]],["title/classes/ResetPasswordDto.html",[0,0.228,1323,3.791]],["body/classes/ResetPasswordDto.html",[0,0.377,2,1.033,3,0.137,4,0.108,5,0.115,7,0.413,8,0.964,18,0.57,21,0.005,23,0.367,29,0.185,32,1.326,37,0.144,40,0.827,53,2.639,55,0.694,58,0.004,59,0.004,127,1.437,265,3.99,267,2.962,275,2.616,277,3.016,278,1.86,279,3.443,310,2.929,603,5.044,864,5.15,1302,5.788,1303,6.455,1305,7.051,1323,6.273,3853,8.228,3862,6.984,3863,6.984,3864,7.629,3865,6.984]],["title/classes/SecurityPart.html",[0,0.228,363,4.261]],["body/classes/SecurityPart.html",[0,0.262,2,0.876,3,0.116,4,0.091,5,0.098,7,0.35,8,0.869,11,1.166,18,0.64,21,0.005,23,0.438,29,0.167,37,0.159,40,0.898,55,0.724,58,0.004,59,0.004,65,0.949,112,2.177,121,3.217,122,1.689,127,1.613,128,4.501,131,4.581,132,1.736,134,1.536,170,1.096,219,2.496,270,3.774,286,2.958,292,2.901,293,2.852,363,6.357,364,5.311,3262,5.986,3866,5.923,3867,7.629,3868,7.629,3869,7.629,3870,7.629,3871,7.629,3872,5.923,3873,5.923,3874,5.923,3875,5.923,3876,5.923,3877,5.923,3878,5.923]],["title/classes/SecurityPartDTO.html",[0,0.228,494,3.617]],["body/classes/SecurityPartDTO.html",[0,0.34,2,0.878,3,0.116,4,0.092,5,0.098,7,0.351,8,0.87,11,1.189,18,0.64,21,0.005,23,0.429,29,0.167,32,1.126,37,0.123,40,0.885,55,0.724,58,0.004,59,0.004,127,1.614,219,2.362,270,3.221,272,2.014,275,2.772,276,4.268,277,3.141,278,1.58,485,5.403,490,4.916,494,5.403,509,3.8,515,5.004,516,4.19,3262,5.99,3867,7.635,3868,7.635,3869,7.635,3870,7.635,3871,7.635,3879,5.933,3880,8.514,3881,7.679,3882,5.933,3883,5.933,3884,5.933,3885,5.933,3886,5.933,3887,5.933,3888,5.933]],["title/interfaces/ServiceSchemaInterface.html",[38,1.407,3889,4.611]],["body/interfaces/ServiceSchemaInterface.html",[3,0.077,4,0.061,5,0.065,7,0.233,11,1.056,18,0.597,20,2.23,21,0.005,22,1.468,23,0.422,25,4.376,29,0.149,37,0.082,38,1.08,41,1.094,42,2.154,43,1.336,58,0.003,59,0.003,60,1.625,77,1.3,94,2.029,119,2.192,121,1.655,122,1.956,124,3.5,133,1.655,134,1.023,162,3.86,185,3.057,186,2.521,187,2.788,188,4.035,189,4.035,190,4.035,191,3.813,193,3.967,200,2.612,207,3.512,208,5.638,209,3.712,211,5.01,212,4.708,213,3.512,214,4.585,216,1.173,217,3.512,218,5.859,219,2.866,221,2.393,222,4.382,223,5.638,225,2.393,229,2.393,233,2.135,234,4.585,263,2.344,273,2.661,558,3.537,559,2.32,3606,4.269,3889,5.192,3890,3.945,3891,3.945,3892,3.945,3893,3.945,3894,3.945,3895,3.945,3896,3.945,3897,3.945,3898,3.945,3899,3.945,3900,5.79,3901,3.945,3902,3.945]],["title/classes/Settings.html",[0,0.228,240,3.617]],["body/classes/Settings.html",[0,0.303,2,1.01,3,0.134,4,0.105,5,0.112,7,0.404,8,0.95,18,0.562,20,2.066,21,0.005,22,1.495,23,0.419,29,0.182,37,0.188,40,0.82,58,0.004,59,0.004,65,1.094,112,1.747,119,4.663,121,2.863,127,1.417,128,3.954,131,4.281,132,2.001,170,1.263,205,3.583,219,1.894,240,5.903,259,5.657,272,2.241,286,3.115,289,2.842,292,3.173,293,3.287,360,5.66,372,4.141,376,4.279,3903,6.121,3904,6.826,3905,6.826,3906,6.121,3907,6.826]],["title/controllers/SettingsController.html",[385,1.407,3908,4.261]],["body/controllers/SettingsController.html",[0,0.338,3,0.15,4,0.118,5,0.126,21,0.005,29,0.207,32,1.449,36,1.256,37,0.158,55,0.532,58,0.004,59,0.004,74,1.805,240,5.369,385,2.088,387,2.401,389,3.201,427,3.453,456,3.523,457,3.755,3422,5.936,3908,7.434,3909,7.631,3910,6.615,3911,6.843,3912,7.631]],["title/modules/SettingsModule.html",[166,1.618,735,3.469]],["body/modules/SettingsModule.html",[0,0.25,3,0.111,4,0.087,5,0.093,18,0.378,21,0.005,22,0.928,29,0.219,30,2.408,36,0.928,37,0.116,55,0.393,56,1.127,58,0.004,59,0.004,77,1.266,94,1.282,132,1.652,166,2.778,240,5.226,241,4.672,259,6.155,387,2.337,454,3.576,531,2.454,532,2.551,533,2.657,534,2.657,535,2.657,536,3.835,537,3.915,541,3.501,542,2.408,543,2.603,545,3.316,549,3.738,550,3.534,552,3.221,735,6.913,764,6.558,765,4.157,1022,2.774,1337,7.105,1338,4.385,1343,7.446,1344,4.385,1791,6.461,1793,6.461,1794,4.672,1800,4.672,1801,4.672,1802,4.672,3408,6.883,3759,6.883,3908,6.883,3910,6.947,3911,5.055,3913,5.055,3914,5.055,3915,5.055,3916,5.638,3917,6.883,3918,5.638,3919,5.638,3920,5.638,3921,5.638,3922,5.638,3923,5.638]],["title/injectables/SettingsService.html",[136,1.333,3910,3.791]],["body/injectables/SettingsService.html",[0,0.346,3,0.153,4,0.12,5,0.129,15,2.781,18,0.523,21,0.005,29,0.17,36,1.285,37,0.161,55,0.634,58,0.004,59,0.004,136,2.359,137,3.277,3910,6.706,3924,7.812,3925,7.812]],["title/injectables/ShutdownObserver.html",[136,1.333,736,4]],["body/injectables/ShutdownObserver.html",[0,0.29,3,0.129,4,0.101,5,0.108,7,0.388,8,0.927,11,0.776,18,0.597,20,1.491,21,0.005,22,1.079,23,0.353,29,0.178,36,1.079,37,0.135,53,2.033,55,0.683,58,0.004,59,0.004,67,3.643,72,2.651,77,1.837,78,2.029,94,1.861,136,2.122,137,2.749,200,2.179,246,1.723,286,2.155,341,2.653,599,5.756,736,6.364,1000,2.563,1611,5.432,1903,4.675,2983,5.432,3926,6.555,3927,8.919,3928,8.182,3929,9.803,3930,8.182,3931,9.613,3932,6.555,3933,6.555,3934,6.555,3935,7.337,3936,6.555,3937,6.555,3938,5.878,3939,6.555,3940,6.555,3941,6.555]],["title/classes/SmsSettingsDto.html",[0,0.228,3942,4.261]],["body/classes/SmsSettingsDto.html",[0,0.326,2,0.824,3,0.109,4,0.086,5,0.092,7,0.329,8,0.834,18,0.612,21,0.005,23,0.441,29,0.16,32,1.057,37,0.115,40,0.899,55,0.713,58,0.004,59,0.004,127,1.544,265,5.221,267,3.081,275,2.677,277,3.087,278,1.483,279,3.698,286,1.831,310,3.833,585,5.175,1000,2.177,1372,5.168,1373,4.618,1374,4.469,1430,6.181,1436,4.97,1696,7.573,1697,6.842,1698,6.842,1749,6.835,3402,6.606,3942,6.105,3943,5.568,3944,7.367,3945,7.367,3946,6.606,3947,5.568,3948,7.367,3949,7.879,3950,8.786,3951,5.568,3952,7.367,3953,5.568,3954,7.367,3955,6.606,3956,7.879,3957,7.367,3958,6.606,3959,6.606,3960,5.568,3961,7.367,3962,5.568]],["title/controllers/SmsadmController.html",[385,1.407,3917,4.261]],["body/controllers/SmsadmController.html",[0,0.26,3,0.115,4,0.091,5,0.097,7,0.347,10,2.021,11,0.903,18,0.511,20,1.736,21,0.005,22,1.256,23,0.329,29,0.202,32,1.115,36,0.967,37,0.121,55,0.676,56,1.525,58,0.004,59,0.004,77,1.713,78,2.167,94,1.736,127,1.289,152,1.99,170,1.412,200,2.39,216,2.667,219,2.117,246,2.006,256,4.955,264,3.088,385,1.608,387,1.849,389,2.464,394,3.793,395,3.62,399,4.144,422,2.42,425,2.829,427,2.659,456,2.713,470,3.755,471,3.755,638,4.366,640,4.842,686,3.841,1191,4.414,1343,6.249,1344,4.57,1373,3.683,1381,5.368,1400,6.592,1435,3.841,1438,4.783,1535,5.626,3411,5.268,3412,5.268,3413,5.626,3416,5.268,3417,5.268,3418,5.268,3422,4.57,3423,5.268,3424,5.268,3425,5.268,3426,5.268,3917,6.323,3942,7.434,3963,5.875,3964,5.875,3965,5.875,3966,5.875,3967,5.875,3968,5.875,3969,5.875,3970,5.875,3971,5.875]],["title/classes/StatePart.html",[0,0.228,366,4.261]],["body/classes/StatePart.html",[0,0.264,2,0.882,3,0.117,4,0.092,5,0.098,7,0.352,8,0.872,11,1.167,18,0.626,21,0.005,23,0.436,29,0.185,37,0.159,40,0.781,41,2.503,53,1.849,55,0.719,58,0.004,59,0.004,65,0.955,112,1.526,121,3.231,122,1.7,127,1.578,128,4.252,131,4.509,132,1.748,134,1.546,170,1.103,219,2.137,272,1.822,286,2.966,289,2.02,292,2.913,293,2.87,366,6.384,367,5.346,624,5.177,1349,3.871,1629,4.823,1924,3.418,1970,5.346,3263,6.004,3972,5.962,3973,7.653,3974,7.653,3975,7.653,3976,8.534,3977,5.962,3978,5.962,3979,5.962,3980,5.962,3981,5.962,3982,5.346,3983,5.962,3984,5.962,3985,5.962]],["title/classes/StatePartDTO.html",[0,0.228,497,3.791]],["body/classes/StatePartDTO.html",[0,0.357,2,0.947,3,0.126,4,0.099,5,0.105,7,0.379,8,0.913,11,1.184,18,0.639,21,0.005,23,0.411,29,0.175,32,1.216,37,0.132,40,0.698,41,2.237,55,0.724,58,0.004,59,0.004,127,1.613,275,2.779,277,2.651,278,1.706,485,4.506,497,5.945,505,4.256,509,3.797,624,5.353,1629,4.594,2197,4.607,3263,6.209,3472,7.914,3477,8.306,3973,7.914,3974,7.914,3975,7.914,3986,6.404,3987,6.404,3988,6.404,3989,6.404,3990,6.404,3991,6.404,3992,6.404]],["title/classes/SyncIdentitiesDto.html",[0,0.228,1206,4.261]],["body/classes/SyncIdentitiesDto.html",[0,0.392,2,1.101,3,0.146,4,0.115,5,0.123,7,0.44,8,1.001,18,0.498,21,0.005,23,0.381,29,0.192,32,1.413,37,0.154,40,0.765,55,0.657,58,0.004,59,0.004,127,1.257,275,2.52,278,1.983,288,5.2,515,4.913,999,5.388,1206,7.326,1817,6.674,1818,6.674,1819,6.674,3993,8.84]],["title/classes/Tasks.html",[0,0.228,3994,3.791]],["body/classes/Tasks.html",[0,0.314,2,1.049,3,0.139,4,0.109,5,0.117,7,0.419,8,0.973,11,1.016,18,0.475,21,0.005,23,0.398,29,0.201,37,0.191,55,0.643,58,0.004,59,0.004,65,1.137,112,1.815,119,4.773,121,3.602,124,3.552,127,1.198,128,3.343,131,4.048,132,2.079,133,2.975,134,1.84,170,1.312,219,1.968,292,3.248,293,3.415,372,4.303,376,4.446,1192,5.79,3994,6.811,3995,6.361,3996,7.093,3997,6.361,3998,6.361,3999,7.093]],["title/controllers/TasksController.html",[385,1.407,4000,4.261]],["body/controllers/TasksController.html",[0,0.336,1,3.966,3,0.149,4,0.117,5,0.125,21,0.005,29,0.206,36,1.248,37,0.157,58,0.004,59,0.004,65,1.432,74,1.793,243,2.223,385,2.075,387,2.386,389,3.181,430,3.574,456,3.501,457,3.732,3994,5.591,4000,7.407,4001,7.583,4002,6.59,4003,6.8,4004,7.583]],["title/modules/TasksModule.html",[166,1.618,1291,3.617]],["body/modules/TasksModule.html",[0,0.303,3,0.134,4,0.105,5,0.113,21,0.005,22,1.125,29,0.211,36,1.125,37,0.141,58,0.004,59,0.004,132,2.005,166,2.86,387,2.643,531,2.977,532,3.095,533,3.224,534,3.224,535,3.224,536,4.197,537,4.285,541,3.959,542,2.922,543,3.158,545,4.023,549,3.442,550,4.287,552,3.908,1291,7.06,3994,5.043,3998,7.532,4000,7.534,4002,7.647,4003,6.133,4005,6.133,4006,6.133,4007,6.133,4008,6.839,4009,6.133,4010,6.839,4011,6.839]],["title/injectables/TasksService.html",[136,1.333,4002,3.791]],["body/injectables/TasksService.html",[0,0.16,3,0.071,4,0.056,5,0.059,7,0.213,8,0.614,9,2.643,10,2.239,11,1.135,12,2.635,15,1.044,18,0.647,20,2.258,21,0.005,22,1.513,23,0.434,25,4.387,29,0.169,36,0.594,37,0.075,49,2.862,55,0.694,58,0.003,59,0.003,65,0.869,66,3.485,72,1.612,74,1.282,75,2.794,76,2.794,77,1.217,78,2.249,87,3.883,88,1.955,89,1.86,90,1.955,91,1.955,92,1.955,94,2.06,122,1.856,124,3.133,132,1.058,134,0.936,136,1.406,137,1.515,162,3.735,179,5.963,181,4.537,185,2.862,186,2.36,187,2.611,188,3.189,189,3.189,190,3.189,191,3.014,192,3.399,193,3.84,194,3.289,195,2.345,196,3.582,198,2.263,200,2.413,207,2.19,208,5.328,209,3.62,210,2.263,211,4.904,212,4.2,213,2.19,214,3.289,215,2.436,216,1.073,217,2.19,218,5.685,219,2.766,220,2.263,221,2.19,222,4.106,223,5.328,224,2.263,225,2.19,226,2.263,227,2.263,228,2.263,229,2.19,230,2.263,231,2.263,232,2.263,233,1.955,234,4.391,235,2.345,236,2.263,237,2.263,238,2.19,239,2.345,243,1.058,3994,2.662,4002,3.998,4009,3.238,4012,3.611,4013,3.611,4014,3.611]],["title/interfaces/TicketForm.html",[38,1.407,4015,4]],["body/interfaces/TicketForm.html",[3,0.119,4,0.094,5,0.1,7,0.36,8,0.884,21,0.005,23,0.442,29,0.17,38,2.358,40,0.912,41,2.165,42,2.903,43,2.06,58,0.004,59,0.004,60,2.505,196,2.808,267,2.819,273,4.103,294,4.44,295,2.867,296,2.867,357,2.951,1000,2.378,2093,5.37,2094,5.902,2095,5.697,2096,4.683,2106,5.528,2108,3.812,2176,4.279,2177,4.279,2178,4.279,2179,4.279,2180,4.279,2181,4.279,2182,4.103,2183,4.891,2184,4.279,2198,6.93,2221,3.812,2235,6.07,2236,4.731,4015,6.07,4016,5.04,4017,5.753,4018,6.352]],["title/interfaces/TicketFormField.html",[38,1.407,4017,3.791]],["body/interfaces/TicketFormField.html",[3,0.112,4,0.088,5,0.094,7,0.337,8,0.848,21,0.005,23,0.45,29,0.163,38,2.287,40,0.905,41,2.623,42,2.786,43,1.934,58,0.004,59,0.004,60,2.352,196,4.096,267,1.771,273,3.851,294,4.365,295,2.691,296,2.691,357,3.773,1000,3.469,2093,4.279,2094,3.707,2095,3.578,2096,2.941,2106,4.916,2108,3.578,2176,6.242,2177,6.242,2178,6.242,2179,6.242,2180,6.242,2181,6.242,2182,5.985,2183,5.775,2184,6.242,2198,6.792,2221,3.578,2235,5.825,2236,4.441,4015,4.441,4016,4.731,4017,6.162,4018,6.162]],["title/interfaces/TicketFormSection.html",[38,1.407,4018,3.791]],["body/interfaces/TicketFormSection.html",[3,0.121,4,0.095,5,0.102,7,0.366,8,0.893,11,0.934,21,0.005,23,0.443,29,0.171,38,2.377,40,0.904,41,2.188,42,2.935,43,2.095,58,0.004,59,0.004,60,2.548,196,2.856,267,1.919,273,4.173,294,4.46,295,2.916,296,2.916,357,3.459,1000,2.419,2093,5.398,2094,4.017,2095,3.877,2096,3.187,2106,5.557,2108,3.877,2176,4.352,2177,4.352,2178,4.352,2179,4.352,2180,4.352,2181,4.352,2182,4.173,2183,5.922,2184,4.352,2198,6.966,2221,5.733,2235,6.136,2236,4.812,4015,4.812,4016,5.126,4017,5.816,4018,6.744]],["title/interfaces/TokenData.html",[38,1.407,1352,4.261]],["body/interfaces/TokenData.html",[0,0.072,3,0.032,4,0.025,5,0.027,7,0.096,8,0.32,9,1.333,15,0.469,18,0.109,21,0.005,23,0.162,24,1.57,29,0.195,36,0.267,37,0.034,38,0.773,39,0.496,40,0.655,41,0.784,53,2.654,55,0.539,56,1.692,58,0.001,59,0.001,60,0.669,65,0.26,66,1.36,70,0.857,72,1.658,73,3.026,74,1.319,78,1.793,83,1.713,100,1.36,101,1.054,102,0.955,103,0.927,106,3.978,112,2.115,122,0.463,136,0.733,139,2.447,162,0.604,170,1.791,200,1.965,219,1.762,243,0.476,244,2.765,246,2.511,249,2.744,250,4.548,253,2.53,264,0.657,268,2.683,272,1.319,306,0.836,310,2.906,329,1.781,341,2.696,352,1.36,354,2.34,394,1.754,422,0.669,454,1.805,462,2.094,476,2.845,542,1.916,603,4.598,633,4.094,649,0.879,677,3.429,678,1.142,716,1.905,761,1.262,764,2.435,765,1.197,778,2.275,787,3.026,792,1.054,793,1.197,811,2.197,851,1.142,853,0.955,859,2.197,862,4.72,863,4.297,882,1.142,888,3.644,895,2.994,901,3.855,902,2.114,903,0.799,915,2.638,928,2.765,1015,2.083,1050,2.341,1080,2.083,1083,1.345,1145,1.834,1151,1.905,1152,1.262,1155,2.367,1159,1.095,1171,3.605,1191,1.39,1192,1.017,1193,1.36,1195,1.262,1218,1.197,1220,0.955,1251,2.917,1253,2.917,1255,2.917,1257,2.638,1300,2.083,1303,2.638,1304,1.345,1311,1.345,1312,1.455,1313,1.142,1314,1.455,1315,1.455,1316,1.455,1317,1.455,1318,1.455,1319,1.455,1320,1.455,1321,1.345,1322,2.197,1323,2.083,1324,1.345,1325,1.987,1326,1.455,1327,1.197,1328,3.377,1329,1.455,1330,2.533,1331,2.083,1332,3.108,1333,1.345,1334,2.083,1335,1.345,1336,1.345,1337,2.638,1338,1.262,1339,0.927,1340,1.345,1341,2.083,1342,1.345,1343,2.765,1344,1.262,1345,2.083,1346,1.345,1347,1.834,1348,1.095,1349,1.054,1350,1.017,1351,1.054,1352,4.968,1353,7.193,1354,5.376,1355,4.212,1356,1.197,1357,1.455,1358,1.345,1359,1.455,1360,1.345,1361,1.455,1362,1.455,1363,1.455,1364,1.455,1365,1.262,1366,3.363,1367,4.528,1368,5.438,1369,5.102,1370,2.341,1371,1.713,1372,2.206,1373,2.351,1374,4.69,1375,1.345,1376,1.905,1377,1.455,1378,4.637,1379,1.345,1380,1.455,1381,4.686,1382,5.002,1383,4.622,1384,5.972,1385,2.083,1386,3.155,1387,2.533,1388,2.533,1389,5.181,1390,5.696,1391,3.108,1392,3.363,1393,5.321,1394,6.426,1395,4.558,1396,4.212,1397,4.968,1398,1.345,1399,1.545,1400,1.262,1401,3.489,1402,1.455,1403,1.455,1404,1.345,1405,1.455,1406,4.022,1407,2.533,1408,5.376,1409,2.533,1410,3.363,1411,3.363,1412,1.455,1413,1.455,1414,1.455,1415,1.455,1416,2.533,1417,1.455,1418,3.108,1419,2.533,1420,2.533,1421,2.341,1422,1.455,1423,1.455,1424,2.533,1425,2.533,1426,1.455,1427,1.455,1428,2.533,1429,2.533,1430,2.638,1431,1.455,1432,2.533,1433,2.533,1434,2.341,1435,3.197,1436,2.53,1437,2.765,1438,3.982,1439,4.558,1440,3.747,1441,1.345,1442,1.197,1443,1.455,1444,1.455,1445,3.363,1446,1.455,1447,1.455,1448,1.455,1449,5.574,1450,2.917,1451,2.341,1452,4.022,1453,2.533,1454,1.455,1455,2.638,1456,3.026,1457,1.455,1458,1.455,1459,3.763,1460,1.455,1461,1.054,1462,2.341,1463,1.455,1464,2.533,1465,2.533,1466,1.455,1467,1.455,1468,1.834,1469,0.879,1470,1.455,1471,1.455,1472,1.345,1473,1.455,1474,1.455,1475,1.262,1476,2.533,1477,1.345,1478,4.022,1479,1.455,1480,1.455,1481,1.455,1482,2.533,1483,3.363,1484,1.455,1485,1.455,1486,1.142,1487,1.262,1488,1.455,1489,2.533,1490,2.533,1491,2.341,1492,1.345,1493,1.345,1494,1.455,1495,2.533,1496,2.341,1497,1.345,1498,1.197,1499,3.363,1500,1.455,1501,1.455,1502,1.455,1503,3.363,1504,3.108,1505,2.53,1506,3.363,1507,2.638,1508,1.455,1509,1.455,1510,3.363,1511,3.363,1512,1.345,1513,1.455,1514,1.455,1515,1.017,1516,1.455,1517,1.455,1518,1.455,1519,1.455,1520,1.455,1521,2.533,1522,1.197,1523,1.455,1524,1.455,1525,2.533,1526,1.455,1527,1.455,1528,1.455,1529,3.363,1530,1.455,1531,1.455,1532,1.345,1533,4.558,1534,1.455,1535,1.197,1536,1.491,1537,1.455,1538,1.455,1539,1.455,1540,1.455,1541,1.455,1542,1.455,1543,1.262,1544,2.533,1545,1.455,1546,1.455,1547,2.533,1548,2.533,1549,3.363,1550,2.533,1551,1.455,1552,2.533,1553,2.533,1554,2.533,1555,2.533,1556,1.455,1557,1.455,1558,2.533,1559,2.533,1560,2.533,1561,2.533,1562,2.533,1563,2.533,1564,2.533,1565,2.533,1566,2.533,1567,2.533,1568,1.455,1569,1.345,1570,1.455,1571,1.455,1572,1.455,1573,1.455,1574,1.455,1575,1.455,1576,2.533,1577,1.455,1578,1.455,1579,1.455,1580,1.455,1581,1.455,1582,3.363,1583,2.533,1584,2.533,1585,2.533,1586,1.455,1587,2.533,1588,1.142,1589,1.455,1590,1.262,1591,2.533,1592,2.533,1593,2.533,1594,2.533,1595,1.345,1596,1.455,1597,1.455,1598,2.533,1599,2.197,1600,1.142,1601,1.054,1602,1.455,1603,2.533,1604,1.455,1605,1.455,1606,1.455,1607,1.095,1608,1.455,1609,1.455,1610,2.197,1611,1.345,1612,1.455,1613,1.455,1614,2.533,1615,1.455,1616,1.455,1617,1.455,1618,1.262,1619,1.455,1620,1.455,1621,1.455,1622,1.455,1623,1.455,1624,1.455,1625,1.455,1626,1.455,1627,1.455,1628,1.455,1629,2.629,1630,2.533,1631,1.262,1632,1.455,1633,1.345,1634,1.455,1635,1.455,1636,1.345,1637,1.455,1638,1.455,1639,1.455,1640,0.955,1641,1.455,1642,1.455]],["title/injectables/TransformersFilestorageService.html",[136,1.333,2020,3.339]],["body/injectables/TransformersFilestorageService.html",[0,0.159,3,0.07,4,0.055,5,0.059,7,0.212,8,0.612,9,2.417,10,2.233,11,1.071,12,2.627,15,1.877,18,0.623,20,1.85,21,0.005,22,1.338,23,0.413,25,1.594,29,0.157,36,0.591,37,0.074,40,0.83,42,2.88,43,2.622,44,3.079,53,1.114,55,0.63,56,1.626,58,0.003,59,0.003,65,0.866,66,4.062,72,2.301,74,1.831,75,2.783,76,2.783,77,1.213,78,2.224,87,2.922,88,1.945,89,1.851,90,1.945,91,1.945,92,1.945,94,1.85,136,1.401,137,1.507,152,1.217,170,1.201,200,2.48,205,1.359,216,2.907,243,1.053,246,1.706,286,1.181,332,3.649,394,3.776,399,4.153,454,4.708,787,5.486,851,2.528,1000,1.405,1231,2.649,1823,4.787,1962,5.28,1968,6.384,2020,3.508,2045,8.148,2983,2.977,3938,3.222,4019,8.88,4020,3.593,4021,6.492,4022,5.402,4023,6.492,4024,6.492,4025,6.492,4026,6.492,4027,3.593,4028,5.402,4029,9.78,4030,3.593,4031,3.593,4032,6.492,4033,3.593,4034,3.593,4035,3.593,4036,3.593,4037,3.593,4038,3.593,4039,3.593,4040,3.593,4041,3.593,4042,6.492,4043,5.402,4044,6.492,4045,5.402,4046,6.492,4047,5.402,4048,6.492,4049,5.402,4050,3.593,4051,3.593,4052,5.402,4053,3.593,4054,3.593,4055,6.492,4056,5.402,4057,5.402,4058,3.593,4059,9.047,4060,6.942,4061,3.593,4062,7.741,4063,7.741,4064,7.22,4065,3.593,4066,7.22,4067,3.593,4068,3.593,4069,3.593,4070,3.593,4071,3.593,4072,3.593,4073,3.593,4074,3.593,4075,3.593,4076,3.593,4077,3.593,4078,3.593]],["title/injectables/UniquenessMailValidator.html",[136,1.333,4079,4.611]],["body/injectables/UniquenessMailValidator.html",[0,0.32,3,0.106,4,0.083,5,0.089,7,0.319,11,0.962,15,1.559,18,0.544,20,1.848,21,0.005,22,1.488,23,0.374,25,3.201,29,0.196,36,0.888,37,0.168,39,1.649,40,0.823,55,0.63,56,1.808,58,0.003,59,0.003,67,2.998,72,1.603,77,1.619,78,1.973,94,1.641,112,1.381,116,5.037,132,1.581,134,1.399,136,1.871,137,2.263,170,1.673,185,4.29,200,1.921,205,2.04,209,2.641,246,1.418,272,1.706,278,1.921,308,5.482,329,1.722,476,2.305,853,3.173,1000,2.82,1040,4.196,1041,4.196,1109,5.277,1129,4.243,1132,3.795,1456,5.482,1879,4.47,2827,5.482,3053,3.977,4079,7.78,4080,7.78,4081,4.837,4082,7.213,4083,5.394,4084,5.394,4085,7.213,4086,9.654,4087,5.394,4088,5.394,4089,7.287,4090,5.394,4091,8.676,4092,7.213,4093,7.213,4094,7.213,4095,5.394,4096,5.394,4097,5.394,4098,5.394,4099,8.126,4100,5.394,4101,8.126,4102,5.394,4103,5.394,4104,5.394,4105,5.394,4106,5.394,4107,6.468,4108,5.394,4109,5.394,4110,8.126,4111,5.394,4112,5.394,4113,5.394]],["title/classes/ValidationConfigException.html",[0,0.228,2619,3.617]],["body/classes/ValidationConfigException.html",[0,0.376,2,0.869,3,0.115,4,0.091,5,0.097,7,0.347,8,0.864,11,0.695,15,1.698,18,0.601,20,1.336,21,0.005,22,0.967,23,0.329,29,0.166,36,0.967,37,0.175,56,1.525,58,0.004,59,0.004,65,1.438,70,3.101,72,2.519,74,2.004,77,1.713,87,3.43,94,1.736,108,3.564,170,1.66,284,4.909,285,5.64,292,2.222,329,2.436,462,3.491,588,3.963,999,4.36,1282,4.332,1313,5.368,1440,4.332,1842,4.588,2619,5.368,2844,7.153,2910,4.332,3137,6.311,4114,4.869,4115,7.434,4116,7.434,4117,7.434,4118,7.65,4119,5.875,4120,5.268,4121,5.268,4122,5.268,4123,4.869,4124,4.869,4125,6.323,4126,6.323,4127,6.323,4128,4.869,4129,4.869,4130,7.023,4131,4.869,4132,4.869,4133,6.323,4134,6.323]],["title/classes/ValidationException.html",[0,0.228,2844,3.791]],["body/classes/ValidationException.html",[0,0.377,2,0.878,3,0.116,4,0.092,5,0.098,7,0.351,8,0.87,11,0.702,15,1.715,18,0.603,20,1.349,21,0.005,22,0.976,23,0.331,29,0.167,36,0.976,37,0.176,56,1.535,58,0.004,59,0.004,65,1.443,70,3.132,72,2.531,74,2.014,77,1.724,94,1.747,108,3.599,170,1.666,284,4.922,285,5.657,292,2.244,329,2.451,462,3.508,588,4.002,999,4.387,1282,4.374,1313,5.99,1440,4.374,1842,4.609,2619,4.174,2844,6.639,2910,4.374,3137,6.335,4114,4.916,4115,7.462,4116,7.462,4117,7.462,4118,7.666,4123,4.916,4124,4.916,4125,6.364,4126,6.364,4127,6.364,4128,4.916,4129,4.916,4130,7.056,4131,4.916,4132,4.916,4133,6.364,4134,6.364,4135,7.679,4136,5.933,4137,5.933]],["title/interfaces/ValidationRecursive.html",[38,1.407,1824,4.261]],["body/interfaces/ValidationRecursive.html",[0,0.248,3,0.11,4,0.086,5,0.092,9,1.663,10,1.924,18,0.375,21,0.005,29,0.18,30,2.39,36,0.92,37,0.116,38,1.531,39,2.259,40,0.762,53,1.735,55,0.576,56,1.759,58,0.004,59,0.004,60,2.304,61,3.936,65,0.897,74,1.323,78,1.272,123,3.719,136,1.916,139,4.238,152,1.895,170,1.628,187,2.693,200,1.49,243,1.64,246,1.47,272,1.748,284,5.014,329,2.359,341,2.991,389,3.099,422,2.304,462,2.304,476,3.157,633,4.222,757,5.748,776,3.936,792,3.632,809,4.798,901,2.264,1000,2.187,1029,4.352,1393,3.936,1515,3.507,1820,6.626,1821,4.636,1822,6.626,1823,4.125,1824,7.294,1827,4.636,1828,6.124,1830,5.016,1831,6.437,1833,5.748,1834,5.016,1835,5.016,1836,5.016,1837,5.016,1838,5.016,1839,5.016,1840,5.448,1841,5.016,1842,3.028,1843,5.016,1844,4.352,1845,5.016,1846,5.016,1847,4.636,1848,5.016,1849,4.636,1850,5.016,1851,5.016,1852,5.016,1853,5.016,1854,5.016,1855,5.016,1856,6.626,1857,5.016,1858,5.016,1859,5.016,1860,5.016,1861,5.016,1862,5.016,1863,6.626,1864,5.016,1865,5.016,1866,5.016,4138,5.594]],["title/classes/ValidationSchemaException.html",[0,0.228,2910,3.791]],["body/classes/ValidationSchemaException.html",[0,0.376,2,0.869,3,0.115,4,0.091,5,0.097,7,0.347,8,0.864,11,0.695,15,1.698,18,0.601,20,1.336,21,0.005,22,0.967,23,0.329,29,0.166,36,0.967,37,0.175,56,1.525,58,0.004,59,0.004,65,1.438,70,3.101,72,2.519,74,2.004,77,1.713,87,3.43,94,1.736,108,3.564,170,1.66,284,4.909,285,5.64,292,2.222,329,2.436,462,3.491,588,3.963,999,4.36,1282,4.332,1313,5.368,1440,4.332,1842,4.588,2619,4.133,2844,7.153,2910,5.626,3137,6.311,4114,4.869,4115,7.434,4116,7.434,4117,7.434,4118,7.65,4120,5.268,4121,5.268,4122,5.268,4123,4.869,4124,4.869,4125,6.323,4126,6.323,4127,6.323,4128,4.869,4129,4.869,4130,7.023,4131,4.869,4132,4.869,4133,6.323,4134,6.323,4139,5.875]],["title/classes/VerifyTokenDto.html",[0,0.228,4140,4.611]],["body/classes/VerifyTokenDto.html",[0,0.388,2,1.083,3,0.144,4,0.113,5,0.121,7,0.433,8,0.991,18,0.49,21,0.005,23,0.316,29,0.19,32,1.39,37,0.151,40,0.758,55,0.652,58,0.004,59,0.004,127,1.237,267,2.715,275,2.496,277,2.878,278,1.951,279,2.964,603,5.11,861,6.566,864,5.399,3856,7.255,3864,7.85,4140,7.85,4141,8.754,4142,7.323,4143,7.323,4144,7.323]],["title/interfaces/WorkerResultInfoInterface.html",[38,1.407,4145,4.261]],["body/interfaces/WorkerResultInfoInterface.html",[3,0.146,4,0.115,5,0.123,18,0.498,21,0.005,29,0.162,37,0.183,38,2.419,39,2.276,40,0.862,41,2.452,58,0.004,59,0.004,60,3.066,61,5.236,209,2.725,216,2.212,264,3.012,605,4.666,1143,5.79,1144,5.488,1145,4.833,3164,5.021,4145,7.814,4146,7.927,4147,7.927,4148,7.443,4149,6.674,4150,6.168,4151,6.674]],["title/interfaces/WorkerResultInterface.html",[38,1.407,4150,4.261]],["body/interfaces/WorkerResultInterface.html",[3,0.136,4,0.107,5,0.114,7,0.409,8,0.958,11,1.127,21,0.005,23,0.433,29,0.15,37,0.175,38,2.315,39,2.115,40,0.879,41,2.64,58,0.004,59,0.004,60,2.85,209,3.485,216,2.829,264,3.852,357,3.199,605,3.651,1143,5.381,1144,5.1,1145,4.492,3164,6.421,4145,7.888,4146,6.203,4147,6.203,4149,6.203,4150,7.009,4151,8.535]],["title/classes/additionalFieldsPartDto.html",[0,0.228,2342,3.469]],["body/classes/additionalFieldsPartDto.html",[0,0.357,2,0.946,3,0.125,4,0.099,5,0.105,7,0.378,8,0.912,11,0.953,18,0.591,21,0.005,22,1.523,23,0.435,29,0.175,32,1.214,37,0.132,39,2.696,40,0.856,55,0.703,58,0.004,59,0.004,127,1.49,205,3.501,219,1.773,275,2.639,278,1.703,282,5.289,283,5.038,284,4.916,286,2.648,288,4.738,357,3.046,509,3.204,1000,3.149,1945,7.907,2342,5.434,2346,5.667,4152,6.393,4153,6.393,4154,6.393,4155,6.393,4156,6.393]],["title/dependencies.html",[532,2.794,844,3.033]],["body/dependencies.html",[0,0.33,21,0.005,24,3.143,30,2.416,32,1.074,36,0.931,58,0.004,59,0.004,97,4.17,100,4.005,101,3.672,102,3.326,103,3.231,123,2.846,132,1.658,133,2.372,134,1.467,139,3.583,152,1.916,153,4.686,154,4.686,278,1.506,292,2.139,310,2.372,321,4.665,322,3.545,375,3.672,428,4.503,429,3.545,510,2.559,532,2.559,562,4.686,642,4.17,643,4.17,685,3.815,739,4.686,761,4.399,767,5.488,794,5.071,844,3.979,848,3.815,853,3.326,885,3.815,910,3.815,963,4.17,1212,5.071,1677,4.686,1678,6.134,1683,4.686,1686,3.979,1840,4.17,2016,4.399,2615,3.979,2618,6.876,2904,5.071,2906,5.071,3504,5.071,3606,4.17,3801,5.071,3847,5.071,3946,5.071,4157,7.443,4158,5.655,4159,8.319,4160,7.443,4161,5.655,4162,5.655,4163,5.655,4164,5.655,4165,5.655,4166,5.655,4167,5.655,4168,5.655,4169,5.655,4170,7.443,4171,5.655,4172,5.655,4173,5.655,4174,5.655,4175,5.655,4176,5.655,4177,5.655,4178,5.655,4179,5.655,4180,5.655,4181,5.655,4182,5.655,4183,5.655,4184,5.655,4185,5.655,4186,5.655,4187,5.655,4188,5.655,4189,5.655,4190,5.655,4191,5.655,4192,5.655,4193,5.655,4194,5.655,4195,5.655,4196,5.655,4197,8.84,4198,5.655,4199,5.655,4200,5.655,4201,5.655,4202,5.655,4203,5.655,4204,5.655,4205,5.655,4206,5.655,4207,5.655,4208,5.655,4209,5.655,4210,5.655,4211,6.674,4212,5.655,4213,5.655,4214,5.655,4215,5.655,4216,5.655,4217,5.655,4218,5.655,4219,5.655,4220,5.655,4221,5.655,4222,5.655]],["title/miscellaneous/enumerations.html",[4223,3.353,4224,5.537]],["body/miscellaneous/enumerations.html",[5,0.092,7,0.329,21,0.005,40,0.482,41,1.545,58,0.004,59,0.004,253,3.757,257,3.876,339,3.181,435,5.183,589,3.616,784,4.993,1000,4.124,1142,4.614,1187,4.993,1218,5.432,1279,4.993,1282,4.106,1339,4.209,1347,4.784,1350,4.618,1438,3.49,1468,3.616,1590,6.422,1629,2.625,1759,5.731,1777,5.432,1950,4.784,2106,4.333,2284,4.97,2438,4.614,2442,4.614,2640,4.332,2667,4.332,3049,4.332,3089,4.332,3091,5.731,3095,5.731,3174,5.432,3982,6.606,4223,4.332,4224,4.993,4225,5.568,4226,8.786,4227,5.568,4228,8.786,4229,8.256,4230,5.568,4231,7.367,4232,5.568,4233,5.568,4234,7.367,4235,5.568,4236,5.568,4237,5.568,4238,5.568,4239,5.568,4240,5.568,4241,5.568,4242,5.568,4243,7.367,4244,7.367,4245,7.367,4246,7.367,4247,7.367,4248,7.367,4249,7.367,4250,7.367,4251,7.367,4252,7.367,4253,5.568,4254,5.568,4255,5.568,4256,5.568,4257,5.568,4258,5.568,4259,5.568,4260,5.568,4261,5.568,4262,5.568,4263,5.568,4264,5.568,4265,5.568,4266,7.367,4267,5.568,4268,3.757,4269,4.614,4270,4.993,4271,6.835,4272,5.568,4273,4.993,4274,5.568,4275,5.568,4276,5.568,4277,4.993,4278,5.568,4279,5.568,4280,5.568,4281,5.568,4282,5.568,4283,5.568,4284,5.568,4285,5.568,4286,5.568,4287,5.568,4288,5.568,4289,5.568,4290,5.568,4291,5.568]],["title/index.html",[7,0.255,1881,3.572,4292,3.865]],["body/index.html",[4,0.109,21,0.005,58,0.004,59,0.004,267,2.196,531,3.082,617,3.833,888,4.043,901,3.736,902,4.043,1072,6.325,1171,3.833,1193,4.13,1367,4.768,1371,4.294,1378,4.164,1399,3.952,1435,3.563,1590,5.507,1674,4.981,2305,4.597,2306,6.673,2765,5.204,2829,6.673,2935,5.867,3049,6.673,4293,7.692,4294,7.08,4295,7.109,4296,6.348,4297,5.867,4298,5.867,4299,5.867,4300,5.867,4301,5.867,4302,6.035,4303,6.348,4304,6.348,4305,6.348,4306,6.348,4307,5.22,4308,6.348,4309,7.08,4310,7.08,4311,6.348,4312,8.276,4313,5.22,4314,6.348,4315,6.348,4316,6.348,4317,7.08,4318,6.348,4319,7.08,4320,7.08,4321,7.08]],["title/classes/inetOrgPerson.html",[0,0.228,2263,2.714]],["body/classes/inetOrgPerson.html",[0,0.16,2,0.533,3,0.071,4,0.056,5,0.059,7,0.213,8,0.613,11,1.188,18,0.655,21,0.005,23,0.445,29,0.157,37,0.112,40,0.918,55,0.732,56,1.081,58,0.003,59,0.003,65,0.577,112,1.385,121,2.269,122,1.026,127,1.652,128,4.611,131,4.679,132,1.055,134,0.934,162,3.538,170,0.666,219,2.638,257,2.19,272,2.174,278,0.959,286,3.337,288,4.251,289,3.066,292,2.046,293,1.733,329,1.149,352,3.129,360,2.429,782,2.983,783,3.228,862,3.519,863,3.612,1106,2.654,1884,5.031,2096,3.349,2263,2.856,2276,3.228,2295,3.228,2296,4.852,2297,3.228,2298,3.228,2592,4.53,2827,3.65,3008,3.228,4322,3.6,4323,4.385,4324,5.056,4325,4.385,4326,4.385,4327,5.056,4328,4.385,4329,4.385,4330,4.385,4331,4.385,4332,4.385,4333,4.385,4334,4.385,4335,3.6,4336,3.6,4337,3.6,4338,3.6,4339,3.6,4340,3.6,4341,3.6,4342,3.6,4343,3.6,4344,3.6,4345,3.6,4346,3.6,4347,3.6,4348,3.6,4349,3.6,4350,3.6,4351,3.6,4352,3.6,4353,3.6,4354,3.6,4355,3.6,4356,3.6,4357,3.6,4358,2.8,4359,2.429,4360,3.6]],["title/classes/inetOrgPersonCreateDto.html",[0,0.228,4361,4]],["body/classes/inetOrgPersonCreateDto.html",[0,0.338,2,0.515,3,0.068,4,0.054,5,0.057,7,0.206,8,0.597,11,1.194,18,0.655,20,0.791,21,0.005,22,0.572,23,0.426,29,0.138,32,0.661,37,0.132,40,0.893,55,0.731,56,1.054,58,0.003,59,0.003,65,0.845,77,1.184,94,0.791,112,2.418,127,1.644,162,3.573,272,1.247,275,2.817,277,3.234,278,0.927,289,3.2,352,3.42,454,3.065,476,1.486,504,1.574,507,3.557,509,3.947,510,1.574,515,3.538,516,2.595,605,4.029,862,3.845,863,3.948,1884,4.612,2096,3.66,2359,2.181,2592,4.453,4323,4.792,4324,5.526,4325,4.792,4326,4.792,4327,5.526,4328,4.792,4329,4.792,4330,4.792,4331,4.792,4332,4.792,4333,4.792,4334,4.792,4358,2.706,4359,2.347,4361,4.952,4362,2.883,4363,4.728,4364,6.37,4365,3.479,4366,3.12,4367,3.12,4368,3.479,4369,8.046,4370,8.289,4371,3.479,4372,3.12,4373,3.12,4374,3.479,4375,3.479,4376,3.479,4377,3.479,4378,3.479,4379,3.479,4380,4.369,4381,3.12,4382,3.479,4383,3.12,4384,3.479,4385,3.479,4386,3.479,4387,3.479,4388,3.479,4389,3.479,4390,3.479,4391,3.479,4392,4.369,4393,3.479,4394,2.883,4395,2.883,4396,2.883,4397,2.883,4398,2.883,4399,2.883,4400,2.883,4401,2.883,4402,2.883,4403,2.883,4404,2.883,4405,2.883,4406,2.883,4407,2.883,4408,2.883,4409,2.883,4410,2.883,4411,2.883,4412,2.883,4413,2.883,4414,2.883,4415,2.883,4416,2.883,4417,2.706,4418,2.883]],["title/classes/inetOrgPersonDto.html",[0,0.228,2359,3.223]],["body/classes/inetOrgPersonDto.html",[0,0.333,2,0.496,3,0.066,4,0.052,5,0.055,7,0.198,8,0.58,11,1.189,18,0.652,20,0.762,21,0.005,22,0.551,23,0.424,29,0.135,32,0.636,37,0.129,40,0.891,55,0.729,56,1.024,58,0.002,59,0.002,65,0.997,77,1.15,87,3.938,94,0.762,112,2.4,127,1.634,162,3.55,272,1.212,275,2.803,277,3.216,278,0.893,289,3.176,352,3.354,454,2.995,476,1.431,504,1.516,507,3.456,509,3.927,510,1.516,515,3.458,516,2.521,605,3.963,862,3.772,863,3.872,1884,4.524,2096,3.59,2359,3.212,2592,4.367,4323,4.7,4324,5.42,4325,4.7,4326,4.7,4327,5.42,4328,4.7,4329,4.7,4330,4.7,4331,4.7,4332,4.7,4333,4.7,4334,4.7,4358,2.606,4359,2.26,4361,7.68,4362,2.777,4363,4.594,4364,6.247,4366,3.005,4367,3.005,4369,7.967,4370,8.219,4372,3.005,4373,3.005,4380,4.246,4381,3.005,4383,3.005,4392,4.246,4394,2.777,4395,2.777,4396,2.777,4397,2.777,4398,2.777,4399,2.777,4400,2.777,4401,2.777,4402,2.777,4403,2.777,4404,2.777,4405,2.777,4406,2.777,4407,2.777,4408,2.777,4409,2.777,4410,2.777,4411,2.777,4412,2.777,4413,2.777,4414,2.777,4415,2.777,4416,2.777,4417,2.606,4418,2.777,4419,3.351,4420,3.351,4421,3.351,4422,3.351,4423,3.351,4424,3.351,4425,3.351,4426,3.351,4427,3.351,4428,3.351,4429,3.351,4430,3.351,4431,3.351,4432,3.351,4433,3.351,4434,3.351,4435,3.351,4436,3.351,4437,3.351]],["title/classes/inetOrgPersonUpdateDto.html",[0,0.228,4417,4]],["body/classes/inetOrgPersonUpdateDto.html",[0,0.383,2,0.702,3,0.093,4,0.073,5,0.078,21,0.005,23,0.285,29,0.165,32,0.901,37,0.157,40,0.887,55,0.714,56,1.321,58,0.003,59,0.003,65,1.219,112,2.549,162,3.746,272,1.563,275,2.923,277,3.36,278,1.264,289,3.374,352,3.182,454,2.284,476,2.027,504,2.147,507,4.458,509,4.088,510,2.147,515,4.226,516,3.252,605,3.488,862,3.577,863,3.673,1884,4.291,2096,3.405,2359,2.974,2592,4.142,4323,4.458,4324,5.141,4325,4.458,4326,4.458,4327,5.141,4328,4.458,4329,4.458,4330,4.458,4331,4.458,4332,4.458,4333,4.458,4334,4.458,4358,3.691,4359,3.201,4361,5.141,4362,3.932,4380,3.932,4392,3.932,4394,3.932,4395,3.932,4396,3.932,4397,3.932,4398,3.932,4399,3.932,4400,3.932,4401,3.932,4402,3.932,4403,3.932,4404,3.932,4405,3.932,4406,3.932,4407,3.932,4408,3.932,4409,3.932,4410,3.932,4411,3.932,4412,3.932,4413,3.932,4414,3.932,4415,3.932,4416,3.932,4417,5.141,4418,5.476]],["title/license.html",[1881,3.572,4292,3.865,4438,3.572]],["body/license.html",[0,0.047,4,0.137,5,0.032,18,0.071,21,0.002,23,0.083,24,0.587,29,0.023,38,1.279,39,0.323,41,0.535,44,0.42,53,1.45,55,0.553,56,0.211,58,0.001,59,0.001,60,1.094,72,0.314,77,0.237,116,1.772,121,1.114,152,0.653,157,3.102,165,2.471,188,1.133,196,0.488,205,2.853,209,0.387,216,0.789,250,1.133,257,1.541,264,0.428,273,0.713,279,2.647,289,1.109,310,0.443,332,0.498,354,0.443,375,1.251,380,3.396,390,0.686,391,1.356,395,0.452,428,4.382,516,2.775,543,0.488,599,2.678,666,1.421,673,0.779,676,0.713,679,0.744,681,1.791,683,1.958,717,5.151,777,1.169,793,0.779,804,0.948,827,1.3,840,2.961,862,0.572,1001,0.876,1010,2.381,1031,1.421,1040,0.822,1080,0.779,1094,1.728,1105,1.728,1112,0.822,1117,6.102,1122,0.713,1130,0.779,1133,2.2,1137,0.744,1138,4.77,1146,2.2,1155,0.558,1182,0.822,1188,0.948,1272,2.381,1358,1.597,1374,5.184,1404,0.876,1441,4.171,1442,0.779,1468,1.724,1505,0.713,1512,0.876,1618,2.066,1629,0.498,1689,1.421,1753,0.641,1833,0.822,1903,0.604,1958,2.209,2090,3.979,2093,1.517,2111,0.876,2182,2.568,2253,1.728,2439,3.452,2476,0.779,2526,0.876,2623,2.414,2629,0.876,2638,2.713,2658,3.828,2667,2.961,2669,3.828,2674,2.713,2676,6.95,2719,0.948,2734,2.936,2768,0.779,2856,0.948,2869,0.948,2882,2.381,2897,0.948,2898,3.828,2925,4.164,2944,1.728,2959,1.728,2999,1.597,3018,4.192,3030,1.728,3033,0.948,3113,2.961,3407,0.948,3530,1.958,3538,3.828,3560,3.828,3582,2.381,3721,0.948,3740,0.948,3803,0.948,3812,2.936,3821,0.948,3822,0.948,3851,0.948,3856,4.171,3956,1.728,4269,0.876,4271,2.961,4273,0.948,4277,0.948,4307,0.779,4438,8.265,4439,7.307,4440,7.75,4441,1.057,4442,1.057,4443,2.655,4444,8.308,4445,7.429,4446,4.269,4447,1.057,4448,1.057,4449,1.927,4450,3.806,4451,7.933,4452,3.806,4453,2.655,4454,6.54,4455,2.655,4456,1.057,4457,1.057,4458,1.927,4459,6.132,4460,4.269,4461,1.057,4462,4.269,4463,1.057,4464,1.057,4465,5.034,4466,1.927,4467,1.057,4468,1.057,4469,1.057,4470,5.865,4471,9.117,4472,6.54,4473,2.655,4474,2.655,4475,5.353,4476,1.927,4477,9.912,4478,1.927,4479,4.675,4480,4.675,4481,6.54,4482,4.269,4483,1.057,4484,1.057,4485,3.274,4486,4.514,4487,1.927,4488,5.034,4489,2.655,4490,1.057,4491,1.927,4492,1.057,4493,2.655,4494,7.307,4495,3.806,4496,3.274,4497,1.057,4498,1.927,4499,3.274,4500,3.274,4501,1.927,4502,6.132,4503,1.927,4504,7.543,4505,3.806,4506,1.927,4507,3.274,4508,4.675,4509,3.806,4510,1.057,4511,4.269,4512,8.433,4513,2.655,4514,4.675,4515,1.057,4516,1.057,4517,5.034,4518,1.927,4519,5.898,4520,5.64,4521,3.806,4522,1.927,4523,1.057,4524,1.057,4525,6.719,4526,1.927,4527,1.057,4528,1.057,4529,6.345,4530,1.927,4531,2.655,4532,1.057,4533,1.057,4534,1.927,4535,1.057,4536,4.269,4537,3.274,4538,1.057,4539,1.057,4540,1.057,4541,1.057,4542,1.057,4543,1.057,4544,1.927,4545,1.057,4546,0.948,4547,1.057,4548,1.927,4549,1.057,4550,2.655,4551,1.927,4552,1.057,4553,1.057,4554,1.927,4555,1.927,4556,6.54,4557,1.057,4558,1.927,4559,1.927,4560,1.057,4561,1.057,4562,1.927,4563,2.655,4564,1.927,4565,2.655,4566,1.057,4567,1.057,4568,4.269,4569,1.057,4570,1.057,4571,1.057,4572,3.806,4573,1.057,4574,1.057,4575,1.057,4576,1.057,4577,1.927,4578,2.655,4579,1.057,4580,1.057,4581,1.057,4582,5.865,4583,3.806,4584,3.538,4585,2.655,4586,1.057,4587,2.655,4588,7.176,4589,1.927,4590,1.057,4591,1.057,4592,1.057,4593,2.655,4594,8.984,4595,1.057,4596,1.057,4597,1.927,4598,1.927,4599,1.057,4600,5.64,4601,1.057,4602,3.274,4603,5.034,4604,1.057,4605,2.655,4606,2.655,4607,1.927,4608,8.871,4609,2.655,4610,5.353,4611,3.274,4612,1.927,4613,1.057,4614,1.927,4615,2.655,4616,5.353,4617,5.64,4618,3.274,4619,1.057,4620,1.927,4621,1.927,4622,3.274,4623,3.274,4624,5.353,4625,1.057,4626,2.655,4627,1.057,4628,8.016,4629,1.927,4630,1.057,4631,5.034,4632,1.057,4633,2.655,4634,3.274,4635,5.034,4636,1.057,4637,6.719,4638,3.274,4639,1.927,4640,5.034,4641,5.898,4642,4.269,4643,1.057,4644,1.057,4645,1.057,4646,1.057,4647,5.034,4648,1.057,4649,1.927,4650,6.345,4651,1.057,4652,1.057,4653,1.927,4654,2.655,4655,1.057,4656,2.655,4657,1.057,4658,1.057,4659,1.057,4660,1.057,4661,2.381,4662,2.655,4663,1.057,4664,0.948,4665,1.927,4666,5.64,4667,1.057,4668,1.927,4669,1.057,4670,1.057,4671,2.655,4672,2.655,4673,4.269,4674,2.655,4675,2.655,4676,1.057,4677,1.057,4678,3.806,4679,1.057,4680,1.057,4681,1.927,4682,2.655,4683,1.057,4684,1.057,4685,1.057,4686,1.057,4687,0.948,4688,1.927,4689,1.057,4690,5.034,4691,0.948,4692,1.927,4693,1.057,4694,1.057,4695,1.927,4696,1.927,4697,1.057,4698,1.057,4699,1.057,4700,1.057,4701,1.927,4702,2.655,4703,3.806,4704,1.057,4705,1.597,4706,1.057,4707,1.057,4708,4.269,4709,1.057,4710,3.274,4711,1.057,4712,5.64,4713,4.675,4714,3.274,4715,1.057,4716,3.806,4717,1.927,4718,1.057,4719,1.057,4720,2.655,4721,0.948,4722,1.057,4723,1.057,4724,1.057,4725,2.655,4726,2.655,4727,1.057,4728,1.927,4729,1.927,4730,1.927,4731,1.057,4732,6.345,4733,1.927,4734,1.057,4735,1.057,4736,1.057,4737,1.057,4738,1.057,4739,1.057,4740,2.655,4741,1.057,4742,6.025,4743,1.057,4744,1.057,4745,1.057,4746,3.806,4747,3.806,4748,1.057,4749,1.057,4750,2.655,4751,1.057,4752,1.057,4753,3.274,4754,0.948,4755,1.057,4756,1.057,4757,1.057,4758,0.948,4759,1.057,4760,1.057,4761,1.927,4762,1.927,4763,1.057,4764,2.655,4765,1.057,4766,1.057,4767,1.927,4768,1.057,4769,1.057,4770,1.057,4771,1.057,4772,1.927,4773,1.927,4774,1.927,4775,5.353,4776,1.927,4777,4.269,4778,1.057,4779,1.057,4780,1.927,4781,2.655,4782,3.274,4783,3.274,4784,3.274,4785,1.057,4786,3.806,4787,3.806,4788,2.381,4789,1.057,4790,1.927,4791,1.927,4792,3.806,4793,1.927,4794,3.274,4795,3.274,4796,1.927,4797,2.655,4798,3.806,4799,1.057,4800,1.057,4801,1.057,4802,2.655,4803,1.927,4804,1.927,4805,1.057,4806,1.057,4807,1.057,4808,1.057,4809,1.927,4810,1.057,4811,1.057,4812,2.655,4813,1.057,4814,1.057,4815,1.927,4816,2.655,4817,1.057,4818,1.927,4819,1.057,4820,1.057,4821,1.927,4822,1.927,4823,4.269,4824,7.543,4825,2.655,4826,1.927,4827,1.927,4828,1.927,4829,1.927,4830,3.274,4831,1.927,4832,1.057,4833,1.057,4834,1.057,4835,1.057,4836,4.675,4837,4.269,4838,1.927,4839,1.057,4840,1.057,4841,1.057,4842,1.927,4843,1.057,4844,1.927,4845,1.057,4846,3.413,4847,5.034,4848,3.274,4849,1.057,4850,5.898,4851,1.057,4852,1.057,4853,1.057,4854,1.057,4855,1.057,4856,1.057,4857,1.057,4858,1.057,4859,1.728,4860,2.655,4861,3.806,4862,3.274,4863,3.274,4864,1.927,4865,1.057,4866,1.057,4867,1.927,4868,1.057,4869,1.057,4870,1.057,4871,1.927,4872,1.057,4873,1.057,4874,2.655,4875,1.057,4876,1.927,4877,1.927,4878,1.057,4879,1.057,4880,2.655,4881,1.057,4882,1.057,4883,1.057,4884,1.057,4885,1.057,4886,1.927,4887,1.057,4888,1.927,4889,1.057,4890,1.057,4891,1.057,4892,2.655,4893,1.057,4894,1.057,4895,1.057,4896,1.057,4897,1.057,4898,3.806,4899,1.057,4900,1.057,4901,3.274,4902,5.034,4903,1.057,4904,1.057,4905,1.057,4906,1.057,4907,1.057,4908,1.057,4909,1.057,4910,1.927,4911,4.675,4912,2.655,4913,1.057,4914,3.274,4915,1.057,4916,1.057,4917,2.655,4918,1.057,4919,1.057,4920,2.655,4921,1.057,4922,1.057,4923,1.057,4924,1.057,4925,1.057,4926,1.057,4927,1.057,4928,1.057,4929,1.927,4930,1.057,4931,1.057,4932,1.927,4933,1.728,4934,1.057,4935,1.057,4936,2.655,4937,1.057,4938,2.655,4939,1.057,4940,1.927,4941,1.057,4942,1.927,4943,1.057,4944,2.655,4945,4.675,4946,1.057,4947,1.728,4948,1.057,4949,1.057,4950,1.057,4951,1.057,4952,1.057,4953,1.057,4954,1.927,4955,1.057,4956,1.927,4957,3.274,4958,1.057,4959,3.806,4960,1.057,4961,1.057,4962,1.057,4963,1.057,4964,1.057,4965,1.927,4966,1.927,4967,1.927,4968,2.655,4969,1.927,4970,1.927,4971,1.057,4972,1.927,4973,2.655,4974,1.057,4975,1.927,4976,1.057,4977,1.927,4978,1.057,4979,2.655,4980,1.927,4981,1.057,4982,1.057,4983,1.927,4984,7.75,4985,1.927,4986,1.057,4987,3.806,4988,5.64,4989,2.655,4990,1.057,4991,1.057,4992,1.057,4993,3.274,4994,1.057,4995,2.655,4996,1.927,4997,1.057,4998,1.057,4999,1.057,5000,3.274,5001,1.057,5002,1.057,5003,1.057,5004,1.057,5005,3.274,5006,1.927,5007,1.927,5008,1.057,5009,1.057,5010,2.655,5011,1.057,5012,1.927,5013,2.655,5014,0.876,5015,1.927,5016,1.057,5017,1.057,5018,1.057,5019,1.057,5020,1.927,5021,2.655,5022,1.057,5023,1.057,5024,1.927,5025,1.057,5026,1.057,5027,1.057,5028,1.057,5029,2.655,5030,1.927,5031,1.057,5032,3.274,5033,1.057,5034,2.655,5035,1.057,5036,1.057,5037,1.057,5038,1.927,5039,1.057,5040,1.057,5041,1.057,5042,2.655,5043,1.927,5044,1.927,5045,1.057,5046,4.675,5047,1.927,5048,2.655,5049,3.274,5050,1.057,5051,1.057,5052,1.927,5053,1.057,5054,2.655,5055,1.057,5056,1.927,5057,1.057,5058,1.057,5059,1.057,5060,1.057,5061,1.057,5062,2.655,5063,1.927,5064,1.057,5065,1.927,5066,1.057,5067,1.057,5068,1.927,5069,1.927,5070,1.057,5071,0.948,5072,1.927,5073,1.057,5074,1.057,5075,1.057,5076,1.057,5077,1.057,5078,2.655,5079,1.057,5080,1.057,5081,1.057,5082,1.057,5083,1.057,5084,2.655,5085,1.057,5086,1.057,5087,1.057,5088,1.057,5089,1.927,5090,1.057,5091,1.057,5092,1.057,5093,1.057,5094,1.057,5095,1.057,5096,1.057,5097,1.057,5098,1.057,5099,1.057,5100,1.057,5101,1.057,5102,1.057,5103,1.057,5104,3.274,5105,1.057,5106,1.927,5107,1.057,5108,1.057,5109,1.057,5110,1.057,5111,1.057,5112,1.057,5113,1.057,5114,1.057,5115,1.057,5116,1.057,5117,2.655,5118,1.057,5119,1.057,5120,1.057,5121,1.057,5122,1.057,5123,1.927,5124,1.057,5125,1.057,5126,1.057,5127,1.057,5128,1.057,5129,1.057,5130,1.057,5131,1.927,5132,1.927,5133,3.806,5134,2.655,5135,1.057,5136,1.927,5137,1.057,5138,1.057,5139,1.057,5140,1.057,5141,2.655,5142,1.927,5143,1.057,5144,1.927,5145,1.927,5146,1.927,5147,1.057,5148,1.057,5149,0.948,5150,1.057,5151,1.057,5152,1.057,5153,1.927,5154,1.057,5155,1.057,5156,1.057,5157,1.057,5158,2.655,5159,1.057,5160,1.057,5161,1.057,5162,1.057,5163,1.057,5164,1.057,5165,1.057,5166,1.057,5167,1.057,5168,1.057,5169,1.057,5170,1.927,5171,1.057,5172,1.057,5173,1.057,5174,1.057,5175,1.057,5176,1.057,5177,1.057,5178,1.057,5179,1.057,5180,1.057,5181,1.057,5182,1.057,5183,1.057,5184,1.057,5185,1.057,5186,1.057,5187,1.057,5188,1.057,5189,1.057,5190,2.655,5191,1.927,5192,1.057,5193,1.057,5194,1.057,5195,1.057,5196,1.057,5197,1.057,5198,1.927,5199,1.927,5200,1.057,5201,1.057,5202,1.057,5203,1.057,5204,1.057,5205,1.057,5206,1.057,5207,1.927,5208,1.057,5209,1.057,5210,1.057,5211,1.057,5212,1.057,5213,1.057,5214,1.057,5215,1.057,5216,1.057,5217,1.057,5218,1.057,5219,1.057,5220,1.057,5221,1.057,5222,1.057,5223,1.057,5224,1.057,5225,1.057,5226,1.057,5227,1.057]],["title/modules.html",[531,3.04]],["body/modules.html",[21,0.004,58,0.004,59,0.004,530,4.247,531,2.949,728,5.27,732,4.996,733,4.996,734,4.996,735,4.571,947,4.767,952,4.571,1284,4.399,1289,4.399,1290,4.767,1291,4.767,1643,5.27,1788,4.767,1789,4.996,2213,5.27,2594,4.996,2737,4.767,3452,4.996,4788,9.457,5228,10.546,5229,10.546,5230,10.546]],["title/overview.html",[5231,6.262]],["body/overview.html",[2,0.587,21,0.005,58,0.003,59,0.003,60,1.636,137,1.665,166,1.249,325,5.126,387,1.249,530,5.81,531,1.728,532,1.797,533,1.872,534,1.872,535,1.872,536,1.833,537,1.872,538,3.561,539,3.561,540,3.561,541,2.742,542,1.696,543,1.833,634,4.472,728,7.529,729,3.561,730,3.561,731,3.561,732,7.409,733,6.723,734,5.952,735,6.621,736,5.357,764,5.659,768,5.078,908,5.287,947,6.86,948,3.561,949,3.561,950,3.561,951,3.561,952,6.029,953,5.357,954,5.357,983,5.463,1009,3.561,1151,5.879,1284,6.373,1285,3.561,1286,3.561,1287,3.561,1288,3.561,1289,6.443,1290,6.131,1291,6.131,1325,5.335,1337,6.131,1343,6.426,1356,5.078,1643,7.21,1644,3.561,1738,3.29,1781,5.078,1785,3.561,1786,3.561,1787,3.561,1788,6.521,1789,5.952,2020,5.659,2023,6.131,2080,3.561,2081,3.561,2082,3.561,2130,5.078,2213,5.898,2214,3.561,2215,3.561,2427,5.257,2538,5.707,2572,6.288,2594,5.952,2595,3.561,2596,3.561,2597,3.561,2723,3.561,2724,3.561,2726,3.561,2737,5.679,2850,3.561,2851,3.561,3191,6.426,3225,3.561,3226,3.561,3227,3.561,3331,3.561,3332,3.561,3333,3.561,3377,5.078,3380,3.561,3381,3.561,3445,5.078,3449,3.561,3450,3.561,3451,3.561,3452,6.927,3478,3.561,3479,3.561,3754,3.561,3756,3.561,3910,5.078,3913,3.561,3914,3.561,3915,3.561,4002,6.426,4005,3.561,4006,3.561,4007,3.561,5231,3.561,5232,3.971,5233,3.971,5234,3.971]],["title/properties.html",[8,0.699,844,3.033]],["body/properties.html",[4,0.123,8,0.906,21,0.005,58,0.004,59,0.004,267,2.482,717,5.195,2306,6.224,2829,6.224,4295,6.631,4296,7.175,4297,6.631,4438,6.631,5235,8.001]],["title/miscellaneous/typealiases.html",[4223,3.353,5236,6.175]],["body/miscellaneous/typealiases.html",[7,0.396,21,0.005,22,1.102,23,0.406,40,0.58,41,1.859,58,0.004,59,0.004,121,2.81,124,2.576,162,2.493,205,2.534,211,3.627,270,2.81,288,3.941,294,3.829,357,3.407,448,5.031,588,5.595,605,3.537,878,6.115,1107,5.552,1108,6.873,1109,4.351,1116,5.552,1119,6.873,1121,5.552,1129,4.878,1137,4.714,1138,5.212,1139,5.552,1629,3.158,2258,6.008,2299,7.437,3161,6.008,3180,7.437,3261,6.008,3268,7.437,3358,6.008,3366,7.437,3903,6.008,3906,7.437,3995,6.008,3997,7.437,4080,6.008,4081,7.437,4107,7.437,4118,6.452,4223,5.212,5237,6.7,5238,6.7,5239,6.7,5240,6.7,5241,6.7,5242,6.7,5243,6.7,5244,8.294,5245,6.7,5246,6.7,5247,8.294,5248,6.7,5249,6.7,5250,6.7,5251,6.7,5252,8.294,5253,8.294,5254,6.7,5255,6.7,5256,6.7,5257,6.7,5258,6.7,5259,6.7]],["title/additional-documentation/cahier-des-charges.html",[1399,1.342,2439,1.719,5260,1.916,5261,2.921,5262,2.921]],["body/additional-documentation/cahier-des-charges.html",[4,0.115,21,0.005,58,0.003,59,0.003,60,2.346,73,3.842,97,4.199,100,1.857,531,1.679,617,2.088,707,2.844,880,3.458,882,4.007,885,3.842,888,4.178,895,2.684,901,4.192,902,4.4,903,3.679,922,5.107,1145,2.504,1159,3.842,1171,4.048,1191,4.697,1193,4.821,1201,3,1203,3.458,1367,4.926,1369,2.602,1372,2.268,1374,4.536,1399,4.071,1435,4.847,1436,2.602,1442,2.844,1461,2.504,1469,4.318,1497,3.196,1498,4.199,1536,4.406,1588,2.713,1601,4.396,1636,3.196,1674,2.713,1938,2.417,2305,2.504,2306,5.267,2344,3.254,2349,2.504,2375,2.602,2393,3,2396,3.196,2401,2.844,2422,2.713,2450,4.007,2558,2.844,2565,6.494,2700,3,2765,4.107,2766,4.007,2829,5.267,3049,3,3100,3,3606,4.992,3832,3.196,4268,3.842,4293,5.107,4295,6.918,4297,3.196,4299,3.196,4300,3.196,4301,3.196,4302,6.075,4304,3.458,4305,3.458,4306,3.458,4307,2.844,4308,3.458,4311,3.458,4312,7.152,4313,2.844,4314,3.458,4315,3.458,4316,6.705,4318,6.071,4470,3.458,4664,5.107,4691,6.071,4705,4.719,4846,3.458,5071,3.458,5149,3.458,5261,3.458,5262,3.458,5263,3.857,5264,3.857,5265,3.857,5266,3.458,5267,4.43,5268,6.367,5269,5.611,5270,3.857,5271,3.857,5272,5.695,5273,5.381,5274,5.695,5275,3.196,5276,3.857,5277,6.155,5278,5.695,5279,3.857,5280,3.458,5281,3.857,5282,3.857,5283,5.695,5284,3.196,5285,3.196,5286,3.857,5287,4.199,5288,5.611,5289,3.857,5290,3.857,5291,3.196,5292,3.857,5293,3.857,5294,3.857,5295,3.458,5296,3.857,5297,3.458,5298,3.857,5299,3.857,5300,3.458,5301,3.857,5302,3.458,5303,3.857,5304,3.857,5305,3.857,5306,3.458,5307,3.857,5308,3.857,5309,3.857,5310,3.857,5311,3.857,5312,3.857,5313,3.857,5314,2.844,5315,3.857,5316,3.857,5317,3.857,5318,5.107,5319,3.857,5320,3.857,5321,3.857,5322,3.857,5323,3.857,5324,3.458,5325,3.857,5326,3.857,5327,3.857,5328,3.857,5329,3.857,5330,3.857,5331,6.196,5332,7.161,5333,3.857,5334,3.857,5335,3.857,5336,3.857,5337,3.458,5338,3.857,5339,3.857,5340,3.857,5341,3.857,5342,3.857,5343,6.918,5344,3.458,5345,3.458,5346,3.857,5347,5.695,5348,3.857,5349,3.857,5350,3.857,5351,3.857,5352,3.458,5353,5.695,5354,5.695,5355,5.107,5356,3.458,5357,3.196,5358,3.857,5359,6.196,5360,7.477,5361,3.857,5362,3.857,5363,3.857,5364,3.458,5365,3.857,5366,3.857,5367,3.857,5368,3.857,5369,3.857,5370,3.857,5371,3.857,5372,3.857,5373,3.857,5374,3.857,5375,3.857,5376,3.857,5377,3.857,5378,3.196,5379,3.857,5380,3.196,5381,3.857,5382,3,5383,3.857,5384,3.857,5385,3.857,5386,3.458,5387,3.857,5388,3.857,5389,3.857,5390,3.857,5391,3.857,5392,3.857,5393,3.857,5394,3.857,5395,3.458,5396,3.857,5397,3.857,5398,3.857,5399,3.857,5400,3.857,5401,3.857,5402,3.857,5403,3.857]],["title/additional-documentation/filtres-api.html",[617,2.009,2395,2.736,2439,1.959,5260,2.183]],["body/additional-documentation/filtres-api.html",[21,0.005,41,2.693,58,0.004,59,0.004,139,3.533,212,3.972,257,2.97,267,2.276,279,3.547,617,3.972,649,3.972,780,6.081,1080,5.41,1109,4.764,2395,5.41,2467,5.708,2815,8.899,5404,7.337,5405,7.337,5406,7.337,5407,7.337,5408,7.337,5409,7.337,5410,7.337,5411,6.58,5412,7.337,5413,7.337,5414,7.337,5415,7.337,5416,7.337,5417,7.337,5418,7.337,5419,7.337]],["title/additional-documentation/documentation-technique.html",[2439,1.959,2765,2.251,5260,2.183,5382,2.886]],["body/additional-documentation/documentation-technique.html",[21,0.004,58,0.004,59,0.004,1399,3.333,5269,6.705,5359,6.705,5420,6.705,5421,6.705,5422,8.091,5423,7.255,5424,6.705,5425,7.255]],["title/additional-documentation/documentation-technique/demon.html",[2439,2.275,5260,2.535,5426,4.31]],["body/additional-documentation/documentation-technique/demon.html",[21,0.004,58,0.004,59,0.004,1072,6.852,1469,4.39,2764,6.72,4705,6.72,5269,7.701,5427,8.109]],["title/additional-documentation/documentation-technique/queue-processor-service.html",[79,2.699,777,1.976,2439,1.719,5260,1.916,5428,3.257]],["body/additional-documentation/documentation-technique/queue-processor-service.html",[0,0.215,2,0.717,5,0.152,9,2.467,15,1.939,21,0.005,29,0.189,36,0.797,37,0.1,53,2.08,55,0.338,56,0.969,58,0.003,59,0.003,63,5.557,65,0.777,70,3.54,71,7.812,73,6.778,74,1.963,78,1.102,79,7.22,83,5.466,97,5.67,100,3.229,102,3.945,103,3.832,113,6.014,116,3.63,117,4.346,136,1.739,170,0.897,246,1.763,267,1.503,279,2.714,777,4.665,778,2.94,888,3.161,895,2.284,901,4.178,902,4.354,903,3.784,1015,4.945,1171,4.716,1191,4.287,1193,4.194,1257,3.41,1367,2.694,1376,3.269,1378,3.945,1399,3.168,1435,4.811,1436,4.524,1455,3.41,1459,3.269,1469,2.624,1536,4.38,1674,3.41,1687,4.016,1840,3.573,2349,4.354,2564,4.346,2623,3.573,2991,5.41,3577,6.373,3688,4.346,4268,3.269,4298,4.016,4313,3.573,5267,3.77,5273,5.877,5275,4.016,5277,3.573,5287,3.573,5314,4.945,5318,4.346,5331,4.016,5423,6.014,5429,3.77,5430,4.016,5431,6.706,5432,4.346,5433,5.557,5434,8.298,5435,9.416,5436,4.346,5437,4.346,5438,4.846,5439,6.706,5440,6.706,5441,6.706,5442,4.846,5443,6.014,5444,4.346,5445,4.846,5446,4.346,5447,4.846,5448,4.016,5449,4.846,5450,4.846,5451,4.846,5452,4.346,5453,4.846,5454,4.846,5455,4.846,5456,4.346,5457,3.77,5458,4.346,5459,4.346,5460,5.217,5461,4.846,5462,4.846,5463,4.846,5464,4.846,5465,6.014,5466,3.77,5467,4.846,5468,3.41,5469,4.846,5470,4.846,5471,4.846,5472,4.346,5473,4.846,5474,4.846,5475,4.846,5476,4.846,5477,4.846,5478,4.846,5479,4.846,5480,4.846,5481,4.846,5482,4.846]],["title/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[1193,1.053,1385,1.613,1399,1.501,2439,1.155,5260,1.287,5287,1.613,5483,2.188,5484,2.188]],["body/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[21,0.005,29,0.14,37,0.086,45,0.961,53,1.716,56,1.466,58,0.002,59,0.002,78,1.719,100,3.408,106,3.532,116,1.01,121,1.336,122,2.306,124,0.717,134,1.435,166,1.896,170,1.522,185,0.984,186,2.623,187,2.372,189,3.254,190,2.451,191,2.316,193,2.322,196,3.581,208,1.097,209,2.904,211,2.256,212,2.667,218,2.451,222,2.972,223,1.097,246,1.861,257,1.994,263,0.755,268,2.92,272,1.165,279,3.274,285,1.131,288,1.873,341,3.06,352,1.533,354,2.32,385,0.871,387,0.587,435,1.312,476,1.36,536,0.861,549,0.939,599,2.932,777,5.139,827,2.148,840,1.451,862,1.724,863,1.77,887,1.451,888,4.089,895,3.457,901,3.959,902,4.269,903,2.722,1000,1.245,1109,3.199,1129,1.097,1130,1.375,1171,3.832,1172,1.375,1191,4.736,1193,4.13,1201,1.451,1328,1.501,1339,1.066,1340,1.545,1367,4.077,1371,1.932,1372,1.873,1376,2.148,1378,4.315,1385,5.848,1393,1.312,1399,3.952,1435,4.618,1451,1.545,1455,2.932,1456,1.258,1461,3.199,1469,3.262,1522,2.348,1536,4.411,1543,1.451,1595,1.545,1610,3.241,1631,1.451,1689,1.375,1708,1.545,1875,1.545,1884,2.068,1895,1.375,1914,2.348,1938,1.169,2096,1.641,2259,2.381,2263,2.601,2267,2.148,2284,1.258,2301,2.855,2312,2.639,2359,1.996,2380,1.932,2381,2.148,2393,1.451,2394,4.961,2420,1.375,2425,1.375,2427,1.097,2445,1.545,2451,3.913,2478,1.672,2557,4.304,2558,1.375,2592,1.996,2737,1.312,2765,3.356,2768,1.375,2802,5.007,2934,2.348,2935,1.545,2967,4.746,2968,1.672,2991,3.466,2994,2.932,3020,3.736,3413,1.375,3530,1.375,3577,4.083,3591,5.866,3593,1.672,3594,1.672,3595,1.672,3596,1.672,3597,1.672,3599,1.672,3606,5.22,3607,3.736,3677,3.072,3832,1.545,3949,2.855,4089,1.672,4268,2.148,4298,1.545,4299,1.545,4302,4.528,4303,1.672,4307,1.375,4313,1.375,4323,2.811,4325,2.148,4326,2.148,4328,2.148,4329,2.148,4330,2.148,4331,2.148,4332,2.148,4333,2.148,4334,2.148,4359,2.148,4582,1.672,4754,1.672,4933,2.855,5266,2.855,5267,1.451,5273,2.811,5277,1.375,5287,2.348,5291,3.453,5306,1.672,5314,3.633,5332,1.451,5345,1.672,5356,1.672,5357,2.639,5359,6.925,5380,1.545,5386,4.418,5395,2.855,5420,2.639,5421,2.639,5429,2.477,5430,2.639,5433,5.334,5436,1.672,5446,2.855,5448,1.545,5452,2.855,5456,1.672,5458,3.736,5459,1.672,5460,5.507,5468,2.932,5485,6.783,5486,2.855,5487,3.184,5488,6.026,5489,7.138,5490,5.532,5491,7.079,5492,3.241,5493,3.736,5494,3.184,5495,4.167,5496,8.089,5497,2.855,5498,3.453,5499,4.418,5500,5.532,5501,3.184,5502,3.184,5503,2.477,5504,1.865,5505,1.865,5506,2.855,5507,1.865,5508,1.865,5509,5.532,5510,4.418,5511,1.865,5512,3.184,5513,3.184,5514,1.865,5515,2.855,5516,6.436,5517,1.865,5518,3.736,5519,1.865,5520,1.865,5521,1.865,5522,1.865,5523,4.167,5524,1.865,5525,5.532,5526,1.865,5527,5.532,5528,3.184,5529,3.184,5530,1.865,5531,1.545,5532,1.865,5533,1.672,5534,1.865,5535,1.865,5536,1.451,5537,1.865,5538,1.672,5539,1.865,5540,1.545,5541,5.532,5542,1.865,5543,1.672,5544,1.865,5545,4.927,5546,7.335,5547,4.927,5548,1.865,5549,1.865,5550,1.865,5551,6.026,5552,1.865,5553,1.865,5554,1.672,5555,1.545,5556,3.184,5557,3.184,5558,3.184,5559,3.184,5560,3.184,5561,3.184,5562,3.184,5563,1.451,5564,1.865,5565,3.184,5566,1.865,5567,1.865,5568,3.184,5569,3.184,5570,3.184,5571,1.865,5572,1.865,5573,1.865,5574,1.865,5575,1.865,5576,1.865,5577,1.865,5578,1.545,5579,1.865,5580,1.865,5581,1.865,5582,3.453,5583,1.865,5584,1.865,5585,1.865,5586,3.184,5587,4.994,5588,1.865,5589,7.559,5590,1.865,5591,1.865,5592,1.865,5593,1.865,5594,1.865,5595,1.672,5596,1.865,5597,1.865,5598,1.672,5599,1.865,5600,1.865,5601,1.865,5602,4.927,5603,1.865,5604,1.865,5605,1.865,5606,1.865,5607,1.865,5608,1.865,5609,1.865,5610,1.865,5611,4.927,5612,4.927,5613,4.927,5614,1.865,5615,1.865,5616,1.865,5617,1.865,5618,1.865,5619,1.865,5620,1.545,5621,1.865,5622,1.865,5623,1.865,5624,1.672,5625,1.865,5626,1.865,5627,1.865,5628,1.865,5629,1.865,5630,1.865,5631,1.865,5632,1.865,5633,1.672,5634,1.672,5635,1.865,5636,1.865,5637,1.865,5638,2.639,5639,1.865,5640,1.865,5641,6.082,5642,1.865,5643,1.672,5644,1.865,5645,1.865,5646,1.865,5647,1.865,5648,3.184,5649,1.865,5650,1.865,5651,1.545,5652,1.865,5653,1.672,5654,1.865,5655,2.855,5656,3.184,5657,1.545,5658,3.184,5659,1.865,5660,1.865,5661,3.184,5662,1.865,5663,1.865,5664,4.167,5665,3.184,5666,1.672,5667,1.865,5668,1.865,5669,1.865,5670,3.184,5671,1.451,5672,1.865,5673,1.545,5674,1.865,5675,1.545,5676,1.865,5677,1.865,5678,3.184,5679,1.865,5680,3.184,5681,1.865,5682,1.672,5683,1.865,5684,1.865,5685,1.865,5686,1.865,5687,1.865,5688,1.865,5689,1.865,5690,1.865,5691,1.865,5692,1.865,5693,1.865,5694,1.451,5695,1.865,5696,1.865,5697,1.672,5698,1.865,5699,3.184,5700,4.167,5701,3.184,5702,1.865,5703,1.865,5704,1.865,5705,1.865,5706,1.865,5707,1.865,5708,1.865,5709,3.184,5710,1.865,5711,1.672,5712,1.672,5713,1.865,5714,1.865,5715,1.865,5716,1.865,5717,1.865,5718,1.865,5719,1.865,5720,1.545]],["title/additional-documentation/documentation-technique/validation-des-identités.html",[1399,1.342,1601,2.115,1842,1.763,2439,1.719,5260,1.916]],["body/additional-documentation/documentation-technique/validation-des-identités.html",[0,0.206,21,0.005,23,0.281,40,0.564,45,3.359,58,0.003,59,0.003,72,1.938,78,1.483,100,2.24,134,2.115,136,1.207,162,1.731,166,1.464,200,2.172,267,1.443,279,1.883,280,5.294,284,2.398,329,1.486,777,4.946,848,4.398,882,3.274,888,3.547,895,3.073,896,3.856,901,4.128,902,4.65,903,3.703,1171,4.414,1191,4.774,1193,4.561,1289,3.022,1367,2.586,1371,2.823,1372,2.737,1376,3.139,1378,3.835,1386,3.274,1399,4.092,1435,4.768,1469,4.414,1536,3.972,1543,3.62,1588,4.587,1601,4.233,1607,3.139,1674,3.274,1767,3.274,1842,5.377,2344,2.659,2348,3.274,2401,3.431,2420,4.807,2422,3.274,2427,4.426,2451,5.294,2499,5.402,2534,4.173,2557,3.62,2558,3.431,2565,7.369,2615,5.294,2618,5.854,2642,5.846,2730,4.173,2765,3.955,2766,4.587,2769,3.62,2827,3.139,2864,4.173,2880,5.846,2887,4.173,2888,5.846,2895,5.846,2986,5.071,2991,4.587,2992,5.846,2993,5.846,2994,3.274,3002,3.431,3370,4.173,4211,7.698,4302,5.294,4661,4.173,4687,4.173,5267,3.62,5273,5.501,5277,4.807,5284,3.856,5285,3.856,5287,5.548,5291,3.856,5300,5.846,5314,3.431,5382,3.62,5432,4.173,5433,3.856,5437,4.173,5460,3.62,5465,4.173,5466,3.62,5468,3.274,5493,4.173,5498,3.856,5503,3.62,5510,4.173,5515,4.173,5536,6.343,5555,3.856,5563,5.071,5578,3.856,5582,3.856,5587,3.856,5595,4.173,5638,3.856,5651,3.856,5655,6.748,5673,3.856,5694,5.071,5721,4.173,5722,6.519,5723,6.519,5724,3.856,5725,6.519,5726,4.654,5727,5.846,5728,4.654,5729,4.173,5730,4.654,5731,4.654,5732,4.654,5733,4.654,5734,4.654,5735,6.519,5736,4.654,5737,4.654,5738,4.654,5739,4.654,5740,4.654,5741,4.654,5742,4.654,5743,4.654,5744,4.654,5745,6.519,5746,4.654,5747,6.519,5748,4.654,5749,4.654,5750,4.654,5751,4.173,5752,4.654,5753,4.654,5754,4.654,5755,4.654,5756,4.654,5757,6.519]],["title/additional-documentation/documentation-technique/formulaires-customs.html",[2439,1.959,5260,2.183,5424,3.075,5425,3.327]],["body/additional-documentation/documentation-technique/formulaires-customs.html",[21,0.005,22,1.222,23,0.406,40,0.329,41,0.639,43,2.515,58,0.002,59,0.002,100,1.83,112,0.973,122,1.084,133,3.114,134,0.597,166,0.725,182,3.659,196,2.879,205,1.438,257,3.115,263,1.539,267,2.704,272,2.111,279,1.965,306,1.959,476,2.407,542,0.984,649,2.058,848,4.792,888,4.109,895,3.5,896,3.151,901,4.151,902,4.414,903,3.902,1000,2.625,1109,1.496,1126,4.023,1171,3.376,1191,4.609,1193,4.197,1367,5.057,1371,1.397,1372,3.668,1376,1.554,1378,4.368,1398,1.909,1399,3.748,1435,4.791,1437,1.698,1455,1.621,1461,1.496,1469,3.635,1498,1.698,1505,1.554,1522,5.237,1536,3.919,1600,1.621,1618,3.777,2090,5.009,2092,1.621,2093,4.745,2094,1.496,2095,1.444,2096,2.903,2106,2.236,2176,3.965,2177,4.388,2178,3.965,2179,3.965,2180,3.965,2181,3.965,2182,4.207,2183,4.654,2184,4.388,2221,4.452,2222,4.023,2310,4.023,2344,5.198,2350,4.612,2352,1.621,2355,6.344,2401,1.698,2420,2.803,2422,1.621,2451,1.496,2556,2.065,2557,2.957,2559,3.151,2667,1.792,2680,5.799,2765,4.073,2766,3.416,2802,3.777,2934,1.698,2953,5.053,2967,1.698,2991,1.621,2994,1.621,3002,1.698,3677,4.598,3829,2.065,4017,2.803,4018,2.803,4060,5.053,4268,5.192,4269,1.909,4270,5.053,4271,2.957,4300,3.151,4301,3.151,4302,4.388,4307,1.698,4486,5.053,4742,6.369,5014,1.909,5268,1.698,5273,3.275,5275,6.571,5280,3.409,5295,2.065,5314,2.803,5337,3.409,5344,2.065,5352,2.065,5357,1.909,5380,3.151,5424,4.023,5429,1.792,5443,3.409,5444,2.065,5448,1.909,5457,1.792,5460,1.792,5468,1.621,5486,3.409,5489,6.46,5492,5.223,5497,3.409,5499,4.353,5531,1.909,5538,2.065,5543,2.065,5554,3.409,5555,1.909,5563,1.792,5578,3.151,5620,4.67,5624,7.11,5633,2.065,5638,5.168,5641,2.065,5643,6.021,5653,2.065,5666,4.353,5671,1.792,5697,3.409,5721,2.065,5724,4.023,5751,2.065,5758,8.129,5759,9.835,5760,3.409,5761,3.802,5762,6.714,5763,6.236,5764,3.802,5765,4.855,5766,3.802,5767,7.425,5768,3.802,5769,6.714,5770,3.802,5771,3.802,5772,4.855,5773,6.236,5774,2.303,5775,2.303,5776,2.303,5777,2.065,5778,2.303,5779,3.802,5780,2.065,5781,5.635,5782,5.635,5783,4.67,5784,2.303,5785,2.303,5786,5.635,5787,2.065,5788,2.303,5789,3.802,5790,2.303,5791,2.303,5792,2.303,5793,2.303,5794,2.303,5795,3.802,5796,5.635,5797,3.802,5798,6.714,5799,2.303,5800,2.303,5801,2.303,5802,2.303,5803,4.855,5804,3.802,5805,5.053,5806,2.065,5807,2.303,5808,3.802,5809,2.303,5810,2.065,5811,2.303,5812,2.303,5813,2.303,5814,2.303,5815,3.802,5816,3.802,5817,3.802,5818,5.635,5819,5.635,5820,2.303,5821,2.303,5822,4.855,5823,2.303,5824,2.303,5825,2.303,5826,2.065,5827,2.065,5828,2.303,5829,2.065,5830,2.303,5831,4.855,5832,4.855,5833,4.855,5834,4.855,5835,4.855,5836,6.236,5837,3.802,5838,2.303,5839,2.303,5840,2.303,5841,2.303,5842,2.303,5843,2.303,5844,2.303,5845,2.303,5846,3.802,5847,3.802,5848,2.303,5849,4.855,5850,2.303,5851,3.802,5852,2.303,5853,2.303,5854,2.303,5855,2.303,5856,2.303,5857,2.303,5858,2.303,5859,2.065,5860,2.303,5861,2.303,5862,3.802,5863,2.303,5864,4.855,5865,2.303,5866,2.303,5867,2.303,5868,2.303,5869,2.303,5870,3.802,5871,2.303,5872,2.303,5873,2.303,5874,3.802,5875,5.635,5876,2.303,5877,2.303,5878,6.236,5879,2.303,5880,2.303,5881,2.303,5882,2.303,5883,3.802,5884,2.303,5885,2.303,5886,2.303,5887,3.802,5888,2.303,5889,2.303,5890,2.303,5891,2.303,5892,2.303,5893,2.303,5894,2.303,5895,2.303,5896,2.303,5897,2.303,5898,2.303,5899,2.303,5900,2.303,5901,3.409]],["title/additional-documentation/documentation-utilisateur.html",[882,2.61,2439,1.959,2765,2.251,5260,2.183]],["body/additional-documentation/documentation-utilisateur.html",[21,0.004,58,0.004,59,0.004,901,3.282,1367,4.507,1399,3.34,1842,4.39,2765,4.919,5268,5.979,5420,6.72,5421,6.72]],["title/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[1193,1.26,1607,1.766,1914,1.93,2422,1.842,2439,1.382,4584,2.169,5260,1.54]],["body/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[21,0.005,23,0.339,58,0.002,59,0.002,257,3.065,279,2.733,282,4.118,283,4.327,284,1.382,329,1.374,339,2.458,352,1.291,354,3.177,360,4.555,395,2.635,425,2.969,649,2.329,848,2.903,862,1.452,863,4.006,888,4.418,895,4.013,901,4.15,902,4.503,903,3.874,1171,4.262,1191,4.395,1193,3.79,1196,2.222,1339,2.458,1360,5.111,1367,2.995,1371,3.269,1372,3.972,1376,3.635,1378,3.972,1383,2.222,1386,4.339,1399,3.433,1430,1.887,1435,4.642,1437,3.173,1459,1.809,1461,5.411,1468,2.794,1469,4.1,1498,3.173,1507,5.714,1536,3.998,1607,5.479,1753,2.61,1842,2.329,1884,4.68,1889,2.222,1895,3.973,1914,6.736,1938,1.681,1958,2.903,2096,1.382,2259,3.858,2263,4.399,2267,3.635,2310,3.566,2316,2.405,2344,4.955,2347,3.027,2349,1.741,2350,2.794,2351,3.635,2352,3.791,2355,3.027,2375,5.943,2401,3.973,2421,2.405,2422,3.791,2443,3.566,2448,3.566,2449,2.222,2450,5.071,2451,5.631,2452,3.566,2453,3.566,2499,3.566,2542,5.53,2592,4.518,2615,3.791,2680,1.809,2765,1.627,2766,3.027,2767,5.53,2768,1.977,2769,3.347,2802,2.086,2925,3.347,2934,3.173,2940,4.466,2967,3.173,2975,2.405,2994,1.887,3002,3.173,3677,1.977,3824,3.858,3836,3.566,3855,5.53,3935,4.832,3955,3.858,4268,4.16,4302,1.887,4313,1.977,4323,4.16,4325,1.809,4326,1.809,4328,1.809,4329,1.809,4330,1.809,4331,1.809,4332,4.16,4333,1.809,4334,1.809,4359,1.809,4584,5.596,4721,5.53,4947,5.53,5014,2.222,5268,5.805,5273,3.635,5277,3.173,5284,2.222,5285,2.222,5288,7.056,5302,2.405,5331,2.222,5332,4.797,5343,4.466,5355,2.405,5364,2.405,5378,2.222,5382,2.086,5411,5.53,5457,5.891,5466,3.347,5468,1.887,5489,6.124,5492,4.192,5498,3.566,5503,3.347,5506,2.405,5531,2.222,5533,2.405,5536,4.192,5540,3.566,5563,3.347,5582,5.111,5587,3.566,5620,3.566,5634,2.405,5651,2.222,5657,4.466,5671,3.347,5675,2.222,5694,4.192,5711,3.858,5712,2.405,5720,6.276,5760,3.858,5777,2.405,5780,3.858,5783,2.222,5806,3.858,5827,3.858,5902,7.635,5903,7.776,5904,7.283,5905,3.858,5906,3.858,5907,4.303,5908,4.303,5909,6.167,5910,6.167,5911,2.681,5912,2.681,5913,2.681,5914,2.681,5915,2.681,5916,2.681,5917,2.681,5918,2.681,5919,4.303,5920,4.303,5921,4.303,5922,4.303,5923,6.167,5924,4.303,5925,6.167,5926,4.303,5927,4.303,5928,5.53,5929,4.303,5930,4.832,5931,5.389,5932,5.389,5933,5.389,5934,8.333,5935,3.858,5936,3.858,5937,4.303,5938,2.681,5939,2.681,5940,4.303,5941,4.303,5942,2.405,5943,2.681,5944,2.681,5945,2.681,5946,2.681,5947,2.681,5948,2.681,5949,2.405,5950,2.681,5951,5.389,5952,4.303,5953,4.303,5954,5.53,5955,5.53,5956,6.167,5957,5.53,5958,6.167,5959,5.53,5960,6.167,5961,4.303,5962,2.681,5963,4.303,5964,2.681,5965,2.681,5966,2.681,5967,2.681,5968,2.681,5969,2.681,5970,6.167,5971,4.303,5972,4.303,5973,2.681,5974,2.681,5975,2.681,5976,2.681,5977,2.681,5978,2.681]],["title/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[901,0.965,1399,0.982,1507,1.677,1842,1.29,2439,1.258,2700,1.854,5260,1.402,5979,2.383]],["body/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[8,0.747,21,0.005,22,0.498,23,0.44,40,0.795,41,2.397,58,0.002,59,0.002,133,1.986,205,2.873,209,2.136,257,2.671,263,1.225,267,2.356,270,1.986,272,2.145,279,3.325,282,2.706,283,2.706,288,4.468,289,2.235,292,2.496,306,3.006,352,1.457,354,1.986,649,3.158,780,2.508,782,2.508,811,2.354,848,3.195,862,1.638,863,1.682,887,3.684,888,4.15,895,3.58,901,4.123,902,4.609,903,3.738,1001,4.835,1171,3.878,1191,4.464,1193,3.822,1195,2.354,1196,2.508,1367,3.668,1372,2.785,1375,2.508,1378,2.785,1386,2.129,1399,3.479,1430,3.332,1435,4.431,1456,2.042,1459,3.195,1461,5.484,1469,1.638,1522,2.231,1536,3.483,1629,3.742,1753,4.345,1842,4.112,1844,3.684,1869,2.714,1884,1.965,1914,2.231,1949,2.231,2096,2.44,2259,2.706,2263,3.781,2344,4.826,2346,3.332,2347,5.585,2348,2.129,2350,4.285,2351,4.452,2375,4.832,2393,4.538,2450,2.129,2451,3.788,2592,1.897,2615,5.78,2680,2.042,2766,4.104,2768,4.301,2769,4.538,2925,2.354,2934,2.231,2940,4.835,2967,2.231,2974,5.918,2986,2.354,2991,2.129,2994,2.129,2996,2.714,3002,6.058,3022,6.423,3024,4.246,3530,2.231,3677,2.231,3808,4.246,3815,4.246,3836,3.924,3958,6.423,3959,4.246,4268,2.042,4271,3.684,4323,2.042,4325,2.042,4326,2.042,4328,2.042,4329,2.042,4330,2.042,4331,2.042,4332,2.042,4333,2.042,4334,2.042,4359,2.042,4546,4.246,4758,4.246,4859,4.246,5268,2.231,5273,3.936,5288,4.835,5297,4.246,5324,2.714,5332,6.391,5343,6.809,5378,2.508,5429,2.354,5430,2.508,5457,5.133,5466,2.354,5468,2.129,5472,2.714,5489,5.572,5492,2.354,5503,2.354,5518,2.714,5536,3.684,5540,2.508,5598,2.714,5657,2.508,5671,3.684,5673,5.936,5675,2.508,5682,4.246,5694,3.684,5720,5.469,5724,2.508,5727,4.246,5729,5.231,5783,2.508,5787,2.714,5805,2.714,5810,2.714,5826,2.714,5829,2.714,5859,2.714,5901,8.685,5902,2.714,5903,2.714,5904,2.714,5905,4.246,5906,2.714,5928,5.231,5930,5.918,5935,2.714,5936,2.714,5942,7.367,5949,4.246,5954,4.246,5955,4.246,5957,2.714,5959,2.714,5980,3.026,5981,3.026,5982,3.026,5983,3.026,5984,3.026,5985,3.026,5986,3.026,5987,3.026,5988,3.026,5989,3.026,5990,3.026,5991,3.026,5992,4.735,5993,4.735,5994,4.735,5995,7.163,5996,3.026,5997,3.026,5998,4.735,5999,3.026,6000,3.026,6001,3.026,6002,3.026,6003,4.735,6004,3.026,6005,4.735,6006,5.834,6007,4.735,6008,5.834,6009,3.026,6010,3.026,6011,4.735,6012,5.834,6013,3.026,6014,6.599,6015,4.735,6016,5.834,6017,3.026,6018,4.735,6019,3.026,6020,4.735,6021,3.026,6022,4.735,6023,3.026,6024,4.735,6025,3.026,6026,4.735,6027,3.026,6028,3.026,6029,4.735,6030,3.026,6031,4.735,6032,4.735,6033,3.026,6034,4.735,6035,3.026,6036,4.735,6037,3.026,6038,4.735,6039,3.026,6040,3.026,6041,3.026,6042,8.216,6043,7.163,6044,4.735,6045,4.735,6046,5.834,6047,3.026,6048,3.026,6049,3.026,6050,3.026,6051,3.026,6052,3.026,6053,3.026,6054,3.026,6055,3.026,6056,3.026,6057,3.026,6058,3.026,6059,3.026,6060,3.026,6061,3.026,6062,3.026,6063,3.026,6064,3.026]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["0",{"_index":476,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["0.0.0.0/0",{"_index":3269,"title":{},"body":{"classes/Keyrings.html":{}}}],["0.0.11",{"_index":4168,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":4179,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":4208,"title":{},"body":{"dependencies.html":{}}}],["0.41.1",{"_index":4173,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4178,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4213,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4203,"title":{},"body":{"dependencies.html":{}}}],["000000000000000000000000",{"_index":1776,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["01",{"_index":6014,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["07/schema",{"_index":5994,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1",{"_index":257,"title":{"classes/AbstractSettingsService-1.html":{}},"body":{"controllers/AgentsController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/MigrationsService.html":{},"classes/PasswordPoliciesDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"license.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1&sort%5bsubject%5d=1",{"_index":5413,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["1.0.0",{"_index":4205,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":4167,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4183,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":4166,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":4198,"title":{},"body":{"dependencies.html":{}}}],["1.12.18",{"_index":4212,"title":{},"body":{"dependencies.html":{}}}],["1.3.4",{"_index":5235,"title":{},"body":{"properties.html":{}}}],["1.4.0",{"_index":4222,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":4216,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":4181,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":4191,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3530,"title":{},"body":{"injectables/MigrationsService.html":{},"classes/PasswordPoliciesDto.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["10.0.3",{"_index":4164,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":4163,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":4158,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":4162,"title":{},"body":{"dependencies.html":{}}}],["10.4.8",{"_index":4159,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":6028,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1000",{"_index":678,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/TokenData.html":{}}}],["102",{"_index":5234,"title":{},"body":{"overview.html":{}}}],["10y",{"_index":3290,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["11",{"_index":3956,"title":{},"body":{"classes/SmsSettingsDto.html":{},"license.html":{}}}],["11.0.0",{"_index":4184,"title":{},"body":{"dependencies.html":{}}}],["11.0.2",{"_index":4192,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1360,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["12.1.0",{"_index":4206,"title":{},"body":{"dependencies.html":{}}}],["123456",{"_index":3855,"title":{},"body":{"classes/ResetByCodeDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["13",{"_index":5120,"title":{},"body":{"license.html":{}}}],["14.1.2",{"_index":4189,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":4947,"title":{},"body":{"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["16",{"_index":1358,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["19",{"_index":5232,"title":{},"body":{"overview.html":{}}}],["1980",{"_index":5960,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["1996",{"_index":4760,"title":{},"body":{"license.html":{}}}],["1y",{"_index":1047,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":4271,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2.0.2",{"_index":4157,"title":{},"body":{"dependencies.html":{}}}],["2.0.39",{"_index":4217,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":4161,"title":{},"body":{"dependencies.html":{}}}],["2.6.1",{"_index":4221,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":4758,"title":{},"body":{"license.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["200",{"_index":619,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["2007",{"_index":4443,"title":{},"body":{"license.html":{}}}],["201",{"_index":2443,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["202",{"_index":5971,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["2020",{"_index":6017,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2024",{"_index":6013,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["24",{"_index":1009,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["25",{"_index":1738,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"overview.html":{}}}],["256",{"_index":1363,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["28",{"_index":5100,"title":{},"body":{"license.html":{}}}],["29",{"_index":4441,"title":{},"body":{"license.html":{}}}],["3",{"_index":2667,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["3.0.0",{"_index":4170,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":4171,"title":{},"body":{"dependencies.html":{}}}],["3.13.0",{"_index":4196,"title":{},"body":{"dependencies.html":{}}}],["3.17.0",{"_index":4218,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":4160,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":3821,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"license.html":{}}}],["30000",{"_index":5482,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["33",{"_index":5233,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":1008,"title":{},"body":{"injectables/AuthService.html":{}}}],["3f4ac",{"_index":3860,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["4",{"_index":1618,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["4.0.1",{"_index":4204,"title":{},"body":{"dependencies.html":{}}}],["4.15.3",{"_index":4194,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":4172,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":4186,"title":{},"body":{"dependencies.html":{}}}],["4.9.0",{"_index":4220,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1440,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["404",{"_index":1609,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["465",{"_index":799,"title":{},"body":{"modules/AppModule.html":{}}}],["5",{"_index":1001,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["5.0.22",{"_index":3610,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["5.4.1",{"_index":4190,"title":{},"body":{"dependencies.html":{}}}],["5.8.2",{"_index":4177,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":4283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["500",{"_index":594,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/IdentitiesValidationService.html":{}}}],["5000",{"_index":3109,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["500mb",{"_index":1703,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["53",{"_index":5409,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["587",{"_index":801,"title":{},"body":{"modules/AppModule.html":{}}}],["5f7b1b3b7f7b1b3b7f7b1b3b",{"_index":3367,"title":{},"body":{"classes/Logger.html":{}}}],["6.0.0",{"_index":4219,"title":{},"body":{"dependencies.html":{}}}],["6.10.0",{"_index":4176,"title":{},"body":{"dependencies.html":{}}}],["6.9.16",{"_index":4200,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":679,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["604800",{"_index":3817,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["66d80ab41821baca9bf965b2",{"_index":266,"title":{},"body":{"classes/ActivationDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FusionDto.html":{},"classes/NeedChangePasswordDto.html":{}}}],["6b",{"_index":4843,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4869,"title":{},"body":{"license.html":{}}}],["7",{"_index":1010,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["7.1.0",{"_index":4187,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":4210,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":3798,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["8",{"_index":857,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"classes/PasswordPoliciesDto.html":{}}}],["8.0.7",{"_index":4165,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":4202,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":4169,"title":{},"body":{"dependencies.html":{}}}],["8.9.5",{"_index":4195,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":784,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["900",{"_index":3840,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["99",{"_index":4281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["999999",{"_index":1403,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["9]+/.test(current",{"_index":715,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["9]+\\.[0",{"_index":714,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["9_",{"_index":4356,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["9a",{"_index":402,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_",{"_index":787,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["__dirname",{"_index":813,"title":{},"body":{"modules/AppModule.html":{},"injectables/MigrationsService.html":{}}}],["__proto__",{"_index":2947,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_checkmigrationlockfile",{"_index":3486,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_common/abstracts/abstract.controller",{"_index":430,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{}}}],["_common/abstracts/abstract.queue.processor",{"_index":5474,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["_common/abstracts/abstract.service",{"_index":851,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["_common/abstracts/abstract.service.schema",{"_index":239,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["_common/abstracts/dto/custom",{"_index":513,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["_common/abstracts/dto/metadata.dto",{"_index":2161,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_common/abstracts/schemas/abstract.schema",{"_index":372,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["_common/abstracts/schemas/parts/metadata.part.schema",{"_index":135,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["_common/data/api",{"_index":1028,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["_common/data/console",{"_index":1026,"title":{},"body":{"injectables/AuthService.html":{}}}],["_common/decorators/api",{"_index":432,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/decorators/params/req",{"_index":912,"title":{},"body":{"controllers/AuthController.html":{}}}],["_common/decorators/public.decorator",{"_index":636,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["_common/dto/paginated",{"_index":34,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["_common/errors/validationexception",{"_index":2620,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_common/filters/identities",{"_index":2742,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["_common/filters/mongoose",{"_index":755,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/guards/auth.guard",{"_index":753,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/helpers/pick",{"_index":443,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/observers/shutdown.observer",{"_index":771,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/pipes/dto",{"_index":758,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/pipes/object",{"_index":446,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/plugins/mongoose/auto",{"_index":2296,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["_common/types/agent.type",{"_index":914,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["_common/types/mixed",{"_index":295,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_common/types/partial",{"_index":449,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/validation",{"_index":4123,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["_config/validschema",{"_index":2908,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_debug",{"_index":1511,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["_dto/_parts/additionalfields.dto",{"_index":2911,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/agents.dto",{"_index":560,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/ask",{"_index":1319,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["_dto/change",{"_index":1321,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["_dto/config.dto",{"_index":2901,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/delete",{"_index":1221,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_dto/execute",{"_index":1213,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_dto/filestorage.dto",{"_index":2019,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["_dto/form.dto",{"_index":2129,"title":{},"body":{"controllers/FormController.html":{}}}],["_dto/identities.dto",{"_index":2425,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_dto/jobs.dto",{"_index":3190,"title":{},"body":{"controllers/JobsController.html":{}}}],["_dto/keyrings.dto",{"_index":3341,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["_dto/parts/security.part.dto",{"_index":565,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/reset",{"_index":1324,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["_dto/sync",{"_index":1216,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_enum/action",{"_index":1219,"title":{},"body":{"controllers/BackendsController.html":{},"classes/ExecuteJobDto.html":{}}}],["_enum/types",{"_index":2108,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_enums/config.object",{"_index":1764,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["_enums/lifecycle.enum",{"_index":2289,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_enums/state.enum",{"_index":3177,"title":{},"body":{"classes/Jobs.html":{}}}],["_enums/states.enum",{"_index":2291,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_exception",{"_index":1918,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["_executemigrations",{"_index":3487,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_id",{"_index":122,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/FormController.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"classes/InitInfoPart.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["_id:identity._id},{datastatus",{"_index":1509,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["_loadmigrationsfiles",{"_index":3488,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_loadmigrationsfiles(currenttimestamp",{"_index":3493,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_metadata",{"_index":3654,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["_middlewares/ensure",{"_index":2752,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["_migrateemployeenumbertoarray",{"_index":1871,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["_model",{"_index":181,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["_options",{"_index":3097,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["_parent",{"_index":4032,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["_parts",{"_index":5539,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/additionalfields.dto",{"_index":2370,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_parts/additionalfields.part.schema",{"_index":2292,"title":{},"body":{"classes/Identities.html":{}}}],["_parts/addtionalfields.dto.stub",{"_index":5524,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/concerned",{"_index":3178,"title":{},"body":{"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["_parts/data.part.schema",{"_index":3364,"title":{},"body":{"classes/Logger.html":{}}}],["_parts/inetorgperson.dto",{"_index":2369,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_parts/inetorgperson.dto.stub",{"_index":5526,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/inetorgperson.part",{"_index":2290,"title":{},"body":{"classes/Identities.html":{}}}],["_queue",{"_index":69,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["_req",{"_index":75,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["_schemas/_parts/additionalfields.part.schema",{"_index":2836,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_schemas/filestorage.schema",{"_index":2084,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["_schemas/form.schema",{"_index":2217,"title":{},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{}}}],["_schemas/identities.schema",{"_index":2426,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["_schemas/jobs.schema",{"_index":3229,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["_schemas/logger.schema",{"_index":3383,"title":{},"body":{"modules/LoggerModule.html":{},"injectables/LoggerService.html":{}}}],["_schemas/tasks.schema",{"_index":4009,"title":{},"body":{"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["_service",{"_index":457,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{}}}],["_services/transformers",{"_index":2021,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["_validation",{"_index":2430,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["_writemigrationlockfile",{"_index":3489,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_writemigrationlockfile(migrationkey",{"_index":3496,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["a.match(/\\d{10",{"_index":3562,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["ability",{"_index":4919,"title":{},"body":{"license.html":{}}}],["abortsignal.timeout(1000",{"_index":701,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["above",{"_index":4979,"title":{},"body":{"license.html":{}}}],["absence",{"_index":4785,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":5180,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":5206,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":49,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstract.service",{"_index":98,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["abstractcontroller",{"_index":1,"title":{"classes/AbstractController.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{}}}],["abstractcontrollercontext",{"_index":17,"title":{"interfaces/AbstractControllerContext.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["abstractqueueprocessor",{"_index":63,"title":{"classes/AbstractQueueProcessor.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["abstractschema",{"_index":119,"title":{"classes/AbstractSchema.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["abstractservice",{"_index":66,"title":{"injectables/AbstractService.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:17",{"_index":91,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:18",{"_index":92,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:19",{"_index":88,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:20",{"_index":90,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservicecontext",{"_index":80,"title":{"interfaces/AbstractServiceContext.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["abstractserviceschema",{"_index":179,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:130",{"_index":230,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:16",{"_index":3340,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["abstractserviceschema:165",{"_index":215,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:17",{"_index":556,"title":{},"body":{"injectables/AgentsService.html":{}}}],["abstractserviceschema:207",{"_index":235,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:24",{"_index":198,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:269",{"_index":237,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:27",{"_index":557,"title":{},"body":{"injectables/AgentsService.html":{}}}],["abstractserviceschema:330",{"_index":220,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:35",{"_index":224,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:45",{"_index":210,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:51",{"_index":232,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:60",{"_index":226,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:96",{"_index":228,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractsettingsservice",{"_index":176,"title":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["abstractsettingsservice:13",{"_index":3435,"title":{},"body":{"injectables/MailadmService.html":{}}}],["abstractsettingsservice:16",{"_index":3431,"title":{},"body":{"injectables/MailadmService.html":{}}}],["abstractsettingsservice:22",{"_index":3436,"title":{},"body":{"injectables/MailadmService.html":{}}}],["abstractsettingsservice:7",{"_index":3437,"title":{},"body":{"injectables/MailadmService.html":{}}}],["abstraite",{"_index":5431,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["abuse",{"_index":4547,"title":{},"body":{"license.html":{}}}],["acc",{"_index":2471,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["acc[groupindex",{"_index":2670,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["acc[groupindex].elements.push",{"_index":2673,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["acc[key",{"_index":2469,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["accent",{"_index":5629,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["accept",{"_index":5006,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":5005,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":3824,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["access",{"_index":4536,"title":{},"body":{"license.html":{}}}],["access_token",{"_index":1003,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["access_token_expires_in",{"_index":972,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token_prefix",{"_index":973,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":5071,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["accessors",{"_index":13,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{}}}],["accompagnement",{"_index":5389,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accompagnés",{"_index":5362,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accompanied",{"_index":4825,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5184,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4784,"title":{},"body":{"license.html":{}}}],["according",{"_index":5175,"title":{},"body":{"license.html":{}}}],["account.dto",{"_index":1333,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["account.dto.ts",{"_index":3069,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["account.dto.ts:7",{"_index":3071,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["accéder",{"_index":5439,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["achieve",{"_index":5189,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":4723,"title":{},"body":{"license.html":{}}}],["acls",{"_index":1964,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["acquired",{"_index":5052,"title":{},"body":{"license.html":{}}}],["actif",{"_index":1506,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["action",{"_index":1927,"title":{},"body":{"classes/ExecuteJobDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["actions",{"_index":5014,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["actiontype",{"_index":1218,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/ExecuteJobDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype.identity_create",{"_index":1274,"title":{},"body":{"controllers/BackendsController.html":{}}}],["actiontype.identity_delete].includes",{"_index":1275,"title":{},"body":{"controllers/BackendsController.html":{}}}],["actiontype.identity_password_change",{"_index":1500,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["actiontype.identity_password_reset",{"_index":1583,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["actiontype.identity_update",{"_index":1273,"title":{},"body":{"controllers/BackendsController.html":{}}}],["activation",{"_index":1477,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesActivationController.html":{},"interfaces/TokenData.html":{}}}],["activation(@res",{"_index":2333,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation(res",{"_index":2320,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation.controller",{"_index":2749,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["activation.controller.ts",{"_index":2319,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation.controller.ts:19",{"_index":2324,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation.service",{"_index":2327,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{}}}],["activationdto",{"_index":260,"title":{"classes/ActivationDto.html":{}},"body":{"classes/ActivationDto.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{}}}],["active",{"_index":1590,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["active/desactive",{"_index":2322,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activities",{"_index":4626,"title":{},"body":{"license.html":{}}}],["activity",{"_index":5095,"title":{},"body":{"license.html":{}}}],["actual",{"_index":5076,"title":{},"body":{"license.html":{}}}],["actually",{"_index":4891,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":4599,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":815,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":2674,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["added",{"_index":1272,"title":{},"body":{"controllers/BackendsController.html":{},"license.html":{}}}],["added.name",{"_index":1276,"title":{},"body":{"controllers/BackendsController.html":{}}}],["addformats",{"_index":2903,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["addformats(this.ajv",{"_index":2912,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["addhttpserver",{"_index":3928,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["addhttpserver(server",{"_index":3930,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["additional",{"_index":2439,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["additionalfields",{"_index":2259,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["additionalfieldspart",{"_index":280,"title":{"classes/AdditionalFieldsPart.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["additionalfieldspartdto",{"_index":2342,"title":{"classes/additionalFieldsPartDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{}}}],["additionalfieldspartdto,callexception:boolean=true",{"_index":2982,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["additionalfieldspartdtostub",{"_index":5523,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["additionalfieldspartschema",{"_index":297,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{}}}],["additionalfilters",{"_index":5844,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["additionnel",{"_index":5926,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["additionnels",{"_index":2450,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["address",{"_index":5128,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":4596,"title":{},"body":{"license.html":{}}}],["administrateurs",{"_index":5354,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["adopted",{"_index":4757,"title":{},"body":{"license.html":{}}}],["adresse",{"_index":3955,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["adversely",{"_index":4926,"title":{},"body":{"license.html":{}}}],["advised",{"_index":5171,"title":{},"body":{"license.html":{}}}],["aes",{"_index":1362,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["affects",{"_index":4927,"title":{},"body":{"license.html":{}}}],["affero",{"_index":5117,"title":{},"body":{"license.html":{}}}],["affichage",{"_index":5326,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["affichant",{"_index":5855,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["affiche",{"_index":1194,"title":{},"body":{"controllers/BackendsController.html":{}}}],["affirmed",{"_index":5033,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":5580,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["affirms",{"_index":4718,"title":{},"body":{"license.html":{}}}],["afterall(async",{"_index":5561,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["aftereach(async",{"_index":5559,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["against",{"_index":4774,"title":{},"body":{"license.html":{}}}],["agent",{"_index":327,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentcreatequestions",{"_index":299,"title":{"classes/AgentCreateQuestions.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/CliModule.html":{}}}],["agents",{"_index":344,"title":{"classes/Agents.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["agents.command",{"_index":1647,"title":{},"body":{"modules/CliModule.html":{}}}],["agents.controller",{"_index":547,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.name",{"_index":551,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.security.secretkey",{"_index":941,"title":{},"body":{"controllers/AuthController.html":{}}}],["agents.service",{"_index":451,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agents/_schemas/agents.schema",{"_index":1223,"title":{},"body":{"controllers/BackendsController.html":{}}}],["agents/agents.module",{"_index":1297,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["agents/agents.service",{"_index":1222,"title":{},"body":{"controllers/BackendsController.html":{}}}],["agentscommand",{"_index":347,"title":{"classes/AgentsCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscommand.registerwithsubcommands",{"_index":553,"title":{},"body":{"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscontroller",{"_index":386,"title":{"controllers/AgentsController.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agentscontroller.projection",{"_index":465,"title":{},"body":{"controllers/AgentsController.html":{}}}],["agentscreatecommand",{"_index":330,"title":{"classes/AgentsCreateCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentscreatedto",{"_index":323,"title":{"classes/AgentsCreateDto.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentscreatedto:17",{"_index":529,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:22",{"_index":522,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:27",{"_index":523,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:32",{"_index":525,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:37",{"_index":528,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:43",{"_index":527,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:48",{"_index":521,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:58",{"_index":526,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:63",{"_index":524,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentsdto",{"_index":397,"title":{"classes/AgentsDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentsmodule",{"_index":530,"title":{"modules/AgentsModule.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["agentsschema",{"_index":378,"title":{},"body":{"classes/Agents.html":{},"modules/AgentsModule.html":{}}}],["agentsservice",{"_index":325,"title":{"injectables/AgentsService.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{},"overview.html":{}}}],["agentstate",{"_index":3982,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/enumerations.html":{}}}],["agentstate.pending",{"_index":3984,"title":{},"body":{"classes/StatePart.html":{}}}],["agentstatelist",{"_index":3976,"title":{},"body":{"classes/StatePart.html":{}}}],["agentsupdatedto",{"_index":418,"title":{"classes/AgentsUpdateDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agenttype",{"_index":878,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["aggregate",{"_index":4812,"title":{},"body":{"license.html":{}}}],["agree",{"_index":5112,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":5157,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":5062,"title":{},"body":{"license.html":{}}}],["aide",{"_index":1545,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["aident",{"_index":5579,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["aim",{"_index":4543,"title":{},"body":{"license.html":{}}}],["ainsi",{"_index":5711,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["ais",{"_index":5349,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ajout",{"_index":5749,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajouterez",{"_index":5988,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ajoutée",{"_index":5828,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ajoutés",{"_index":5738,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajv",{"_index":2618,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajverrors",{"_index":2909,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ajverrors(this.ajv",{"_index":2913,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["alias",{"_index":2377,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["aliases",{"_index":5237,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all')@apioperation({summary",{"_index":2400,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["alleging",{"_index":5041,"title":{},"body":{"license.html":{}}}],["aller",{"_index":4321,"title":{},"body":{"index.html":{}}}],["allerrors",{"_index":2621,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["allexceptionfilter",{"_index":580,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{}}}],["allons",{"_index":5507,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["allow",{"_index":4570,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":4455,"title":{},"body":{"license.html":{}}}],["allowednetworks",{"_index":3262,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["along",{"_index":4787,"title":{},"body":{"license.html":{}}}],["already",{"_index":1040,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MigrationsService.html":{},"injectables/UniquenessMailValidator.html":{},"license.html":{}}}],["alternatif",{"_index":3796,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["alternative",{"_index":3740,"title":{},"body":{"controllers/PasswdController.html":{},"license.html":{}}}],["although",{"_index":4539,"title":{},"body":{"license.html":{}}}],["amazonwebservicess3storageconfig",{"_index":1682,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["amount",{"_index":3806,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["améliorant",{"_index":5731,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["amélioration",{"_index":5753,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliorations",{"_index":5722,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliore",{"_index":5637,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["améliorée",{"_index":5734,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ancillary",{"_index":5008,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":4521,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":5737,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annuaires",{"_index":4305,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["anti",{"_index":4745,"title":{},"body":{"license.html":{}}}],["any).filename",{"_index":4063,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["any).type",{"_index":2958,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["any)?.id",{"_index":3145,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["any,user",{"_index":3347,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["anyone",{"_index":4795,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4611,"title":{},"body":{"license.html":{}}}],["aperçu",{"_index":5624,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["api",{"_index":617,"title":{"additional-documentation/filtres-api.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{}}}],["apibearerauth",{"_index":637,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["apicreatedecorator",{"_index":431,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/KeyringsController.html":{}}}],["apicreatedecorator(agentscreatedto",{"_index":458,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apicreatedecorator(formdto",{"_index":2134,"title":{},"body":{"controllers/FormController.html":{}}}],["apicreatedecorator(identitiescreatedto",{"_index":2431,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apicreatedecorator(identitiesupsertdto",{"_index":2800,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["apicreatedecorator(keyringscreatedto",{"_index":3307,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apideletedresponsedecorator",{"_index":434,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{}}}],["apideletedresponsedecorator(agentsdto",{"_index":479,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apideletedresponsedecorator(filestoragedto",{"_index":2052,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apideletedresponsedecorator(formdto",{"_index":2140,"title":{},"body":{"controllers/FormController.html":{}}}],["apideletedresponsedecorator(identitiesdto",{"_index":2488,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apideletedresponsedecorator(keyringsdto",{"_index":3311,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiextramodels",{"_index":31,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apiextramodels(paginatedresponsedto",{"_index":48,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apifileuploaddecorator",{"_index":2017,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["apifileuploaddecorator(fileuploaddto",{"_index":2028,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["apioperation",{"_index":638,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["apipaginateddecorator",{"_index":437,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(agentsdto",{"_index":464,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(filestoragedto",{"_index":2032,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(formdto",{"_index":2135,"title":{},"body":{"controllers/FormController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(identitiesdto",{"_index":2456,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(jobsdto",{"_index":3195,"title":{},"body":{"controllers/JobsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(keyringsdto",{"_index":3308,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiparam",{"_index":426,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apiproperty",{"_index":275,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["apiproperty()@isarray()@isstring({each",{"_index":4366,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["apiproperty({description",{"_index":3081,"title":{},"body":{"classes/InitManyDto.html":{}}}],["apiproperty({enum",{"_index":1921,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["apiproperty({example",{"_index":864,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/InitAccountDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["apiproperty({type",{"_index":1945,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/additionalFieldsPartDto.html":{}}}],["apiquery",{"_index":639,"title":{},"body":{"controllers/AppController.html":{},"controllers/FilestorageController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["apiquery({name",{"_index":625,"title":{},"body":{"controllers/AppController.html":{}}}],["apireadresponsedecorator",{"_index":439,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apireadresponsedecorator(agentsdto",{"_index":473,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apireadresponsedecorator(filestoragedto",{"_index":2038,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["apireadresponsedecorator(formdto",{"_index":2137,"title":{},"body":{"controllers/FormController.html":{}}}],["apireadresponsedecorator(identitiesdto",{"_index":2459,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apireadresponsedecorator(jobsdto",{"_index":3200,"title":{},"body":{"controllers/JobsController.html":{}}}],["apireadresponsedecorator(keyringsdto",{"_index":3310,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiresponse",{"_index":640,"title":{},"body":{"controllers/AppController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["apisession",{"_index":600,"title":{"classes/ApiSession.html":{}},"body":{"classes/ApiSession.html":{},"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["apitags",{"_index":427,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{}}}],["apitags('core",{"_index":1783,"title":{},"body":{"controllers/CoreController.html":{}}}],["apitags('core/agents",{"_index":452,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apitags('core/auth",{"_index":917,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('core/backends",{"_index":1233,"title":{},"body":{"controllers/BackendsController.html":{}}}],["apitags('core/filestorage",{"_index":2024,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apitags('core/jobs",{"_index":3193,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('core/keyrings",{"_index":3305,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apitags('forms",{"_index":2132,"title":{},"body":{"controllers/FormController.html":{}}}],["apitags('management",{"_index":3447,"title":{},"body":{"controllers/ManagementController.html":{}}}],["apitags('management/identities",{"_index":2330,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["apitags('management/identities/jsonforms",{"_index":2574,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["apitags('management/identities/validation",{"_index":2838,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["apitags('management/passwd",{"_index":3713,"title":{},"body":{"controllers/PasswdController.html":{}}}],["apitags('settings",{"_index":3422,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{}}}],["apiupdatedecorator",{"_index":440,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["apiupdatedecorator(agentsupdatedto",{"_index":477,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apiupdatedecorator(filestorageupdatedto",{"_index":2051,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apiupdatedecorator(formupdatedto",{"_index":2139,"title":{},"body":{"controllers/FormController.html":{}}}],["apiupdatedecorator(identitiesupdatedto",{"_index":2473,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apiurl",{"_index":5831,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["app",{"_index":630,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["app.controller",{"_index":747,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":635,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["app_filter",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["app_guard",{"_index":750,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":751,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":612,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["appel",{"_index":5710,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["appelant",{"_index":5816,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appeler",{"_index":5823,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appels",{"_index":5680,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["applicable",{"_index":4616,"title":{},"body":{"license.html":{}}}],["application",{"_index":1674,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["application/json",{"_index":5923,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["application/octet",{"_index":4054,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["application/pdf",{"_index":4046,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["applications",{"_index":4307,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["applied",{"_index":4576,"title":{},"body":{"license.html":{}}}],["applies",{"_index":4476,"title":{},"body":{"license.html":{}}}],["appliquer",{"_index":3732,"title":{},"body":{"controllers/PasswdController.html":{}}}],["appliquer'})@apiresponse({status",{"_index":3684,"title":{},"body":{"controllers/PasswdController.html":{}}}],["apply",{"_index":4481,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":728,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apportées",{"_index":5723,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["appropriate",{"_index":4640,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":4779,"title":{},"body":{"license.html":{}}}],["appropriés",{"_index":5340,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["approximates",{"_index":5179,"title":{},"body":{"license.html":{}}}],["appservice",{"_index":634,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"overview.html":{}}}],["après",{"_index":3829,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["arbitraire",{"_index":5640,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["architecture",{"_index":4319,"title":{},"body":{"index.html":{}}}],["area",{"_index":4549,"title":{},"body":{"license.html":{}}}],["argon2",{"_index":562,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["argon2verify",{"_index":1017,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2verify(user.password",{"_index":1053,"title":{},"body":{"injectables/AuthService.html":{}}}],["args",{"_index":4089,"title":{},"body":{"injectables/UniquenessMailValidator.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["args.constraints",{"_index":4097,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["argumentmetadata",{"_index":1828,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["arguments",{"_index":345,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["argumentshost",{"_index":586,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["arise",{"_index":4557,"title":{},"body":{"license.html":{}}}],["arising",{"_index":5161,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":5072,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":5084,"title":{},"body":{"license.html":{}}}],["array",{"_index":288,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/SyncIdentitiesDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["array.from(filesmap.values",{"_index":3056,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["array.isarray(data",{"_index":705,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["array.isarray(employeenumber",{"_index":1890,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["array.isarray(employeenumbers",{"_index":4354,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["arraynotempty",{"_index":1762,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["arrondi",{"_index":6033,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["arrête",{"_index":5553,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["article",{"_index":4754,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asc",{"_index":5550,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ascii",{"_index":1564,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["ask",{"_index":1540,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asked",{"_index":1419,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asking",{"_index":1404,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["asktoken(asktoken",{"_index":1524,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asktoken.mail",{"_index":1531,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asktoken.uid",{"_index":1525,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asktokendto",{"_index":859,"title":{"classes/AskTokenDto.html":{}},"body":{"classes/AskTokenDto.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["assert",{"_index":4516,"title":{},"body":{"license.html":{}}}],["assertions",{"_index":5496,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["assets",{"_index":673,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["assets_url",{"_index":664,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["assigned",{"_index":5841,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assignés",{"_index":5842,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["associated",{"_index":4697,"title":{},"body":{"license.html":{}}}],["assume",{"_index":5152,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":5183,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4967,"title":{},"body":{"license.html":{}}}],["assure",{"_index":5598,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["assures",{"_index":4579,"title":{},"body":{"license.html":{}}}],["assurez",{"_index":5936,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["async",{"_index":78,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["asynchrones",{"_index":5652,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asyncquery",{"_index":1169,"title":{},"body":{"controllers/BackendsController.html":{}}}],["atimestamp",{"_index":3561,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["attach",{"_index":5191,"title":{},"body":{"license.html":{}}}],["attachment",{"_index":4061,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["attempt",{"_index":4982,"title":{},"body":{"license.html":{}}}],["attendez",{"_index":5940,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attendue",{"_index":5910,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attentes",{"_index":5938,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attention",{"_index":5944,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attr",{"_index":2198,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["attribut",{"_index":2986,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attribute",{"_index":2880,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["attributed",{"_index":4532,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":282,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attributes'})@isoptional",{"_index":4153,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["attributes[key",{"_index":2939,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributeskeys",{"_index":2932,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributeskeys.includes(objectclass",{"_index":2941,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributions",{"_index":4949,"title":{},"body":{"license.html":{}}}],["attributs",{"_index":2350,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attrsoncreate",{"_index":2176,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondefault",{"_index":2177,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondelete",{"_index":2178,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonread",{"_index":2179,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonupdate",{"_index":2180,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["au",{"_index":1376,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["auparavant",{"_index":5754,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["auth",{"_index":802,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["auth.controller",{"_index":956,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":957,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":1795,"title":{},"body":{"modules/CoreModule.html":{}}}],["authcontroller",{"_index":871,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":3255,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["authenticatewithlocal",{"_index":873,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticatewithlocal(@res",{"_index":921,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(res",{"_index":877,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(username",{"_index":986,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentification",{"_index":880,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["authguard",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["authguard('jwt",{"_index":842,"title":{},"body":{"modules/AppModule.html":{}}}],["authmodule",{"_index":947,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":666,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["authorization",{"_index":4904,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":4941,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":5047,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":5088,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4480,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":908,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["auto",{"_index":1139,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete",{"_index":5798,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["autoincrementplugin",{"_index":2295,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["autoincrementpluginoptions",{"_index":1106,"title":{"interfaces/AutoIncrementPluginOptions.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["autoincrementplugintrackerspec",{"_index":1140,"title":{"interfaces/AutoIncrementPluginTrackerSpec.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["automatic",{"_index":5018,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":4710,"title":{},"body":{"license.html":{}}}],["automatique",{"_index":5908,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatiquement",{"_index":5827,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatisés",{"_index":5360,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["autres",{"_index":1522,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["aux",{"_index":2349,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["available",{"_index":4624,"title":{},"body":{"license.html":{}}}],["avatar_url",{"_index":647,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["avec",{"_index":1469,"title":{},"body":{"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avoid",{"_index":4574,"title":{},"body":{"license.html":{}}}],["avoir",{"_index":6000,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avons",{"_index":5533,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["await",{"_index":246,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["away",{"_index":4464,"title":{},"body":{"license.html":{}}}],["awesome",{"_index":4174,"title":{},"body":{"dependencies.html":{}}}],["ayant",{"_index":5913,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["b",{"_index":3560,"title":{},"body":{"injectables/MigrationsService.html":{},"license.html":{}}}],["b.match(/\\d{10",{"_index":3564,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["backend",{"_index":1145,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backendcodesenum",{"_index":4229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backendname",{"_index":4147,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backendresultinfointerface",{"_index":1141,"title":{"interfaces/BackendResultInfoInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{}}}],["backendresultinterface",{"_index":1144,"title":{"interfaces/BackendResultInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backends",{"_index":1159,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backends'})@apiresponse({status",{"_index":3679,"title":{},"body":{"controllers/PasswdController.html":{}}}],["backends.command",{"_index":1652,"title":{},"body":{"modules/CliModule.html":{}}}],["backends.controller",{"_index":1293,"title":{},"body":{"modules/BackendsModule.html":{}}}],["backends.service",{"_index":1215,"title":{},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backends/backends.module",{"_index":1796,"title":{},"body":{"modules/CoreModule.html":{}}}],["backendscommand",{"_index":1147,"title":{"classes/BackendsCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{}}}],["backendscommand.registerwithsubcommands",{"_index":1656,"title":{},"body":{"modules/CliModule.html":{}}}],["backendscontroller",{"_index":1160,"title":{"controllers/BackendsController.html":{}},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backendsmodule",{"_index":1284,"title":{"modules/BackendsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["backendsservice",{"_index":1151,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["backendssyncallcommand",{"_index":1154,"title":{"classes/BackendsSyncallCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["bad",{"_index":1439,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception",{"_index":633,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["badrequestexception(\"la",{"_index":2479,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["badrequestexception('identity",{"_index":2475,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["badrequestexception('impossible",{"_index":1542,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception('invalid",{"_index":716,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception('missing",{"_index":2810,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["badrequestexception('request",{"_index":3038,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["badrequestexception('schema",{"_index":2951,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["badrequestexception(`invalid",{"_index":706,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["barre",{"_index":5853,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["bas",{"_index":5874,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["base",{"_index":4268,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["base64",{"_index":1533,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["based",{"_index":2669,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"license.html":{}}}],["baser",{"_index":5986,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bases",{"_index":4304,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["baseurl",{"_index":350,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["bash",{"_index":5323,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["basic",{"_index":4711,"title":{},"body":{"license.html":{}}}],["basée",{"_index":5886,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basées",{"_index":5885,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basés",{"_index":5653,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["beforeall(async",{"_index":5556,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforeeach(async",{"_index":5569,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["behalf",{"_index":4734,"title":{},"body":{"license.html":{}}}],["being",{"_index":4867,"title":{},"body":{"license.html":{}}}],["believe",{"_index":5082,"title":{},"body":{"license.html":{}}}],["below",{"_index":3822,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"license.html":{}}}],["benefit",{"_index":5075,"title":{},"body":{"license.html":{}}}],["besoin",{"_index":5968,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["besoins",{"_index":5627,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["best",{"_index":5188,"title":{},"body":{"license.html":{}}}],["between",{"_index":4707,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":4814,"title":{},"body":{"license.html":{}}}],["bien",{"_index":5374,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["binary",{"_index":1946,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/MongoDbTestInstance.html":{}}}],["birth",{"_index":5998,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["blacklistedheaders",{"_index":3845,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["blockingconnection",{"_index":833,"title":{},"body":{"modules/AppModule.html":{}}}],["body",{"_index":395,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/RawBodyBufferOptions.html":{},"controllers/SmsadmController.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["body('schema",{"_index":2581,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["body.action",{"_index":1259,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.code",{"_index":3726,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body.id",{"_index":1260,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.id2",{"_index":2513,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["body.inetorgperson.cn",{"_index":2433,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.displayname",{"_index":2437,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.employeetype",{"_index":2432,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.givenname",{"_index":2435,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.sn?.touppercase",{"_index":2434,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.newpassword",{"_index":2545,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["body.payload",{"_index":1262,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.state",{"_index":2483,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.status",{"_index":2334,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["body.token",{"_index":3725,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body.uid",{"_index":3719,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body?.employeetype",{"_index":2593,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["bodyparser",{"_index":1688,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.json",{"_index":3852,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.urlencoded",{"_index":3849,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["boite",{"_index":3739,"title":{},"body":{"controllers/PasswdController.html":{}}}],["bon",{"_index":2968,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["boolean",{"_index":270,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["booléen",{"_index":6009,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bootstrap",{"_index":535,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["both",{"_index":4526,"title":{},"body":{"license.html":{}}}],["bouton",{"_index":5821,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["boutons",{"_index":5860,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["box",{"_index":5213,"title":{},"body":{"license.html":{}}}],["break",{"_index":2961,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{}}}],["browse",{"_index":5230,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":5228,"title":{},"body":{"modules.html":{}}}],["btimestamp",{"_index":3563,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["buffer.middleware.ts",{"_index":3844,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["builder.vue",{"_index":5765,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["bullmodule",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmodule.forrootasync",{"_index":830,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmq",{"_index":97,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"interfaces/ExecuteJobOptions.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["business",{"_index":5092,"title":{},"body":{"license.html":{}}}],["c",{"_index":1441,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["cache",{"_index":643,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"dependencies.html":{}}}],["cahier",{"_index":5261,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["calculer",{"_index":5685,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["calculées",{"_index":5879,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["called",{"_index":4606,"title":{},"body":{"license.html":{}}}],["callexception",{"_index":2889,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["callhandler",{"_index":1905,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["camelcase",{"_index":6034,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["camelcase.example",{"_index":6035,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["capacités",{"_index":5470,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["car",{"_index":5705,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["caracteres",{"_index":3957,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["caractères",{"_index":6043,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["caractères.example",{"_index":6046,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["carry",{"_index":4790,"title":{},"body":{"license.html":{}}}],["cart",{"_index":5399,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["cas",{"_index":5498,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["case",{"_index":2959,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["cases",{"_index":4886,"title":{},"body":{"license.html":{}}}],["catch",{"_index":249,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["catch((e",{"_index":1484,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["catch(error.validationerror",{"_index":3628,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["catch(exception",{"_index":584,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["catch(validationexception",{"_index":2846,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["cause",{"_index":4818,"title":{},"body":{"license.html":{}}}],["ce",{"_index":2994,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cease",{"_index":4986,"title":{},"body":{"license.html":{}}}],["ceci",{"_index":5461,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cela",{"_index":5707,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["celle",{"_index":5634,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["celles",{"_index":5631,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cert",{"_index":1691,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["certain",{"_index":4500,"title":{},"body":{"license.html":{}}}],["certaine",{"_index":5914,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["certains",{"_index":5788,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ces",{"_index":5582,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cessation",{"_index":4997,"title":{},"body":{"license.html":{}}}],["cet",{"_index":5693,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cette",{"_index":5468,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["chacune",{"_index":5790,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chaine",{"_index":2975,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["chalk",{"_index":3505,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["chalk.bold",{"_index":3555,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["champ",{"_index":2355,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champs",{"_index":2344,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["change",{"_index":165,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AuthController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/LocalStrategy.html":{},"classes/NeedChangePasswordDto.html":{},"controllers/PasswdController.html":{},"license.html":{}}}],["change(@body",{"_index":3716,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(body",{"_index":3675,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(passwddto",{"_index":1488,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["changed",{"_index":3721,"title":{},"body":{"controllers/PasswdController.html":{},"license.html":{}}}],["changement",{"_index":1487,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["changepassworddto",{"_index":1300,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["changepwdatnextlogin",{"_index":3867,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["changer",{"_index":2533,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["changing",{"_index":1512,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["channel",{"_index":1225,"title":{},"body":{"controllers/BackendsController.html":{}}}],["chaque",{"_index":2766,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["characterized",{"_index":4916,"title":{},"body":{"license.html":{}}}],["characters",{"_index":3813,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["charactères",{"_index":5943,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["charge",{"_index":4486,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["charges",{"_index":5262,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["chargés",{"_index":5725,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["chaîne",{"_index":6042,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["check",{"_index":1981,"title":{},"body":{"classes/Filestorage.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["checkandcreateobjectclasses",{"_index":2858,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["checkandcreateobjectclasses(data",{"_index":2867,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["checkbox",{"_index":5813,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["checked",{"_index":3792,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["checking",{"_index":5741,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["checkinitoutdated",{"_index":1637,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["checkpwned",{"_index":3778,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["chemin",{"_index":5800,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chiffrement",{"_index":5339,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["children",{"_index":1801,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["choose",{"_index":5136,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":5140,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":4073,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["chunks",{"_index":4071,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["chunks.push(buffer.from(chunk",{"_index":4074,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["ci",{"_index":5620,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cipher",{"_index":1527,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipher.final('base64",{"_index":1534,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipher.getauthtag().tostring('base64",{"_index":1537,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipher.update",{"_index":1530,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipherdata",{"_index":1311,"title":{"interfaces/CipherData.html":{}},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["ciphers",{"_index":807,"title":{},"body":{"modules/AppModule.html":{}}}],["ciphertext",{"_index":1529,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["circumstances",{"_index":4739,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4746,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5182,"title":{},"body":{"license.html":{}}}],["cl",{"_index":1379,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["claim",{"_index":5038,"title":{},"body":{"license.html":{}}}],["claims",{"_index":5049,"title":{},"body":{"license.html":{}}}],["clarifier",{"_index":5532,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["classe",{"_index":2991,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"overview.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["clear",{"_index":4853,"title":{},"body":{"license.html":{}}}],["cleardatabase",{"_index":3595,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["clearly",{"_index":4523,"title":{},"body":{"license.html":{}}}],["clearsession",{"_index":978,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearsession(jwt",{"_index":988,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli/agents.command",{"_index":548,"title":{},"body":{"modules/AgentsModule.html":{}}}],["client",{"_index":5441,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["climodule",{"_index":1643,"title":{"modules/CliModule.html":{}},"body":{"modules/CliModule.html":{},"modules.html":{},"overview.html":{}}}],["close",{"_index":1269,"title":{},"body":{"controllers/BackendsController.html":{}}}],["closely",{"_index":5178,"title":{},"body":{"license.html":{}}}],["cluster_agentsmodule",{"_index":538,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_exports",{"_index":539,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_providers",{"_index":540,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":729,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":730,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":731,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":948,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":951,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":950,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":949,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_backendsmodule",{"_index":1285,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_exports",{"_index":1286,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_imports",{"_index":1287,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_providers",{"_index":1288,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_climodule",{"_index":1644,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["cluster_climodule_imports",{"_index":1645,"title":{},"body":{"modules/CliModule.html":{}}}],["cluster_coremodule",{"_index":1785,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1787,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":1786,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule",{"_index":2080,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule_exports",{"_index":2081,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule_providers",{"_index":2082,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":2214,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":2215,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule",{"_index":2595,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_exports",{"_index":2597,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_providers",{"_index":2596,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule",{"_index":2723,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_exports",{"_index":2726,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_imports",{"_index":2725,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["cluster_identitiesmodule_providers",{"_index":2724,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule",{"_index":2850,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_exports",{"_index":2851,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_providers",{"_index":2852,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["cluster_jobsmodule",{"_index":3225,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_exports",{"_index":3226,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":3227,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule",{"_index":3331,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_exports",{"_index":3333,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_providers",{"_index":3332,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":3380,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":3381,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":3449,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":3451,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_providers",{"_index":3450,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_migrationsmodule",{"_index":3478,"title":{},"body":{"modules/MigrationsModule.html":{},"overview.html":{}}}],["cluster_migrationsmodule_providers",{"_index":3479,"title":{},"body":{"modules/MigrationsModule.html":{},"overview.html":{}}}],["cluster_passwdmodule",{"_index":3754,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_passwdmodule_imports",{"_index":3755,"title":{},"body":{"modules/PasswdModule.html":{}}}],["cluster_passwdmodule_providers",{"_index":3756,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":3913,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_exports",{"_index":3914,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_providers",{"_index":3915,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":4005,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":4006,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":4007,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["clé/valeur",{"_index":2354,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["clés",{"_index":5673,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cn",{"_index":4323,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["codage",{"_index":5377,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["code",{"_index":1374,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["code.dto",{"_index":1336,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["code.dto.ts",{"_index":3854,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.dto.ts:11",{"_index":3857,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.dto.ts:15",{"_index":3859,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.dto.ts:7",{"_index":3861,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.tostring(16",{"_index":1556,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["codes.enum.ts",{"_index":4231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["col",{"_index":2181,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["collect",{"_index":5114,"title":{},"body":{"license.html":{}}}],["collection",{"_index":1132,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Logger.html":{},"injectables/UniquenessMailValidator.html":{}}}],["collections",{"_index":3617,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["collections[key].deletemany",{"_index":3619,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["combination",{"_index":5122,"title":{},"body":{"license.html":{}}}],["combine",{"_index":5119,"title":{},"body":{"license.html":{}}}],["combined",{"_index":4809,"title":{},"body":{"license.html":{}}}],["comes",{"_index":4796,"title":{},"body":{"license.html":{}}}],["command",{"_index":315,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["commander",{"_index":322,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["commandrunner",{"_index":316,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["commands",{"_index":4654,"title":{},"body":{"license.html":{}}}],["comme",{"_index":5291,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comment",{"_index":1938,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MigrationsService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["commentaires",{"_index":5736,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comments",{"_index":1961,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["commercial",{"_index":4896,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":5063,"title":{},"body":{"license.html":{}}}],["common",{"_index":4890,"title":{},"body":{"license.html":{}}}],["commonlogdb",{"_index":3136,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["commonlogdb(payload",{"_index":3152,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["commun",{"_index":5932,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["communication",{"_index":4705,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["communications",{"_index":5330,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["compact",{"_index":6003,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["compagny/nestjs_module_factorydrive",{"_index":767,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["compagny/nestjs_module_restools",{"_index":429,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"dependencies.html":{}}}],["compilation",{"_index":4804,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4813,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":5097,"title":{},"body":{"license.html":{}}}],["compile",{"_index":5576,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compiler",{"_index":4687,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["complet",{"_index":5497,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["completed",{"_index":1279,"title":{},"body":{"controllers/BackendsController.html":{},"miscellaneous/enumerations.html":{}}}],["completer",{"_index":1617,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["completion",{"_index":5325,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["complexity",{"_index":3800,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["compliance",{"_index":5022,"title":{},"body":{"license.html":{}}}],["comply",{"_index":4731,"title":{},"body":{"license.html":{}}}],["complémentaires",{"_index":5979,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["complétée",{"_index":2481,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["component",{"_index":2182,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comportement",{"_index":5678,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["comportements",{"_index":5641,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compos",{"_index":2345,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["composant",{"_index":5758,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["composants",{"_index":5763,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compose",{"_index":4314,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["composition",{"_index":5868,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comprendre",{"_index":5356,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compris",{"_index":4303,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compréhension",{"_index":5740,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["compte",{"_index":1389,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["comptes",{"_index":1636,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["computer",{"_index":4620,"title":{},"body":{"license.html":{}}}],["computers",{"_index":4573,"title":{},"body":{"license.html":{}}}],["concerned",{"_index":3359,"title":{},"body":{"classes/Logger.html":{}}}],["concernedto",{"_index":3162,"title":{},"body":{"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["concernedtopart",{"_index":1657,"title":{"classes/ConcernedToPart.html":{}},"body":{"classes/ConcernedToPart.html":{},"classes/Jobs.html":{}}}],["concernedtopartdto",{"_index":1665,"title":{"classes/ConcernedToPartDTO.html":{}},"body":{"classes/ConcernedToPartDTO.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["concernedtopartschema",{"_index":1663,"title":{},"body":{"classes/ConcernedToPart.html":{},"classes/Jobs.html":{}}}],["concerning",{"_index":5121,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":5129,"title":{},"body":{"license.html":{}}}],["concernées",{"_index":5939,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["concernés",{"_index":5839,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conditioned",{"_index":5091,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4582,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["config",{"_index":70,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["config.get('factorydrive.options",{"_index":835,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('ioredis.options",{"_index":829,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('ioredis.uri",{"_index":828,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('jwt.options.secret",{"_index":3248,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mongoose.options",{"_index":823,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.plugins",{"_index":818,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.uri",{"_index":825,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configinstance",{"_index":1672,"title":{"interfaces/ConfigInstance.html":{}},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["configmodule",{"_index":740,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{}}}],["configmodule.forroot",{"_index":772,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configobjectattributedto",{"_index":1750,"title":{"classes/ConfigObjectAttributeDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["configobjectobjectclassdto",{"_index":1766,"title":{"classes/ConfigObjectObjectClassDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["configobjectschemadto",{"_index":1767,"title":{"classes/ConfigObjectSchemaDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configobjecttype",{"_index":1759,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"miscellaneous/enumerations.html":{}}}],["configs/identities/jsonforms",{"_index":2583,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/jsonforms/${schema",{"_index":2646,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/validations",{"_index":2691,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["configs/identities/validations/${key}.yml",{"_index":2928,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["configservice",{"_index":83,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["configservice.get('ioredis.host",{"_index":831,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('ioredis.port",{"_index":832,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('jwt.options",{"_index":970,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('passport.options",{"_index":968,"title":{},"body":{"modules/AuthModule.html":{}}}],["configur",{"_index":6064,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configuration",{"_index":5273,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configurations",{"_index":5622,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["configure",{"_index":2730,"title":{},"body":{"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configure(consumer",{"_index":2731,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["configurer",{"_index":5639,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["conformes",{"_index":5937,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaissance",{"_index":5915,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaître",{"_index":5807,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["connect",{"_index":3093,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{}}}],["connect(this._options.mongoose.uri",{"_index":3102,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["connect(uri)).connection",{"_index":3613,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["connecter",{"_index":5453,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["connection",{"_index":116,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"classes/EmployeeNumber1700395200.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"injectables/UniquenessMailValidator.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["connection_error",{"_index":4258,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connexion",{"_index":5459,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["consequence",{"_index":5010,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":5160,"title":{},"body":{"license.html":{}}}],["consider",{"_index":5221,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3803,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"license.html":{}}}],["consistent",{"_index":5056,"title":{},"body":{"license.html":{}}}],["console",{"_index":1777,"title":{},"body":{"classes/ConsoleSession.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["console.error('erreur",{"_index":1913,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["console.error('error",{"_index":342,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.log('agent",{"_index":338,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["console.log('count",{"_index":4103,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["console.log('data",{"_index":1066,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('debug",{"_index":4104,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["console.log('dynamic",{"_index":2702,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('error",{"_index":2461,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["console.log('generating",{"_index":2699,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('hard",{"_index":2701,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('indexes",{"_index":1911,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["console.log('keyring",{"_index":3284,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.log('modifi",{"_index":1639,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["console.log('payload",{"_index":1055,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('req",{"_index":3198,"title":{},"body":{"controllers/JobsController.html":{}}}],["console.log('this.storage",{"_index":693,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["console.log('update",{"_index":703,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["console.log('validations",{"_index":1853,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["console.log(`error",{"_index":2694,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`file",{"_index":2651,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`generating",{"_index":2649,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`writing",{"_index":2687,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(e",{"_index":1054,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(errors",{"_index":5480,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["console.log(identity",{"_index":1158,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["console.log(user",{"_index":3354,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["consolelogger",{"_index":3092,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["consolesession",{"_index":1025,"title":{"classes/ConsoleSession.html":{}},"body":{"injectables/AuthService.html":{},"classes/ConsoleSession.html":{}}}],["conspicuously",{"_index":4778,"title":{},"body":{"license.html":{}}}],["const",{"_index":170,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constant_case.example",{"_index":6037,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantcase",{"_index":6036,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantes",{"_index":5490,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constantly",{"_index":4567,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":4722,"title":{},"body":{"license.html":{}}}],["constraints",{"_index":4113,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["constructeur",{"_index":5448,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"injectables/SettingsService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["constructor(@inject(request",{"_index":1836,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["constructor(@injectconnection",{"_index":4095,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["constructor(@injectmodel(agents.name",{"_index":566,"title":{},"body":{"injectables/AgentsService.html":{}}}],["constructor(@injectmodel(jobs.name",{"_index":3234,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(@injectmodel(keyrings.name",{"_index":3342,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["constructor(@injectmodel(logger.name",{"_index":3388,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(@injectmodel(settings.name",{"_index":242,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["constructor(@injectmodel(tasks.name",{"_index":4014,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(_model",{"_index":195,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["constructor(_options",{"_index":3150,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["constructor(auth",{"_index":3237,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(config",{"_index":2865,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["constructor(connection",{"_index":4083,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["constructor(context",{"_index":16,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["constructor(data",{"_index":604,"title":{},"body":{"classes/ApiSession.html":{}}}],["constructor(identitymodel",{"_index":1899,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["constructor(moduleref",{"_index":381,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["constructor(mongo",{"_index":1873,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/MigrationsService.html":{}}}],["constructor(payload",{"_index":4117,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["constructor(private",{"_index":456,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesJsonFormsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{}}}],["constructor(protected",{"_index":348,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["constructor(request",{"_index":1825,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["construed",{"_index":5102,"title":{},"body":{"license.html":{}}}],["construire",{"_index":5776,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["construit",{"_index":5774,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["consultez",{"_index":5809,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["consumer",{"_index":2734,"title":{},"body":{"modules/IdentitiesModule.html":{},"license.html":{}}}],["consumer.apply(ensureidentitiesindexmiddleware).forroutes('/management/identities",{"_index":2755,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["contact",{"_index":5200,"title":{},"body":{"license.html":{}}}],["contain",{"_index":5098,"title":{},"body":{"license.html":{}}}],["containing",{"_index":4951,"title":{},"body":{"license.html":{}}}],["contains",{"_index":4972,"title":{},"body":{"license.html":{}}}],["contenant",{"_index":2352,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["conteneur",{"_index":5851,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenir",{"_index":6040,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["content",{"_index":4721,"title":{},"body":{"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["contents",{"_index":5060,"title":{},"body":{"license.html":{}}}],["contentsecuritypolicy",{"_index":1707,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["contenu",{"_index":5893,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["context",{"_index":24,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"interfaces/CipherData.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"license.html":{}}}],["context?.moduleref",{"_index":51,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.req",{"_index":160,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["contexte",{"_index":2995,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["contient",{"_index":5859,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["continue",{"_index":2999,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"license.html":{}}}],["continued",{"_index":4906,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":4966,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":5108,"title":{},"body":{"license.html":{}}}],["contraint",{"_index":4096,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["contraint.key",{"_index":4101,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["contraint.primarykey",{"_index":4099,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["contrast",{"_index":4467,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":5046,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":5048,"title":{},"body":{"license.html":{}}}],["control",{"_index":2658,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"license.html":{}}}],["controlled",{"_index":5051,"title":{},"body":{"license.html":{}}}],["controller",{"_index":385,"title":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["controller('agents",{"_index":453,"title":{},"body":{"controllers/AgentsController.html":{}}}],["controller('auth",{"_index":918,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('backends",{"_index":1234,"title":{},"body":{"controllers/BackendsController.html":{}}}],["controller('core",{"_index":1784,"title":{},"body":{"controllers/CoreController.html":{}}}],["controller('filestorage",{"_index":2025,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["controller('form",{"_index":2133,"title":{},"body":{"controllers/FormController.html":{}}}],["controller('identities",{"_index":2331,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["controller('jobs",{"_index":3194,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('keyrings",{"_index":3306,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["controller('logger",{"_index":3379,"title":{},"body":{"controllers/LoggerController.html":{}}}],["controller('management",{"_index":3448,"title":{},"body":{"controllers/ManagementController.html":{}}}],["controller('management/identities/jsonforms",{"_index":2575,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["controller('management/identities/validation",{"_index":2839,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["controller('passwd",{"_index":3712,"title":{},"body":{"controllers/PasswdController.html":{}}}],["controller('settings",{"_index":3912,"title":{},"body":{"controllers/SettingsController.html":{}}}],["controller('settings/mail",{"_index":3421,"title":{},"body":{"controllers/MailadmController.html":{}}}],["controller('settings/passwdadm",{"_index":3772,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["controller('settings/sms",{"_index":3969,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["controller('tasks",{"_index":4004,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllername",{"_index":14,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["controllers",{"_index":387,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["convenient",{"_index":4643,"title":{},"body":{"license.html":{}}}],["convertis",{"_index":5726,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["convertit",{"_index":2974,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["convey",{"_index":4628,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":5086,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4917,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4637,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4965,"title":{},"body":{"license.html":{}}}],["conçu",{"_index":5344,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conçue",{"_index":4298,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cookie",{"_index":4180,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":4454,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4451,"title":{},"body":{"license.html":{}}}],["copying",{"_index":2638,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["copyleft",{"_index":4457,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4444,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4592,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4736,"title":{},"body":{"license.html":{}}}],["core",{"_index":1780,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core.controller",{"_index":1797,"title":{},"body":{"modules/CoreModule.html":{}}}],["core.service",{"_index":1782,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core/agents/_dto/agents.dto",{"_index":324,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{}}}],["core/agents/_enum/agent",{"_index":3983,"title":{},"body":{"classes/StatePart.html":{}}}],["core/agents/_schemas/_parts/security.part.schema",{"_index":374,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/_parts/state.part.schema",{"_index":373,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/agents.schema",{"_index":546,"title":{},"body":{"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["core/agents/agents.module",{"_index":960,"title":{},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/IdentitiesModule.html":{}}}],["core/agents/agents.service",{"_index":326,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["core/auth/_strategies/jwt.strategy",{"_index":964,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/_strategies/local.strategy",{"_index":965,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/auth.module",{"_index":1654,"title":{},"body":{"modules/CliModule.html":{}}}],["core/auth/auth.service",{"_index":909,"title":{},"body":{"controllers/AuthController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{}}}],["core/backends/_enum/action",{"_index":1317,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["core/backends/backends.module",{"_index":1653,"title":{},"body":{"modules/CliModule.html":{},"modules/IdentitiesModule.html":{},"modules/PasswdModule.html":{}}}],["core/backends/backends.service",{"_index":1152,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["core/core.module",{"_index":741,"title":{},"body":{"modules/AppModule.html":{}}}],["core/entities",{"_index":5832,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["core/filestorage/_dto/filestorage.dto",{"_index":2775,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/filestorage/_enum/fs",{"_index":1952,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/filestorage/_schemas/filestorage.schema",{"_index":4051,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["core/filestorage/_services/transformers",{"_index":2086,"title":{},"body":{"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/filestorage/filestorage.module",{"_index":2743,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["core/filestorage/filestorage.service",{"_index":2429,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/jobs/_enums/state.enum",{"_index":3213,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["core/jobs/_schemas/jobs.schema",{"_index":1318,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["core/keyrings/_dto/keyrings.dto",{"_index":3276,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["core/keyrings/_schemas/keyrings.schema",{"_index":3277,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["core/keyrings/keyrings.module",{"_index":1651,"title":{},"body":{"modules/CliModule.html":{}}}],["core/keyrings/keyrings.service",{"_index":3278,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["corecontroller",{"_index":1778,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["coremodule",{"_index":732,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.register",{"_index":836,"title":{},"body":{"modules/AppModule.html":{}}}],["coreservice",{"_index":1781,"title":{"injectables/CoreService.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"overview.html":{}}}],["corps",{"_index":5902,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correctement",{"_index":6063,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correction",{"_index":5156,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":5980,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspondant",{"_index":2348,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["corresponding",{"_index":2676,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"license.html":{}}}],["correspondra",{"_index":5706,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["corrupted",{"_index":1043,"title":{},"body":{"injectables/AuthService.html":{}}}],["cost",{"_index":4838,"title":{},"body":{"license.html":{}}}],["count",{"_index":185,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"injectables/UniquenessMailValidator.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["count(filter",{"_index":207,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["count(res",{"_index":2391,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["countall",{"_index":2387,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["countall(res",{"_index":2398,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["counter",{"_index":1135,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["counterclaim",{"_index":5039,"title":{},"body":{"license.html":{}}}],["countries",{"_index":4625,"title":{},"body":{"license.html":{}}}],["country",{"_index":5078,"title":{},"body":{"license.html":{}}}],["counts",{"_index":2402,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["cours",{"_index":904,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MigrationsService.html":{}}}],["course",{"_index":5211,"title":{},"body":{"license.html":{}}}],["court",{"_index":5107,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5177,"title":{},"body":{"license.html":{}}}],["couvre",{"_index":5715,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["covenant",{"_index":5066,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":4888,"title":{},"body":{"license.html":{}}}],["covered",{"_index":4608,"title":{},"body":{"license.html":{}}}],["create",{"_index":186,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["create(@res",{"_index":459,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{}}}],["create(data",{"_index":213,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["create(res",{"_index":393,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["create.decorator",{"_index":433,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/KeyringsController.html":{}}}],["createassertions",{"_index":5604,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createassertions(service",{"_index":5607,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createattributes",{"_index":2859,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["createattributes(key",{"_index":2870,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["created",{"_index":339,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["created_at",{"_index":671,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["createdat",{"_index":3138,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createdby",{"_index":3090,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createerrorassertions(service",{"_index":5608,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel",{"_index":5495,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(identitiesmodel",{"_index":5570,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(model",{"_index":5564,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice",{"_index":5500,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice(identitiesservice",{"_index":5688,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createtokens",{"_index":979,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtokens(identity",{"_index":990,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":343,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{}}}],["creation",{"_index":2953,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["criterion",{"_index":4659,"title":{},"body":{"license.html":{}}}],["cross",{"_index":5037,"title":{},"body":{"license.html":{}}}],["crucial",{"_index":5702,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["crud",{"_index":5499,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crud.controller",{"_index":2746,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["crud.controller.ts",{"_index":2386,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:109",{"_index":2408,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:134",{"_index":2412,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:165",{"_index":2410,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:190",{"_index":2397,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:204",{"_index":2403,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:232",{"_index":2414,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:247",{"_index":2417,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:268",{"_index":2424,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:287",{"_index":2411,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:62",{"_index":2405,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.service",{"_index":1327,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/TokenData.html":{}}}],["crudmode",{"_index":5771,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crypto",{"_index":915,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/TokenData.html":{}}}],["crypto.createcipheriv(passwdservice.token_algorithm",{"_index":1528,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.createdecipheriv(passwdservice.token_algorithm",{"_index":1559,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(13).tostring('hex",{"_index":1624,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(passwdservice.random_bytes_iv).tostring('base64",{"_index":1526,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(passwdservice.random_bytes_k).tostring('hex",{"_index":1464,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cryptographiques",{"_index":5335,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["créant",{"_index":5454,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["création",{"_index":1914,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["crée",{"_index":5554,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["créer",{"_index":5492,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["créée",{"_index":2448,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["créés",{"_index":5517,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ctx",{"_index":591,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/Identities.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["ctx.getrequest",{"_index":3629,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ctx.getresponse",{"_index":593,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["ctx.inetorgperson.employeetype",{"_index":2315,"title":{},"body":{"classes/Identities.html":{}}}],["cure",{"_index":5001,"title":{},"body":{"license.html":{}}}],["curl",{"_index":5411,"title":{},"body":{"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["current",{"_index":624,"title":{},"body":{"controllers/AppController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/MigrationsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["currentmajor",{"_index":719,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["currentminor",{"_index":720,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["currentpatch",{"_index":721,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["currenttimestamp",{"_index":3495,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["currenttimestamp.tostring",{"_index":3544,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["currentversion",{"_index":711,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["currentversion.split('.').map(number",{"_index":726,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["custom",{"_index":4105,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["customarily",{"_index":4828,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4834,"title":{},"body":{"license.html":{}}}],["customfields",{"_index":351,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Identities.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto",{"_index":484,"title":{"classes/CustomFieldsDto.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto:8",{"_index":503,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customs",{"_index":5425,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{}}}],["cwd",{"_index":3550,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["cycle",{"_index":5284,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cypherdata",{"_index":1549,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata.iv",{"_index":1560,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata.k",{"_index":1571,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.iv",{"_index":1552,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.k",{"_index":1553,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.tag",{"_index":1554,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["d",{"_index":1468,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'abstractserviceschema",{"_index":5513,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'action",{"_index":5861,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'appel",{"_index":5642,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'appels",{"_index":5684,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'attente",{"_index":5435,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["d'attributs",{"_index":5729,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'authentification",{"_index":890,"title":{},"body":{"controllers/AuthController.html":{}}}],["d'autres",{"_index":5695,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'ensemble",{"_index":5430,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'entrypoints",{"_index":5282,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'erreur",{"_index":5735,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'identit",{"_index":5288,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'identitées",{"_index":1173,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["d'identités",{"_index":2829,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["d'informations",{"_index":5717,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'initialisation",{"_index":1569,"title":{},"body":{"interfaces/CipherData.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["d'installation",{"_index":5384,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'objectclass",{"_index":6060,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'objet",{"_index":2992,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'objets",{"_index":2996,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'onglets",{"_index":5898,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'outils",{"_index":5854,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'un",{"_index":2557,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'une",{"_index":2422,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'utilisation",{"_index":5386,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'échec",{"_index":5744,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'éléments",{"_index":6007,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d\\'envoyer",{"_index":3744,"title":{},"body":{"controllers/PasswdController.html":{}}}],["daemon",{"_index":5269,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["daemon|sesame",{"_index":629,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["damages",{"_index":5158,"title":{},"body":{"license.html":{}}}],["danger",{"_index":4575,"title":{},"body":{"license.html":{}}}],["dans",{"_index":1536,"title":{},"body":{"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["data",{"_index":216,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"license.html":{}}}],["data.access_token",{"_index":1038,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.attributes",{"_index":2930,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.attributes[key",{"_index":2954,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.attributes[key][index",{"_index":2960,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.code",{"_index":1576,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["data.identity?.security?.secretkey",{"_index":1070,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.length",{"_index":2509,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"controllers/PasswdController.html":{}}}],["data.mime",{"_index":4053,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["data.newpassword",{"_index":1584,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["data.objectclasses",{"_index":2929,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.password",{"_index":567,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.security",{"_index":569,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.security.secretkey",{"_index":570,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.tag_name.replace(/^v",{"_index":709,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["data.token",{"_index":1575,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["data.toobject().state",{"_index":2444,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["data.validations",{"_index":2931,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data[key",{"_index":611,"title":{},"body":{"classes/ApiSession.html":{},"injectables/IdentitiesValidationService.html":{}}}],["data[key][index",{"_index":2965,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data[key][index][elems",{"_index":2970,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["database",{"_index":3101,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["datapart",{"_index":1809,"title":{"classes/DataPart.html":{}},"body":{"classes/DataPart.html":{},"classes/Logger.html":{}}}],["datapartschema",{"_index":1814,"title":{},"body":{"classes/DataPart.html":{},"classes/Logger.html":{}}}],["datastate",{"_index":1939,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["datastatus",{"_index":2260,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["datastatusenum",{"_index":1350,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["datastatusenum.active",{"_index":1510,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["datastatusenum.deleted",{"_index":1392,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["datastatusenum.inactive",{"_index":1391,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesActivationController.html":{},"interfaces/TokenData.html":{}}}],["datastatusenum.notinitialized",{"_index":2302,"title":{},"body":{"classes/Identities.html":{}}}],["datax=omit(data.toobject,['_id",{"_index":3734,"title":{},"body":{"controllers/PasswdController.html":{}}}],["date",{"_index":1629,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["date.now",{"_index":3289,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["date.settime(date.gettime",{"_index":1638,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["days",{"_index":4996,"title":{},"body":{"license.html":{}}}],["db",{"_index":3095,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["dbmigration",{"_index":3534,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["dbmigration.timestamp.tostring",{"_index":3541,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["de",{"_index":901,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["debug",{"_index":809,"title":{},"body":{"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug(message",{"_index":3128,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["debug['_debug",{"_index":3720,"title":{},"body":{"controllers/PasswdController.html":{}}}],["debug['_errors",{"_index":1850,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug['_exception",{"_index":3630,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["december",{"_index":4759,"title":{},"body":{"license.html":{}}}],["decide",{"_index":5138,"title":{},"body":{"license.html":{}}}],["decipher",{"_index":1558,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decipher.setauthtag(buffer.from(cypherdata.tag",{"_index":1561,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decipher.update(token",{"_index":1563,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["declarations",{"_index":534,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["declining",{"_index":4958,"title":{},"body":{"license.html":{}}}],["decodeuricomponent(token",{"_index":1547,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FusionDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["decrypte",{"_index":1544,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decrypting",{"_index":1566,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decrypttoken(token",{"_index":1570,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decrypttokenwithcode(token",{"_index":1546,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["deemed",{"_index":4748,"title":{},"body":{"license.html":{}}}],["deepobject",{"_index":2762,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["def",{"_index":2955,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["def['items",{"_index":2966,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["def['items']['type",{"_index":2971,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["default",{"_index":286,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"injectables/TransformersFilestorageService.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{}}}],["default_context",{"_index":3365,"title":{},"body":{"classes/Logger.html":{}}}],["default_data_type",{"_index":1812,"title":{},"body":{"classes/DataPart.html":{}}}],["default_message",{"_index":4126,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["default_status_code",{"_index":4125,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["default_third_party_auth",{"_index":369,"title":{},"body":{"classes/Agents.html":{}}}],["default_validations",{"_index":4127,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["defaultfile",{"_index":2632,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["defaultfiles",{"_index":2624,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["defaultmessage",{"_index":4082,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["defaultmessage(validationarguments",{"_index":4085,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["defaults",{"_index":810,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["defaultsrc",{"_index":1709,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultstrategy",{"_index":1727,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultvalues",{"_index":182,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"injectables/MailadmService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["defective",{"_index":5151,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":5105,"title":{},"body":{"license.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"license.html":{}}}],["definition",{"_index":4696,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":4586,"title":{},"body":{"license.html":{}}}],["deja",{"_index":2923,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["delai",{"_index":1635,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["delete",{"_index":187,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["delete(':_id([0",{"_index":408,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["delete(_id",{"_index":217,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["deleteassertions",{"_index":5616,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteassertions(service",{"_index":5618,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleted",{"_index":435,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deletedflag",{"_index":2261,"title":{},"body":{"classes/Identities.html":{}}}],["deleteerrorassertions(service",{"_index":5619,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteidentities",{"_index":1162,"title":{},"body":{"controllers/BackendsController.html":{}}}],["deleteidentities(res",{"_index":1167,"title":{},"body":{"controllers/BackendsController.html":{}}}],["deleteidentitiesdto",{"_index":1168,"title":{"classes/DeleteIdentitiesDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/DeleteIdentitiesDto.html":{}}}],["delivered",{"_index":931,"title":{},"body":{"controllers/AuthController.html":{}}}],["demande",{"_index":1475,"title":{},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["demi",{"_index":1620,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["demon",{"_index":5426,"title":{"additional-documentation/documentation-technique/demon.html":{}},"body":{}}],["denied",{"_index":4923,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":5064,"title":{},"body":{"license.html":{}}}],["dense",{"_index":5819,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["deny",{"_index":3033,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["denying",{"_index":4497,"title":{},"body":{"license.html":{}}}],["departmentnumber",{"_index":4324,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["dependencies",{"_index":532,"title":{"dependencies.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprive",{"_index":5073,"title":{},"body":{"license.html":{}}}],["des",{"_index":1399,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitManyDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["desc",{"_index":1752,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["describe('create",{"_index":5606,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('delete",{"_index":5617,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findandcount",{"_index":5588,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findbyid",{"_index":5593,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findone",{"_index":5600,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('identities",{"_index":5544,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('update",{"_index":5610,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["description",{"_index":267,"title":{},"body":{"classes/ActivationDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/NeedChangePasswordDto.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/VerifyTokenDto.html":{},"index.html":{},"properties.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["designated",{"_index":4845,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4462,"title":{},"body":{"license.html":{}}}],["dessous",{"_index":5783,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessus",{"_index":5621,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["destfusionid",{"_index":2262,"title":{},"body":{"classes/Identities.html":{}}}],["destination",{"_index":2309,"title":{},"body":{"classes/Identities.html":{}}}],["destinées",{"_index":5912,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["detail",{"_index":5127,"title":{},"body":{"license.html":{}}}],["details",{"_index":5199,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":5209,"title":{},"body":{"license.html":{}}}],["determine",{"_index":2668,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["determining",{"_index":4884,"title":{},"body":{"license.html":{}}}],["deux",{"_index":2305,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["dev",{"_index":1005,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev_token_path",{"_index":974,"title":{},"body":{"injectables/AuthService.html":{}}}],["develop",{"_index":5186,"title":{},"body":{"license.html":{}}}],["developers",{"_index":4513,"title":{},"body":{"license.html":{}}}],["development",{"_index":793,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["devez",{"_index":5941,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["devices",{"_index":4535,"title":{},"body":{"license.html":{}}}],["devtokenpath",{"_index":1033,"title":{},"body":{"injectables/AuthService.html":{}}}],["diff",{"_index":2902,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["diff(objectclasses",{"_index":2984,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["differ",{"_index":5126,"title":{},"body":{"license.html":{}}}],["different",{"_index":4848,"title":{},"body":{"license.html":{}}}],["differently",{"_index":4946,"title":{},"body":{"license.html":{}}}],["différentes",{"_index":4301,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["différents",{"_index":5805,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dir",{"_index":812,"title":{},"body":{"modules/AppModule.html":{}}}],["directconnection",{"_index":1723,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["direction",{"_index":4735,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4854,"title":{},"body":{"license.html":{}}}],["directives",{"_index":1708,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["directly",{"_index":4612,"title":{},"body":{"license.html":{}}}],["directory",{"_index":3049,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["disable",{"_index":43,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/ActivationDto.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disabled",{"_index":4254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disablelogs",{"_index":1253,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["disablelogsquery",{"_index":1178,"title":{},"body":{"controllers/BackendsController.html":{}}}],["disclaim",{"_index":4770,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":5141,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4943,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":5089,"title":{},"body":{"license.html":{}}}],["discut",{"_index":5402,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["disks",{"_index":1693,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["display",{"_index":4803,"title":{},"body":{"license.html":{}}}],["displayed",{"_index":4950,"title":{},"body":{"license.html":{}}}],["displayname",{"_index":352,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["displays",{"_index":4639,"title":{},"body":{"license.html":{}}}],["disponible",{"_index":6062,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponibles",{"_index":5808,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disposition",{"_index":4060,"title":{},"body":{"injectables/TransformersFilestorageService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dispositions",{"_index":5849,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["distinguishing",{"_index":5130,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4452,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5196,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":5093,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4583,"title":{},"body":{"license.html":{}}}],["divers",{"_index":5660,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["diverses",{"_index":5581,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["divulguer",{"_index":1460,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["doc",{"_index":5427,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["document",{"_index":121,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"controllers/PasswdController.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["document.constructor.modelname",{"_index":1128,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["documentation",{"_index":2765,"title":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-utilisateur.html":{}},"body":{"controllers/IdentitiesPhotoController.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["documented",{"_index":4930,"title":{},"body":{"license.html":{}}}],["documents",{"_index":5595,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["doesn't",{"_index":2672,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["doit",{"_index":5343,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["doivent",{"_index":5331,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["domains",{"_index":4559,"title":{},"body":{"license.html":{}}}],["donc",{"_index":3707,"title":{},"body":{"controllers/PasswdController.html":{}}}],["done",{"_index":3240,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MigrationsService.html":{}}}],["done(new",{"_index":3257,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(null",{"_index":3259,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["données",{"_index":4302,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dont_sync",{"_index":4287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dossier",{"_index":5518,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["doublon.controller",{"_index":2750,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["doublon.controller.ts",{"_index":2490,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doublon.controller.ts:27",{"_index":2502,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doublon.controller.ts:40",{"_index":2496,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doublon.service",{"_index":2505,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"modules/IdentitiesModule.html":{}}}],["doublons",{"_index":2500,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doubtful",{"_index":4885,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":5020,"title":{},"body":{"license.html":{}}}],["draft",{"_index":669,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["driver",{"_index":1694,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["dto",{"_index":2329,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{}}}],["dto.ts",{"_index":262,"title":{},"body":{"classes/ActivationDto.html":{},"classes/ForcePasswordDto.html":{}}}],["dto.ts:11",{"_index":274,"title":{},"body":{"classes/ActivationDto.html":{},"classes/ForcePasswordDto.html":{}}}],["dto.ts:7",{"_index":269,"title":{},"body":{"classes/ActivationDto.html":{},"classes/ForcePasswordDto.html":{}}}],["dtovalidationpipe",{"_index":757,"title":{"injectables/DtoValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["du",{"_index":1367,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dump_package_config",{"_index":4244,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dupont",{"_index":5958,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dur",{"_index":5931,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["durable",{"_index":4827,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":4883,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":2698,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamically",{"_index":4699,"title":{},"body":{"license.html":{}}}],["dynamicconfig",{"_index":3051,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles",{"_index":2696,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles].filter((file",{"_index":2703,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["dynamicconfigpath",{"_index":2645,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicmodule",{"_index":1793,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/SettingsModule.html":{}}}],["dynamique",{"_index":5643,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiquement",{"_index":5638,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiques",{"_index":5650,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d{1,3}(?:\\.\\d{1,3}){3}|\\[(?:[0",{"_index":785,"title":{},"body":{"modules/AppModule.html":{}}}],["début",{"_index":6056,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déclenchement",{"_index":5286,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["découp",{"_index":5391,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["décrit",{"_index":5721,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["défaut",{"_index":5787,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["défini",{"_index":5952,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définies",{"_index":5378,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définies.example",{"_index":6041,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définir",{"_index":5682,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définis",{"_index":5651,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définissant",{"_index":5804,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["définissent",{"_index":5948,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définit",{"_index":5901,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définition",{"_index":5295,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["déj",{"_index":2480,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["délais",{"_index":5396,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["démarre",{"_index":5552,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["démon",{"_index":4317,"title":{},"body":{"index.html":{}}}],["démontrant",{"_index":5696,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dépendances",{"_index":5438,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["déport",{"_index":5534,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dérivées",{"_index":5463,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["désirés",{"_index":5989,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["détaill",{"_index":5625,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détaillées",{"_index":5718,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détails",{"_index":2769,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déterminer",{"_index":5880,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["développements",{"_index":5361,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développer",{"_index":5265,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développeurs",{"_index":5353,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["e",{"_index":250,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["e.stack",{"_index":3584,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["e?.response?.error?.response",{"_index":1518,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["e?.response?.job?.status",{"_index":1517,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["e?.response?.status",{"_index":1514,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["each",{"_index":516,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPartDTO.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{}}}],["earlier",{"_index":4607,"title":{},"body":{"license.html":{}}}],["ecriture",{"_index":5483,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["effect",{"_index":5174,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4768,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4749,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4577,"title":{},"body":{"license.html":{}}}],["effectue",{"_index":2834,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["effectuées",{"_index":5966,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["efficacement",{"_index":5358,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["efforts",{"_index":5031,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":5201,"title":{},"body":{"license.html":{}}}],["element",{"_index":2675,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elements",{"_index":2656,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elems",{"_index":2969,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["elle",{"_index":5436,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["email",{"_index":306,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["email.example",{"_index":6051,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["emailattribute",{"_index":3779,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["embodied",{"_index":4822,"title":{},"body":{"license.html":{}}}],["emetteur",{"_index":3402,"title":{},"body":{"classes/MailSettingsDto.html":{},"classes/SmsSettingsDto.html":{}}}],["emitter",{"_index":154,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"dependencies.html":{}}}],["emplacements",{"_index":5862,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["employee",{"_index":1869,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employeenumber",{"_index":1884,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employeenumber.map(string",{"_index":1892,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["employeenumber1700395200",{"_index":1867,"title":{"classes/EmployeeNumber1700395200.html":{}},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["employeenumber[0",{"_index":1891,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["employeenumbers",{"_index":4353,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["employeenumbers.every((employeenumber",{"_index":4355,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["employeetype",{"_index":2592,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employer",{"_index":5214,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1451,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["en",{"_index":903,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enable",{"_index":273,"title":{},"body":{"classes/ActivationDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"license.html":{}}}],["enabled",{"_index":1032,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/MongoosePlugin.html":{}}}],["enableimplicitconversion",{"_index":1838,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["enables",{"_index":4630,"title":{},"body":{"license.html":{}}}],["encodeuricomponent(ciphertext",{"_index":1539,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["end",{"_index":5185,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":2767,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["enforce",{"_index":5065,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":4773,"title":{},"body":{"license.html":{}}}],["enr",{"_index":245,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["enr.parameters",{"_index":248,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["enregistre",{"_index":1535,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["enregistrement",{"_index":5294,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ensure",{"_index":4859,"title":{},"body":{"license.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ensureidentitiesindexmiddleware",{"_index":1896,"title":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"modules/IdentitiesModule.html":{}}}],["entered",{"_index":5099,"title":{},"body":{"license.html":{}}}],["entier.example",{"_index":6019,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entire",{"_index":4794,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":5116,"title":{},"body":{"license.html":{}}}],["entite",{"_index":2379,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["entity",{"_index":1094,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["entityid",{"_index":377,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["entre",{"_index":4300,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["entropy",{"_index":3801,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"dependencies.html":{}}}],["entrée",{"_index":5826,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enum",{"_index":1924,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/StatePart.html":{}}}],["enumerations",{"_index":4224,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelope",{"_index":5795,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.assigned",{"_index":5843,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.observers",{"_index":5840,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.senders",{"_index":5817,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["enveloppe",{"_index":5796,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envoi",{"_index":1381,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["envoie",{"_index":1370,"title":{},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"interfaces/TokenData.html":{}}}],["envoy",{"_index":1434,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["envoyées",{"_index":5945,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["equal",{"_index":2815,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{},"additional-documentation/filtres-api.html":{}}}],["equivalent",{"_index":4725,"title":{},"body":{"license.html":{}}}],["err",{"_index":1231,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/TransformersFilestorageService.html":{}}}],["err.errors",{"_index":3637,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key].message",{"_index":3643,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints",{"_index":3638,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints'][ckey",{"_index":3642,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['property",{"_index":3640,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.message",{"_index":3645,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err['instancepath'].substring(1",{"_index":3044,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["err['message",{"_index":3045,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["erreur",{"_index":1393,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["erreurs",{"_index":5655,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["erroneously",{"_index":4533,"title":{},"body":{"license.html":{}}}],["error",{"_index":341,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ShutdownObserver.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('erreur",{"_index":5690,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('error",{"_index":3590,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["error('moduleref",{"_index":107,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["error('request",{"_index":169,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["error(message",{"_index":3110,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["error.casterror",{"_index":3624,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.children",{"_index":1861,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.children.length",{"_index":1859,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.constraints",{"_index":1855,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.getresponse",{"_index":2464,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["error.message",{"_index":2338,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["error.property",{"_index":1857,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.property}.${errorchild.property",{"_index":1863,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.stack",{"_index":2630,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["error.validationerror",{"_index":3623,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.validations",{"_index":2462,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["error['target",{"_index":1852,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild",{"_index":1860,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.children.length",{"_index":1865,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.constraints",{"_index":1862,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorhttpstatuscode",{"_index":1249,"title":{},"body":{"controllers/BackendsController.html":{}}}],["erroronnotfound",{"_index":2793,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["errors",{"_index":1840,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["errors.map((error",{"_index":1851,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorschemadto",{"_index":1915,"title":{"classes/ErrorSchemaDto.html":{}},"body":{"classes/ErrorSchemaDto.html":{}}}],["eslint",{"_index":42,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{}}}],["eslint/no",{"_index":46,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{}}}],["espaces",{"_index":6055,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["essential",{"_index":4682,"title":{},"body":{"license.html":{}}}],["est",{"_index":1378,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et",{"_index":1193,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et/ou",{"_index":5303,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["etc",{"_index":5324,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["etre",{"_index":3837,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["even",{"_index":5170,"title":{},"body":{"license.html":{}}}],["event",{"_index":1188,"title":{},"body":{"controllers/BackendsController.html":{},"license.html":{}}}],["eventemitter",{"_index":76,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["eventemitter2",{"_index":89,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["events_url",{"_index":658,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["everyone",{"_index":4449,"title":{},"body":{"license.html":{}}}],["ex",{"_index":1093,"title":{},"body":{"injectables/AuthService.html":{}}}],["exact",{"_index":4604,"title":{},"body":{"license.html":{}}}],["example",{"_index":279,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{},"classes/VerifyTokenDto.html":{},"license.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["example(params",{"_index":5477,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["example.validator.ts",{"_index":4081,"title":{},"body":{"injectables/UniquenessMailValidator.html":{},"miscellaneous/typealiases.html":{}}}],["example.validator.ts:15",{"_index":4084,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["example.validator.ts:17",{"_index":4090,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["example.validator.ts:43",{"_index":4087,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["examplequeueservice",{"_index":5475,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["except",{"_index":4618,"title":{},"body":{"license.html":{}}}],["exception",{"_index":588,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["exception.constructor.name",{"_index":3636,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exception.filter.ts",{"_index":582,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.filter.ts:5",{"_index":587,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":2847,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.getvalidations",{"_index":2849,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.message",{"_index":2848,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception['message",{"_index":596,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exception['name",{"_index":597,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfactory",{"_index":1839,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["exceptionfilter",{"_index":583,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exceptions",{"_index":4933,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["excludeagenttype",{"_index":3350,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["excluded",{"_index":4873,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":5103,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":5193,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":5057,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4729,"title":{},"body":{"license.html":{}}}],["exclusivemaximum",{"_index":6023,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exclusiveminimum",{"_index":6021,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["excuse",{"_index":5109,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4672,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1182,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"license.html":{}}}],["executed",{"_index":3558,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["executejob",{"_index":1163,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executejob(res",{"_index":1175,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executejobdto",{"_index":1176,"title":{"classes/ExecuteJobDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/ExecuteJobDto.html":{}}}],["executejoboptions",{"_index":1935,"title":{"interfaces/ExecuteJobOptions.html":{}},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["executing",{"_index":4619,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":1906,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["exemple",{"_index":5489,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exemples",{"_index":5504,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exercise",{"_index":5032,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4769,"title":{},"body":{"license.html":{}}}],["exhaustive",{"_index":5351,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exigences",{"_index":5327,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exist",{"_index":1041,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/UniquenessMailValidator.html":{}}}],["existe",{"_index":1463,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["existssync",{"_index":1023,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(devtokenpath",{"_index":1036,"title":{},"body":{"injectables/AuthService.html":{}}}],["existssync(dynamicconfigpath",{"_index":2647,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(filepath",{"_index":2652,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(hardconfigpath",{"_index":2648,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(path",{"_index":3000,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["expect",{"_index":3633,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["expected",{"_index":4894,"title":{},"body":{"license.html":{}}}],["expects",{"_index":4893,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":1046,"title":{},"body":{"injectables/AuthService.html":{}}}],["explains",{"_index":4524,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":47,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["explicitly",{"_index":4717,"title":{},"body":{"license.html":{}}}],["explode",{"_index":2763,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exports",{"_index":537,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["exposition",{"_index":5281,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["express",{"_index":152,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"controllers/MailadmController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":1991,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["express.user",{"_index":158,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/LocalStrategy.html":{}}}],["expressed",{"_index":5143,"title":{},"body":{"license.html":{}}}],["expression",{"_index":6047,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["expressly",{"_index":4981,"title":{},"body":{"license.html":{}}}],["extend",{"_index":4562,"title":{},"body":{"license.html":{}}}],["extended",{"_index":3851,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"license.html":{}}}],["extends",{"_index":65,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["extensibilit",{"_index":5342,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["extensions",{"_index":4808,"title":{},"body":{"license.html":{}}}],["extent",{"_index":4642,"title":{},"body":{"license.html":{}}}],["extraction",{"_index":5728,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["extractjwt",{"_index":3245,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":3250,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extrasearch",{"_index":2036,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["extrasearch['hidden",{"_index":2037,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f",{"_index":4273,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["f:]+)\\]):(\\d",{"_index":786,"title":{},"body":{"modules/AppModule.html":{}}}],["f]{24",{"_index":472,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})')@apiparam({name",{"_index":404,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})/raw",{"_index":2043,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f]{24})/raw')@apiparam({name",{"_index":2003,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f]{24})/state",{"_index":2474,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["f]{24})/state')@apiparam({name",{"_index":2416,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["fa",{"_index":403,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["faciliter",{"_index":4299,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["facilities",{"_index":4730,"title":{},"body":{"license.html":{}}}],["facsimiletelephonenumber",{"_index":4325,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["factorydrive",{"_index":1675,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["factorydrivemodule",{"_index":766,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["factorydrivemodule.forrootasync",{"_index":834,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["facultatifs",{"_index":5906,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["failed",{"_index":1282,"title":{},"body":{"controllers/BackendsController.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/enumerations.html":{}}}],["fails",{"_index":2897,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["failure",{"_index":5168,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4724,"title":{},"body":{"license.html":{}}}],["false",{"_index":112,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["falsetoken",{"_index":1465,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["false})@get('/get",{"_index":626,"title":{},"body":{"controllers/AppController.html":{}}}],["false})@isoptional",{"_index":4370,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["famille",{"_index":5933,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["family",{"_index":4878,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":4601,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4182,"title":{},"body":{"dependencies.html":{}}}],["fatal",{"_index":3134,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fatal(message",{"_index":3133,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["faut",{"_index":3010,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["favor",{"_index":4887,"title":{},"body":{"license.html":{}}}],["feature",{"_index":4646,"title":{},"body":{"license.html":{}}}],["fee",{"_index":4507,"title":{},"body":{"license.html":{}}}],["fetch(`https://api.github.com/repos/libertech",{"_index":698,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fiabilit",{"_index":5366,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["fichier",{"_index":3002,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fichiers",{"_index":5536,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["field",{"_index":1109,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"injectables/UniquenessMailValidator.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["field.dto",{"_index":2233,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["field.part.schema",{"_index":2244,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["field]=search",{"_index":5407,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["fieldname",{"_index":2236,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["fields",{"_index":2221,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fields.dto",{"_index":514,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["fields.dto.ts",{"_index":1806,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["fields.dto.ts:8",{"_index":1807,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["figma",{"_index":4320,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["file.match(/\\d{10",{"_index":3553,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["file.schema.endswith('.yml",{"_index":2704,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileinterceptor",{"_index":2015,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["fileisrequired",{"_index":2030,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filename",{"_index":3556,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["filename=\"${(data",{"_index":4062,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["fileobj",{"_index":2708,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.file.replace('.ui.yml",{"_index":2710,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileobj.file.replace('.yml",{"_index":3058,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["fileobj.path}/${fileobj.file",{"_index":2709,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.source",{"_index":3059,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filepath",{"_index":2590,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["filepaths",{"_index":2712,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["filepaths.find((path",{"_index":2718,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["files",{"_index":2623,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["files.filter((file",{"_index":3551,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["files.includes(file",{"_index":2631,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["files.length",{"_index":2706,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["files.sort((a",{"_index":3559,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["filesmap",{"_index":3052,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filesmap.has(target.file",{"_index":3055,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filesmap.set(target.file",{"_index":3054,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filestorage",{"_index":1968,"title":{"classes/Filestorage.html":{}},"body":{"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["filestorage.controller",{"_index":2085,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["filestorage.name",{"_index":2087,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["filestorage.service",{"_index":2022,"title":{},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filestorage.service.ts",{"_index":4020,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:13",{"_index":4027,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:19",{"_index":4033,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:45",{"_index":4041,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:58",{"_index":4039,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:71",{"_index":4035,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:8",{"_index":4050,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:86",{"_index":4037,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:99",{"_index":4030,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage/filestorage.module",{"_index":1799,"title":{},"body":{"modules/CoreModule.html":{}}}],["filestoragecontroller",{"_index":1986,"title":{"controllers/FilestorageController.html":{}},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{}}}],["filestoragecontroller.projection",{"_index":2033,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["filestoragecreatedto",{"_index":1953,"title":{"classes/FilestorageCreateDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filestoragecreatedto:26",{"_index":2079,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:31",{"_index":2076,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:37",{"_index":2077,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:42",{"_index":2072,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:47",{"_index":2074,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:52",{"_index":2071,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:57",{"_index":2075,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:62",{"_index":2073,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:67",{"_index":2078,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:72",{"_index":2070,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragedto",{"_index":1965,"title":{"classes/FilestorageDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filestoragemodule",{"_index":1788,"title":{"modules/FilestorageModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestorageschema",{"_index":1982,"title":{},"body":{"classes/Filestorage.html":{},"modules/FilestorageModule.html":{}}}],["filestorageschema.virtual('filename').get(function",{"_index":1984,"title":{},"body":{"classes/Filestorage.html":{}}}],["filestorageservice",{"_index":2023,"title":{},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"overview.html":{}}}],["filestorageupdatedto",{"_index":1966,"title":{"classes/FilestorageUpdateDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["fileuploaddto",{"_index":1943,"title":{"classes/FileUploadDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filled",{"_index":5818,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["filter",{"_index":212,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filter.dto",{"_index":2778,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["filter.dto.ts",{"_index":3661,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filter.dto.ts:1",{"_index":3662,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filteroptions",{"_index":415,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["filterquery",{"_index":208,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filters",{"_index":2467,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/filtres-api.html":{}}}],["filters[=subject]=53",{"_index":5408,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["filters[^sequence]=/53",{"_index":5415,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["filters[key",{"_index":2812,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["filters[prefix",{"_index":5406,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["filterschema",{"_index":413,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["filterschema(value",{"_index":2470,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["filtersquery",{"_index":2791,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["filtersquery.length",{"_index":2809,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["filtres",{"_index":2395,"title":{"additional-documentation/filtres-api.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/filtres-api.html":{}}}],["fin",{"_index":5829,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["finally",{"_index":1105,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["finalpath",{"_index":2717,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["finaux",{"_index":5387,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["find",{"_index":188,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"license.html":{}}}],["find(filter",{"_index":221,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findall",{"_index":2601,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findandcount",{"_index":189,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcount(filter",{"_index":225,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findandcountassertions",{"_index":5585,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcountassertions(service",{"_index":5590,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcounterrorassertions(service",{"_index":5591,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid",{"_index":190,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid(_id",{"_index":227,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["findbyid(id",{"_index":3896,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["findbyidassertions",{"_index":5592,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyidassertions(service",{"_index":5594,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyiderrorassertions(service",{"_index":5596,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone",{"_index":191,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone(filter",{"_index":229,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findone(schema",{"_index":2606,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findoneassertions",{"_index":5597,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneassertions(service",{"_index":5601,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneerrorassertions(service",{"_index":5603,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fingerprint",{"_index":1959,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Identities.html":{}}}],["finishedat",{"_index":3163,"title":{},"body":{"classes/Jobs.html":{}}}],["firemessage(observer",{"_index":1224,"title":{},"body":{"controllers/BackendsController.html":{}}}],["first",{"_index":2253,"title":{},"body":{"classes/FusionDto.html":{},"license.html":{}}}],["fitness",{"_index":5146,"title":{},"body":{"license.html":{}}}],["fix",{"_index":3112,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fixed",{"_index":4826,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":5649,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["flatten",{"_index":2679,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["flexible",{"_index":5280,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["flow",{"_index":4706,"title":{},"body":{"license.html":{}}}],["fois",{"_index":5648,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["follow",{"_index":4585,"title":{},"body":{"license.html":{}}}],["followers_url",{"_index":651,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["following",{"_index":2882,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["following_url",{"_index":652,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fonction",{"_index":2802,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fonctionnalit",{"_index":5395,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnalités",{"_index":5275,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fonctionne",{"_index":5511,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnement",{"_index":5599,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctions",{"_index":2394,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fontsrc",{"_index":1714,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["forbid",{"_index":4767,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":1013,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["force",{"_index":2526,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesUpsertController.html":{},"license.html":{}}}],["forcepassword",{"_index":2522,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword(@res",{"_index":2543,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword(res",{"_index":2524,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword.controller",{"_index":2751,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["forcepassword.controller.ts",{"_index":2521,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword.controller.ts:20",{"_index":2528,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword.controller.ts:37",{"_index":2536,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword.service",{"_index":2539,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{}}}],["forcepassworddto",{"_index":2088,"title":{"classes/ForcePasswordDto.html":{}},"body":{"classes/ForcePasswordDto.html":{},"controllers/IdentitiesForcePasswordController.html":{}}}],["forcestring",{"_index":2792,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["form",{"_index":2090,"title":{"classes/Form.html":{}},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["form.controller",{"_index":2218,"title":{},"body":{"modules/FormModule.html":{}}}],["form.name",{"_index":2219,"title":{},"body":{"modules/FormModule.html":{}}}],["form.service",{"_index":2131,"title":{},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["format",{"_index":1753,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["formats",{"_index":2904,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{}}}],["formcontroller",{"_index":2115,"title":{"controllers/FormController.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["formcontroller.projection",{"_index":2136,"title":{},"body":{"controllers/FormController.html":{}}}],["formcreatedto",{"_index":2142,"title":{"classes/FormCreateDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formcreatedto:12",{"_index":2172,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:17",{"_index":2167,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:21",{"_index":2173,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:26",{"_index":2166,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:31",{"_index":2169,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:35",{"_index":2171,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:39",{"_index":2170,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:44",{"_index":2168,"title":{},"body":{"classes/FormDto.html":{}}}],["formdto",{"_index":2117,"title":{"classes/FormDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formdto)@apiresponse({type",{"_index":2119,"title":{},"body":{"controllers/FormController.html":{}}}],["formfielddto",{"_index":2174,"title":{"classes/FormFieldDto.html":{}},"body":{"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{}}}],["formfieldpart",{"_index":2199,"title":{"classes/FormFieldPart.html":{}},"body":{"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{}}}],["formfieldpartschema",{"_index":2211,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["formmodule",{"_index":2213,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules.html":{},"overview.html":{}}}],["forms",{"_index":2111,"title":{},"body":{"classes/Form.html":{},"controllers/IdentitiesJsonFormsController.html":{},"license.html":{}}}],["formschema",{"_index":2113,"title":{},"body":{"classes/Form.html":{},"modules/FormModule.html":{}}}],["formsectiondto",{"_index":2162,"title":{"classes/FormSectionDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{}}}],["formsectionpart",{"_index":2109,"title":{"classes/FormSectionPart.html":{}},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formsectionpartschema",{"_index":2101,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formservice",{"_index":2130,"title":{"injectables/FormService.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"overview.html":{}}}],["formtypelist",{"_index":2156,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formtypes",{"_index":2106,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formtypes.base",{"_index":2112,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formulaire",{"_index":5759,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formulaires",{"_index":5424,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formupdatedto",{"_index":2126,"title":{"classes/FormUpdateDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["forwardref",{"_index":2735,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["found",{"_index":2476,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"license.html":{}}}],["found.dto.ts",{"_index":3649,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:6",{"_index":3651,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:9",{"_index":3650,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["foundation",{"_index":4446,"title":{},"body":{"license.html":{}}}],["fourni",{"_index":1375,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fournie",{"_index":5352,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournies",{"_index":5578,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournir",{"_index":5432,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["fournis",{"_index":2396,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["fournit",{"_index":3949,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fr",{"_index":1749,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["fr/${project}/releases/latest",{"_index":699,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fr_fr",{"_index":3066,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["fr_fr.utf",{"_index":3065,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["framesrc",{"_index":1712,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["framework",{"_index":5772,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["frameworks",{"_index":5309,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["free",{"_index":4445,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":4465,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":4510,"title":{},"body":{"license.html":{}}}],["front",{"_index":1377,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["frontend",{"_index":5272,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["frontpwd",{"_index":1676,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["fs",{"_index":850,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fs/promises",{"_index":3512,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["fstype",{"_index":1950,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"miscellaneous/enumerations.html":{}}}],["fstype.file",{"_index":1955,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["fstypelist",{"_index":1951,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["fulfilling",{"_index":4752,"title":{},"body":{"license.html":{}}}],["full",{"_index":5195,"title":{},"body":{"license.html":{}}}],["function",{"_index":1129,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/MigrationsService.html":{},"interfaces/RawBodyBufferOptions.html":{},"injectables/UniquenessMailValidator.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["functioning",{"_index":4907,"title":{},"body":{"license.html":{}}}],["fundamentally",{"_index":4541,"title":{},"body":{"license.html":{}}}],["further",{"_index":4847,"title":{},"body":{"license.html":{}}}],["fusion",{"_index":2308,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{}}}],["fusion(body",{"_index":2492,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["fusiondto",{"_index":2249,"title":{"classes/FusionDto.html":{}},"body":{"classes/FusionDto.html":{},"controllers/IdentitiesDoublonController.html":{}}}],["fusionne",{"_index":2494,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["fusionnée",{"_index":2311,"title":{},"body":{"classes/Identities.html":{}}}],["fusionnées",{"_index":2304,"title":{},"body":{"classes/Identities.html":{}}}],["future",{"_index":4564,"title":{},"body":{"license.html":{}}}],["garantir",{"_index":5364,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gcm",{"_index":1364,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["general",{"_index":4440,"title":{},"body":{"license.html":{}}}],["generally",{"_index":4694,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1137,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["generate(@res",{"_index":2580,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(res",{"_index":2554,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(undefined",{"_index":2608,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["generateall",{"_index":2552,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["generateall(@res",{"_index":2577,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generateall(res",{"_index":2561,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["genere",{"_index":1521,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["generic_error",{"_index":4256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generic_stopped",{"_index":4257,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gestion",{"_index":5277,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["get('/get",{"_index":690,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["get(':_id([0",{"_index":401,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["get(':schema",{"_index":2586,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get(':schema')@apioperation({summary",{"_index":2828,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["get('count",{"_index":2465,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('count')@apioperation({summary",{"_index":2392,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('duplicates",{"_index":2506,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["get('duplicates')@apioperation({summary",{"_index":2498,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["get('get",{"_index":3423,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get('get')@apioperation({summary",{"_index":3412,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get('getdeleted",{"_index":2455,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('getdeleted')@apipaginateddecorator(undefined",{"_index":2407,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('getpolicies",{"_index":3731,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["get('getpolicies')@apioperation({summary",{"_index":3683,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["get('ioutdated",{"_index":3752,"title":{},"body":{"controllers/PasswdController.html":{}}}],["get('ioutdated')@apioperation({summary",{"_index":3706,"title":{},"body":{"controllers/PasswdController.html":{}}}],["get('path",{"_index":2039,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path')@apireadresponsedecorator(filestoragedto",{"_index":1997,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path/raw",{"_index":2049,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path/raw')@apireadresponsedecorator(filestoragedto)@apiquery({name",{"_index":2000,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('photo/raw",{"_index":2786,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["get('session",{"_index":924,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('session')@useguards(undefined)@apioperation({summary",{"_index":899,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apioperation({summary",{"_index":616,"title":{},"body":{"controllers/AppController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get()@apipaginateddecorator(undefined",{"_index":416,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["get(@res",{"_index":3424,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get(args.object",{"_index":4098,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["get(identity.toobject",{"_index":1410,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["get(res",{"_index":3411,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get(value",{"_index":4100,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["getcontrollername",{"_index":27,"title":{},"body":{"classes/AbstractController.html":{}}}],["getdeleted",{"_index":2388,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["getdeleted(res",{"_index":2406,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["getdoublons",{"_index":2491,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["getdoublons(@res",{"_index":2507,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["getdoublons(res",{"_index":2497,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["getinfo",{"_index":614,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinfo(@res",{"_index":687,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["getinfo(res",{"_index":615,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":3596,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodel(name",{"_index":3602,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["getmodeltoken(identities.name",{"_index":5574,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodulename",{"_index":148,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getpaddingforcode",{"_index":1621,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["getparameter",{"_index":183,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["getparameter(settingname",{"_index":201,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["getparams",{"_index":3429,"title":{},"body":{"injectables/MailadmService.html":{}}}],["getpayload",{"_index":4115,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["getpolicies",{"_index":3671,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getpolicies(@res",{"_index":3733,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getpolicies(res",{"_index":3682,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getqueue",{"_index":95,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getredisconnectiontoken",{"_index":99,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getrequest",{"_index":146,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getschemapath",{"_index":2774,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["getschemapath(paginatedfilterdto",{"_index":2787,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["getservicename",{"_index":150,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getsessiondata",{"_index":980,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsessiondata(identity",{"_index":992,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":4292,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":4144,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["gettoken'})@isstring",{"_index":4142,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["getvalidationerrors",{"_index":3622,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidationerrors(err",{"_index":3626,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidations",{"_index":4116,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["gists_url",{"_index":653,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["github",{"_index":707,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["githubasset",{"_index":662,"title":{"interfaces/GithubAsset.html":{}},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["githubauthor",{"_index":644,"title":{"interfaces/GithubAuthor.html":{}},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["githubupdate",{"_index":663,"title":{"interfaces/GithubUpdate.html":{}},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["give",{"_index":4786,"title":{},"body":{"license.html":{}}}],["given",{"_index":4720,"title":{},"body":{"license.html":{}}}],["givenname",{"_index":4326,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["gives",{"_index":4800,"title":{},"body":{"license.html":{}}}],["giving",{"_index":4518,"title":{},"body":{"license.html":{}}}],["glob",{"_index":3504,"title":{},"body":{"injectables/MigrationsService.html":{},"dependencies.html":{}}}],["glob(`./jobs/*.js",{"_index":3549,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["gnu",{"_index":4439,"title":{},"body":{"license.html":{}}}],["good",{"_index":3799,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["goodcomplexity",{"_index":3780,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["governed",{"_index":4936,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4514,"title":{},"body":{"license.html":{}}}],["grand",{"_index":5368,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["grant",{"_index":4959,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4713,"title":{},"body":{"license.html":{}}}],["grants",{"_index":5013,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":4506,"title":{},"body":{"license.html":{}}}],["gravatar_id",{"_index":648,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["greater",{"_index":5418,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["greatest",{"_index":5187,"title":{},"body":{"license.html":{}}}],["grille",{"_index":5803,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["group",{"_index":2662,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["groupindex",{"_index":2665,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["guarantee",{"_index":4469,"title":{},"body":{"license.html":{}}}],["gui",{"_index":5212,"title":{},"body":{"license.html":{}}}],["guides",{"_index":5385,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["gère",{"_index":5964,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["génère",{"_index":2556,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["générales",{"_index":6058,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générer",{"_index":1543,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["générique",{"_index":5991,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générées",{"_index":5884,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["gér",{"_index":5777,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gérer",{"_index":5267,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["h",{"_index":5963,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["handlebars",{"_index":4185,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":762,"title":{},"body":{"modules/AppModule.html":{}}}],["hard",{"_index":2695,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hardconfig",{"_index":3050,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["hardconfigfiles",{"_index":2692,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hardconfigpath",{"_index":2643,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hash",{"_index":561,"title":{},"body":{"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["hash('sha256",{"_index":935,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["hash(data.password",{"_index":568,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.$set.password",{"_index":577,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.password",{"_index":574,"title":{},"body":{"injectables/AgentsService.html":{}}}],["haslowercase",{"_index":3781,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hasnumbers",{"_index":3782,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hasspecialchars",{"_index":3783,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hastransformer",{"_index":4055,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["hasuppercase",{"_index":3784,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["having",{"_index":4728,"title":{},"body":{"license.html":{}}}],["hdfddyf18a",{"_index":3858,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["header",{"_index":5922,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["headers",{"_index":907,"title":{},"body":{"controllers/AuthController.html":{}}}],["headers('authorization",{"_index":944,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1677,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["helmetoptions",{"_index":1679,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["hereafter",{"_index":5053,"title":{},"body":{"license.html":{}}}],["hibp",{"_index":4188,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":455,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["hiddenquery",{"_index":2008,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["holder",{"_index":4988,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4942,"title":{},"body":{"license.html":{}}}],["hooks",{"_index":5756,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["hope",{"_index":5197,"title":{},"body":{"license.html":{}}}],["horizontallayout",{"_index":2671,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["host",{"_index":585,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MailSettingsDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/SmsSettingsDto.html":{}}}],["host.switchtohttp",{"_index":592,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["hosts",{"_index":4856,"title":{},"body":{"license.html":{}}}],["household",{"_index":4879,"title":{},"body":{"license.html":{}}}],["html",{"_index":4068,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["html_url",{"_index":650,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["http",{"_index":3935,"title":{},"body":{"injectables/ShutdownObserver.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http.server",{"_index":3931,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["http:///identities",{"_index":5962,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http:///identities/upsert",{"_index":5978,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http://127.0.0.1:2000/jwks",{"_index":1732,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["http://json",{"_index":5992,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["http://localhost/search?limit=9999&filters%5b%5esequence%5d=%2f53%2f&sort%5bmetadata.createdat%5d",{"_index":5412,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["httpexception",{"_index":1313,"title":{},"body":{"interfaces/CipherData.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["httpexception('aucune",{"_index":1606,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["httpexception.createbody",{"_index":3634,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["https",{"_index":1690,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["https://ajv.js.org/security.html",{"_index":3034,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["https://fsf.org",{"_index":4448,"title":{},"body":{"license.html":{}}}],["https://monsite.com",{"_index":3828,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["https://randomkeygen.com",{"_index":1728,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["https://stackoverflow.com/questions/67314808/how",{"_index":682,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["https://www.gnu.org/licenses",{"_index":5218,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":5226,"title":{},"body":{"license.html":{}}}],["httpservers",{"_index":3927,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["httpstatus",{"_index":422,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.accepted",{"_index":2446,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["httpstatus.bad_request",{"_index":1515,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.created",{"_index":463,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["httpstatus.not_acceptable",{"_index":1250,"title":{},"body":{"controllers/BackendsController.html":{},"classes/MongooseValidationFilter.html":{}}}],["httpstatus.not_found",{"_index":3652,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["httpstatus.ok",{"_index":471,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["hypothetical",{"_index":5210,"title":{},"body":{"license.html":{}}}],["héritent",{"_index":5512,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["i18n",{"_index":2906,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{}}}],["iauthmoduleoptions",{"_index":958,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["ici",{"_index":5531,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["icon",{"_index":2222,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["icône",{"_index":5794,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["id",{"_index":263,"title":{},"body":{"classes/ActivationDto.html":{},"controllers/AgentsController.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/NeedChangePasswordDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["id1",{"_index":2251,"title":{},"body":{"classes/FusionDto.html":{}}}],["id2",{"_index":2252,"title":{},"body":{"classes/FusionDto.html":{}}}],["identifiable",{"_index":5080,"title":{},"body":{"license.html":{}}}],["identifiant",{"_index":5934,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identit",{"_index":1607,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identite",{"_index":2542,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identite'})@apiresponse({status",{"_index":2527,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["identites",{"_index":1632,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities",{"_index":1328,"title":{"classes/Identities.html":{}},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitManyDto.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identities'})@isarray",{"_index":3082,"title":{},"body":{"classes/InitManyDto.html":{}}}],["identities).state",{"_index":2819,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["identities.dto",{"_index":1217,"title":{},"body":{"controllers/BackendsController.html":{}}}],["identities.dto.ts",{"_index":1817,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{},"classes/SyncIdentitiesDto.html":{}}}],["identities.dto.ts:7",{"_index":1819,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{},"classes/SyncIdentitiesDto.html":{}}}],["identities.jsonforms.controller",{"_index":2599,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["identities.jsonforms.service",{"_index":2573,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identities.length",{"_index":1605,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities.map((identity",{"_index":1612,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities.name",{"_index":2754,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.validation.controller",{"_index":2854,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["identities.validation.service",{"_index":2837,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identities/_schemas/identities.schema",{"_index":1329,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities/identities",{"_index":1326,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities/identities.module",{"_index":3456,"title":{},"body":{"modules/ManagementModule.html":{},"modules/PasswdModule.html":{}}}],["identitiesactivationcontroller",{"_index":2317,"title":{"controllers/IdentitiesActivationController.html":{}},"body":{"controllers/IdentitiesActivationController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesactivationservice",{"_index":2325,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiescontroller",{"_index":5573,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiescreatedto",{"_index":2339,"title":{"classes/IdentitiesCreateDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["identitiescreatedto:17",{"_index":2519,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:23",{"_index":2517,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:29",{"_index":2515,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:35",{"_index":2518,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:40",{"_index":2516,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:59",{"_index":2514,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescrudcontroller",{"_index":2385,"title":{"controllers/IdentitiesCrudController.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiescrudcontroller.projection",{"_index":2457,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["identitiescrudservice",{"_index":1325,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["identitiesdocument",{"_index":2299,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["identitiesdoubloncontroller",{"_index":2489,"title":{"controllers/IdentitiesDoublonController.html":{}},"body":{"controllers/IdentitiesDoublonController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesdoublonservice",{"_index":2504,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesdto",{"_index":2380,"title":{"classes/IdentitiesDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesdtostub",{"_index":5527,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesforcepasswordcontroller",{"_index":2520,"title":{"controllers/IdentitiesForcePasswordController.html":{}},"body":{"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesforcepasswordservice",{"_index":2538,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{},"overview.html":{}}}],["identitiesjsonformscontroller",{"_index":2549,"title":{"controllers/IdentitiesJsonFormsController.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identitiesjsonformsmodule",{"_index":2594,"title":{"modules/IdentitiesJsonformsModule.html":{}},"body":{"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["identitiesjsonformsservice",{"_index":2572,"title":{"injectables/IdentitiesJsonformsService.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"overview.html":{}}}],["identitiesmodel",{"_index":5545,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesmodule",{"_index":1289,"title":{"modules/IdentitiesModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/IdentitiesModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identitiesphotocontroller",{"_index":2729,"title":{"controllers/IdentitiesPhotoController.html":{}},"body":{"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["identitiesschema",{"_index":2312,"title":{},"body":{"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesservice",{"_index":5509,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedto",{"_index":2381,"title":{"classes/IdentitiesUpdateDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedtostub",{"_index":5529,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupsertcontroller",{"_index":2728,"title":{"controllers/IdentitiesUpsertController.html":{}},"body":{"modules/IdentitiesModule.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identitiesupsertdto",{"_index":2383,"title":{"classes/IdentitiesUpsertDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["identitiesupsertservice",{"_index":2744,"title":{},"body":{"modules/IdentitiesModule.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identitiesvalidation",{"_index":5422,"title":{},"body":{"additional-documentation/documentation-technique.html":{}}}],["identitiesvalidationcontroller",{"_index":2824,"title":{"controllers/IdentitiesValidationController.html":{}},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identitiesvalidationfilter",{"_index":2741,"title":{"classes/IdentitiesValidationFilter.html":{}},"body":{"modules/IdentitiesModule.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["identitiesvalidationmodule",{"_index":2737,"title":{"modules/IdentitiesValidationModule.html":{}},"body":{"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesvalidationservice",{"_index":2427,"title":{"injectables/IdentitiesValidationService.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identity",{"_index":268,"title":{},"body":{"classes/ActivationDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/FusionDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identity._id",{"_index":928,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"interfaces/TokenData.html":{}}}],["identity._id}_${randombytes(16).tostring('hex",{"_index":1076,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.datastatus",{"_index":1390,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.decorator",{"_index":913,"title":{},"body":{"controllers/AuthController.html":{}}}],["identity.email",{"_index":929,"title":{},"body":{"controllers/AuthController.html":{}}}],["identity.get('inetorgperson.uid",{"_index":1614,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson.displayname",{"_index":1433,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson.employeenumber",{"_index":1885,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["identity.inetorgperson.mail",{"_index":1480,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson.uid",{"_index":1432,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson?.employeenumber",{"_index":2782,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["identity.inetorgperson?.employeenumber[0",{"_index":2821,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["identity.inetorgperson?.employeetype",{"_index":2781,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identity.initinfo.initdate",{"_index":1628,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.initinfo.sentdate",{"_index":1630,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.initstate",{"_index":1627,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.save",{"_index":1591,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.state",{"_index":2477,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["identity.tojson",{"_index":1503,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.toobject",{"_index":1062,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity_create",{"_index":4246,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_delete",{"_index":4248,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_disable",{"_index":4251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_enable",{"_index":4252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_change",{"_index":4250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_reset",{"_index":4249,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_update",{"_index":4247,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identitycounter",{"_index":1136,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identitycounters",{"_index":1131,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identityid",{"_index":1086,"title":{},"body":{"injectables/AuthService.html":{}}}],["identitylifecycle",{"_index":2284,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitylifecycle.inactive",{"_index":2301,"title":{},"body":{"classes/Identities.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitymailattribute",{"_index":1450,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{}}}],["identitymobileattribute",{"_index":1699,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["identitymodel",{"_index":1901,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["identitystate",{"_index":1339,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identitystate.active",{"_index":3356,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["identitystate.synced",{"_index":1490,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identitystate.to_complete",{"_index":2445,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_create",{"_index":5528,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_validate",{"_index":2478,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.unknown",{"_index":2300,"title":{},"body":{"classes/Identities.html":{}}}],["identité'})@apiresponse({status",{"_index":2323,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["identitée",{"_index":2447,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identitées",{"_index":1202,"title":{},"body":{"controllers/BackendsController.html":{},"classes/InitManyDto.html":{}}}],["identités",{"_index":1601,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{}},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identités'})@apiresponse({status",{"_index":2495,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["ids",{"_index":2486,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"classes/InitManyDto.html":{}}}],["ids.ids",{"_index":1604,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["ignoreexpiration",{"_index":3251,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["il",{"_index":2934,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["image",{"_index":4048,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["imgsrc",{"_index":1715,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["imiter",{"_index":5669,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implement",{"_index":4680,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":4681,"title":{},"body":{"license.html":{}}}],["implements",{"_index":67,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/ShutdownObserver.html":{},"injectables/UniquenessMailValidator.html":{}}}],["implied",{"_index":5104,"title":{},"body":{"license.html":{}}}],["implémentation",{"_index":5747,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["implémentations",{"_index":5646,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implémenter",{"_index":5464,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["implémentez",{"_index":5471,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["import(`${__dirname}/${file",{"_index":3567,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["import(plugin.package).then((plugin",{"_index":819,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["importance",{"_index":5699,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["importants",{"_index":5761,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["importe",{"_index":2801,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["imported",{"_index":4276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["importing",{"_index":5045,"title":{},"body":{"license.html":{}}}],["imports",{"_index":549,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["impose",{"_index":4968,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":5106,"title":{},"body":{"license.html":{}}}],["impossible",{"_index":1397,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["in_progress",{"_index":4291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inability",{"_index":5162,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":5165,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":4266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inc",{"_index":4447,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":5159,"title":{},"body":{"license.html":{}}}],["incluant",{"_index":5662,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["include",{"_index":4673,"title":{},"body":{"license.html":{}}}],["included",{"_index":4675,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4623,"title":{},"body":{"license.html":{}}}],["including",{"_index":4690,"title":{},"body":{"license.html":{}}}],["inclure",{"_index":5925,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inclusion",{"_index":4817,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":4542,"title":{},"body":{"license.html":{}}}],["inconnu",{"_index":1520,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["incorporating",{"_index":5219,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4882,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1519,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["increment",{"_index":1116,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.interface",{"_index":2298,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["increment.interface.ts",{"_index":1108,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.plugin",{"_index":2297,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["incrementby",{"_index":1110,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{}}}],["indemnification",{"_index":4964,"title":{},"body":{"license.html":{}}}],["indentit",{"_index":1589,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["independent",{"_index":4806,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{}}}],["index.middleware",{"_index":2753,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["index.middleware.ts",{"_index":1898,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["index.middleware.ts:13",{"_index":1904,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["index.middleware.ts:8",{"_index":1900,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["indexable",{"_index":61,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/GithubAsset.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{}}}],["indicate",{"_index":5017,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":4978,"title":{},"body":{"license.html":{}}}],["indiquant",{"_index":5972,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indique",{"_index":5924,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indiquer",{"_index":5953,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["individual",{"_index":4815,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":4551,"title":{},"body":{"license.html":{}}}],["individuel",{"_index":5745,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["industrial",{"_index":4897,"title":{},"body":{"license.html":{}}}],["indépendant",{"_index":5316,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["inetorgperson",{"_index":2263,"title":{"classes/inetOrgPerson.html":{}},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["inetorgperson.cn",{"_index":5530,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgperson.employeenumber",{"_index":1889,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/Identities.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgperson.employeetype",{"_index":2316,"title":{},"body":{"classes/Identities.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgperson.uid",{"_index":1383,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgpersoncreatedto",{"_index":4361,"title":{"classes/inetOrgPersonCreateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["inetorgpersoncreatedto:101",{"_index":4430,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:106",{"_index":4431,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:111",{"_index":4433,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:116",{"_index":4434,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:121",{"_index":4436,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:131",{"_index":4426,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:34",{"_index":4435,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:39",{"_index":4419,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:46",{"_index":4422,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:51",{"_index":4423,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:57",{"_index":4420,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:6",{"_index":4437,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:62",{"_index":4432,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:67",{"_index":4421,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:72",{"_index":4424,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:77",{"_index":4425,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:82",{"_index":4427,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:90",{"_index":4428,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:96",{"_index":4429,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersondto",{"_index":2359,"title":{"classes/inetOrgPersonDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersondtostub",{"_index":5525,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersonschema",{"_index":2276,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["inetorgpersonupdatedto",{"_index":4417,"title":{"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info.part.schema",{"_index":2294,"title":{},"body":{"classes/Identities.html":{}}}],["info.part.schema.ts",{"_index":3074,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["info.part.schema.ts:10",{"_index":3077,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["info.part.schema.ts:7",{"_index":3078,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["inform",{"_index":4865,"title":{},"body":{"license.html":{}}}],["information",{"_index":4902,"title":{},"body":{"license.html":{}}}],["informations",{"_index":5904,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["infos",{"_index":620,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["infos'})@apiresponse({status",{"_index":618,"title":{},"body":{"controllers/AppController.html":{}}}],["infringe",{"_index":5015,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":5042,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4615,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":87,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonDto.html":{}}}],["init",{"_index":1599,"title":{},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["init(@body",{"_index":3736,"title":{},"body":{"controllers/PasswdController.html":{}}}],["init(body",{"_index":3686,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initaccount",{"_index":1478,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initaccount(initdto",{"_index":1471,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initaccountdto",{"_index":1331,"title":{"classes/InitAccountDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitAccountDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["initdate",{"_index":3075,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["initdto.type",{"_index":1417,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initdto.uid",{"_index":1384,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initforfingerprint",{"_index":4363,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["initforfingerprint(partial",{"_index":4392,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["initialisation",{"_index":1366,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initialise",{"_index":3688,"title":{},"body":{"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["initialisées",{"_index":3748,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initialize",{"_index":1486,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/TokenData.html":{}}}],["initialized",{"_index":2640,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"miscellaneous/enumerations.html":{}}}],["initiate",{"_index":5035,"title":{},"body":{"license.html":{}}}],["initinfo",{"_index":2264,"title":{},"body":{"classes/Identities.html":{}}}],["initinfo.initdate",{"_index":1641,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initinfopart",{"_index":2278,"title":{"classes/InitInfoPart.html":{}},"body":{"classes/Identities.html":{},"classes/InitInfoPart.html":{}}}],["initinfopartschema",{"_index":2279,"title":{},"body":{"classes/Identities.html":{},"classes/InitInfoPart.html":{}}}],["initmany",{"_index":3672,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initmany(@body",{"_index":3746,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initmany(body",{"_index":3691,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initmany(ids",{"_index":1602,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initmanydto",{"_index":1345,"title":{"classes/InitManyDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["initreset",{"_index":3673,"title":{},"body":{"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{}}}],["initreset(@body",{"_index":3750,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initreset(body",{"_index":3694,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initreset(initdto",{"_index":1380,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initresetdto",{"_index":1341,"title":{"classes/InitResetDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitResetDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["initstate",{"_index":1640,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{}}}],["initstatesenum",{"_index":1347,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["initstatesenum.initialized",{"_index":1598,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initstatesenum.nosent",{"_index":2303,"title":{},"body":{"classes/Identities.html":{}}}],["initstatesenum.sent",{"_index":1483,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["inittokenttl",{"_index":3785,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["inject",{"_index":776,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"interfaces/ValidationRecursive.html":{}}}],["injectable",{"_index":136,"title":{"injectables/AbstractService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/AbstractService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"overview.html":{}}}],["injectconnection",{"_index":1879,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/MigrationsService.html":{},"injectables/UniquenessMailValidator.html":{}}}],["injectmodel",{"_index":238,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["injectmodel(form.name",{"_index":2248,"title":{},"body":{"injectables/FormService.html":{}}}],["injectmodel(identities.name",{"_index":1909,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["injectredis",{"_index":1015,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["inline",{"_index":4066,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["input",{"_index":5812,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["inputs",{"_index":384,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["inquirer",{"_index":331,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["inquirerservice",{"_index":317,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["inside",{"_index":4538,"title":{},"body":{"license.html":{}}}],["install",{"_index":4537,"title":{},"body":{"license.html":{}}}],["installation",{"_index":4901,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4920,"title":{},"body":{"license.html":{}}}],["instance",{"_index":3577,"title":{},"body":{"injectables/MigrationsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instance.up",{"_index":3579,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["instanceof",{"_index":2463,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{}}}],["instances",{"_index":5456,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instead",{"_index":5224,"title":{},"body":{"license.html":{}}}],["instructions",{"_index":5780,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["int",{"_index":1415,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["intact",{"_index":4781,"title":{},"body":{"license.html":{}}}],["integer",{"_index":6018,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["intended",{"_index":4468,"title":{},"body":{"license.html":{}}}],["intention",{"_index":4771,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":4633,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":5871,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["interactive",{"_index":4638,"title":{},"body":{"license.html":{}}}],["interagir",{"_index":5442,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["interchange",{"_index":4829,"title":{},"body":{"license.html":{}}}],["interest",{"_index":5030,"title":{},"body":{"license.html":{}}}],["interface",{"_index":38,"title":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"license.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"license.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["interfered",{"_index":4909,"title":{},"body":{"license.html":{}}}],["internal",{"_index":598,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["internallogger",{"_index":3096,"title":{"injectables/InternalLogger.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloggeroptions",{"_index":3094,"title":{"interfaces/InternalLoggerOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloglevel",{"_index":3091,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["internallogoptions",{"_index":3088,"title":{"interfaces/InternalLogOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalservererrorexception",{"_index":1314,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["internalservererrorexception('une",{"_index":1592,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["interne",{"_index":881,"title":{},"body":{"controllers/AuthController.html":{}}}],["interorgperson.mail",{"_index":3795,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["interorgperson.mobile",{"_index":3826,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["interpretation",{"_index":5173,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4689,"title":{},"body":{"license.html":{}}}],["intersectiontype",{"_index":2368,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["intersectiontype(customfieldsdto",{"_index":2341,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["intimate",{"_index":4704,"title":{},"body":{"license.html":{}}}],["introduction",{"_index":5486,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["introuvable",{"_index":3004,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["intègre",{"_index":5437,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégration",{"_index":5300,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrations",{"_index":5752,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrée",{"_index":5755,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["invalid",{"_index":2441,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["invalid_credentials",{"_index":4260,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_json_response",{"_index":4261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_login",{"_index":4259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidate",{"_index":4801,"title":{},"body":{"license.html":{}}}],["invalide",{"_index":3008,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/inetOrgPerson.html":{}}}],["invalides",{"_index":2453,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["invitation",{"_index":3708,"title":{},"body":{"controllers/PasswdController.html":{}}}],["ioredis",{"_index":102,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["ip",{"_index":4209,"title":{},"body":{"dependencies.html":{}}}],["irrevocable",{"_index":4715,"title":{},"body":{"license.html":{}}}],["isarray",{"_index":515,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/InitManyDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isarray()@apiproperty({type",{"_index":1818,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{},"classes/SyncIdentitiesDto.html":{}}}],["isarray()@isstring({each",{"_index":3880,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["isarray()@type(undefined)@isstring({each",{"_index":4372,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isboolean",{"_index":276,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isboolean()@apiproperty({example",{"_index":271,"title":{},"body":{"classes/ActivationDto.html":{},"classes/PasswordPoliciesDto.html":{}}}],["isboolean()@isoptional()@apiproperty",{"_index":490,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isdate",{"_index":3477,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdate()@isoptional()@apiproperty",{"_index":3472,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdatestring",{"_index":3319,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isdev",{"_index":791,"title":{},"body":{"modules/AppModule.html":{}}}],["isemail",{"_index":507,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/MailSettingsDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isemail()@apiproperty({example",{"_index":3400,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["isemail()@apiproperty({required",{"_index":4381,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":488,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["isenum",{"_index":1763,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(actiontype",{"_index":1934,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isenum(configobjecttype",{"_index":1765,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isenum(datastatusenum",{"_index":2373,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(formtypelist",{"_index":2164,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["isenum(formtypelist)@apiproperty({enum",{"_index":2155,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isenum(formtypes",{"_index":2234,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(formtypes)@apiproperty",{"_index":2231,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(fstypelist",{"_index":1954,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["isenum(fstypelist)@isnotempty()@apiproperty({enum",{"_index":2067,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isenum(identitylifecycle",{"_index":2374,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(identitystate",{"_index":2371,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(initstatesenum",{"_index":2372,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isglobal",{"_index":773,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["isip",{"_index":3322,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isip(4",{"_index":3323,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismimetype",{"_index":1948,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["ismongoid",{"_index":508,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid()@apiproperty",{"_index":1669,"title":{},"body":{"classes/ConcernedToPartDTO.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["ismongoid()@apiproperty({type",{"_index":519,"title":{},"body":{"classes/AgentsDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid()@isoptional()@apiproperty({example",{"_index":1930,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isnan(tr",{"_index":2981,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["isnotempty",{"_index":505,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePartDTO.html":{}}}],["isnotempty()@isenum(actiontype)@apiproperty({type",{"_index":1928,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isnumber",{"_index":2197,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/StatePartDTO.html":{}}}],["isnumber()@apiproperty",{"_index":2191,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isnumber()@apiproperty({example",{"_index":3085,"title":{},"body":{"classes/InitResetDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{}}}],["isnumber()@isenum(identitystate)@apiproperty({enum",{"_index":2366,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isnotempty()@apiproperty",{"_index":3987,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["isnumber()@isoptional()@isenum(datastatusenum)@apiproperty({enum",{"_index":2357,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isoptional()@isenum(identitylifecycle)@apiproperty({enum",{"_index":2364,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isoptional()@isenum(initstatesenum)@apiproperty({enum",{"_index":2362,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject",{"_index":1808,"title":{},"body":{"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@apiproperty",{"_index":3207,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isobject()@isoptional()@apiproperty({required",{"_index":2145,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isobject()@isoptional()@validatenested",{"_index":502,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isobject()@isoptional()@validatenested()@type(undefined)@apiproperty({type",{"_index":2159,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@type(undefined)@apiproperty({type",{"_index":2360,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject()@validatenested({each",{"_index":2224,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isoptional",{"_index":509,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isoptional()@isboolean()@apiproperty({type",{"_index":2057,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@ismimetype()@apiproperty({type",{"_index":2061,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@ismongoid()@apiproperty({type",{"_index":2059,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@isobject()@apiproperty({type",{"_index":1932,"title":{},"body":{"classes/ExecuteJobDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@isstring()@apiproperty({required",{"_index":4383,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isoptional()@isstring()@apiproperty({type",{"_index":2054,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@type(undefined",{"_index":2822,"title":{},"body":{"classes/IdentitiesUpsertDto.html":{}}}],["isoptional()@type(undefined)@apiproperty({required",{"_index":2343,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isstring",{"_index":277,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataPartDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePartDTO.html":{},"classes/VerifyTokenDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isstring()@apiproperty",{"_index":2151,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isstring()@apiproperty()@isoptional",{"_index":4364,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@apiproperty({example",{"_index":265,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FusionDto.html":{},"classes/InitResetDto.html":{},"classes/MailSettingsDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{}}}],["isstring()@apiproperty({required",{"_index":4369,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@isenum(configobjecttype",{"_index":1760,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["isstring()@isnotempty()@apiproperty",{"_index":492,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isstring()@isnotempty()@apiproperty({type",{"_index":2063,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isstring()@isoptional",{"_index":1755,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["isstring()@isoptional()@apiproperty",{"_index":485,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{}}}],["isstring()@isoptional()@apiproperty({required",{"_index":2147,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{}}}],["isstring({each",{"_index":3315,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isunique",{"_index":4111,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["isunique(options",{"_index":4109,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["isurl",{"_index":3406,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["isurl({protocols",{"_index":3392,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["isvalidobjectid",{"_index":2798,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["isvalidobjectid(filter",{"_index":2813,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["it('should",{"_index":5589,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["item",{"_index":4657,"title":{},"body":{"license.html":{}}}],["items",{"_index":2346,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["itself",{"_index":4924,"title":{},"body":{"license.html":{}}}],["iv",{"_index":1354,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["iverifyoptions",{"_index":3348,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["jalons",{"_index":5393,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jest",{"_index":5485,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jest.clearallmocks",{"_index":5623,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jeton",{"_index":889,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{}}}],["job",{"_index":1257,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job.dto",{"_index":1214,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job.dto.ts",{"_index":1926,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:14",{"_index":1931,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:19",{"_index":1933,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:9",{"_index":1929,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.waituntilfinished(this.queueevents",{"_index":5481,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job:added",{"_index":1277,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:completed",{"_index":1280,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:failed",{"_index":1283,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job['status",{"_index":1516,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["jobid",{"_index":3164,"title":{},"body":{"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["jobname",{"_index":4151,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["jobs",{"_index":1192,"title":{"classes/Jobs.html":{}},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{}}}],["jobs.controller",{"_index":3230,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.name",{"_index":3231,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":3192,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":1295,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["jobscontroller",{"_index":3184,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobscontroller.projection",{"_index":3196,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobscreatedto",{"_index":3201,"title":{"classes/JobsCreateDto.html":{}},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jobscreatedto:12",{"_index":3220,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:16",{"_index":3217,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:22",{"_index":3219,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:26",{"_index":3224,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:30",{"_index":3218,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:34",{"_index":3221,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:38",{"_index":3222,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:42",{"_index":3223,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobsdocument",{"_index":3180,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{}}}],["jobsdto",{"_index":3189,"title":{"classes/JobsDto.html":{}},"body":{"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jobsmodule",{"_index":1290,"title":{"modules/JobsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsoptions",{"_index":1942,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["jobsschema",{"_index":3182,"title":{},"body":{"classes/Jobs.html":{},"modules/JobsModule.html":{}}}],["jobsservice",{"_index":3191,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"overview.html":{}}}],["jobstate",{"_index":3174,"title":{},"body":{"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"miscellaneous/enumerations.html":{}}}],["jobstate.created",{"_index":3181,"title":{},"body":{"classes/Jobs.html":{}}}],["jobsupdatedto",{"_index":3214,"title":{"classes/JobsUpdateDto.html":{}},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["join",{"_index":2436,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["jour",{"_index":2420,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["jpegphoto",{"_index":4327,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["jpegphoto.jpg'].join",{"_index":2783,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["json",{"_index":848,"title":{},"body":{"injectables/AppService.html":{},"controllers/IdentitiesJsonFormsController.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["json.parse(data",{"_index":1097,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(identity",{"_index":1065,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(infos",{"_index":1103,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(plaintext",{"_index":1565,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["json.parse(readfilesync('package.json",{"_index":855,"title":{},"body":{"injectables/AppService.html":{}}}],["json.parse(readfilesync(devtokenpath",{"_index":1037,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(result",{"_index":1550,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["json.stringify",{"_index":1050,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["json.stringify(data[key",{"_index":2964,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(object.values",{"_index":3047,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(object.values(arguments))].join",{"_index":3061,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(request.body",{"_index":1854,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["json.stringify(user",{"_index":932,"title":{},"body":{"controllers/AuthController.html":{}}}],["json.stringify(validations",{"_index":1846,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsonform",{"_index":2636,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonformpath",{"_index":2684,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms",{"_index":2626,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms')}/${schema",{"_index":2686,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms/identities.jsonforms.module",{"_index":2740,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonforms/identities.jsonforms.service",{"_index":2739,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonschema",{"_index":2653,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required",{"_index":2660,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required.includes(key",{"_index":2661,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonwebtoken",{"_index":1020,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jsunresolvedreference",{"_index":1848,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsunusedglobalsymbols",{"_index":3253,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jti",{"_index":1100,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jti].join(this.token_path_separator",{"_index":1101,"title":{},"body":{"injectables/AuthService.html":{}}}],["june",{"_index":4442,"title":{},"body":{"license.html":{}}}],["justifi",{"_index":5401,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jwksuri",{"_index":1731,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwt",{"_index":885,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["jwtfromrequest",{"_index":3249,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":1075,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtid].join(this.token_path_separator",{"_index":1091,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":961,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":969,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":962,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwtpayload",{"_index":1019,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":984,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":953,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["k",{"_index":1353,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["k.tostring(10",{"_index":1416,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["k.tostring(16",{"_index":1412,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["keep",{"_index":1133,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"license.html":{}}}],["kernel",{"_index":4683,"title":{},"body":{"license.html":{}}}],["key",{"_index":39,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/Agents.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"license.html":{}}}],["key._id.tostring",{"_index":3292,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.match(/\\d{10",{"_index":3575,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["key.name",{"_index":3293,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat",{"_index":3286,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat.gettime",{"_index":3288,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.tojson",{"_index":3285,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.token",{"_index":3294,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyring",{"_index":3281,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyrings",{"_index":3260,"title":{"classes/Keyrings.html":{}},"body":{"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["keyrings.command",{"_index":1650,"title":{},"body":{"modules/CliModule.html":{}}}],["keyrings.controller",{"_index":3336,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.name",{"_index":3337,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.service",{"_index":3335,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings/keyrings.module",{"_index":966,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["keyrings/keyrings.service",{"_index":1027,"title":{},"body":{"injectables/AuthService.html":{}}}],["keyringscommand",{"_index":1648,"title":{"classes/KeyringsCommand.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscommand.registerwithsubcommands",{"_index":1655,"title":{},"body":{"modules/CliModule.html":{}}}],["keyringscontroller",{"_index":3295,"title":{"controllers/KeyringsController.html":{}},"body":{"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{}}}],["keyringscontroller.projection",{"_index":3309,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["keyringscreatecommand",{"_index":3280,"title":{"classes/KeyringsCreateCommand.html":{}},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscreatedto",{"_index":3275,"title":{"classes/KeyringsCreateDto.html":{}},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{}}}],["keyringscreatedto:14",{"_index":3330,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:18",{"_index":3327,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:21",{"_index":3329,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:9",{"_index":3328,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatequestions",{"_index":1649,"title":{"classes/KeyringsCreateQuestions.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringsdocument",{"_index":3268,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["keyringsdto",{"_index":3298,"title":{"classes/KeyringsDto.html":{}},"body":{"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["keyringsmodule",{"_index":952,"title":{"modules/KeyringsModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/KeyringsModule.html":{},"modules.html":{},"overview.html":{}}}],["keyringsschema",{"_index":3270,"title":{},"body":{"classes/Keyrings.html":{},"modules/KeyringsModule.html":{}}}],["keyringsservice",{"_index":983,"title":{"injectables/KeyringsService.html":{}},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"overview.html":{}}}],["keys",{"_index":2869,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["key}.yml",{"_index":3003,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["kind",{"_index":4629,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":4458,"title":{},"body":{"license.html":{}}}],["know",{"_index":4491,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":5068,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5077,"title":{},"body":{"license.html":{}}}],["l",{"_index":1438,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["l'aide",{"_index":5897,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'ajout",{"_index":5348,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'api",{"_index":5337,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'application",{"_index":5318,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["l'attribut",{"_index":5995,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'endpoint",{"_index":5919,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'ensemble",{"_index":5373,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'entree",{"_index":3011,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["l'entrée",{"_index":6057,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'essentiel",{"_index":5716,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'exemple",{"_index":5703,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'id",{"_index":5825,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'identit",{"_index":1507,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'identity",{"_index":1473,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["l'identité'})@apiresponse({status",{"_index":3689,"title":{},"body":{"controllers/PasswdController.html":{}}}],["l'init",{"_index":1470,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["l'initiation",{"_index":5632,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instance",{"_index":5458,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instantiation",{"_index":5636,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'objectclass",{"_index":5928,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'objet",{"_index":5930,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'orchestrateur",{"_index":4316,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["l'ordre",{"_index":5700,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'url",{"_index":5830,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'utilisateur",{"_index":2532,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["l'échec",{"_index":5663,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'équipe",{"_index":5403,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'état",{"_index":2421,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["la",{"_index":902,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["label",{"_index":2183,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["labeleduri",{"_index":4328,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lance",{"_index":5691,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["lang",{"_index":1685,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["langage",{"_index":5317,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["langages",{"_index":5307,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["language",{"_index":4668,"title":{},"body":{"license.html":{}}}],["large",{"_index":3037,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["larger",{"_index":4810,"title":{},"body":{"license.html":{}}}],["last",{"_index":3539,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["lastbackendsync",{"_index":2265,"title":{},"body":{"classes/Identities.html":{}}}],["lastchangedat",{"_index":3973,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["lastmajor",{"_index":723,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["lastminor",{"_index":724,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["lastparam",{"_index":3114,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["lastpatch",{"_index":725,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["laststmp",{"_index":1427,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["lastsync",{"_index":2266,"title":{},"body":{"classes/Identities.html":{}}}],["lastupdatedat",{"_index":3464,"title":{},"body":{"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastupdatedby",{"_index":3465,"title":{},"body":{"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastversion",{"_index":708,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["lastversion.split('.').map(number",{"_index":722,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["later",{"_index":5133,"title":{},"body":{"license.html":{}}}],["law",{"_index":4617,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4589,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":5040,"title":{},"body":{"license.html":{}}}],["ldap",{"_index":5289,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ldap/active",{"_index":4306,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["le",{"_index":888,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["le/les",{"_index":3678,"title":{},"body":{"controllers/PasswdController.html":{}}}],["lecture",{"_index":2922,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["legal",{"_index":4519,"title":{},"body":{"license.html":{}}}],["legend",{"_index":533,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["len",{"_index":3786,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["length",{"_index":3023,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/PasswordPoliciesDto.html":{}}}],["les",{"_index":1191,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["less",{"_index":5419,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["lesser",{"_index":5223,"title":{},"body":{"license.html":{}}}],["lessthan",{"_index":6022,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["letters",{"_index":3807,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["leurs",{"_index":1195,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["level",{"_index":3119,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{}}}],["levées",{"_index":5371,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["lgpl.html",{"_index":5227,"title":{},"body":{"license.html":{}}}],["liability",{"_index":4945,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4614,"title":{},"body":{"license.html":{}}}],["liaison",{"_index":5801,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["libraries",{"_index":4671,"title":{},"body":{"license.html":{}}}],["library",{"_index":4874,"title":{},"body":{"license.html":{}}}],["license",{"_index":4438,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":4593,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4595,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4597,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4460,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":5019,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4957,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":2267,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lifestep",{"_index":5789,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lignes",{"_index":5900,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["likewise",{"_index":5011,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1689,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["limit=9999",{"_index":5414,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["limitation",{"_index":3030,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["limited",{"_index":5144,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":4944,"title":{},"body":{"license.html":{}}}],["line",{"_index":44,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"injectables/TransformersFilestorageService.html":{},"license.html":{}}}],["link",{"_index":5118,"title":{},"body":{"license.html":{}}}],["linked",{"_index":4700,"title":{},"body":{"license.html":{}}}],["linkedto",{"_index":1960,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["linking",{"_index":5222,"title":{},"body":{"license.html":{}}}],["lire",{"_index":5846,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lisibilit",{"_index":5732,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["list",{"_index":4653,"title":{},"body":{"license.html":{}}}],["list_backends",{"_index":4243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liste",{"_index":1172,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["listerez",{"_index":5990,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["literal",{"_index":357,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AuthController.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":5036,"title":{},"body":{"license.html":{}}}],["livrables",{"_index":5372,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["livraison",{"_index":5397,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liés",{"_index":2564,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["load",{"_index":774,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["loader",{"_index":3524,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["loader.function",{"_index":3509,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["local",{"_index":375,"title":{},"body":{"classes/Agents.html":{},"interfaces/ConfigInstance.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"license.html":{}}}],["localize",{"_index":2905,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["localize.fr(messages",{"_index":3067,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["localstrategy",{"_index":954,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["localstrategy.name",{"_index":3352,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["location",{"_index":3520,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["lock",{"_index":3532,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["locklocation",{"_index":3484,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["log",{"_index":3126,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{}}}],["log(message",{"_index":3125,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["logger",{"_index":10,"title":{"classes/Logger.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger(`${chalk.bold.red(migrationsservice.name)}\\x1b[33m",{"_index":3502,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["logger(backendscontroller.name",{"_index":1235,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger(employeenumber1700395200.name",{"_index":1876,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["logger(identitiesvalidationservice.name",{"_index":2917,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["logger(jwtstrategy.name",{"_index":3243,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger(passwdcontroller.name",{"_index":3714,"title":{},"body":{"controllers/PasswdController.html":{}}}],["logger(this.controllername",{"_index":54,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["logger(this.servicename",{"_index":161,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["logger.controller",{"_index":3384,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.debug(`${message",{"_index":1845,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger.debug(`observer",{"_index":1229,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.debug(exception['message",{"_index":590,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["logger.error(`observer",{"_index":1232,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.name",{"_index":3385,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.service",{"_index":3378,"title":{},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["logger.verbose(`try",{"_index":3351,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["logger/logger.module",{"_index":1798,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggercontroller",{"_index":3375,"title":{"controllers/LoggerController.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["loggerdocument",{"_index":3366,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["loggermodule",{"_index":1789,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggername",{"_index":1226,"title":{},"body":{"controllers/BackendsController.html":{}}}],["loggerschema",{"_index":3368,"title":{},"body":{"classes/Logger.html":{},"modules/LoggerModule.html":{}}}],["loggerservice",{"_index":3377,"title":{"injectables/LoggerService.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["login",{"_index":645,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["logique",{"_index":5465,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["loglevel",{"_index":1686,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["logout",{"_index":874,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@res",{"_index":943,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(res",{"_index":884,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":3100,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["long",{"_index":4726,"title":{},"body":{"license.html":{}}}],["longueur",{"_index":6045,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lors",{"_index":1437,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["loss",{"_index":5163,"title":{},"body":{"license.html":{}}}],["losses",{"_index":5166,"title":{},"body":{"license.html":{}}}],["lowercase",{"_index":3808,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lru",{"_index":642,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"dependencies.html":{}}}],["lrucache",{"_index":641,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["lt",{"_index":1642,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["léments",{"_index":5472,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["m",{"_index":5956,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["machine",{"_index":4819,"title":{},"body":{"license.html":{}}}],["made",{"_index":4910,"title":{},"body":{"license.html":{}}}],["mail",{"_index":862,"title":{},"body":{"classes/AskTokenDto.html":{},"interfaces/CipherData.html":{},"classes/InitResetDto.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mail'})@apiresponse({status",{"_index":3414,"title":{},"body":{"controllers/MailadmController.html":{}}}],["mail'})@isstring",{"_index":867,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mailadmcontroller",{"_index":3408,"title":{"controllers/MailadmController.html":{}},"body":{"controllers/MailadmController.html":{},"modules/SettingsModule.html":{}}}],["mailadmservice",{"_index":764,"title":{"injectables/MailadmService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["mailattribute",{"_index":1408,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["mailer",{"_index":1365,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{}}}],["mailermodule",{"_index":760,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forrootasync",{"_index":775,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":1330,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["mailsettingsdto",{"_index":3389,"title":{"classes/MailSettingsDto.html":{}},"body":{"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{}}}],["maintain",{"_index":4852,"title":{},"body":{"license.html":{}}}],["maintenabilit",{"_index":5733,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["maintenance",{"_index":5279,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["maintenant",{"_index":5369,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["mais",{"_index":2449,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["major",{"_index":4678,"title":{},"body":{"license.html":{}}}],["majuscule.example",{"_index":6054,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["make",{"_index":4472,"title":{},"body":{"license.html":{}}}],["makes",{"_index":4743,"title":{},"body":{"license.html":{}}}],["making",{"_index":4603,"title":{},"body":{"license.html":{}}}],["management",{"_index":3444,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management.controller",{"_index":3455,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.service",{"_index":3446,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management/identities",{"_index":5918,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/_dto/_parts/activation",{"_index":2328,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{}}}],["management/identities/_dto/_parts/inetorgperson.dto",{"_index":5542,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_dto/force",{"_index":2537,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["management/identities/_dto/fusion.dto",{"_index":2503,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["management/identities/_dto/identities.dto",{"_index":5521,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_dto/need",{"_index":2540,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["management/identities/_enums/data",{"_index":1351,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{}}}],["management/identities/_enums/init",{"_index":1348,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{}}}],["management/identities/_enums/lifecycle.enum",{"_index":5522,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/states.enum",{"_index":1340,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_schemas/_parts/init",{"_index":2293,"title":{},"body":{"classes/Identities.html":{}}}],["management/identities/_schemas/identities.schema",{"_index":1908,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/PasswdController.html":{}}}],["management/identities/identities",{"_index":2326,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["management/identities/identities.module",{"_index":1294,"title":{},"body":{"modules/BackendsModule.html":{}}}],["management/identities/jsonforms",{"_index":2551,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["management/identities/upsert",{"_index":5975,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/validation",{"_index":2826,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["management/management.module",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["management/passwd/_dto/init",{"_index":1332,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["management/passwd/_dto/reset",{"_index":1335,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["managementcontroller",{"_index":3442,"title":{"controllers/ManagementController.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["managementmodule",{"_index":733,"title":{"modules/ManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["managementmodule.register",{"_index":837,"title":{},"body":{"modules/AppModule.html":{}}}],["managementservice",{"_index":3445,"title":{"injectables/ManagementService.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"overview.html":{}}}],["manager",{"_index":631,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["manipulation",{"_index":5274,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["manière",{"_index":5345,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["manner",{"_index":5054,"title":{},"body":{"license.html":{}}}],["manquant",{"_index":2987,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["manquants",{"_index":2452,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["manuellement",{"_index":1183,"title":{},"body":{"controllers/BackendsController.html":{}}}],["manuels",{"_index":5383,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["manufacturer",{"_index":4540,"title":{},"body":{"license.html":{}}}],["many.dto",{"_index":1346,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["many.dto.ts",{"_index":3080,"title":{},"body":{"classes/InitManyDto.html":{}}}],["many.dto.ts:8",{"_index":3083,"title":{},"body":{"classes/InitManyDto.html":{}}}],["map",{"_index":2100,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{}}}],["map((group",{"_index":2678,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["march",{"_index":5101,"title":{},"body":{"license.html":{}}}],["marked",{"_index":4530,"title":{},"body":{"license.html":{}}}],["marks",{"_index":4963,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4591,"title":{},"body":{"license.html":{}}}],["masse",{"_index":2423,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["matches",{"_index":1949,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["matches(/^\\/(?:\\.?[^\\/\\0",{"_index":1957,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["material",{"_index":4732,"title":{},"body":{"license.html":{}}}],["materially",{"_index":4925,"title":{},"body":{"license.html":{}}}],["math.floor(index",{"_index":2666,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["matière",{"_index":5916,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["matières",{"_index":5421,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["max",{"_index":3958,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxdate",{"_index":6011,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum",{"_index":6006,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum.example",{"_index":6012,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxitems",{"_index":6005,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxlength",{"_index":3959,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxretriesperrequest",{"_index":1720,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mdi",{"_index":5797,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mdp",{"_index":1493,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["mdp'})@apiresponse({status",{"_index":3767,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["meaning",{"_index":4971,"title":{},"body":{"license.html":{}}}],["means",{"_index":4588,"title":{},"body":{"license.html":{}}}],["measure",{"_index":4751,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4764,"title":{},"body":{"license.html":{}}}],["medium",{"_index":4777,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4789,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4658,"title":{},"body":{"license.html":{}}}],["meilleure",{"_index":5739,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["memory",{"_index":3607,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["menu",{"_index":4655,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":5145,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4632,"title":{},"body":{"license.html":{}}}],["merging",{"_index":5026,"title":{},"body":{"license.html":{}}}],["message",{"_index":329,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["messageevent",{"_index":1228,"title":{},"body":{"controllers/BackendsController.html":{}}}],["messages",{"_index":2887,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["met",{"_index":1505,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["metadata",{"_index":123,"title":{},"body":{"classes/AbstractSchema.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"classes/MetadataDto.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["metadata.createdat",{"_index":5549,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["metadata['context",{"_index":3141,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadata['createdby",{"_index":3143,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadatadto",{"_index":2144,"title":{"classes/MetadataDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/MetadataDto.html":{}}}],["metadatadto:12",{"_index":2160,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["metadatapart",{"_index":126,"title":{"classes/MetadataPart.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{}}}],["metadatapartdto",{"_index":2158,"title":{"classes/MetadataPartDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{}}}],["metadatapartschema",{"_index":129,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{}}}],["method",{"_index":684,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/MigrationsService.html":{}}}],["methode",{"_index":1595,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["methodes",{"_index":1523,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["methods",{"_index":77,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"modules/SettingsModule.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"license.html":{}}}],["methodstubs",{"_index":5670,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettant",{"_index":5628,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettre",{"_index":5847,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["middlewareconsumer",{"_index":2732,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["migration",{"_index":3508,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migration.default",{"_index":3568,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrationkey",{"_index":3499,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrations",{"_index":3485,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrations.lock",{"_index":3517,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrations.service",{"_index":3482,"title":{},"body":{"modules/MigrationsModule.html":{}}}],["migrations/migrations.module",{"_index":770,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations/migrations.service",{"_index":769,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsmodule",{"_index":734,"title":{"modules/MigrationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MigrationsModule.html":{},"modules.html":{},"overview.html":{}}}],["migrationsmodule.register",{"_index":839,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsservice",{"_index":768,"title":{"injectables/MigrationsService.html":{}},"body":{"modules/AppModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"overview.html":{}}}],["migrationtimestamp",{"_index":3497,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["mime",{"_index":1962,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["mime.split('/').pop",{"_index":4070,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["mimetype",{"_index":4052,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["min",{"_index":3022,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mincomplexity",{"_index":3787,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mindate",{"_index":6015,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimal",{"_index":3805,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["minimales",{"_index":5950,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["minimum",{"_index":6008,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimum.example",{"_index":6016,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minitems",{"_index":3024,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minlength",{"_index":6044,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minuscule.example",{"_index":6053,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["miscellaneous",{"_index":4223,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mise",{"_index":1588,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["mises",{"_index":5567,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["misrepresentation",{"_index":4952,"title":{},"body":{"license.html":{}}}],["missing",{"_index":2440,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["mixedvalue",{"_index":294,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/typealiases.html":{}}}],["mjml",{"_index":4193,"title":{},"body":{"dependencies.html":{}}}],["mobile",{"_index":4329,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mobileattribute",{"_index":3788,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mock",{"_index":5491,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mocker",{"_index":5664,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mode",{"_index":1031,"title":{},"body":{"injectables/AuthService.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"license.html":{}}}],["model",{"_index":196,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modellabel",{"_index":5834,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modelmodel",{"_index":5566,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modelname",{"_index":1121,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["models",{"_index":1127,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["modes",{"_index":5865,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modifiables",{"_index":2926,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["modification",{"_index":4584,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["modifications",{"_index":4661,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modified",{"_index":4529,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":4793,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4502,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4621,"title":{},"body":{"license.html":{}}}],["modifyresult",{"_index":558,"title":{},"body":{"injectables/AgentsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["modulaire",{"_index":5346,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["module",{"_index":166,"title":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["module.get(identitiesservice",{"_index":5577,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modulename",{"_index":140,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.charat(0).touppercase",{"_index":172,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.slice(1",{"_index":173,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["moduleref",{"_index":12,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["modules",{"_index":531,"title":{"modules.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["modules/ioredis",{"_index":101,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["modules/mailer",{"_index":761,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":763,"title":{},"body":{"modules/AppModule.html":{}}}],["modèle",{"_index":5510,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modèles",{"_index":5493,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["moins",{"_index":5976,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["monemail@mondomaine.com",{"_index":865,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mongo",{"_index":1875,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/MigrationsService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongoconnection",{"_index":3593,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongod",{"_index":3594,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb",{"_index":3606,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"interfaces/ServiceSchemaInterface.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb.countoptions",{"_index":3902,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["mongodb://localhost:27017/backend",{"_index":1722,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongodbtestinstance",{"_index":3591,"title":{"classes/MongoDbTestInstance.html":{}},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.cleardatabase",{"_index":5560,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.getmodel(identities.name",{"_index":5558,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.start",{"_index":5557,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.stop",{"_index":5562,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver",{"_index":3599,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver.create",{"_index":3609,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongoose",{"_index":134,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"injectables/UniquenessMailValidator.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mongoose.connection",{"_index":3105,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["mongoose.plugin(plugin.default",{"_index":820,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosebasequeryoptions",{"_index":3900,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["mongoosemodule",{"_index":545,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":550,"title":{},"body":{"modules/AgentsModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":816,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosemoduleoptions",{"_index":744,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongooseplugin",{"_index":743,"title":{"interfaces/MongoosePlugin.html":{}},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongoosevalidationfilter",{"_index":754,"title":{"classes/MongooseValidationFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/MongooseValidationFilter.html":{}}}],["monlogin@mondomaine",{"_index":3404,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["more",{"_index":4836,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":4998,"title":{},"body":{"license.html":{}}}],["morethan",{"_index":6020,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mot",{"_index":1368,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["mote",{"_index":3835,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mots",{"_index":1497,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["mr",{"_index":5996,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ms",{"_index":5997,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["much",{"_index":1118,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["multi",{"_index":4296,"title":{},"body":{"index.html":{},"properties.html":{}}}],["multiple",{"_index":1126,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mynewpassword",{"_index":1305,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForcePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["myoldpassword",{"_index":1307,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mypassword",{"_index":3398,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["mécanismes",{"_index":5338,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["méthode",{"_index":5587,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["méthodes",{"_index":5460,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["même",{"_index":5973,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n",{"_index":1462,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["n'avez",{"_index":5967,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n'est",{"_index":2990,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["n'implémente",{"_index":5462,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["namequeue",{"_index":1687,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["names",{"_index":4956,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":1956,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["nature",{"_index":4807,"title":{},"body":{"license.html":{}}}],["navigateur",{"_index":3831,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["navigation",{"_index":5883,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["naviguer",{"_index":5881,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ne",{"_index":1456,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/FilestorageController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["necessary",{"_index":5153,"title":{},"body":{"license.html":{}}}],["need",{"_index":4495,"title":{},"body":{"license.html":{}}}],["needchangepassworddto",{"_index":2530,"title":{"classes/NeedChangePasswordDto.html":{}},"body":{"controllers/IdentitiesForcePasswordController.html":{},"classes/NeedChangePasswordDto.html":{}}}],["needed",{"_index":4565,"title":{},"body":{"license.html":{}}}],["needtochangepassword",{"_index":2523,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["needtochangepassword(@res",{"_index":2547,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["needtochangepassword(res",{"_index":2529,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["negative",{"_index":6026,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nest",{"_index":321,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["nestjs",{"_index":100,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nestjs/bullmq",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/config",{"_index":103,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/core",{"_index":30,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"modules/IdentitiesModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/ManagementModule.html":{},"injectables/MigrationsService.html":{},"modules/SettingsModule.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":153,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":963,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":132,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/Filestorage.html":{},"modules/FilestorageModule.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/UniquenessMailValidator.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{}}}],["nestjs/passport",{"_index":910,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2016,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/ActivationDto.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"controllers/CoreController.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"controllers/SettingsController.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["nestmiddleware",{"_index":1907,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["nestmodule",{"_index":2736,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["network",{"_index":4635,"title":{},"body":{"license.html":{}}}],["new",{"_index":53,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ForcePasswordDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ShutdownObserver.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newid",{"_index":2511,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["newidentitydata",{"_index":5546,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newpassword",{"_index":1303,"title":{},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ForcePasswordDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{}}}],["next",{"_index":332,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/Filestorage.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"injectables/TransformersFilestorageService.html":{},"license.html":{}}}],["niveau",{"_index":5635,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["nnetorgperson",{"_index":5290,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["node.js",{"_index":5514,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["node:crypto",{"_index":564,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/KeyringsService.html":{}}}],["node:path",{"_index":2776,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["node_id",{"_index":646,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["nodejs",{"_index":5308,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nodejs.readablestream",{"_index":4029,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["nodemailer",{"_index":4199,"title":{},"body":{"dependencies.html":{}}}],["noinspection",{"_index":1847,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidationRecursive.html":{}}}],["nom",{"_index":5457,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nombre",{"_index":2393,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nomm",{"_index":5981,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nommés",{"_index":5946,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["noms",{"_index":5675,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["non",{"_index":2925,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["noncommercially",{"_index":4841,"title":{},"body":{"license.html":{}}}],["noreply@mydomain.com",{"_index":1740,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["normal",{"_index":4676,"title":{},"body":{"license.html":{}}}],["normally",{"_index":4877,"title":{},"body":{"license.html":{}}}],["normes",{"_index":5376,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nosent",{"_index":4289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notamment",{"_index":5302,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notez",{"_index":5929,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notfound",{"_index":5602,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["notfounddto",{"_index":3647,"title":{"classes/NotFoundDto.html":{}},"body":{"classes/NotFoundDto.html":{}}}],["notfoundexception",{"_index":1315,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["notfoundexception('invalid",{"_index":1555,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["nothing",{"_index":5012,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4647,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4641,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":4999,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4994,"title":{},"body":{"license.html":{}}}],["notinitialized",{"_index":4264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notwithstanding",{"_index":4940,"title":{},"body":{"license.html":{}}}],["nounknown",{"_index":6038,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nous",{"_index":5506,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouveau",{"_index":896,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nouveaux",{"_index":5350,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nouvelle",{"_index":2310,"title":{},"body":{"classes/Identities.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouvelles",{"_index":5455,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["null",{"_index":162,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["nullable",{"_index":1963,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/EmployeeNumber1700395200.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["number.ts",{"_index":1870,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["number.ts:13",{"_index":1878,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["number.ts:19",{"_index":1877,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["number.ts:6",{"_index":1874,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["numbered",{"_index":5132,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":3810,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["numtel",{"_index":1447,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["numérations",{"_index":5770,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["numéro",{"_index":5785,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nuxtjs",{"_index":5310,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nécessaire",{"_index":5927,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nécessitent",{"_index":5469,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["négative.example",{"_index":6027,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["o",{"_index":5672,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["o.mail",{"_index":4415,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["o.mail.length",{"_index":4416,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["object",{"_index":205,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Filestorage.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MailadmService.html":{},"classes/NeedChangePasswordDto.html":{},"classes/Settings.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/additionalFieldsPartDto.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["object.constructor",{"_index":4112,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["object.entries(body).reduce((acc",{"_index":2468,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["object.entries(filtersquery",{"_index":2811,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["object.entries(schema?.properties",{"_index":2956,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(attributes",{"_index":2933,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(data[key]).length",{"_index":3035,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(err.errors[key]['constraints']).foreach((ckey",{"_index":3639,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["object.keys(jsonschema.properties",{"_index":2663,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(jsonschema.properties).map((key",{"_index":2657,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(validations).join",{"_index":1843,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(error.constraints)[0",{"_index":1858,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(errorchild.constraints)[0",{"_index":1864,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(result",{"_index":1157,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["objectclass",{"_index":2940,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses",{"_index":283,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses.includes(key",{"_index":2988,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectclasses.join",{"_index":2998,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectid",{"_index":3658,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["objectidvalidationpipe",{"_index":445,"title":{"injectables/ObjectIdValidationPipe.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["objectif",{"_index":5263,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["objectsrc",{"_index":1711,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["objet",{"_index":5671,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objets",{"_index":5751,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["obligate",{"_index":5113,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4858,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4753,"title":{},"body":{"license.html":{}}}],["obligatoires",{"_index":5905,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["observable",{"_index":1210,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observable((observer",{"_index":1270,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observer.next",{"_index":1227,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observers",{"_index":5838,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["occasionally",{"_index":4840,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":5009,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":4548,"title":{},"body":{"license.html":{}}}],["ochestrator",{"_index":4294,"title":{},"body":{"index.html":{}}}],["octect",{"_index":1616,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["octets",{"_index":1619,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["offer",{"_index":4517,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4868,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4844,"title":{},"body":{"license.html":{}}}],["official",{"_index":4277,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["offline",{"_index":1049,"title":{},"body":{"injectables/AuthService.html":{}}}],["ok",{"_index":253,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["old",{"_index":1308,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["oldpassword",{"_index":1304,"title":{},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["oldpasswords",{"_index":3868,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["omit",{"_index":916,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/LocalStrategy.html":{}}}],["omit(body",{"_index":2785,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["omit(entity.tojson",{"_index":1095,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit(options",{"_index":1081,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit(user",{"_index":933,"title":{},"body":{"controllers/AuthController.html":{}}}],["omit(user.toobject",{"_index":3357,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["on_error",{"_index":4286,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onapplicationbootstrap",{"_index":2602,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["onapplicationshutdown",{"_index":3929,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["one",{"_index":3538,"title":{},"body":{"injectables/MigrationsService.html":{},"license.html":{}}}],["onglet",{"_index":5894,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onglets",{"_index":5878,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onmoduleinit",{"_index":68,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/MigrationsService.html":{}}}],["ont",{"_index":1633,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"interfaces/TokenData.html":{}}}],["open",{"_index":4297,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["openldap",{"_index":4311,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["operate",{"_index":5169,"title":{},"body":{"license.html":{}}}],["operated",{"_index":4849,"title":{},"body":{"license.html":{}}}],["operating",{"_index":4685,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4772,"title":{},"body":{"license.html":{}}}],["operationoptions",{"_index":2795,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["operator",{"_index":5845,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optimis",{"_index":5367,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["option",{"_index":4938,"title":{},"body":{"license.html":{}}}],["optional",{"_index":11,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["optionalparams",{"_index":3111,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionalparams[optionalparams.length",{"_index":3115,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionlabel",{"_index":5833,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optionnels",{"_index":5301,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["options",{"_index":209,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["options.createdby",{"_index":3139,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.interface.ts",{"_index":1937,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["options.limit",{"_index":3850,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["options.request",{"_index":3142,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.request.user",{"_index":3144,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target",{"_index":3116,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.console",{"_index":3120,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.db",{"_index":3117,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options?.scopes",{"_index":1073,"title":{},"body":{"injectables/AuthService.html":{}}}],["options['expiresin",{"_index":3287,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["opérations",{"_index":5697,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ora",{"_index":4201,"title":{},"body":{"dependencies.html":{}}}],["orchestrateur",{"_index":4318,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["orchestrator|sesame",{"_index":628,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["order",{"_index":5007,"title":{},"body":{"license.html":{}}}],["organiser",{"_index":5887,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["organization",{"_index":5024,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4598,"title":{},"body":{"license.html":{}}}],["organizations_url",{"_index":656,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["origin",{"_index":4953,"title":{},"body":{"license.html":{}}}],["original",{"_index":4954,"title":{},"body":{"license.html":{}}}],["originstate",{"_index":2485,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["others",{"_index":4496,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2898,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["otpkey",{"_index":3869,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ou",{"_index":1371,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["out",{"_index":543,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1146,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"license.html":{}}}],["outside",{"_index":4737,"title":{},"body":{"license.html":{}}}],["overview",{"_index":5231,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1120,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelname",{"_index":1111,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelnamefunction",{"_index":1119,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["overwritten",{"_index":1124,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["owned",{"_index":5050,"title":{},"body":{"license.html":{}}}],["package",{"_index":844,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["packaged",{"_index":4799,"title":{},"body":{"license.html":{}}}],["packagejson",{"_index":847,"title":{},"body":{"injectables/AppService.html":{}}}],["packaging",{"_index":4677,"title":{},"body":{"license.html":{}}}],["padd",{"_index":1406,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["padding",{"_index":1405,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["page",{"_index":5260,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["paginated.decorator",{"_index":438,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["paginatedfilterdto",{"_index":2777,"title":{"classes/PaginatedFilterDto.html":{}},"body":{"controllers/IdentitiesPhotoController.html":{},"classes/PaginatedFilterDto.html":{}}}],["paginatedresponsedto",{"_index":33,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/PaginatedResponseDto.html":{}}}],["pair",{"_index":2353,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["panneaux",{"_index":5891,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["paper",{"_index":5202,"title":{},"body":{"license.html":{}}}],["par",{"_index":1372,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["paragraph",{"_index":4985,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":5061,"title":{},"body":{"license.html":{}}}],["param",{"_index":423,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["param('_id",{"_index":474,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["param('project",{"_index":691,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["param('schema",{"_index":2588,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["param=datastatusenum.active",{"_index":2335,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["parameter",{"_index":718,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["parametres",{"_index":1400,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["parametres'})@apiresponse({status",{"_index":3418,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["params",{"_index":778,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MailadmService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["params.emailattribute",{"_index":1409,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.host}`.match(regex",{"_index":790,"title":{},"body":{"modules/AppModule.html":{}}}],["params.inittokenttl",{"_index":1476,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.mobileattribute",{"_index":1446,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.password",{"_index":805,"title":{},"body":{"modules/AppModule.html":{}}}],["params.resetcodettl",{"_index":1413,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.sender",{"_index":796,"title":{},"body":{"modules/AppModule.html":{}}}],["params.username",{"_index":803,"title":{},"body":{"modules/AppModule.html":{}}}],["paramètre",{"_index":5665,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["paramètres",{"_index":5452,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["parent",{"_index":2046,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["parentid",{"_index":467,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["parse",{"_index":1684,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/MongoosePlugin.html":{}}}],["parse(readfilesync(filepath",{"_index":2654,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(finalpath",{"_index":2722,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["parse(readfilesync(path",{"_index":2952,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parseemail",{"_index":301,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseemail(val",{"_index":304,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parsefilepipe",{"_index":2012,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["parsefloat(value",{"_index":2980,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parseint(atimestamp",{"_index":3565,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(btimestamp",{"_index":3566,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(migration",{"_index":3529,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(migrationtimestamp",{"_index":3587,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(port",{"_index":795,"title":{},"body":{"modules/AppModule.html":{}}}],["parseint(process.env['sesame_smtp_port",{"_index":1737,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["parseint(timestampmatch",{"_index":3557,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseintpipe",{"_index":1209,"title":{},"body":{"controllers/BackendsController.html":{}}}],["parsename",{"_index":3324,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["parsename(val",{"_index":3279,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["parsepassword",{"_index":302,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parsepassword(val",{"_index":309,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parser",{"_index":3847,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"dependencies.html":{}}}],["parseusername",{"_index":303,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseusername(val",{"_index":312,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["part",{"_index":4600,"title":{},"body":{"license.html":{}}}],["partial",{"_index":605,"title":{},"body":{"classes/ApiSession.html":{},"injectables/AppService.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{}}}],["partial.cn",{"_index":4397,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.departmentnumber",{"_index":4402,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.displayname",{"_index":4403,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.employeenumber",{"_index":4400,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.employeetype",{"_index":4401,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.facsimiletelephonenumber",{"_index":4404,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.givenname",{"_index":4405,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.jpegphoto",{"_index":4414,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.labeleduri",{"_index":4406,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.mail",{"_index":4407,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.mobile",{"_index":4408,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.postaladdress",{"_index":4409,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.preferredlanguage",{"_index":4410,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.sn",{"_index":4398,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.telephonenumber",{"_index":4411,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.title",{"_index":4412,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.uid",{"_index":4399,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.usercertificate",{"_index":4413,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialprojectiontype",{"_index":448,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":504,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(agentscreatedto",{"_index":518,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["partialtype(filestoragecreatedto",{"_index":1967,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["partialtype(formdto",{"_index":2165,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["partialtype(identitiescreatedto",{"_index":2382,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["partialtype(identitiesupdatedto",{"_index":2384,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["partialtype(inetorgpersoncreatedto",{"_index":4418,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(jobscreatedto",{"_index":3215,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["particular",{"_index":4666,"title":{},"body":{"license.html":{}}}],["particulier",{"_index":5630,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partie",{"_index":5535,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["parties",{"_index":4631,"title":{},"body":{"license.html":{}}}],["partir",{"_index":5555,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["parts",{"_index":4708,"title":{},"body":{"license.html":{}}}],["parts/metadata.part.dto",{"_index":3462,"title":{},"body":{"classes/MetadataDto.html":{}}}],["parts/section.dto",{"_index":2163,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["parts/section.part.schema",{"_index":2110,"title":{},"body":{"classes/Form.html":{}}}],["parts/security.part.dto",{"_index":512,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["parts/state.part.dto",{"_index":511,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["party",{"_index":4850,"title":{},"body":{"license.html":{}}}],["party's",{"_index":5028,"title":{},"body":{"license.html":{}}}],["pas",{"_index":1459,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pascal",{"_index":1018,"title":{},"body":{"injectables/AuthService.html":{}}}],["pass",{"_index":804,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["passe",{"_index":1369,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["passe'})@apiresponse({status",{"_index":2535,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"controllers/PasswdadmController.html":{}}}],["passer",{"_index":5896,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["passport",{"_index":1678,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":959,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.registerasync",{"_index":967,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":3244,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":3236,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":3252,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passwd",{"_index":3670,"title":{},"body":{"controllers/PasswdController.html":{}}}],["passwd.controller",{"_index":3758,"title":{},"body":{"modules/PasswdModule.html":{}}}],["passwd.service",{"_index":3711,"title":{},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwd/passwd.module",{"_index":3457,"title":{},"body":{"modules/ManagementModule.html":{}}}],["passwdadm.service",{"_index":3771,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["passwdadmcontroller",{"_index":3759,"title":{"controllers/PasswdadmController.html":{}},"body":{"controllers/PasswdadmController.html":{},"modules/SettingsModule.html":{}}}],["passwdadmservice",{"_index":1337,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["passwdcontroller",{"_index":3668,"title":{"controllers/PasswdController.html":{}},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwddto.newpassword",{"_index":1502,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwddto.oldpassword",{"_index":1501,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwddto.uid",{"_index":1489,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwdmodule",{"_index":3452,"title":{"modules/PasswdModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["passwdservice",{"_index":1356,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["password",{"_index":310,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/ForcePasswordDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/JobsController.html":{},"injectables/LocalStrategy.html":{},"classes/MailSettingsDto.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"license.html":{}}}],["password'})@isstring",{"_index":3862,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto",{"_index":1322,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["password.dto.ts",{"_index":1302,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:10",{"_index":3865,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:11",{"_index":1309,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:14",{"_index":3863,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:15",{"_index":1306,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1310,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/NeedChangePasswordDto.html":{}}}],["passwordneedtobechanged",{"_index":4265,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["passwordpolicies",{"_index":1577,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwordpoliciesdto",{"_index":3765,"title":{"classes/PasswordPoliciesDto.html":{}},"body":{"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{}}}],["patch",{"_index":424,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["patch(':_id([0",{"_index":419,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["patch('state",{"_index":2484,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["patch('state')@apioperation({summary",{"_index":2419,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["patent",{"_index":4984,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4568,"title":{},"body":{"license.html":{}}}],["path",{"_index":1022,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"modules/CoreModule.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"modules/SettingsModule.html":{}}}],["path.replace('validations",{"_index":2685,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["path}/${schema",{"_index":2650,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["pattern",{"_index":4546,"title":{},"body":{"license.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["paul.bismuth",{"_index":869,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/InitResetDto.html":{}}}],["paul.smith",{"_index":3072,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["paul.smith'})@isstring",{"_index":3070,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["payload",{"_index":999,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/SyncIdentitiesDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.context",{"_index":3140,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.identity",{"_index":1057,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity._id",{"_index":1060,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity.token",{"_index":1061,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.jti].join",{"_index":1064,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.level",{"_index":3147,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.message",{"_index":3137,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.scopes.includes('api",{"_index":1058,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.scopes.includes('offline",{"_index":1056,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.type",{"_index":4124,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.type.ts",{"_index":5252,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["payload?.identity",{"_index":3256,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":5094,"title":{},"body":{"license.html":{}}}],["pb",{"_index":3032,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["peer",{"_index":4863,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4866,"title":{},"body":{"license.html":{}}}],["pending",{"_index":4255,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performance",{"_index":5149,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["performances",{"_index":5370,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["performing",{"_index":4695,"title":{},"body":{"license.html":{}}}],["perl",{"_index":5322,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["permanently",{"_index":4993,"title":{},"body":{"license.html":{}}}],["permet",{"_index":5895,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["permettant",{"_index":5266,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["permettre",{"_index":5347,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["permission",{"_index":4520,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":4712,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":4783,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4816,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4974,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4450,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":4915,"title":{},"body":{"license.html":{}}}],["persistauthorization",{"_index":1735,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["personal",{"_index":4876,"title":{},"body":{"license.html":{}}}],["personnalis",{"_index":2559,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisable",{"_index":5866,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisées",{"_index":5863,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisés",{"_index":2566,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["personne",{"_index":6059,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pertinent",{"_index":5111,"title":{},"body":{"license.html":{}}}],["peu",{"_index":1387,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["peut",{"_index":3836,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peuvent",{"_index":5676,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["phonenumber",{"_index":4175,"title":{},"body":{"dependencies.html":{}}}],["photo",{"_index":4358,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["photo.controller",{"_index":2748,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["photo.controller.ts",{"_index":2756,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["photo.controller.ts:102",{"_index":2770,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["photo.controller.ts:61",{"_index":2773,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["physical",{"_index":4823,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4839,"title":{},"body":{"license.html":{}}}],["pick",{"_index":852,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["pick(identity",{"_index":1078,"title":{},"body":{"injectables/AuthService.html":{}}}],["pick(this.package",{"_index":858,"title":{},"body":{"injectables/AppService.html":{}}}],["pickprojectionhelper",{"_index":442,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["pieces",{"_index":4490,"title":{},"body":{"license.html":{}}}],["ping_target",{"_index":4245,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipetransform",{"_index":3656,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["pkginfo",{"_index":710,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["pkginfo.name",{"_index":713,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["pkginfo.version",{"_index":712,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["plac",{"_index":5983,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["place",{"_index":4846,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["placement",{"_index":5899,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["plaintext",{"_index":1562,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["plaintoinstance",{"_index":4394,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["plaintoinstance(inetorgpersoncreatedto",{"_index":4396,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["planning",{"_index":5390,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plateforme",{"_index":5381,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["please",{"_index":5225,"title":{},"body":{"license.html":{}}}],["plugin",{"_index":817,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin(autoincrementplugin",{"_index":2314,"title":{},"body":{"classes/Identities.html":{}}}],["plugin.default",{"_index":821,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin.options",{"_index":822,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugins",{"_index":1692,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["plus",{"_index":2768,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["plusieurs",{"_index":1600,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["pointer",{"_index":5194,"title":{},"body":{"license.html":{}}}],["police",{"_index":1492,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["policies",{"_index":1443,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["policies.resetbysms",{"_index":1444,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["policy.dto",{"_index":3770,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["policy.dto.ts",{"_index":3777,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:11",{"_index":3816,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:15",{"_index":3809,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:19",{"_index":3811,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:23",{"_index":3814,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:31",{"_index":3825,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:39",{"_index":3804,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:43",{"_index":3794,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:47",{"_index":3839,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:55",{"_index":3834,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:62",{"_index":3797,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:68",{"_index":3827,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:7",{"_index":3820,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:72",{"_index":3841,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:76",{"_index":3819,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["politique",{"_index":1496,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["pollution",{"_index":2946,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["port",{"_index":789,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["portion",{"_index":4871,"title":{},"body":{"license.html":{}}}],["positionnement",{"_index":5802,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["positive",{"_index":6024,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["positive.example",{"_index":6025,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["posix",{"_index":3513,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["posix.join(this.config.get('factorydrive.options.disks.local.config.root",{"_index":3515,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["possesses",{"_index":4835,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4797,"title":{},"body":{"license.html":{}}}],["possibilit",{"_index":5311,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["possibility",{"_index":5172,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1442,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["post",{"_index":425,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["post(':schema",{"_index":2587,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post(':schema')@apioperation({summary",{"_index":2568,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('activation",{"_index":2332,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["post('activation')@apioperation({summary",{"_index":2321,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["post('change",{"_index":3715,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('change')@apioperation({summary",{"_index":3676,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('count",{"_index":2399,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["post('delete",{"_index":1236,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('delete')@apioperation({summary",{"_index":1170,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('execute",{"_index":1245,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('execute')@apioperation({summary",{"_index":1181,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('forcepassword",{"_index":2541,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["post('forcepassword')@apioperation({summary",{"_index":2525,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["post('fusion",{"_index":2510,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["post('fusion')@apioperation({summary",{"_index":2493,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["post('generate",{"_index":2579,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generate')@apioperation({summary",{"_index":2555,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generateall",{"_index":2576,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generateall')@apioperation({summary",{"_index":2562,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('init",{"_index":3735,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('init')@apioperation({summary",{"_index":3687,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initmany",{"_index":3745,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initmany')@apioperation({summary",{"_index":3692,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initreset",{"_index":3749,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initreset')@apioperation({summary",{"_index":3695,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('local",{"_index":919,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('local')@useguards(undefined)@apioperation({summary",{"_index":879,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":942,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@apioperation({summary",{"_index":886,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('needtochangepassword",{"_index":2546,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["post('needtochangepassword')@apioperation({summary",{"_index":2531,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["post('refresh",{"_index":937,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh')@apioperation({summary",{"_index":893,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":3728,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('reset')@apioperation({summary",{"_index":3699,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('resetbycode",{"_index":3722,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('resetbycode')@apioperation({summary",{"_index":3702,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('set",{"_index":3425,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["post('set')@apioperation({summary",{"_index":3417,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["post('setpolicies",{"_index":3773,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["post('setpolicies')@apioperation({summary",{"_index":3766,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["post('sync",{"_index":1241,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('sync')@apioperation({summary",{"_index":1207,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('syncall",{"_index":1243,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('syncall')@apioperation({summary",{"_index":1199,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('upsert",{"_index":2799,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["post('upsert')@apicreatedecorator(identitiesupsertdto",{"_index":2794,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["post('upsert/photo",{"_index":2779,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["post('upsert/photo')@useinterceptors(undefined)@apifileuploaddecorator(fileuploaddto",{"_index":2772,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["post()@apicreatedecorator(agentscreatedto",{"_index":396,"title":{},"body":{"controllers/AgentsController.html":{}}}],["post()@apicreatedecorator(formdto",{"_index":2118,"title":{},"body":{"controllers/FormController.html":{}}}],["post()@apicreatedecorator(identitiescreatedto",{"_index":2404,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["post()@apicreatedecorator(keyringscreatedto",{"_index":3297,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["post()@apioperation({summary",{"_index":2833,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["post()@useinterceptors(undefined)@apifileuploaddecorator(fileuploaddto",{"_index":1992,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["postaladdress",{"_index":4330,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pour",{"_index":1435,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pouvez",{"_index":5985,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["power",{"_index":4766,"title":{},"body":{"license.html":{}}}],["powershell",{"_index":5321,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["pr",{"_index":5299,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["practical",{"_index":4461,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4555,"title":{},"body":{"license.html":{}}}],["pre",{"_index":5757,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["preamble",{"_index":4456,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4581,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":4552,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":5029,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":4660,"title":{},"body":{"license.html":{}}}],["preferredlanguage",{"_index":4331,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["prefix",{"_index":389,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"interfaces/ValidationRecursive.html":{}}}],["premier",{"_index":5709,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prend",{"_index":5666,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["prendre",{"_index":5508,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prerelease",{"_index":670,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["present",{"_index":5125,"title":{},"body":{"license.html":{}}}],["presente",{"_index":3013,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["presents",{"_index":4652,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4948,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":2944,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["prevented",{"_index":4908,"title":{},"body":{"license.html":{}}}],["previous",{"_index":4534,"title":{},"body":{"license.html":{}}}],["price",{"_index":4485,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":5096,"title":{},"body":{"license.html":{}}}],["primaryemployeenumber",{"_index":2268,"title":{},"body":{"classes/Identities.html":{}}}],["primarykey",{"_index":4108,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["principal",{"_index":5852,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["principale",{"_index":5319,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principales",{"_index":5276,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principaux",{"_index":4315,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["prior",{"_index":4995,"title":{},"body":{"license.html":{}}}],["prise",{"_index":1398,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["private",{"_index":72,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"license.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["privée",{"_index":5730,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["problems",{"_index":4531,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":4903,"title":{},"body":{"license.html":{}}}],["process.cwd",{"_index":1725,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env.node_env",{"_index":792,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["process.env['lang",{"_index":1700,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_front_mdp",{"_index":1741,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_https_path_cert",{"_index":1706,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_https_path_key",{"_index":1705,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_jwt_secret",{"_index":1730,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_log_level",{"_index":1701,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_mdp_sender",{"_index":1739,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_mongo_uri",{"_index":1721,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_name_queue",{"_index":1702,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_redis_uri",{"_index":1717,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_reset_pwd_mail",{"_index":1742,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_reset_pwd_mobile",{"_index":1743,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_password",{"_index":1746,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_regioncode",{"_index":1748,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_server",{"_index":1744,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_sourceaddr",{"_index":1747,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_systemid",{"_index":1745,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smtp_server",{"_index":1736,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["processedat",{"_index":3165,"title":{},"body":{"classes/Jobs.html":{}}}],["processing",{"_index":4282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processor",{"_index":5428,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{}}],["processus",{"_index":5645,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["procuring",{"_index":5085,"title":{},"body":{"license.html":{}}}],["procédure",{"_index":5974,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["produce",{"_index":4688,"title":{},"body":{"license.html":{}}}],["product",{"_index":4824,"title":{},"body":{"license.html":{}}}],["production",{"_index":1029,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["products",{"_index":4550,"title":{},"body":{"license.html":{}}}],["profile.commonname",{"_index":5836,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["program",{"_index":4471,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4776,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5215,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4667,"title":{},"body":{"license.html":{}}}],["programs",{"_index":4482,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4554,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":4762,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":5090,"title":{},"body":{"license.html":{}}}],["project",{"_index":623,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["projection",{"_index":222,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projection.helper",{"_index":444,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type",{"_index":450,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type.ts",{"_index":5247,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projectiontype",{"_index":223,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projet",{"_index":4312,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["projets",{"_index":5270,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["promesse",{"_index":5742,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promesses",{"_index":5654,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prominent",{"_index":4656,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4644,"title":{},"body":{"license.html":{}}}],["promise",{"_index":200,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/MigrationsModule.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promise((resolve",{"_index":3938,"title":{},"body":{"injectables/ShutdownObserver.html":{},"injectables/TransformersFilestorageService.html":{}}}],["promise.all",{"_index":1611,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/ShutdownObserver.html":{},"interfaces/TokenData.html":{}}}],["promise.reject(new",{"_index":5689,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise.resolve",{"_index":3020,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prop",{"_index":131,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["prop({required",{"_index":1970,"title":{},"body":{"classes/Filestorage.html":{},"classes/StatePart.html":{}}}],["prop({type",{"_index":128,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["propagate",{"_index":4610,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":5016,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4622,"title":{},"body":{"license.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"injectables/MailadmService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"properties.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["properties/${key",{"_index":2659,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["property",{"_index":1122,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"license.html":{}}}],["propertyname",{"_index":4110,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["propertynames",{"_index":6039,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["propres",{"_index":5792,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["proprietary",{"_index":4578,"title":{},"body":{"license.html":{}}}],["proprietes",{"_index":3014,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["propriét",{"_index":5875,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriétés",{"_index":5443,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["protect",{"_index":4493,"title":{},"body":{"license.html":{}}}],["protected",{"_index":9,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["protecting",{"_index":4544,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4522,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":788,"title":{},"body":{"modules/AppModule.html":{}}}],["protocole",{"_index":3945,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["protocoles",{"_index":5334,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["protocols",{"_index":3407,"title":{},"body":{"classes/MailSettingsDto.html":{},"license.html":{}}}],["prototype",{"_index":2945,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["prove",{"_index":5150,"title":{},"body":{"license.html":{}}}],["provide",{"_index":840,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["provided",{"_index":4650,"title":{},"body":{"license.html":{}}}],["provider",{"_index":3950,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["providers",{"_index":536,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["provision",{"_index":4563,"title":{},"body":{"license.html":{}}}],["provisional",{"_index":4278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["provisionally",{"_index":4990,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":5137,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":5139,"title":{},"body":{"license.html":{}}}],["précis",{"_index":5394,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["précise",{"_index":5714,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prérequis",{"_index":5487,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["présence",{"_index":5298,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["public",{"_index":55,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["public()@get('photo/raw')@apireadresponsedecorator(filestoragedto)@apiquery({required",{"_index":2760,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["public()@sse('sse')@apioperation({summary",{"_index":1186,"title":{},"body":{"controllers/BackendsController.html":{}}}],["publicity",{"_index":4955,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4929,"title":{},"body":{"license.html":{}}}],["publish",{"_index":4780,"title":{},"body":{"license.html":{}}}],["published",{"_index":5134,"title":{},"body":{"license.html":{}}}],["published_at",{"_index":672,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["purpose",{"_index":4572,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4880,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":5083,"title":{},"body":{"license.html":{}}}],["pwned",{"_index":3793,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["python",{"_index":5320,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["qcard",{"_index":5850,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qcardactions",{"_index":5858,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qstepper",{"_index":5882,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabpanels",{"_index":5890,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabs",{"_index":5888,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qu'il",{"_index":5982,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["qu'ils",{"_index":5947,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["qualify",{"_index":5004,"title":{},"body":{"license.html":{}}}],["quality",{"_index":5148,"title":{},"body":{"license.html":{}}}],["quasar",{"_index":5773,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["que",{"_index":1461,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["query",{"_index":559,"title":{},"body":{"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["query('async",{"_index":1237,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('current",{"_index":692,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["query('disablelogs",{"_index":1247,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('erroronnotfound",{"_index":2805,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["query('filters",{"_index":2803,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["query('force",{"_index":2804,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["query('hidden",{"_index":2034,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('id",{"_index":1265,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["query('key",{"_index":1266,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["query('mime",{"_index":2044,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["query('mode",{"_index":2589,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["query('namespace",{"_index":2040,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('path",{"_index":2041,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('timeoutdiscard",{"_index":1246,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('updatestatus",{"_index":1248,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('upsert",{"_index":2806,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["queryoptions",{"_index":218,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["question",{"_index":318,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["question({message",{"_index":305,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questions",{"_index":328,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questionset",{"_index":319,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["queue",{"_index":79,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queue(this.config.get('application.namequeue",{"_index":115,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queue(this.config.get('namequeue",{"_index":5450,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents",{"_index":71,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents(this.config.get('application.namequeue",{"_index":118,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queueevents(this.config.get('namequeue",{"_index":5451,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueprocessorservice",{"_index":5423,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["qui",{"_index":1455,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["radash",{"_index":853,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/LocalStrategy.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"dependencies.html":{}}}],["radio",{"_index":5814,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["random_bytes_iv",{"_index":1359,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["random_bytes_k",{"_index":1357,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["randombytes",{"_index":563,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/KeyringsService.html":{}}}],["randombytes(32).tostring('hex",{"_index":571,"title":{},"body":{"injectables/AgentsService.html":{}}}],["randombytes(64).tostring('hex",{"_index":3343,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["randombytes(64).tostring('hex')].join(this.token_path_separator",{"_index":1082,"title":{},"body":{"injectables/AuthService.html":{}}}],["randomint",{"_index":1316,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["randomint(100000",{"_index":1402,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["rationalisant",{"_index":5659,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["rawbodybuffer(options",{"_index":3848,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawbodybufferoptions",{"_index":3842,"title":{"interfaces/RawBodyBufferOptions.html":{}},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawresult",{"_index":5613,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["rc.4",{"_index":4214,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":390,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"license.html":{}}}],["read(@param('_id",{"_index":2138,"title":{},"body":{"controllers/FormController.html":{}}}],["read(_id",{"_index":400,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["readable",{"_index":4820,"title":{},"body":{"license.html":{}}}],["readdir",{"_index":2617,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readdirsync",{"_index":2616,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(`${process.cwd()}/configs/identities/jsonforms",{"_index":2627,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readdirsync(`${process.cwd()}/configs/identities/validations",{"_index":2918,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(`${process.cwd()}/defaults/identities/jsonforms",{"_index":2628,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readdirsync(`${process.cwd()}/defaults/identities/validations",{"_index":2919,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(dynamicconfigpath).map((file",{"_index":2697,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(hardconfigpath).map((file",{"_index":2693,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readfile",{"_index":3510,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["readfile(this.locklocation",{"_index":3528,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["readfilesync",{"_index":849,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readfilesync(`${process.cwd()}/defaults/identities/jsonforms/${file",{"_index":2633,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readfilesync(`${process.cwd()}/defaults/identities/validations/${file",{"_index":2920,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["readily",{"_index":5070,"title":{},"body":{"license.html":{}}}],["reading",{"_index":2629,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["readpath",{"_index":1988,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpath(namespace",{"_index":1996,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpathrawdata",{"_index":1989,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpathrawdata(res",{"_index":1999,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readphotoraw",{"_index":2757,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["readphotoraw(res",{"_index":2759,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["readrawdata",{"_index":1990,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readrawdata(res",{"_index":2002,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["ready",{"_index":4561,"title":{},"body":{"license.html":{}}}],["reason",{"_index":5081,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4837,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":5002,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4488,"title":{},"body":{"license.html":{}}}],["received",{"_index":3856,"title":{},"body":{"classes/ResetByCodeDto.html":{},"classes/VerifyTokenDto.html":{},"license.html":{}}}],["received_events_url",{"_index":659,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["receives",{"_index":5021,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":5087,"title":{},"body":{"license.html":{}}}],["recherche",{"_index":1472,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/TokenData.html":{}}}],["recipient",{"_index":4914,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":5079,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4508,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":4663,"title":{},"body":{"license.html":{}}}],["record",{"_index":285,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"controllers/IdentitiesCrudController.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["redirection",{"_index":5824,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirecturl",{"_index":2092,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirig",{"_index":3833,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["redis",{"_index":73,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["redis://localhost:6379/0",{"_index":1718,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["redismodule",{"_index":745,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redismodule.forrootasync",{"_index":826,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redisoptions",{"_index":746,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["redistribute",{"_index":5190,"title":{},"body":{"license.html":{}}}],["reduce((acc",{"_index":2664,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["ref",{"_index":167,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["referring",{"_index":4484,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4587,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4207,"title":{},"body":{"dependencies.html":{}}}],["reflect.getmetadata('imports",{"_index":1802,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["refrain",{"_index":5115,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":875,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(@res",{"_index":938,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(res",{"_index":892,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":939,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token].join(this.token_path_separator",{"_index":1085,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_expires_in",{"_index":975,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_prefix",{"_index":976,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":4937,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":4798,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":4709,"title":{},"body":{"license.html":{}}}],["regenerating",{"_index":1044,"title":{},"body":{"injectables/AuthService.html":{}}}],["regex",{"_index":780,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["region",{"_index":3952,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["regioncode",{"_index":1698,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["register",{"_index":1791,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/SettingsModule.html":{}}}],["registerdecorator",{"_index":4094,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["reinitialis",{"_index":3838,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reinitialisation",{"_index":1429,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["reinitialise",{"_index":3703,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reinstated",{"_index":4989,"title":{},"body":{"license.html":{}}}],["reject",{"_index":2983,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TransformersFilestorageService.html":{}}}],["reject(err",{"_index":4076,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["reject(error",{"_index":3940,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["rejects",{"_index":2894,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["rejetée",{"_index":5743,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["relationship",{"_index":4738,"title":{},"body":{"license.html":{}}}],["released",{"_index":4478,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4791,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":4975,"title":{},"body":{"license.html":{}}}],["relying",{"_index":5069,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4857,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4474,"title":{},"body":{"license.html":{}}}],["remarques",{"_index":6061,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["removal",{"_index":4939,"title":{},"body":{"license.html":{}}}],["remove",{"_index":391,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{},"license.html":{}}}],["remove(@param('_id",{"_index":2141,"title":{},"body":{"controllers/FormController.html":{}}}],["remove(_id",{"_index":407,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["remplir",{"_index":5782,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renater",{"_index":5304,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["rendant",{"_index":5857,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendent",{"_index":5892,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["render",{"_index":4580,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":5164,"title":{},"body":{"license.html":{}}}],["rendre",{"_index":5873,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendu",{"_index":5864,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renewtokens",{"_index":981,"title":{},"body":{"injectables/AuthService.html":{}}}],["renewtokens(refresh_token",{"_index":995,"title":{},"body":{"injectables/AuthService.html":{}}}],["reninitialiser",{"_index":1388,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["renvoie",{"_index":2499,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["repair",{"_index":5155,"title":{},"body":{"license.html":{}}}],["repertoire",{"_index":2924,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["reply@mondomaine",{"_index":3401,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["repondu",{"_index":1634,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["repondue",{"_index":3709,"title":{},"body":{"controllers/PasswdController.html":{}}}],["repos_url",{"_index":657,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["represent",{"_index":4899,"title":{},"body":{"license.html":{}}}],["représent",{"_index":5784,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représentant",{"_index":5444,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représente",{"_index":5748,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["représentent",{"_index":5674,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["représenter",{"_index":5750,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["req",{"_index":156,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/JobsController.html":{}}}],["req.query",{"_index":3199,"title":{},"body":{"controllers/JobsController.html":{}}}],["reqidentity",{"_index":911,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":139,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/filtres-api.html":{}}}],["request.query['debug",{"_index":1849,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["requestcontext",{"_index":155,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontext.currentcontext?.req",{"_index":163,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontextmodule",{"_index":748,"title":{},"body":{"modules/AppModule.html":{}}}],["requete",{"_index":5907,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["require",{"_index":4703,"title":{},"body":{"license.html":{}}}],["require_protocol",{"_index":3393,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["required",{"_index":289,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AppController.html":{},"classes/ConcernedToPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requirement",{"_index":4792,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4861,"title":{},"body":{"license.html":{}}}],["requires",{"_index":4528,"title":{},"body":{"license.html":{}}}],["requiretls",{"_index":800,"title":{},"body":{"modules/AppModule.html":{}}}],["requiring",{"_index":4602,"title":{},"body":{"license.html":{}}}],["requis",{"_index":2351,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requises",{"_index":5951,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["requête",{"_index":5903,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requêtes",{"_index":5917,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["res",{"_index":399,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["res.json",{"_index":688,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["res.render('core/filestorage/transformers/html",{"_index":4067,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["res.setheader('content",{"_index":4059,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["res.socket.on('close",{"_index":1268,"title":{},"body":{"controllers/BackendsController.html":{}}}],["res.status(code).json",{"_index":2820,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["res.status(httpstatus.accepted).json",{"_index":1240,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["res.status(httpstatus.bad_request).json",{"_index":2337,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{}}}],["res.status(httpstatus.created).json",{"_index":461,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["res.status(httpstatus.internal_server_error).json",{"_index":3743,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":470,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["res.status(httpstatus.ok).send",{"_index":946,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(statuscode).json",{"_index":2454,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["reset",{"_index":542,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"classes/PasswordPoliciesDto.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"interfaces/TokenData.html":{},"overview.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["reset'})@apiresponse({status",{"_index":3696,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(@body",{"_index":3729,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(body",{"_index":3698,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(data",{"_index":1596,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["reset.dto",{"_index":1342,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["reset.dto.ts",{"_index":3084,"title":{},"body":{"classes/InitResetDto.html":{}}}],["reset.dto.ts:11",{"_index":3086,"title":{},"body":{"classes/InitResetDto.html":{}}}],["reset.dto.ts:7",{"_index":3087,"title":{},"body":{"classes/InitResetDto.html":{}}}],["resetaccount",{"_index":1431,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["resetbycode",{"_index":3674,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(@body",{"_index":3724,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(body",{"_index":3701,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(data",{"_index":1573,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["resetbycodedto",{"_index":1334,"title":{"classes/ResetByCodeDto.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{},"interfaces/TokenData.html":{}}}],["resetbysms",{"_index":3789,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["resetcodettl",{"_index":3790,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reseting",{"_index":1452,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["resetpassworddto",{"_index":1323,"title":{"classes/ResetPasswordDto.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{}}}],["resetvalidation",{"_index":5869,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["resolve",{"_index":1021,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(buffer.concat(chunks).tostring('utf8",{"_index":4078,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["resolve(null",{"_index":3941,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["resolve(process.cwd",{"_index":1034,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolveconfigpath",{"_index":2860,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolveconfigpath(key",{"_index":2875,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolved",{"_index":2719,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"license.html":{}}}],["resolvejsonformpath",{"_index":2603,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolvejsonformpath(schema",{"_index":2612,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolves",{"_index":2892,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["respect",{"_index":4503,"title":{},"body":{"license.html":{}}}],["respecte",{"_index":1495,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["respecter",{"_index":5375,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["respecter.example",{"_index":6049,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["respectés",{"_index":5398,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["response",{"_index":394,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["response.decorator",{"_index":436,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["response.dto",{"_index":35,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["response.dto.ts",{"_index":3663,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:12",{"_index":3665,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:6",{"_index":3666,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:9",{"_index":3667,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.status(httpstatus.not_acceptable).json",{"_index":3631,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["response.status(status).json",{"_index":595,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["response?.status",{"_index":1585,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["responsibilities",{"_index":4501,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2856,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["ressource",{"_index":5921,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["rest",{"_index":5283,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["restrict",{"_index":4571,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":4763,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4973,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4969,"title":{},"body":{"license.html":{}}}],["result",{"_index":1155,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["result.interface",{"_index":4149,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts",{"_index":1143,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts:13",{"_index":4148,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{}}}],["result.push",{"_index":2711,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["resulting",{"_index":4605,"title":{},"body":{"license.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["retains",{"_index":4918,"title":{},"body":{"license.html":{}}}],["reterrors",{"_index":3040,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["reterrors[err['instancepath'].substring(1",{"_index":3043,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["retoune",{"_index":1454,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["retour",{"_index":5686,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retourne",{"_index":3413,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retournées",{"_index":5701,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retours",{"_index":5501,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retrieve",{"_index":3048,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["return",{"_index":56,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/RawBodyBufferOptions.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["returns",{"_index":94,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"modules/SettingsModule.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["reussi",{"_index":3830,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reviewing",{"_index":5176,"title":{},"body":{"license.html":{}}}],["revised",{"_index":5123,"title":{},"body":{"license.html":{}}}],["reçu",{"_index":3723,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reçu'})@apiresponse({status",{"_index":3704,"title":{},"body":{"controllers/PasswdController.html":{}}}],["rien",{"_index":1458,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["right",{"_index":4912,"title":{},"body":{"license.html":{}}}],["rights",{"_index":4494,"title":{},"body":{"license.html":{}}}],["risk",{"_index":5147,"title":{},"body":{"license.html":{}}}],["roles",{"_index":517,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["rom",{"_index":4921,"title":{},"body":{"license.html":{}}}],["root",{"_index":1724,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{}}}],["round",{"_index":6032,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["routermodule",{"_index":1794,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["routermodule.register",{"_index":1800,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["row",{"_index":2184,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["royalty",{"_index":5034,"title":{},"body":{"license.html":{}}}],["rules",{"_index":1112,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"license.html":{}}}],["run",{"_index":380,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"license.html":{}}}],["run(inputs",{"_index":335,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["running",{"_index":3582,"title":{},"body":{"injectables/MigrationsService.html":{},"license.html":{}}}],["runs",{"_index":4686,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":1212,"title":{},"body":{"controllers/BackendsController.html":{},"dependencies.html":{}}}],["règles",{"_index":5297,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["récupère",{"_index":894,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["récupér",{"_index":5775,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["récupération",{"_index":900,"title":{},"body":{"controllers/AuthController.html":{}}}],["réel",{"_index":1190,"title":{},"body":{"controllers/BackendsController.html":{}}}],["référence",{"_index":5667,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["références",{"_index":5502,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["référez",{"_index":5719,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["régulière",{"_index":6048,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["réinitialisation",{"_index":1396,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["réinitialiser",{"_index":1593,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["réponse",{"_index":5909,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["résultats",{"_index":5388,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["réussies",{"_index":5698,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["réussit",{"_index":5746,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["s3",{"_index":1683,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["s9nv9vjxdw7bs0haowumdj3xpbsj7dsdrj2nd1z9rvqlk/sf1lkzpfnwdvlx1dzug0wgeyab9a",{"_index":3864,"title":{},"body":{"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["safest",{"_index":5192,"title":{},"body":{"license.html":{}}}],["sake",{"_index":4527,"title":{},"body":{"license.html":{}}}],["sale",{"_index":5044,"title":{},"body":{"license.html":{}}}],["same",{"_index":4509,"title":{},"body":{"license.html":{}}}],["sans",{"_index":2936,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["satisfy",{"_index":4860,"title":{},"body":{"license.html":{}}}],["save",{"_index":3370,"title":{},"body":{"classes/Logger.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["saveoptions",{"_index":214,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["saying",{"_index":4855,"title":{},"body":{"license.html":{}}}],["schema",{"_index":292,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.dto.ts",{"_index":1917,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:12",{"_index":1923,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:16",{"_index":1919,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:6",{"_index":1922,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:9",{"_index":1920,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.endswith('.ui.yml",{"_index":2681,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.endswith('.yml",{"_index":2641,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.hasownproperty('required",{"_index":3015,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema.org/draft",{"_index":5993,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.replace('.yml",{"_index":2682,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema['properties'].hasownproperty(required",{"_index":3017,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema['properties'][required]['minitems",{"_index":3026,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema['properties'][required]['minitems']=1",{"_index":3027,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema['properties'][required]['minlength",{"_index":3028,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema['properties'][required]['minlength']=1",{"_index":3029,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema['required",{"_index":3016,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schemafactory",{"_index":293,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(additionalfieldspart",{"_index":298,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["schemafactory.createforclass(agents",{"_index":379,"title":{},"body":{"classes/Agents.html":{}}}],["schemafactory.createforclass(concernedtopart",{"_index":1664,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["schemafactory.createforclass(datapart",{"_index":1815,"title":{},"body":{"classes/DataPart.html":{}}}],["schemafactory.createforclass(filestorage).index",{"_index":1983,"title":{},"body":{"classes/Filestorage.html":{}}}],["schemafactory.createforclass(form",{"_index":2114,"title":{},"body":{"classes/Form.html":{}}}],["schemafactory.createforclass(formfieldpart",{"_index":2212,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["schemafactory.createforclass(formsectionpart",{"_index":2245,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["schemafactory.createforclass(identities",{"_index":2313,"title":{},"body":{"classes/Identities.html":{}}}],["schemafactory.createforclass(inetorgperson).index",{"_index":4360,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(initinfopart",{"_index":3079,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["schemafactory.createforclass(jobs",{"_index":3183,"title":{},"body":{"classes/Jobs.html":{}}}],["schemafactory.createforclass(keyrings",{"_index":3271,"title":{},"body":{"classes/Keyrings.html":{}}}],["schemafactory.createforclass(logger).pre",{"_index":3369,"title":{},"body":{"classes/Logger.html":{}}}],["schemafactory.createforclass(metadatapart",{"_index":3470,"title":{},"body":{"classes/MetadataPart.html":{}}}],["schemafactory.createforclass(securitypart",{"_index":3878,"title":{},"body":{"classes/SecurityPart.html":{}}}],["schemafactory.createforclass(settings",{"_index":3907,"title":{},"body":{"classes/Settings.html":{}}}],["schemafactory.createforclass(statepart",{"_index":3985,"title":{},"body":{"classes/StatePart.html":{}}}],["schemafactory.createforclass(tasks",{"_index":3999,"title":{},"body":{"classes/Tasks.html":{}}}],["schemas",{"_index":2700,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["schemas/abstract.schema",{"_index":3901,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["schema}.${employeetype.tolowercase()}.ui",{"_index":2715,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.${mode}.${employeetype.tolowercase()}.ui",{"_index":2713,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.${mode}.ui",{"_index":2714,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.ui",{"_index":2716,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.ui.yml",{"_index":2721,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["school",{"_index":5216,"title":{},"body":{"license.html":{}}}],["schéma",{"_index":2558,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["schémas",{"_index":2565,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["scope",{"_index":1833,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/ValidationRecursive.html":{},"license.html":{}}}],["scope.request",{"_index":1834,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["scopes",{"_index":1048,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["scopes.push(...options.scopes",{"_index":1074,"title":{},"body":{"injectables/AuthService.html":{}}}],["script",{"_index":5766,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["scripts",{"_index":4691,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["scriptsrc",{"_index":1716,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["scénarios",{"_index":5661,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["se",{"_index":4313,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["search",{"_index":392,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{}}}],["search(@res",{"_index":2841,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{}}}],["search(res",{"_index":411,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{}}}],["searchall",{"_index":2553,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(@res",{"_index":2584,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(res",{"_index":2570,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchfield",{"_index":5835,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["searchfilteroptions",{"_index":414,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["searchfilterschema",{"_index":412,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["second",{"_index":2255,"title":{},"body":{"classes/FusionDto.html":{}}}],["secondarily",{"_index":4613,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":866,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["secondes",{"_index":3818,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["secret",{"_index":1729,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["secretkey",{"_index":3870,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["secretorkey",{"_index":3247,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":4742,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sectionname",{"_index":2235,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["sections",{"_index":2093,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["secure",{"_index":797,"title":{},"body":{"modules/AppModule.html":{}}}],["securit",{"_index":1579,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["security",{"_index":353,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["security.secretkey",{"_index":1069,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitypart",{"_index":363,"title":{"classes/SecurityPart.html":{}},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{}}}],["securitypartdto",{"_index":494,"title":{"classes/SecurityPartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/SecurityPartDTO.html":{}}}],["securitypartschema",{"_index":364,"title":{},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{}}}],["see",{"_index":681,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"license.html":{}}}],["sein",{"_index":5519,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["select",{"_index":5811,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["self",{"_index":1710,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["sell",{"_index":5059,"title":{},"body":{"license.html":{}}}],["selling",{"_index":5043,"title":{},"body":{"license.html":{}}}],["selon",{"_index":5657,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["semiconductor",{"_index":4590,"title":{},"body":{"license.html":{}}}],["send",{"_index":1230,"title":{},"body":{"controllers/BackendsController.html":{},"classes/InitResetDto.html":{}}}],["sender",{"_index":1695,"title":{},"body":{"interfaces/ConfigInstance.html":{},"classes/MailSettingsDto.html":{},"interfaces/MongoosePlugin.html":{}}}],["senders",{"_index":5815,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sendmail",{"_index":1425,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["sensibles",{"_index":5341,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sent",{"_index":1187,"title":{},"body":{"controllers/BackendsController.html":{},"miscellaneous/enumerations.html":{}}}],["sentdate",{"_index":3076,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["separable",{"_index":4870,"title":{},"body":{"license.html":{}}}],["separate",{"_index":4805,"title":{},"body":{"license.html":{}}}],["separately",{"_index":4802,"title":{},"body":{"license.html":{}}}],["sera",{"_index":3832,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sert",{"_index":1457,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["server",{"_index":599,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"classes/MongoDbTestInstance.html":{},"injectables/ShutdownObserver.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["server.close((error",{"_index":3939,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["serves",{"_index":4679,"title":{},"body":{"license.html":{}}}],["serveur",{"_index":1436,"title":{},"body":{"interfaces/CipherData.html":{},"classes/MailSettingsDto.html":{},"controllers/PasswdController.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["serveurs",{"_index":4310,"title":{},"body":{"index.html":{}}}],["service",{"_index":777,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["service.getparams",{"_index":779,"title":{},"body":{"modules/AppModule.html":{}}}],["servicename",{"_index":141,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["services",{"_index":5433,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["serviceschemainterface",{"_index":3889,"title":{"interfaces/ServiceSchemaInterface.html":{}},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["servicing",{"_index":5154,"title":{},"body":{"license.html":{}}}],["servit",{"_index":2307,"title":{},"body":{"classes/Identities.html":{}}}],["ses",{"_index":5791,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sesame",{"_index":1072,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["session",{"_index":876,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{}}}],["session(@res",{"_index":926,"title":{},"body":{"controllers/AuthController.html":{}}}],["session(res",{"_index":898,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ts",{"_index":602,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:2",{"_index":607,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:3",{"_index":609,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:4",{"_index":608,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:5",{"_index":606,"title":{},"body":{"classes/ApiSession.html":{}}}],["set",{"_index":256,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["set(@body",{"_index":3426,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["set(body",{"_index":3416,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["setinitstate(identity",{"_index":1626,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["setoninsert",{"_index":255,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["setparameter",{"_index":184,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["setparameter(settingname",{"_index":204,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["setparams",{"_index":3430,"title":{},"body":{"injectables/MailadmService.html":{}}}],["setparams(params",{"_index":3433,"title":{},"body":{"injectables/MailadmService.html":{}}}],["setpolicies",{"_index":3762,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["setpolicies(@body",{"_index":3774,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["setpolicies(body",{"_index":3764,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["settimeout",{"_index":3107,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["settingname",{"_index":203,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["settings",{"_index":240,"title":{"classes/Settings.html":{}},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settings.name",{"_index":3923,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.service",{"_index":3439,"title":{},"body":{"injectables/MailadmService.html":{}}}],["settings.service.ts",{"_index":178,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:13",{"_index":202,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:22",{"_index":206,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:41",{"_index":199,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:7",{"_index":197,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings/_abstracts/abstract",{"_index":3438,"title":{},"body":{"injectables/MailadmService.html":{}}}],["settings/_dto/mail.settings.dto",{"_index":3420,"title":{},"body":{"controllers/MailadmController.html":{},"injectables/MailadmService.html":{}}}],["settings/_dto/password",{"_index":3769,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["settings/_dto/sms.settings.dto",{"_index":3968,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["settings/_schemas/settings.schema",{"_index":241,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"modules/SettingsModule.html":{}}}],["settings/mail",{"_index":3410,"title":{},"body":{"controllers/MailadmController.html":{}}}],["settings/mailadm.controller",{"_index":3922,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/mailadm.service",{"_index":765,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{}}}],["settings/passwdadm",{"_index":3761,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["settings/passwdadm.controller",{"_index":3921,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/passwdadm.service",{"_index":1338,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{}}}],["settings/settings.controller",{"_index":3919,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/settings.module",{"_index":759,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"modules/PasswdModule.html":{}}}],["settings/settings.service",{"_index":3911,"title":{},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settings/sms",{"_index":3964,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["settings/smsadm.controller",{"_index":3920,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/smsadm.service",{"_index":1344,"title":{},"body":{"interfaces/CipherData.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["settingscontroller",{"_index":3908,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settingsdocument",{"_index":3906,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/typealiases.html":{}}}],["settingsmodule",{"_index":735,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsmodule.register",{"_index":838,"title":{},"body":{"modules/AppModule.html":{}}}],["settingsname",{"_index":180,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["settingsschema",{"_index":259,"title":{},"body":{"classes/AbstractSettingsService-1.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{}}}],["settingsservice",{"_index":3910,"title":{"injectables/SettingsService.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["shall",{"_index":4747,"title":{},"body":{"license.html":{}}}],["share",{"_index":4466,"title":{},"body":{"license.html":{}}}],["shared",{"_index":4698,"title":{},"body":{"license.html":{}}}],["short",{"_index":5204,"title":{},"body":{"license.html":{}}}],["show",{"_index":4511,"title":{},"body":{"license.html":{}}}],["showfriendlyerrorstack",{"_index":1719,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["showunfocuseddescription",{"_index":2677,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["shutdownobserver",{"_index":736,"title":{"injectables/ShutdownObserver.html":{}},"body":{"modules/AppModule.html":{},"injectables/ShutdownObserver.html":{},"overview.html":{}}}],["si",{"_index":1386,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sign",{"_index":5217,"title":{},"body":{"license.html":{}}}],["signal",{"_index":700,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["significant",{"_index":4900,"title":{},"body":{"license.html":{}}}],["significatif",{"_index":5400,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["significative",{"_index":5704,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["signifie",{"_index":5708,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["similaire",{"_index":5633,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["similar",{"_index":4761,"title":{},"body":{"license.html":{}}}],["simplifie",{"_index":5644,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simul",{"_index":5568,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulation",{"_index":5713,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulations",{"_index":5692,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simuler",{"_index":5516,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simultaneously",{"_index":5110,"title":{},"body":{"license.html":{}}}],["simulées",{"_index":5656,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulés",{"_index":5494,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["single",{"_index":827,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"modules/CliModule.html":{},"injectables/IdentitiesValidationService.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["site_admin",{"_index":661,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["skip",{"_index":5548,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["slots",{"_index":5867,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["smpp",{"_index":3946,"title":{},"body":{"classes/SmsSettingsDto.html":{},"dependencies.html":{}}}],["smpp.org",{"_index":3954,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["smpp://smscsim.smpp.org:2775",{"_index":3944,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["sms",{"_index":1373,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/InitResetDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["sms'})@apiresponse({status",{"_index":3965,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["smsadmcontroller",{"_index":3917,"title":{"controllers/SmsadmController.html":{}},"body":{"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{}}}],["smsadmservice",{"_index":1343,"title":{},"body":{"interfaces/CipherData.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["smsattribute",{"_index":1445,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smssettingsdto",{"_index":3942,"title":{"classes/SmsSettingsDto.html":{}},"body":{"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{}}}],["smtp",{"_index":3396,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["smtp://localhost:25",{"_index":3391,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["smtp://smscsim.smpp.org:25",{"_index":3395,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["smtpparams",{"_index":1420,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smtpparams.host",{"_index":1423,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smtpparams.sender",{"_index":1428,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smtps",{"_index":798,"title":{},"body":{"modules/AppModule.html":{},"classes/MailSettingsDto.html":{}}}],["smtps?|):\\/\\/([a",{"_index":781,"title":{},"body":{"modules/AppModule.html":{}}}],["sn",{"_index":4332,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["software",{"_index":428,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"license.html":{}}}],["soit",{"_index":3012,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["sold",{"_index":4881,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4727,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4740,"title":{},"body":{"license.html":{}}}],["sommaire",{"_index":5760,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["son",{"_index":2534,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["sont",{"_index":2451,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sort",{"_index":1631,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sort[metadata.createdat",{"_index":5416,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["sort[subject]=1list",{"_index":5417,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["sorties",{"_index":5315,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["soumission",{"_index":5822,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sourceaddr",{"_index":1697,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["sources",{"_index":2306,"title":{},"body":{"classes/Identities.html":{},"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sous",{"_index":5793,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["spam",{"_index":3742,"title":{},"body":{"controllers/PasswdController.html":{}}}],["spare",{"_index":4833,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4483,"title":{},"body":{"license.html":{}}}],["special",{"_index":3812,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"license.html":{}}}],["specific",{"_index":683,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["specifically",{"_index":4702,"title":{},"body":{"license.html":{}}}],["specified",{"_index":4665,"title":{},"body":{"license.html":{}}}],["specifier",{"_index":5977,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["specifies",{"_index":5131,"title":{},"body":{"license.html":{}}}],["specify",{"_index":5135,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":5124,"title":{},"body":{"license.html":{}}}],["sprints",{"_index":5392,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["spécifi",{"_index":5687,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["spécifier",{"_index":5969,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["spécifique",{"_index":5466,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiques",{"_index":5694,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiquesexample",{"_index":6010,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiés",{"_index":5658,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["src/.../action",{"_index":4225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../agent",{"_index":4227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../agent.type.ts",{"_index":5238,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auto",{"_index":5245,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../backend",{"_index":4230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.object.ts",{"_index":4232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../data",{"_index":4233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../fs",{"_index":4236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../identities.schema.ts",{"_index":5239,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../init",{"_index":4239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../internal.logger.ts",{"_index":4240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jobs.schema.ts",{"_index":5240,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../keyrings.schema.ts",{"_index":5241,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../lifecycle.enum.ts",{"_index":4237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.schema.ts",{"_index":5242,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mixed",{"_index":5243,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../partial",{"_index":5246,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../settings.schema.ts",{"_index":5248,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../state.enum.ts",{"_index":4241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../states.enum.ts",{"_index":4238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.schema.ts",{"_index":5249,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../types.ts",{"_index":4235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../uniqueness",{"_index":5250,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validation",{"_index":5251,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../wrapper.type.ts",{"_index":5254,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/abstracts/abstract",{"_index":177,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["src/_common/abstracts/abstract.controller.ts",{"_index":6,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.controller.ts:14",{"_index":26,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:15",{"_index":19,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:22",{"_index":28,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:6",{"_index":62,"title":{},"body":{"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts",{"_index":64,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:11",{"_index":86,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:12",{"_index":82,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:13",{"_index":85,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:15",{"_index":96,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:17",{"_index":81,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:24",{"_index":93,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:9",{"_index":84,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.service.ts",{"_index":138,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/abstract.service.ts:17",{"_index":144,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:18",{"_index":145,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:19",{"_index":143,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:20",{"_index":142,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:28",{"_index":147,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:36",{"_index":149,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:43",{"_index":151,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:7",{"_index":175,"title":{},"body":{"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/dto/custom",{"_index":1805,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts",{"_index":3460,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts:12",{"_index":3461,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts",{"_index":3471,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:13",{"_index":3473,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:18",{"_index":3476,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:23",{"_index":3475,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:8",{"_index":3474,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts",{"_index":3890,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:18",{"_index":3894,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:24",{"_index":3891,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:26",{"_index":3895,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:32",{"_index":3897,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:38",{"_index":3898,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:44",{"_index":3892,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:46",{"_index":3899,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:52",{"_index":3893,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts",{"_index":120,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:6",{"_index":125,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:9",{"_index":130,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts",{"_index":3463,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10",{"_index":3466,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13",{"_index":3469,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16",{"_index":3468,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7",{"_index":3467,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/data/api",{"_index":601,"title":{},"body":{"classes/ApiSession.html":{}}}],["src/_common/data/console",{"_index":1775,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["src/_common/dto/error",{"_index":1916,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["src/_common/dto/not",{"_index":3648,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["src/_common/dto/paginated",{"_index":3660,"title":{},"body":{"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["src/_common/errors/validationexception.ts",{"_index":4114,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:18",{"_index":4137,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:22",{"_index":4136,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:31",{"_index":4139,"title":{},"body":{"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:38",{"_index":4119,"title":{},"body":{"classes/ValidationConfigException.html":{}}}],["src/_common/errors/validationexception.ts:9",{"_index":4135,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/filters/all",{"_index":581,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["src/_common/filters/identities",{"_index":2842,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["src/_common/filters/mongoose",{"_index":3621,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["src/_common/middlewares/raw",{"_index":3843,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["src/_common/observers/shutdown.observer.ts",{"_index":3926,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/observers/shutdown.observer.ts:12",{"_index":3933,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/observers/shutdown.observer.ts:6",{"_index":3934,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/observers/shutdown.observer.ts:8",{"_index":3932,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/pipes/dto",{"_index":1820,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["src/_common/pipes/object",{"_index":3653,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["src/_common/plugins/mongoose/auto",{"_index":1107,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["src/_common/tests/mongodb.test.instance.ts",{"_index":3592,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:18",{"_index":3605,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:24",{"_index":3601,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:31",{"_index":3603,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:5",{"_index":3600,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:6",{"_index":3598,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:8",{"_index":3604,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/types/agent.type.ts",{"_index":5255,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/mixed",{"_index":5256,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/partial",{"_index":5257,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/validation",{"_index":5258,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/wrapper.type.ts",{"_index":5259,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/validators/uniqueness",{"_index":4080,"title":{},"body":{"injectables/UniquenessMailValidator.html":{},"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":613,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["src/app.controller.ts:31",{"_index":2257,"title":{},"body":{"interfaces/GithubAsset.html":{}}}],["src/app.controller.ts:73",{"_index":621,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:81",{"_index":632,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":737,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":843,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:10",{"_index":845,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:17",{"_index":846,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cli/agents.command.ts",{"_index":300,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:12",{"_index":314,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:20",{"_index":307,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:29",{"_index":311,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:35",{"_index":481,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:45",{"_index":482,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:57",{"_index":382,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/agents.command.ts:63",{"_index":383,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/backends.command.ts",{"_index":1148,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:15",{"_index":1299,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:26",{"_index":1149,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:32",{"_index":1150,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:6",{"_index":1298,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/cli.module.ts",{"_index":1646,"title":{},"body":{"modules/CliModule.html":{}}}],["src/cli/keyrings.command.ts",{"_index":3272,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:15",{"_index":3325,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:21",{"_index":3312,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:32",{"_index":3313,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:63",{"_index":3273,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/cli/keyrings.command.ts:69",{"_index":3274,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/config.ts",{"_index":1673,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["src/core/agents/_dto/agents.dto.ts",{"_index":483,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:17",{"_index":501,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:22",{"_index":487,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:27",{"_index":489,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:32",{"_index":493,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:37",{"_index":500,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:43",{"_index":499,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:48",{"_index":486,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:58",{"_index":496,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:63",{"_index":491,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:69",{"_index":520,"title":{},"body":{"classes/AgentsDto.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts",{"_index":3879,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:13",{"_index":3886,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:19",{"_index":3888,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:25",{"_index":3882,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:30",{"_index":3883,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:35",{"_index":3887,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:8",{"_index":3885,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts",{"_index":3986,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:13",{"_index":3989,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:18",{"_index":3990,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:23",{"_index":3992,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:28",{"_index":3991,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:8",{"_index":3988,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_enum/agent",{"_index":4253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts",{"_index":3866,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:10",{"_index":3874,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:15",{"_index":3875,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:20",{"_index":3877,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:25",{"_index":3872,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:31",{"_index":3873,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:36",{"_index":3876,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts",{"_index":3972,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:13",{"_index":3977,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:19",{"_index":3978,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:22",{"_index":3979,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:25",{"_index":3981,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:28",{"_index":3980,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/agents.schema.ts",{"_index":349,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:23",{"_index":371,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:28",{"_index":359,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:35",{"_index":361,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:41",{"_index":362,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:47",{"_index":370,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:54",{"_index":368,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:60",{"_index":356,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:65",{"_index":365,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:70",{"_index":358,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/agents.controller.ts",{"_index":388,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:104",{"_index":410,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:41",{"_index":398,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:51",{"_index":417,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:72",{"_index":406,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:89",{"_index":421,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.module.ts",{"_index":544,"title":{},"body":{"modules/AgentsModule.html":{}}}],["src/core/agents/agents.service.ts",{"_index":554,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/agents/agents.service.ts:12",{"_index":555,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts",{"_index":3235,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:12",{"_index":3238,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:27",{"_index":3242,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts",{"_index":3345,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:10",{"_index":3346,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:18",{"_index":3349,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/auth.controller.ts",{"_index":872,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:28",{"_index":883,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:39",{"_index":905,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:54",{"_index":897,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:64",{"_index":891,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.module.ts",{"_index":955,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/core/auth/auth.service.ts",{"_index":971,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:119",{"_index":991,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:169",{"_index":993,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:184",{"_index":996,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:196",{"_index":989,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:22",{"_index":1007,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:23",{"_index":1012,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:25",{"_index":1004,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:26",{"_index":1011,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:28",{"_index":1002,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:29",{"_index":985,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:41",{"_index":994,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:71",{"_index":987,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:84",{"_index":998,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/backends/_dto/delete",{"_index":1816,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{}}}],["src/core/backends/_dto/execute",{"_index":1925,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["src/core/backends/_dto/sync",{"_index":3993,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["src/core/backends/_enum/action",{"_index":4242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/backend",{"_index":1142,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/execute",{"_index":1936,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["src/core/backends/_interfaces/worker",{"_index":4146,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["src/core/backends/backends.controller.ts",{"_index":1161,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:132",{"_index":1197,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:54",{"_index":1174,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:69",{"_index":1208,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:84",{"_index":1204,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:94",{"_index":1184,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.module.ts",{"_index":1292,"title":{},"body":{"modules/BackendsModule.html":{}}}],["src/core/core.controller.ts",{"_index":1779,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/core.module.ts",{"_index":1790,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.module.ts:29",{"_index":1792,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.service.ts",{"_index":1803,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:4",{"_index":1804,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts",{"_index":1944,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:19",{"_index":1947,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:26",{"_index":2068,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:31",{"_index":2064,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:37",{"_index":2065,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:42",{"_index":2056,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:47",{"_index":2060,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:52",{"_index":2055,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:57",{"_index":2062,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:62",{"_index":2058,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:67",{"_index":2066,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:72",{"_index":2053,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:78",{"_index":2069,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["src/core/filestorage/_enum/fs",{"_index":4272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts",{"_index":1969,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:15",{"_index":1980,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:20",{"_index":1976,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:26",{"_index":1977,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:33",{"_index":1978,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:39",{"_index":1974,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:45",{"_index":1972,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:51",{"_index":1975,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:57",{"_index":1979,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:63",{"_index":1971,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:70",{"_index":1973,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_services/transformers",{"_index":4019,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["src/core/filestorage/filestorage.controller.ts",{"_index":1987,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:102",{"_index":1995,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:115",{"_index":1998,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:135",{"_index":2005,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:151",{"_index":2001,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:164",{"_index":2011,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:179",{"_index":2007,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:59",{"_index":1993,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:73",{"_index":2009,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.module.ts",{"_index":2083,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["src/core/form/_dto/form.dto.ts",{"_index":2143,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:12",{"_index":2154,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:17",{"_index":2148,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:21",{"_index":2157,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:26",{"_index":2146,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:31",{"_index":2150,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:35",{"_index":2153,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:39",{"_index":2152,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:44",{"_index":2149,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts",{"_index":2175,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:11",{"_index":2194,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:15",{"_index":2195,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:19",{"_index":2196,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:23",{"_index":2192,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:27",{"_index":2187,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:31",{"_index":2186,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:35",{"_index":2189,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:39",{"_index":2190,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:43",{"_index":2188,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:7",{"_index":2193,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts",{"_index":2220,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:10",{"_index":2228,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:14",{"_index":2232,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:19",{"_index":2227,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:24",{"_index":2223,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:31",{"_index":2230,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:37",{"_index":2226,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_enum/types.ts",{"_index":4267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/form/_interface/form.interface.ts",{"_index":4016,"title":{},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["src/core/form/_schemas/form.schema.ts",{"_index":2091,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:12",{"_index":2105,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:15",{"_index":2098,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:21",{"_index":2097,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:28",{"_index":2107,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:31",{"_index":2102,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:34",{"_index":2104,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:37",{"_index":2103,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:40",{"_index":2099,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts",{"_index":2200,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:12",{"_index":2209,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:15",{"_index":2210,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:18",{"_index":2206,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:24",{"_index":2202,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:30",{"_index":2201,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:36",{"_index":2204,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:42",{"_index":2205,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:48",{"_index":2203,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:6",{"_index":2207,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:9",{"_index":2208,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts",{"_index":2237,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:10",{"_index":2241,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:17",{"_index":2243,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:22",{"_index":2240,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:27",{"_index":2238,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:30",{"_index":2242,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:33",{"_index":2239,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/form.controller.ts",{"_index":2116,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:39",{"_index":2120,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:49",{"_index":2125,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:69",{"_index":2122,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:80",{"_index":2128,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:95",{"_index":2124,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.module.ts",{"_index":2216,"title":{},"body":{"modules/FormModule.html":{}}}],["src/core/form/form.service.ts",{"_index":2246,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/form/form.service.ts:9",{"_index":2247,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/jobs/_dto/_parts/concerned",{"_index":1666,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts",{"_index":3202,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:12",{"_index":3206,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:16",{"_index":3203,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:22",{"_index":3205,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:26",{"_index":3211,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:30",{"_index":3204,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:34",{"_index":3208,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:38",{"_index":3209,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:42",{"_index":3210,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:48",{"_index":3216,"title":{},"body":{"classes/JobsDto.html":{}}}],["src/core/jobs/_enums/state.enum.ts",{"_index":4290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/jobs/_schemas/_parts/concerned",{"_index":1658,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts",{"_index":3161,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:15",{"_index":3170,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:21",{"_index":3166,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:26",{"_index":3168,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:29",{"_index":3176,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:32",{"_index":3167,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:35",{"_index":3171,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:38",{"_index":3173,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:41",{"_index":3172,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:44",{"_index":3169,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:47",{"_index":3175,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/jobs.controller.ts",{"_index":3185,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.controller.ts:39",{"_index":3188,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.controller.ts:63",{"_index":3187,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.module.ts",{"_index":3228,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/core/jobs/jobs.service.ts",{"_index":3232,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/jobs/jobs.service.ts:8",{"_index":3233,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts",{"_index":3314,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:14",{"_index":3321,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:18",{"_index":3317,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:21",{"_index":3320,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:27",{"_index":3326,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:9",{"_index":3318,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts",{"_index":3261,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:13",{"_index":3265,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:19",{"_index":3267,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:25",{"_index":3264,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:28",{"_index":3266,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/keyrings.controller.ts",{"_index":3296,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:37",{"_index":3299,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:47",{"_index":3304,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:68",{"_index":3301,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:84",{"_index":3303,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.module.ts",{"_index":3334,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["src/core/keyrings/keyrings.service.ts",{"_index":3338,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/keyrings/keyrings.service.ts:11",{"_index":3339,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts",{"_index":1810,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:12",{"_index":1813,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:18",{"_index":1811,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/logger.schema.ts",{"_index":3358,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:15",{"_index":3363,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:22",{"_index":3362,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:29",{"_index":3361,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:36",{"_index":3360,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/internal.logger.ts",{"_index":3089,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/logger/internal.logger.ts:107",{"_index":3159,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:123",{"_index":3156,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:139",{"_index":3153,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:27",{"_index":3151,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:34",{"_index":3157,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:45",{"_index":3155,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:62",{"_index":3160,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:78",{"_index":3158,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:91",{"_index":3154,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/logger.controller.ts",{"_index":3376,"title":{},"body":{"controllers/LoggerController.html":{}}}],["src/core/logger/logger.module.ts",{"_index":3382,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/core/logger/logger.service.ts",{"_index":3386,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/logger/logger.service.ts:8",{"_index":3387,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts",{"_index":3995,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts:10",{"_index":3996,"title":{},"body":{"classes/Tasks.html":{}}}],["src/core/tasks/tasks.controller.ts",{"_index":4001,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/core/tasks/tasks.module.ts",{"_index":4008,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/core/tasks/tasks.service.ts",{"_index":4012,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/tasks/tasks.service.ts:8",{"_index":4013,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/management/identities/_dto/_parts/activation",{"_index":261,"title":{},"body":{"classes/ActivationDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts",{"_index":4152,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:11",{"_index":4155,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:18",{"_index":4154,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:24",{"_index":4156,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts",{"_index":4362,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:101",{"_index":4385,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:106",{"_index":4386,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:111",{"_index":4388,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:116",{"_index":4389,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:121",{"_index":4391,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:131",{"_index":4378,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:34",{"_index":4390,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:39",{"_index":4365,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:46",{"_index":4374,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:51",{"_index":4375,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:57",{"_index":4368,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:6",{"_index":4393,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:62",{"_index":4387,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:67",{"_index":4371,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:72",{"_index":4376,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:77",{"_index":4377,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:82",{"_index":4379,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:90",{"_index":4382,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:96",{"_index":4384,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/force",{"_index":2089,"title":{},"body":{"classes/ForcePasswordDto.html":{}}}],["src/management/identities/_dto/fusion.dto.ts",{"_index":2250,"title":{},"body":{"classes/FusionDto.html":{}}}],["src/management/identities/_dto/fusion.dto.ts:11",{"_index":2256,"title":{},"body":{"classes/FusionDto.html":{}}}],["src/management/identities/_dto/fusion.dto.ts:7",{"_index":2254,"title":{},"body":{"classes/FusionDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts",{"_index":2340,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:17",{"_index":2367,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:23",{"_index":2363,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:29",{"_index":2358,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:35",{"_index":2365,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:40",{"_index":2361,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:59",{"_index":2356,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:69",{"_index":2823,"title":{},"body":{"classes/IdentitiesUpsertDto.html":{}}}],["src/management/identities/_dto/need",{"_index":3646,"title":{},"body":{"classes/NeedChangePasswordDto.html":{}}}],["src/management/identities/_enums/data",{"_index":4263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/init",{"_index":4288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/lifecycle.enum.ts",{"_index":4275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/states.enum.ts",{"_index":4279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_middlewares/ensure",{"_index":1897,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts",{"_index":281,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:11",{"_index":287,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:14",{"_index":291,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:8",{"_index":290,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts",{"_index":4322,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:12",{"_index":4337,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:15",{"_index":4340,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:18",{"_index":4341,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:21",{"_index":4343,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:24",{"_index":4344,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:27",{"_index":4345,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:30",{"_index":4346,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:33",{"_index":4347,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:36",{"_index":4348,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:39",{"_index":4349,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:42",{"_index":4350,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:45",{"_index":4351,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:61",{"_index":4338,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:64",{"_index":4339,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:67",{"_index":4336,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:70",{"_index":4342,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:76",{"_index":4352,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:9",{"_index":4335,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/init",{"_index":3073,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["src/management/identities/_schemas/identities.schema.ts",{"_index":2258,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:20",{"_index":2288,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:23",{"_index":2285,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:26",{"_index":2272,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:29",{"_index":2273,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:32",{"_index":2277,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:35",{"_index":2270,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:38",{"_index":2275,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:41",{"_index":2283,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:44",{"_index":2282,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:47",{"_index":2281,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:50",{"_index":2280,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:55",{"_index":2271,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:59",{"_index":2287,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:63",{"_index":2274,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:66",{"_index":2286,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/identities",{"_index":2318,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["src/management/identities/identities.module.ts",{"_index":2727,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["src/management/identities/identities.module.ts:67",{"_index":2733,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["src/management/identities/jsonforms/_config",{"_index":2707,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/_config/${schema",{"_index":2644,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts",{"_index":2550,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:16",{"_index":2567,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:26",{"_index":2560,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:36",{"_index":2571,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:47",{"_index":2569,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.module.ts",{"_index":2598,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts",{"_index":2600,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:124",{"_index":2610,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:156",{"_index":2605,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:17",{"_index":2611,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:185",{"_index":2607,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:46",{"_index":2613,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:59",{"_index":2609,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:9",{"_index":2604,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/validations/_config",{"_index":2690,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts",{"_index":1751,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:10",{"_index":1754,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:14",{"_index":1761,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:17",{"_index":1758,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:21",{"_index":1756,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:26",{"_index":1770,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:29",{"_index":1769,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:32",{"_index":1768,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:38",{"_index":1774,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:42",{"_index":1773,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:7",{"_index":1757,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_enums/config.object.ts",{"_index":4262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts",{"_index":2825,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:18",{"_index":2835,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:50",{"_index":2831,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:60",{"_index":2830,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.module.ts",{"_index":2853,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["src/management/identities/validations/identities.validation.service.ts",{"_index":2855,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:100",{"_index":2868,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:111",{"_index":2871,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:152",{"_index":2881,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:21",{"_index":2899,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:214",{"_index":2884,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:22",{"_index":2900,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:23",{"_index":2866,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:230",{"_index":2890,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:309",{"_index":2896,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:34",{"_index":2874,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:374",{"_index":2872,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:429",{"_index":2873,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:447",{"_index":2886,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:62",{"_index":2876,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:75",{"_index":2878,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/management.controller.ts",{"_index":3443,"title":{},"body":{"controllers/ManagementController.html":{}}}],["src/management/management.module.ts",{"_index":3453,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.module.ts:14",{"_index":3454,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.service.ts",{"_index":3458,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/management.service.ts:4",{"_index":3459,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/passwd/_dto/ask",{"_index":860,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["src/management/passwd/_dto/change",{"_index":1301,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["src/management/passwd/_dto/init",{"_index":3068,"title":{},"body":{"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{}}}],["src/management/passwd/_dto/reset",{"_index":3853,"title":{},"body":{"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{}}}],["src/management/passwd/_dto/verify",{"_index":4141,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["src/management/passwd/passwd.controller.ts",{"_index":3669,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:118",{"_index":3693,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:127",{"_index":3697,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:139",{"_index":3710,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:28",{"_index":3681,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:48",{"_index":3705,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:73",{"_index":3700,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:90",{"_index":3685,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:99",{"_index":3690,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.module.ts",{"_index":3757,"title":{},"body":{"modules/PasswdModule.html":{}}}],["src/management/passwd/passwd.service.ts",{"_index":1312,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["src/migrations/jobs/1700395200",{"_index":1868,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["src/migrations/migrations.module.ts",{"_index":3480,"title":{},"body":{"modules/MigrationsModule.html":{}}}],["src/migrations/migrations.module.ts:10",{"_index":3481,"title":{},"body":{"modules/MigrationsModule.html":{}}}],["src/migrations/migrations.service.ts",{"_index":3483,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:125",{"_index":3492,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:14",{"_index":3503,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:16",{"_index":3501,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:162",{"_index":3498,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:17",{"_index":3490,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:28",{"_index":3500,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:40",{"_index":3491,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:84",{"_index":3494,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/settings/_abstracts/abstract",{"_index":258,"title":{},"body":{"classes/AbstractSettingsService-1.html":{}}}],["src/settings/_dto/mail.settings.dto.ts",{"_index":3390,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:11",{"_index":3403,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:15",{"_index":3405,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:19",{"_index":3399,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:7",{"_index":3397,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/password",{"_index":3776,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts",{"_index":3943,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:11",{"_index":3962,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:15",{"_index":3951,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:19",{"_index":3953,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:28",{"_index":3960,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:7",{"_index":3947,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_schemas/settings.schema.ts",{"_index":3903,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/typealiases.html":{}}}],["src/settings/_schemas/settings.schema.ts:11",{"_index":3905,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/_schemas/settings.schema.ts:9",{"_index":3904,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/mailadm.controller.ts",{"_index":3409,"title":{},"body":{"controllers/MailadmController.html":{}}}],["src/settings/mailadm.controller.ts:15",{"_index":3415,"title":{},"body":{"controllers/MailadmController.html":{}}}],["src/settings/mailadm.controller.ts:24",{"_index":3419,"title":{},"body":{"controllers/MailadmController.html":{}}}],["src/settings/mailadm.service.ts",{"_index":3428,"title":{},"body":{"injectables/MailadmService.html":{}}}],["src/settings/mailadm.service.ts:12",{"_index":3434,"title":{},"body":{"injectables/MailadmService.html":{}}}],["src/settings/mailadm.service.ts:7",{"_index":3432,"title":{},"body":{"injectables/MailadmService.html":{}}}],["src/settings/passwdadm.controller.ts",{"_index":3760,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/passwdadm.controller.ts:15",{"_index":3768,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/passwdadm.controller.ts:24",{"_index":3763,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/settings.controller.ts",{"_index":3909,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.module.ts",{"_index":3916,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/settings/settings.module.ts:27",{"_index":3918,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/settings/settings.service.ts",{"_index":3924,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:4",{"_index":3925,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/smsadm.controller.ts",{"_index":3963,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["src/settings/smsadm.controller.ts:15",{"_index":3966,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["src/settings/smsadm.controller.ts:24",{"_index":3967,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["srcfusionid",{"_index":2269,"title":{},"body":{"classes/Identities.html":{}}}],["sse",{"_index":1164,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse('sse",{"_index":1263,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(@res",{"_index":1264,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(res",{"_index":1185,"title":{},"body":{"controllers/BackendsController.html":{}}}],["ssetoken",{"_index":934,"title":{},"body":{"controllers/AuthController.html":{}}}],["sslv3,tlsv1,tlsv1.1,tlsv1.2",{"_index":808,"title":{},"body":{"modules/AppModule.html":{}}}],["stabilit",{"_index":5365,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stand",{"_index":4560,"title":{},"body":{"license.html":{}}}],["standard",{"_index":4662,"title":{},"body":{"license.html":{}}}],["standards",{"_index":4664,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["starred_url",{"_index":654,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["start",{"_index":1130,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/MongoDbTestInstance.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["startat",{"_index":1113,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{}}}],["started",{"_index":1881,"title":{"index.html":{},"license.html":{}},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["startloader",{"_index":3506,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["startloader('migration",{"_index":3525,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["starts",{"_index":5205,"title":{},"body":{"license.html":{}}}],["state",{"_index":354,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["state.enum",{"_index":1349,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{}}}],["state.enum.ts",{"_index":4228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stated",{"_index":4716,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4977,"title":{},"body":{"license.html":{}}}],["statepart",{"_index":366,"title":{"classes/StatePart.html":{}},"body":{"classes/Agents.html":{},"classes/StatePart.html":{}}}],["statepartdto",{"_index":497,"title":{"classes/StatePartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/StatePartDTO.html":{}}}],["statepartschema",{"_index":367,"title":{},"body":{"classes/Agents.html":{},"classes/StatePart.html":{}}}],["states",{"_index":4569,"title":{},"body":{"license.html":{}}}],["static",{"_index":454,"title":{},"body":{"controllers/AgentsController.html":{},"interfaces/CipherData.html":{},"modules/CoreModule.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["stating",{"_index":4782,"title":{},"body":{"license.html":{}}}],["status",{"_index":264,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"license.html":{}}}],["status.ts",{"_index":4234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":462,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{}}}],["statut",{"_index":5970,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["stepper",{"_index":5769,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["steps",{"_index":4269,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stock",{"_index":5538,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stockage",{"_index":5292,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stocker",{"_index":5312,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stockés",{"_index":5278,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stop",{"_index":3597,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stoploader",{"_index":3507,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["stoploader(loader",{"_index":3527,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["storage",{"_index":676,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"license.html":{}}}],["storage.get(project",{"_index":694,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["storage.has(project",{"_index":695,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["storage.set(project",{"_index":704,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["storage/identities",{"_index":1726,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["storagemanagerconfig",{"_index":1681,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["strategy",{"_index":3246,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["stream",{"_index":2045,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["stream.on('data",{"_index":4072,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.on('end",{"_index":4077,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.on('error",{"_index":4075,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.pipe(res",{"_index":4064,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["streamtostring",{"_index":4022,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["streamtostring(stream",{"_index":4028,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["strict",{"_index":111,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{}}}],["string",{"_index":40,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"injectables/MailadmService.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["string(data[key][index",{"_index":2978,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["string(data[key][index][elems",{"_index":2972,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["stringify",{"_index":2614,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["stringify(jsonform",{"_index":2689,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["string})@apideletedresponsedecorator(agentsdto",{"_index":409,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apideletedresponsedecorator(filestoragedto",{"_index":2006,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apideletedresponsedecorator(formdto",{"_index":2123,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apideletedresponsedecorator(keyringsdto",{"_index":3302,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apireadresponsedecorator(agentsdto",{"_index":405,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apireadresponsedecorator(filestoragedto",{"_index":1994,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apireadresponsedecorator(filestoragedto)@apiquery({name",{"_index":2004,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apireadresponsedecorator(formdto",{"_index":2121,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apireadresponsedecorator(identitiesdto",{"_index":2409,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["string})@apireadresponsedecorator(jobsdto",{"_index":3186,"title":{},"body":{"controllers/JobsController.html":{}}}],["string})@apireadresponsedecorator(keyringsdto",{"_index":3300,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apiupdatedecorator(agentsupdatedto",{"_index":420,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apiupdatedecorator(filestorageupdatedto",{"_index":2010,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apiupdatedecorator(formupdatedto",{"_index":2127,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apiupdatedecorator(identitiesupdatedto",{"_index":2413,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["structure",{"_index":2680,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["structures",{"_index":5876,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stub",{"_index":5541,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stubs",{"_index":5488,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["style",{"_index":2761,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["stylesrc",{"_index":1713,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["subcommand",{"_index":320,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subcommands",{"_index":346,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subdividing",{"_index":5025,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1080,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/filtres-api.html":{}}}],["sublicenses",{"_index":5055,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4741,"title":{},"body":{"license.html":{}}}],["submit",{"_index":5870,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitapiurl",{"_index":2094,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitbuttontext",{"_index":2095,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["subprograms",{"_index":4701,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":5220,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":1211,"title":{},"body":{"controllers/BackendsController.html":{}}}],["subscriptions_url",{"_index":655,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["subsection",{"_index":4842,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":4895,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4558,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":3021,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["succeeds",{"_index":2893,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["success",{"_index":1067,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":340,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["succès",{"_index":1895,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["such",{"_index":4504,"title":{},"body":{"license.html":{}}}],["sue",{"_index":5067,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4905,"title":{},"body":{"license.html":{}}}],["suite",{"_index":5712,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suites",{"_index":5363,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["suivantes",{"_index":5543,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["suivants",{"_index":5810,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["suivez",{"_index":5911,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["summary",{"_index":686,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["supann",{"_index":2375,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supann.yml",{"_index":5949,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannaliaslogin",{"_index":2376,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["supannbirthdate",{"_index":5959,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname",{"_index":5957,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname\"options",{"_index":5999,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supanncivilite",{"_index":5955,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannempid",{"_index":5954,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannentiteaffectationprincipale",{"_index":2378,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["super",{"_index":243,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["super(configservice",{"_index":5476,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["super(context",{"_index":105,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["super(message",{"_index":4128,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super(payload",{"_index":4134,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super.create",{"_index":3344,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["super.create(data",{"_index":572,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.debug(...[message",{"_index":3129,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error('failed",{"_index":3106,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error(...[message",{"_index":3121,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal('failed",{"_index":3148,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal(...[message",{"_index":3135,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log('initializing",{"_index":3099,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log(...[message",{"_index":3127,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.transform(value",{"_index":1835,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["super.update",{"_index":578,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.verbose(...[message",{"_index":3132,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.warn(...[message",{"_index":3124,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super[payload.level](payload.message",{"_index":3149,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["supplement",{"_index":4932,"title":{},"body":{"license.html":{}}}],["supplémentaires",{"_index":5503,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["support",{"_index":4788,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supportant",{"_index":5647,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["supports",{"_index":4851,"title":{},"body":{"license.html":{}}}],["supposés",{"_index":2501,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["supprime",{"_index":887,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supprimer",{"_index":5848,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sur",{"_index":3677,"title":{},"body":{"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sure",{"_index":4473,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":4498,"title":{},"body":{"license.html":{}}}],["survenue",{"_index":1394,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["survive",{"_index":4976,"title":{},"body":{"license.html":{}}}],["suspendedat",{"_index":3263,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendedreason",{"_index":3974,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendeduntil",{"_index":3975,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["sustained",{"_index":5167,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5229,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":685,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["swagger/json",{"_index":1733,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggercustomoptions",{"_index":1680,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggeroptions",{"_index":1734,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["switch",{"_index":2957,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["switch(schema['properties'][required]['type",{"_index":3025,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["switch(this.config.get('application.lang",{"_index":3064,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["switchtoprocessing",{"_index":1504,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["symlink",{"_index":4274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["syncall",{"_index":1153,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["syncallidentities",{"_index":1165,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities(@res",{"_index":1244,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities(res",{"_index":1198,"title":{},"body":{"controllers/BackendsController.html":{}}}],["synced",{"_index":4280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synchronis",{"_index":3680,"title":{},"body":{"controllers/PasswdController.html":{}}}],["synchronisation",{"_index":4295,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["synchronise",{"_index":1200,"title":{},"body":{"controllers/BackendsController.html":{}}}],["synchroniser",{"_index":1203,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["synchronization",{"_index":3547,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["synchronized",{"_index":1912,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["syncidentities",{"_index":1166,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncidentities(res",{"_index":1205,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncidentitiesdto",{"_index":1206,"title":{"classes/SyncIdentitiesDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/SyncIdentitiesDto.html":{}}}],["syncronisation",{"_index":5965,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["synctimeout",{"_index":1180,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["syntax",{"_index":5405,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["system",{"_index":3113,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"license.html":{}}}],["systematic",{"_index":4545,"title":{},"body":{"license.html":{}}}],["systemid",{"_index":1696,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["système",{"_index":5268,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sécurisée",{"_index":5336,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurisées",{"_index":5333,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurit",{"_index":5329,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["séparés",{"_index":5537,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["séquentiels",{"_index":5683,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sésame",{"_index":4293,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["t",{"_index":211,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["table",{"_index":5420,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["tableau",{"_index":2347,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tableaux",{"_index":5681,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tabs",{"_index":4270,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tag",{"_index":1355,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["tag_name",{"_index":667,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["tags",{"_index":697,"title":{},"body":{"controllers/AppController.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["taille",{"_index":3031,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["take",{"_index":4463,"title":{},"body":{"license.html":{}}}],["tangible",{"_index":4875,"title":{},"body":{"license.html":{}}}],["tant",{"_index":6001,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tapes",{"_index":5786,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tarball_url",{"_index":674,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["target",{"_index":3053,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/UniquenessMailValidator.html":{}}}],["target_commitish",{"_index":668,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["targetstate",{"_index":1940,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{},"controllers/IdentitiesCrudController.html":{}}}],["task",{"_index":1941,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["tasks",{"_index":3994,"title":{"classes/Tasks.html":{}},"body":{"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["tasks.controller",{"_index":4010,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.name",{"_index":4011,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.service",{"_index":4003,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":1296,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["taskscontroller",{"_index":4000,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasksdocument",{"_index":3997,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{}}}],["tasksmodule",{"_index":1291,"title":{"modules/TasksModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksschema",{"_index":3998,"title":{},"body":{"classes/Tasks.html":{},"modules/TasksModule.html":{}}}],["tasksservice",{"_index":4002,"title":{"injectables/TasksService.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["tat",{"_index":1196,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tats",{"_index":5806,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["tbd",{"_index":5984,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tdata",{"_index":3664,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["technique",{"_index":5382,"title":{"additional-documentation/documentation-technique.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["techniques",{"_index":5328,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["technological",{"_index":4750,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":5305,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["teh",{"_index":3791,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["tel",{"_index":5271,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["telephonenumber",{"_index":4333,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["telles",{"_index":5877,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tells",{"_index":4648,"title":{},"body":{"license.html":{}}}],["template",{"_index":811,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["templates",{"_index":814,"title":{},"body":{"modules/AppModule.html":{}}}],["temporaire",{"_index":5551,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["temps",{"_index":1189,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["tendez",{"_index":5467,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tendu",{"_index":5473,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tentative",{"_index":1395,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["term",{"_index":4714,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":5203,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":4983,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":5003,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4992,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4980,"title":{},"body":{"license.html":{}}}],["terminée",{"_index":1894,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["terms",{"_index":4512,"title":{},"body":{"license.html":{}}}],["test",{"_index":1385,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["test(employeenumber",{"_index":4357,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["test.createtestingmodule",{"_index":5572,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["teste",{"_index":5605,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tester",{"_index":5505,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["testingmodule",{"_index":5571,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tests",{"_index":5359,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["text/html",{"_index":4044,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["text/plain",{"_index":4042,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["texte",{"_index":5820,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["themes",{"_index":4215,"title":{},"body":{"dependencies.html":{}}}],["therefore",{"_index":4499,"title":{},"body":{"license.html":{}}}],["things",{"_index":4492,"title":{},"body":{"license.html":{}}}],["third",{"_index":4775,"title":{},"body":{"license.html":{}}}],["thirdpartyauth",{"_index":355,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["this._checkmigrationlockfile",{"_index":3521,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this._executemigrations",{"_index":3526,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this._loadmigrationsfiles(currenttimestamp",{"_index":3523,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this._migrateemployeenumbertoarray",{"_index":1882,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this._model",{"_index":252,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this._options.mongoose.options",{"_index":3103,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this._queue",{"_index":104,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this._req",{"_index":159,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this._service.activation(body.id",{"_index":2336,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["this._service.count(searchfilterschema",{"_index":2466,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.countall(filters",{"_index":2472,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.create",{"_index":2031,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.create(body",{"_index":460,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.delete(_id",{"_index":480,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findall",{"_index":2585,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.findandcount",{"_index":469,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyid(_id",{"_index":475,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyidwithrawdata(_id",{"_index":2047,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.findone",{"_index":2042,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.findone(schema",{"_index":2591,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.findone(searchfilterschema",{"_index":2780,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["this._service.findonewithrawdata",{"_index":2050,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.forcepassword(body.id",{"_index":2544,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["this._service.fusion(body.id1",{"_index":2512,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["this._service.generate",{"_index":2582,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.generateall",{"_index":2578,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.needtochangepassword(body.id",{"_index":2548,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["this._service.searchdoubles",{"_index":2508,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["this._service.transformnullstostring(json.parse(json.stringify(identity",{"_index":2460,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.trashandcount(identitiescrudcontroller.projection",{"_index":2458,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.update(_id",{"_index":478,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["this._service.updatestate(_id",{"_index":2482,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.updatestatemany(body",{"_index":2487,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.upsertwithfingerprint(filters",{"_index":2816,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["this._service.validate(body",{"_index":2840,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["this._writemigrationlockfile(key",{"_index":3585,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.access_token_expires_in",{"_index":1079,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.access_token_prefix",{"_index":1090,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.create(agent",{"_index":337,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.agentsservice.findbyid(id",{"_index":1267,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["this.agentsservice.findone",{"_index":1052,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.model.countdocuments",{"_index":1068,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ajv.addformat('number",{"_index":2914,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.compile(validschema",{"_index":2916,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.errors",{"_index":3042,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.errorstext(this.validateschema.errors",{"_index":3009,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.validate(schema",{"_index":3039,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.appservice.getinfo",{"_index":689,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.asktoken",{"_index":1411,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.auth.authenticatewithlocal(username",{"_index":3353,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.auth.verifyidentity(payload",{"_index":3258,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.createtokens",{"_index":3291,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.backends.executejob",{"_index":1499,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.backendsservice.deleteidentities(body.payload",{"_index":1239,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.executejob",{"_index":1258,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('added",{"_index":1271,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('completed",{"_index":1278,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('failed",{"_index":1281,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.syncallidentities",{"_index":1156,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{}}}],["this.backendsservice.syncidentities(body.payload",{"_index":1242,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.checkandcreateobjectclasses(data",{"_index":2937,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.commonlogdb",{"_index":3118,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.concerned",{"_index":3373,"title":{},"body":{"classes/Logger.html":{}}}],["this.concerned.tolocalelowercase",{"_index":3374,"title":{},"body":{"classes/Logger.html":{}}}],["this.config",{"_index":109,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.config.get('frontpwd.url",{"_index":1479,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.connection",{"_index":3104,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.connection.collection('logs').insertone",{"_index":3146,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.connection.collection(contraint.collection).countdocuments",{"_index":4102,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["this.constructor.name",{"_index":108,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/BackendsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.constructor.name.replace(/controller",{"_index":57,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["this.constructor.name.replace(/service",{"_index":174,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.context",{"_index":3371,"title":{},"body":{"classes/Logger.html":{}}}],["this.context.tolocalelowercase",{"_index":3372,"title":{},"body":{"classes/Logger.html":{}}}],["this.createattributes(objectclass",{"_index":2943,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.createtokens(new",{"_index":1045,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createtokens(omit(identity.toobject",{"_index":1098,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.decrypttoken(data.token",{"_index":1597,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.decrypttokenwithcode(data.token",{"_index":1580,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.defaultvalues",{"_index":251,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this.dev_token_path",{"_index":1035,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.filestorage.findonewithrawdata",{"_index":2788,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["this.filestorage.upsertfile(filter",{"_index":2784,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["this.findone",{"_index":247,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this.generate(file",{"_index":2705,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.getpaddingforcode",{"_index":1407,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.getparameter('smtpserver",{"_index":3440,"title":{},"body":{"injectables/MailadmService.html":{}}}],["this.getstatus",{"_index":4132,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.getvalidationerrors(exception",{"_index":3635,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["this.httpservers.map",{"_index":3937,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["this.httpservers.push(server",{"_index":3936,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["this.identities.find",{"_index":1603,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.identities.findone",{"_index":1382,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.identities.model.updateone",{"_index":1508,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.identitymodel.ensureindexes",{"_index":1910,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["this.initaccount",{"_index":1615,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.initialize",{"_index":3108,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.inquirer.ask('agent",{"_index":336,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.inquirer.ask('keyrings",{"_index":3282,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.jwtservice.decode(jwt",{"_index":1099,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign",{"_index":1077,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keyringsservice.create(keyring",{"_index":3283,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.keyringsservice.findone",{"_index":1059,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.locklocation",{"_index":3514,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger",{"_index":52,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['findall",{"_index":3046,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['findone",{"_index":3060,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(`additionalfields",{"_index":2962,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(`session",{"_index":927,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.logger.debug(chalk.yellow('checking",{"_index":3522,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.debug(chalk.yellow('lock",{"_index":3519,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.debug(chalk.yellow('migrations",{"_index":3518,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error('erreur",{"_index":1485,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.error('error",{"_index":1449,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.error('invalid",{"_index":2948,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.error('request",{"_index":3036,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.error('schema",{"_index":2950,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.error(`error",{"_index":2637,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.error(`token",{"_index":1042,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(chalk.red('database",{"_index":3545,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(chalk.red('error",{"_index":3543,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(chalk.red(`error",{"_index":3581,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(e",{"_index":3589,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(e.message",{"_index":3583,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log('datatoken",{"_index":1581,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('decrypt",{"_index":1551,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('delete",{"_index":1586,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('employeenumber1700395200",{"_index":1880,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.logger.log('identities",{"_index":2639,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.log('init",{"_index":1481,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('initializing",{"_index":2625,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.log('k",{"_index":1557,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('mailer.identitymailattribute",{"_index":1474,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('migration",{"_index":1893,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.logger.log('reset",{"_index":1418,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('resetbycode",{"_index":1574,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('token",{"_index":1414,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log(`call",{"_index":3718,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log(`fetching",{"_index":696,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.log(`migrating",{"_index":1887,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.logger.log(`new",{"_index":1051,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`token",{"_index":1039,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(chalk.blue('all",{"_index":3586,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.blue('no",{"_index":3573,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.blue(`migration",{"_index":3531,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.green('database",{"_index":3548,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.green('migration",{"_index":3542,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.green('no",{"_index":3572,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.yellow(`migration",{"_index":3569,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.yellow(`running",{"_index":3580,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(objectclass",{"_index":2942,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.verbose('error",{"_index":1572,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.verbose('send",{"_index":1613,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.verbose(`atempt",{"_index":3254,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.logger.verbose(`validating",{"_index":3006,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.warn('dev",{"_index":1030,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn('invalid",{"_index":1071,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn('upserting",{"_index":2808,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["this.logger.warn(`copied",{"_index":2635,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.warn(chalk.red('no",{"_index":3533,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.warn(chalk.yellow('no",{"_index":3537,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.warn(chalk.yellow(`migration",{"_index":3554,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.mailadmservice.getparams",{"_index":1421,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"interfaces/TokenData.html":{}}}],["this.mailadmservice.setparams(body",{"_index":3427,"title":{},"body":{"controllers/MailadmController.html":{}}}],["this.mailer",{"_index":1424,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.mailer.addtransporter('laststmp",{"_index":1422,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.message",{"_index":4131,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.migrations.get(key",{"_index":3576,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.migrations.keys",{"_index":3574,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.migrations.set(file",{"_index":3570,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.migrations.size",{"_index":3571,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.moduleref",{"_index":50,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.moduleref.create(migration.default",{"_index":3578,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.moduleref.get(configservice",{"_index":110,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.moduleref.get(getredisconnectiontoken",{"_index":114,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.mongo.collection('identities').find",{"_index":1883,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.mongo.collection('identities').updateone",{"_index":1888,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.mongo.collection('migrations').findone",{"_index":3535,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.mongo.collection('migrations').insertone",{"_index":3546,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.mongoconnection",{"_index":3612,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.close",{"_index":3615,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.collections",{"_index":3618,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.dropdatabase",{"_index":3614,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.model(name",{"_index":3620,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod",{"_index":3608,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.geturi",{"_index":3611,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.stop",{"_index":3616,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.name",{"_index":4129,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.package",{"_index":854,"title":{},"body":{"injectables/AppService.html":{}}}],["this.passwdadmservice.checkpolicies(data.newpassword",{"_index":1578,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.checkpolicies(passwddto.newpassword",{"_index":1494,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.getpolicies",{"_index":1401,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.setpolicies(body",{"_index":3775,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["this.passwdservice.change(body",{"_index":3717,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.checkinitoutdated",{"_index":3753,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initaccount(body",{"_index":3737,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initmany(body",{"_index":3747,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initreset(body",{"_index":3751,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.reset(body",{"_index":3730,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.resetbycode(body",{"_index":3727,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.path.split('/').pop",{"_index":1985,"title":{},"body":{"classes/Filestorage.html":{}}}],["this.queue",{"_index":5449,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queue.add('exemple",{"_index":5478,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents",{"_index":117,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents.on('failed",{"_index":5479,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis",{"_index":113,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis.del([this.access_token_prefix",{"_index":1102,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del([this.refresh_token_prefix",{"_index":1104,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del(data.token",{"_index":1587,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.exists('codepadding",{"_index":1622,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.expire",{"_index":1087,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.expire(ciphertext",{"_index":1538,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.get('codepadding",{"_index":1623,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.get([this.access_token_prefix",{"_index":1063,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get([this.refresh_token_prefix",{"_index":1096,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get(token",{"_index":1548,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.set",{"_index":1083,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.set('codepadding",{"_index":1625,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.refresh_token_expires_in",{"_index":1088,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.refresh_token_prefix",{"_index":1084,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request",{"_index":168,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request.path.split('/').slice(1).shift",{"_index":171,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.resolveconfigpath(key",{"_index":2949,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolveconfigpath(schema",{"_index":3063,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolvejsonformpath(path",{"_index":2720,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.service.clearsession(jwt.replace(/^bearer\\s",{"_index":945,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.createtokens(user",{"_index":923,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.getsessiondata(identity",{"_index":930,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.renewtokens(body.refresh_token",{"_index":940,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.setinitstate(identity",{"_index":1482,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.setloglevels(_options?.loglevel",{"_index":3098,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.setparameter('smtpserver",{"_index":3441,"title":{},"body":{"injectables/MailadmService.html":{}}}],["this.smsadmservice.getparams",{"_index":3970,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["this.smsadmservice.send(numtel",{"_index":1448,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.smsadmservice.setparams(body",{"_index":3971,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["this.transformattribute(key",{"_index":2938,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.transformerservice.transform(mime",{"_index":2048,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["this.transformnumber(data[key][index",{"_index":2977,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.transformnumber(data[key][index][elems",{"_index":2973,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.translateajv(this.ajv.errors",{"_index":3041,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.upsert",{"_index":254,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this.validateattribute(key",{"_index":3019,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema",{"_index":2915,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema(schema",{"_index":3007,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validationrecursive(error",{"_index":1841,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validationrecursive(errorchild",{"_index":1866,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validations",{"_index":4130,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this[key",{"_index":610,"title":{},"body":{"classes/ApiSession.html":{}}}],["those",{"_index":4556,"title":{},"body":{"license.html":{}}}],["though",{"_index":4935,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":4566,"title":{},"body":{"license.html":{}}}],["three",{"_index":4831,"title":{},"body":{"license.html":{}}}],["through",{"_index":4634,"title":{},"body":{"license.html":{}}}],["throw",{"_index":106,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["thus",{"_index":4733,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":5762,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketform",{"_index":4015,"title":{"interfaces/TicketForm.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["ticketformfield",{"_index":4017,"title":{"interfaces/TicketFormField.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketformsection",{"_index":4018,"title":{"interfaces/TicketFormSection.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tickets/form",{"_index":5778,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tierces",{"_index":4308,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tiers",{"_index":5313,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["time",{"_index":5000,"title":{},"body":{"license.html":{}}}],["timeoutdiscard",{"_index":1251,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["timeoutdiscardquery",{"_index":1177,"title":{},"body":{"controllers/BackendsController.html":{}}}],["timestamp",{"_index":3536,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["timestampmatch",{"_index":3552,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["tiquette",{"_index":5799,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["title",{"_index":2096,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["titre",{"_index":5779,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tk",{"_index":5767,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tkformtype",{"_index":5856,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tls",{"_index":806,"title":{},"body":{"modules/AppModule.html":{}}}],["tmp",{"_index":3516,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["to.part.dto",{"_index":3212,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["to.part.dto.ts",{"_index":1667,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:13",{"_index":1670,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:18",{"_index":1671,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:9",{"_index":1668,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.parts.schema",{"_index":3179,"title":{},"body":{"classes/Jobs.html":{}}}],["to.parts.schema.ts",{"_index":1659,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:10",{"_index":1661,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:13",{"_index":1662,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:7",{"_index":1660,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to_complete",{"_index":2438,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"miscellaneous/enumerations.html":{}}}],["to_create",{"_index":4285,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to_sync",{"_index":4284,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to_validate",{"_index":2442,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":164,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"classes/Filestorage.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{}}}],["token",{"_index":603,"title":{},"body":{"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto",{"_index":1320,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token.dto.ts",{"_index":861,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:10",{"_index":4143,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:11",{"_index":868,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.dto.ts:7",{"_index":870,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.json",{"_index":1006,"title":{},"body":{"injectables/AuthService.html":{}}}],["token=${data?.token",{"_index":1594,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token=${token",{"_index":1567,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token_algorithm",{"_index":1361,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token_path_separator",{"_index":977,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokendata",{"_index":1352,"title":{"interfaces/TokenData.html":{}},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["tokendata.uid",{"_index":1582,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["tokens",{"_index":922,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tools",{"_index":4693,"title":{},"body":{"license.html":{}}}],["total",{"_index":468,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{}}}],["toujours",{"_index":6002,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tous",{"_index":2563,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["tout",{"_index":1498,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["toutes",{"_index":1201,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tr",{"_index":2979,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["track",{"_index":1134,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["tracker",{"_index":1123,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackercollection",{"_index":1114,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackermodelname",{"_index":1115,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trade",{"_index":4961,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4960,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4962,"title":{},"body":{"license.html":{}}}],["traitement",{"_index":5434,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["traiter",{"_index":5445,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["transaction",{"_index":4911,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":4636,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4913,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":5023,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1823,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["transform(data",{"_index":2877,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transform(mime",{"_index":4031,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transform(value",{"_index":1827,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transformation",{"_index":2963,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transformattribute",{"_index":2861,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transformattribute(key",{"_index":2879,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transformer",{"_index":510,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["transformers",{"_index":4021,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformerservice",{"_index":2026,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["transformersfilestorageservice",{"_index":2020,"title":{"injectables/TransformersFilestorageService.html":{}},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/TransformersFilestorageService.html":{},"overview.html":{}}}],["transformersfilestorageservice.streamtostring(stream",{"_index":4069,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers.hasownproperty(mimetype",{"_index":4056,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers.hasownproperty(mimetype.split('/')[0",{"_index":4057,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers[mimetype.split('/')[0",{"_index":4058,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers[mimetype](mime",{"_index":4065,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformhtml",{"_index":4045,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformimage",{"_index":4049,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformpdf",{"_index":4047,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformplain",{"_index":4043,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformhtml",{"_index":4023,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformhtml(_",{"_index":4034,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformimage",{"_index":4024,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformimage(mime",{"_index":4036,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformkeys",{"_index":5837,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["transformnumber",{"_index":2862,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transformnumber(value",{"_index":2883,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transformoptions",{"_index":1837,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transformpdf",{"_index":4025,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformpdf(_",{"_index":4038,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformplain",{"_index":4026,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformplain(_",{"_index":4040,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["translateajv",{"_index":2863,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["translateajv(messages",{"_index":2885,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transmission",{"_index":4864,"title":{},"body":{"license.html":{}}}],["transport",{"_index":794,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["transportername",{"_index":1426,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["trashandcount",{"_index":192,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["trashandcount(projection",{"_index":231,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["travers",{"_index":5380,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tre",{"_index":5332,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["treated",{"_index":4934,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":4756,"title":{},"body":{"license.html":{}}}],["tree",{"_index":466,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["trim",{"_index":1844,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesCrudController.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tronque",{"_index":6030,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["trouve",{"_index":5520,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["trouvée",{"_index":1608,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["true",{"_index":272,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["true|on|yes|1/i.test(asyncquery",{"_index":1238,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(disablelogsquery",{"_index":1254,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(erroronnotfound",{"_index":2817,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["true|on|yes|1/i.test(forcestring",{"_index":2807,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["true|on|yes|1/i.test(hiddenquery",{"_index":2035,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["true|on|yes|1/i.test(timeoutdiscardquery",{"_index":1252,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(updatestatusquery",{"_index":1256,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(upsert",{"_index":2818,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["true})@apiproperty()@isoptional",{"_index":4373,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["true})@apiproperty({example",{"_index":3394,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["true})@apiproperty({type",{"_index":3884,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["true})@isip(4",{"_index":3316,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["true})@isoptional",{"_index":4367,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["true})@isoptional()@apiproperty({type",{"_index":3881,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["true})@isoptional()@type(undefined)@apiproperty({type",{"_index":2229,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["true})@type(undefined",{"_index":1772,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["true})@type(undefined)@apiproperty({type",{"_index":2225,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["truncate",{"_index":6029,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["try",{"_index":244,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["ts",{"_index":3632,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ttl",{"_index":677,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["ttlautopurge",{"_index":680,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["two",{"_index":4515,"title":{},"body":{"license.html":{}}}],["typage",{"_index":5296,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["type.enum",{"_index":1220,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/TokenData.html":{}}}],["type.enum.ts",{"_index":4226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.vue",{"_index":5768,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["typealiases",{"_index":5236,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1886,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/MigrationsService.html":{}}}],["types",{"_index":133,"title":{},"body":{"classes/AbstractSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/BackendsController.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitManyDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["types.objectid",{"_index":124,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"classes/InitManyDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["types.objectid(`${filter",{"_index":2814,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["types.objectid(body.id",{"_index":1261,"title":{},"body":{"controllers/BackendsController.html":{}}}],["types.objectid(value",{"_index":3659,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":3657,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["typescript",{"_index":45,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["typical",{"_index":4889,"title":{},"body":{"license.html":{}}}],["têtes",{"_index":5889,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["u2fkey",{"_index":3871,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ui.yml",{"_index":2683,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["uid",{"_index":863,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["uid=${asktoken?.uid",{"_index":1541,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["uid=${initdto?.uid",{"_index":1453,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["uid=${passwddto?.uid",{"_index":1513,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["un",{"_index":895,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["unacceptable",{"_index":4553,"title":{},"body":{"license.html":{}}}],["unauthorizedexception",{"_index":1014,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":219,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{}}}],["under",{"_index":4594,"title":{},"body":{"license.html":{}}}],["une",{"_index":1171,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["uniforme",{"_index":5679,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unique",{"_index":360,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Identities.html":{},"classes/Keyrings.html":{},"classes/Settings.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["uniquement",{"_index":5584,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["uniquenessmailinterface",{"_index":4107,"title":{},"body":{"injectables/UniquenessMailValidator.html":{},"miscellaneous/typealiases.html":{}}}],["uniquenessmailvalidator",{"_index":4079,"title":{"injectables/UniquenessMailValidator.html":{}},"body":{"injectables/UniquenessMailValidator.html":{}}}],["uniques",{"_index":5677,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unknown",{"_index":589,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":4898,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":4719,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4609,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":4744,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":4931,"title":{},"body":{"license.html":{}}}],["unsafe",{"_index":3197,"title":{},"body":{"controllers/JobsController.html":{}}}],["until",{"_index":4991,"title":{},"body":{"license.html":{}}}],["unused",{"_index":333,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["up",{"_index":1872,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/MigrationsService.html":{}}}],["update",{"_index":193,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["update(_id",{"_index":233,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["update(res",{"_index":622,"title":{},"body":{"controllers/AppController.html":{}}}],["update.$set.password",{"_index":576,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.$set?.password",{"_index":575,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.decorator",{"_index":441,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["update.json",{"_index":702,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["update.password",{"_index":573,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update/:project(sesame",{"_index":627,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["update?.$set",{"_index":579,"title":{},"body":{"injectables/AgentsService.html":{}}}],["updateassertions",{"_index":5609,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateassertions(service",{"_index":5614,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateavailable",{"_index":727,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["updated",{"_index":1610,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedata",{"_index":5611,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedidentitydata",{"_index":5547,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedstub",{"_index":5565,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateerrorassertions(service",{"_index":5615,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateoptions",{"_index":5612,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatequery",{"_index":234,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["updates",{"_index":4922,"title":{},"body":{"license.html":{}}}],["updatestate",{"_index":2389,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestate(_id",{"_index":2415,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestatemany",{"_index":2390,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestatemany(res",{"_index":2418,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestatus",{"_index":1255,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["updatestatusquery",{"_index":1179,"title":{},"body":{"controllers/BackendsController.html":{}}}],["updating",{"_index":3588,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["upload.decorator",{"_index":2018,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upload_url",{"_index":665,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["uploadedfile",{"_index":2013,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["uploadedfile(new",{"_index":2029,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upper",{"_index":3802,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["uppercase",{"_index":3815,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["upsert",{"_index":194,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["upsert(filter",{"_index":236,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["upsert(res",{"_index":2790,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.controller",{"_index":2747,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["upsert.controller.ts",{"_index":2789,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.controller.ts:118",{"_index":2797,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.controller.ts:60",{"_index":2796,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.service",{"_index":2745,"title":{},"body":{"modules/IdentitiesModule.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upsertinetorgpersonjpegphoto",{"_index":2758,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upsertinetorgpersonjpegphoto(res",{"_index":2771,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["uri",{"_index":824,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["url",{"_index":649,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["url.example",{"_index":6052,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["usage",{"_index":5410,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["usages",{"_index":5404,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["use",{"_index":1117,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"license.html":{}}}],["use(req",{"_index":1902,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["useclass",{"_index":841,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["used",{"_index":1138,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["usefactory",{"_index":552,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["useful",{"_index":5198,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":906,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('jwt",{"_index":925,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('local",{"_index":920,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":2014,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":2027,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["user",{"_index":157,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"classes/ForcePasswordDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/NeedChangePasswordDto.html":{},"license.html":{}}}],["user.security.secretkey",{"_index":936,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["user.state.current",{"_index":3355,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["user_view_type",{"_index":660,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["usercertificate",{"_index":4334,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["useridentity",{"_index":1089,"title":{},"body":{"injectables/AuthService.html":{}}}],["useridentity.tojson",{"_index":1092,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":313,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/MailSettingsDto.html":{}}}],["userpassword",{"_index":4359,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["users",{"_index":4475,"title":{},"body":{"license.html":{}}}],["uses",{"_index":4892,"title":{},"body":{"license.html":{}}}],["usevalue",{"_index":5575,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["using",{"_index":4862,"title":{},"body":{"license.html":{}}}],["utf",{"_index":856,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{}}}],["utf8",{"_index":1532,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["utilis",{"_index":5563,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisables",{"_index":5583,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisant",{"_index":5314,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisateur",{"_index":882,"title":{"additional-documentation/documentation-utilisateur.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilisateurs",{"_index":5355,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisation",{"_index":5287,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilise",{"_index":5724,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["utiliser",{"_index":5357,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisée",{"_index":5446,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisées",{"_index":5306,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisés",{"_index":5515,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilitaire",{"_index":5626,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilitaires",{"_index":5484,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["va",{"_index":5668,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["val",{"_index":308,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/UniquenessMailValidator.html":{}}}],["valeur",{"_index":5942,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeur.example",{"_index":6031,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeurs",{"_index":2967,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valid",{"_index":1958,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validate",{"_index":2827,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UniquenessMailValidator.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(_",{"_index":3239,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(data",{"_index":2888,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(res",{"_index":2832,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["validate(value",{"_index":4088,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["validateattribute",{"_index":2864,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validateattribute(key",{"_index":2895,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validateif",{"_index":4395,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["validateif(o",{"_index":4380,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["validatenested",{"_index":506,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["validatenested()@apiproperty",{"_index":2185,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["validatenested()@type(undefined)@apiproperty({type",{"_index":495,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["validatenested()@type(undefined)@isnotempty()@apiproperty({type",{"_index":498,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["validatenested({each",{"_index":1771,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["validates",{"_index":2891,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validateschema",{"_index":2622,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["validating",{"_index":2857,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validation",{"_index":1842,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["validation.filter",{"_index":756,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["validation.filter.ts",{"_index":2843,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:34",{"_index":3627,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:7",{"_index":2845,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["validation.filter.ts:8",{"_index":3625,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.pipe",{"_index":447,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["validation.pipe.ts",{"_index":1821,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:15",{"_index":4138,"title":{},"body":{"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:21",{"_index":1829,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:23",{"_index":1826,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:57",{"_index":1832,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:7",{"_index":3655,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["validation/${key}.yml",{"_index":2927,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validation/inetorgperson.yml",{"_index":3062,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validationarguments",{"_index":4086,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["validationarguments.property",{"_index":4106,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["validationconfigexception",{"_index":2619,"title":{"classes/ValidationConfigException.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationconfigexception(validations",{"_index":3005,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validationerror",{"_index":1831,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationexception",{"_index":2844,"title":{"classes/ValidationException.html":{}},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:18",{"_index":4122,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:22",{"_index":4121,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:9",{"_index":4120,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexceptionpayload",{"_index":4118,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["validationoptions",{"_index":4091,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["validationpipe",{"_index":1822,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive",{"_index":1824,"title":{"interfaces/ValidationRecursive.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive(error",{"_index":1830,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations",{"_index":284,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validations/identities.validation.module",{"_index":2738,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validations/identities.validation.service",{"_index":2428,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["validations['message",{"_index":3001,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[`${key}.${property",{"_index":3641,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[`${prefix",{"_index":1856,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations[attribute",{"_index":2985,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[err.path",{"_index":3644,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[key",{"_index":2989,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["validationschemaexception",{"_index":2910,"title":{"classes/ValidationSchemaException.html":{}},"body":{"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validator",{"_index":278,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"injectables/UniquenessMailValidator.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["validatorconstraint",{"_index":4092,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["validatorconstraintinterface",{"_index":4093,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["valide",{"_index":2993,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["valider",{"_index":5727,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valides",{"_index":2997,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validschema",{"_index":2907,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validés",{"_index":5935,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["value",{"_index":1000,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/FilestorageController.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"classes/MailSettingsDto.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PasswordPoliciesDto.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["value.type",{"_index":296,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["value.type.ts",{"_index":5244,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["variabilit",{"_index":5293,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["variables",{"_index":5440,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vars",{"_index":334,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["verbatim",{"_index":4453,"title":{},"body":{"license.html":{}}}],["verbe",{"_index":5920,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["verbose",{"_index":3131,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verbose(message",{"_index":3130,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verification",{"_index":1491,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["verifiedcallback",{"_index":3241,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["verifiez",{"_index":3738,"title":{},"body":{"controllers/PasswdController.html":{}}}],["verify",{"_index":1016,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity",{"_index":982,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity(payload",{"_index":997,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytokendto",{"_index":4140,"title":{"classes/VerifyTokenDto.html":{}},"body":{"classes/VerifyTokenDto.html":{}}}],["vers",{"_index":4309,"title":{},"body":{"index.html":{}}}],["version",{"_index":717,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/MongoDbTestInstance.html":{},"license.html":{},"properties.html":{}}}],["versionkey",{"_index":376,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["versionn",{"_index":5379,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["versions",{"_index":4470,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["verticallayout",{"_index":2655,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["veuillez",{"_index":5781,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["via",{"_index":2401,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vide",{"_index":2976,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["vides",{"_index":6004,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vie",{"_index":5285,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["view",{"_index":4651,"title":{},"body":{"license.html":{}}}],["violates",{"_index":4928,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4987,"title":{},"body":{"license.html":{}}}],["vise",{"_index":5264,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["visible",{"_index":4645,"title":{},"body":{"license.html":{}}}],["voici",{"_index":5540,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["void",{"_index":1903,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ShutdownObserver.html":{},"license.html":{}}}],["voir",{"_index":2764,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["volume",{"_index":4811,"title":{},"body":{"license.html":{}}}],["vos",{"_index":3741,"title":{},"body":{"controllers/PasswdController.html":{}}}],["votre",{"_index":1430,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vous",{"_index":5720,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vpis",{"_index":5987,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue",{"_index":5429,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue.js",{"_index":5764,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénement",{"_index":5872,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénements",{"_index":5447,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vérifie",{"_index":5586,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["w",{"_index":5207,"title":{},"body":{"license.html":{}}}],["waive",{"_index":4765,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5181,"title":{},"body":{"license.html":{}}}],["want",{"_index":4489,"title":{},"body":{"license.html":{}}}],["wanting",{"_index":1125,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["warn",{"_index":3123,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["warn(message",{"_index":3122,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["warranties",{"_index":4649,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4525,"title":{},"body":{"license.html":{}}}],["way",{"_index":4479,"title":{},"body":{"license.html":{}}}],["ways",{"_index":4821,"title":{},"body":{"license.html":{}}}],["welcome",{"_index":5208,"title":{},"body":{"license.html":{}}}],["well",{"_index":4627,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":5027,"title":{},"body":{"license.html":{}}}],["whether",{"_index":4505,"title":{},"body":{"license.html":{}}}],["whitelistedheaders",{"_index":3846,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["whole",{"_index":4674,"title":{},"body":{"license.html":{}}}],["whose",{"_index":4872,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4669,"title":{},"body":{"license.html":{}}}],["window",{"_index":4684,"title":{},"body":{"license.html":{}}}],["winston",{"_index":4197,"title":{},"body":{"dependencies.html":{}}}],["wipo",{"_index":4755,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4487,"title":{},"body":{"license.html":{}}}],["within",{"_index":4970,"title":{},"body":{"license.html":{}}}],["without",{"_index":3018,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["wkfsjldxgryajg1",{"_index":3961,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["wont",{"_index":3823,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["work",{"_index":4477,"title":{},"body":{"license.html":{}}}],["work's",{"_index":4692,"title":{},"body":{"license.html":{}}}],["workerresultinfointerface",{"_index":4145,"title":{"interfaces/WorkerResultInfoInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["workerresultinterface",{"_index":4150,"title":{"interfaces/WorkerResultInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["working",{"_index":4670,"title":{},"body":{"license.html":{}}}],["works",{"_index":4459,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":5058,"title":{},"body":{"license.html":{}}}],["wrappertype",{"_index":5253,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["writefile",{"_index":3511,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["writefile(this.locklocation",{"_index":3540,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["writefilesync",{"_index":1024,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["writefilesync(`${jsonformpath",{"_index":2688,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["writefilesync(`${process.cwd()}/configs/identities/jsonforms/${file",{"_index":2634,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["writefilesync(`${process.cwd()}/configs/identities/validations/${file",{"_index":2921,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["writing",{"_index":5142,"title":{},"body":{"license.html":{}}}],["written",{"_index":4830,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":4133,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["x",{"_index":5961,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["xx",{"_index":1568,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["xxxxxx@xxxxxxxxxxx",{"_index":1466,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["xxxxxxxx@xxxxxxx",{"_index":1467,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["y",{"_index":2935,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["yaml",{"_index":2615,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["years",{"_index":4832,"title":{},"body":{"license.html":{}}}],["yes",{"_index":25,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{}}}],["yes|1|on|true/i.test(process.env['sesame_https_enabled",{"_index":1704,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["yml",{"_index":2642,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yml$/.test(fileobj.file",{"_index":3057,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yourself",{"_index":5074,"title":{},"body":{"license.html":{}}}],["yup",{"_index":4211,"title":{},"body":{"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["z",{"_index":6050,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["z0",{"_index":783,"title":{},"body":{"modules/AppModule.html":{},"classes/inetOrgPerson.html":{}}}],["za",{"_index":782,"title":{},"body":{"modules/AppModule.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["zipball_url",{"_index":675,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["zoom",{"_index":541,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["zsvyngf8",{"_index":3948,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractController.html":{"url":"classes/AbstractController.html","title":"class - AbstractController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                    Optional\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controllerName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractControllerContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractControllerContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controllerName\n                    \n                \n\n                \n                    \n                        getcontrollerName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.controller.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerContext.html":{"url":"interfaces/AbstractControllerContext.html","title":"interface - AbstractControllerContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractControllerContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:6\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractQueueProcessor.html":{"url":"classes/AbstractQueueProcessor.html","title":"class - AbstractQueueProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractQueueProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.queue.processor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n            \n                Implements\n            \n            \n                        OnModuleInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _queue\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                queueEvents\n                            \n                            \n                                    Private\n                                redis\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    queue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.queue.processor.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        queue\n                    \n                \n\n                \n                    \n                        getqueue()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.queue.processor.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Queue, QueueEvents } from 'bullmq';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { getRedisConnectionToken } from '@nestjs-modules/ioredis';\nimport { Redis } from 'ioredis';\nimport { OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nexport abstract class AbstractQueueProcessor extends AbstractService implements OnModuleInit {\n  protected config: ConfigService;\n\n  private redis: Redis;\n  protected _queue: Queue;\n  public queueEvents: QueueEvents;\n\n  public get queue(): Queue {\n    return this._queue;\n  }\n\n  public constructor(context?: AbstractServiceContext) {\n    super(context);\n    if (!this.moduleRef) throw new Error('ModuleRef is not defined in ' + this.constructor.name);\n  }\n\n  public async onModuleInit() {\n    this.config = this.moduleRef.get(ConfigService, { strict: false });\n    this.redis = this.moduleRef.get(getRedisConnectionToken(), { strict: false });\n\n    this._queue = new Queue(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n    this.queueEvents = new QueueEvents(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSchema.html":{"url":"classes/AbstractSchema.html","title":"class - AbstractSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | any\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MetadataPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\nimport { Types, Document } from 'mongoose';\nimport { MetadataPart, MetadataPartSchema } from '~/_common/abstracts/schemas/parts/metadata.part.schema';\n\nexport abstract class AbstractSchema extends Document {\n  public readonly _id: Types.ObjectId | any // eslint-disable-line\n\n  @Prop({ type: MetadataPartSchema })\n  public metadata?: MetadataPart;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractService.html":{"url":"injectables/AbstractService.html","title":"injectable - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    request\n                                \n                                \n                                    moduleName\n                                \n                                \n                                    serviceName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        request\n                    \n                \n\n                \n                    \n                        getrequest()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        moduleName\n                    \n                \n\n                \n                    \n                        getmoduleName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n\n                \n                    \n                        getserviceName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractServiceContext.html":{"url":"interfaces/AbstractServiceContext.html","title":"interface - AbstractServiceContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractServiceContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            eventEmitter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            req\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventEmitter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventEmitter:     EventEmitter2\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter2\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        req:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSettingsService.html":{"url":"classes/AbstractSettingsService.html","title":"class - AbstractSettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract-settings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                settingsName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                defaultValues\n                            \n                            \n                                    Protected\n                                    Async\n                                getParameter\n                            \n                            \n                                    Protected\n                                    Async\n                                setParameter\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract-settings.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        settingsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract-settings.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        defaultValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameter(settingName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        setParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParameter(settingName: string, parameters: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Settings } from '~/settings/_schemas/settings.schema';\n\nexport class AbstractSettingsService extends AbstractServiceSchema {\n  protected settingsName: string;\n\n  constructor(@InjectModel(Settings.name) protected _model: Model) {\n    super();\n  }\n\n  protected async getParameter(settingName: string): Promise {\n    try {\n      const enr = await this.findOne({ name: settingName });\n      return enr.parameters;\n    } catch (e) {\n      return this.defaultValues();\n    }\n  }\n\n  protected async setParameter(settingName: string, parameters: object): Promise {\n    // const enr = new this._model({\n    //   name: settingName,\n    //   parameters: parameters,\n    // });\n    const ok = await this.upsert(\n      { name: settingName },\n      {\n        $setOnInsert: {\n          name: settingName,\n        },\n        $set: {\n          parameters: parameters,\n        },\n      },\n    );\n    return ok;\n  }\n\n  protected async defaultValues(): Promise {\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSettingsService-1.html":{"url":"classes/AbstractSettingsService-1.html","title":"class - AbstractSettingsService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_abstracts/abstract-settings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                settingsName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                defaultValues\n                            \n                            \n                                    Protected\n                                    Async\n                                getParameter\n                            \n                            \n                                    Protected\n                                    Async\n                                setParameter\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/settings/_abstracts/abstract-settings.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        settingsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/settings/_abstracts/abstract-settings.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        defaultValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/_abstracts/abstract-settings.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameter(settingName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/_abstracts/abstract-settings.service.ts:13\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        setParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParameter(settingName: string, parameters: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/_abstracts/abstract-settings.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Settings, SettingsSchema } from '~/settings/_schemas/settings.schema';\n\nexport class AbstractSettingsService extends AbstractServiceSchema {\n  protected settingsName: string;\n\n  constructor(@InjectModel(Settings.name) protected _model: Model) {\n    super();\n  }\n\n  protected async getParameter(settingName: string): Promise {\n    try {\n      const enr = await this.findOne({ name: settingName });\n      return enr.parameters;\n    } catch (e) {\n      return this.defaultValues();\n    }\n  }\n\n  protected async setParameter(settingName: string, parameters: object): Promise {\n    const enr = new this._model({\n      name: settingName,\n      parameters: parameters,\n    });\n    const ok = await this.upsert(\n      { name: settingName },\n      {\n        $setOnInsert: {\n          name: settingName,\n        },\n        $set: {\n          parameters: parameters,\n        },\n      },\n    );\n    return ok;\n  }\n\n  protected async defaultValues(): Promise {\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivationDto.html":{"url":"classes/ActivationDto.html","title":"class - ActivationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/activation-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'Id of identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/activation-dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: 'true', description: 'true or false to enable or disable the identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/activation-dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsString } from 'class-validator';\n\nexport class ActivationDto {\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'Id of identity', type: String })\n  public id: string;\n\n  @IsBoolean()\n  @ApiProperty({ example: 'true', description: 'true or false to enable or disable the identity', type: String })\n  public status: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdditionalFieldsPart.html":{"url":"classes/AdditionalFieldsPart.html","title":"class - AdditionalFieldsPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdditionalFieldsPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    Public\n                                objectClasses\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\n@Schema({ _id: false })\nexport class AdditionalFieldsPart extends Document {\n  @Prop({ type: Array, of: String, required: true, default: [] })\n  public objectClasses: string[];\n\n  @Prop({ type: Object, default: {} })\n  public attributes: Record;\n\n  @Prop({ type: Object, required: false })\n  public validations?: Record;\n}\n\nexport const AdditionalFieldsPartSchema = SchemaFactory.createForClass(AdditionalFieldsPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentCreateQuestions.html":{"url":"classes/AgentCreateQuestions.html","title":"class - AgentCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseEmail\n                            \n                            \n                                    \n                                parsePassword\n                            \n                            \n                                    \n                                parseUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseEmail(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Email ?', name: 'email'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parsePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    parsePassword(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Password ?', name: 'password', type: 'password'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseUsername(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Username ?', name: 'username'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Agents.html":{"url":"classes/Agents.html","title":"class - Agents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/agents.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                baseURL\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                displayName\n                            \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    Public\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '/'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: SecurityPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: StatePartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_THIRD_PARTY_AUTH})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { StatePart, StatePartSchema } from '~/core/agents/_schemas/_parts/state.part.schema';\nimport { SecurityPart, SecurityPartSchema } from '~/core/agents/_schemas/_parts/security.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nconst DEFAULT_THIRD_PARTY_AUTH = 'local';\n\n@Schema({ versionKey: false })\nexport class Agents extends AbstractSchema {\n  // @Prop({\n  //   type: Types.ObjectId,\n  //   required: true,\n  //   unique: true,\n  // })\n  // public entityId: Types.ObjectId\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public username: string;\n\n  @Prop({\n    type: String,\n  })\n  public displayName: string;\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public email: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public password: string;\n\n  @Prop({\n    type: String,\n    default: DEFAULT_THIRD_PARTY_AUTH,\n  })\n  public thirdPartyAuth: string;\n\n  @Prop({\n    type: StatePartSchema,\n    required: true,\n    default: {},\n  })\n  public state: StatePart;\n\n  @Prop({\n    type: String,\n    default: '/',\n  })\n  public baseURL: string;\n\n  @Prop({\n    type: SecurityPartSchema,\n  })\n  public security: SecurityPart;\n\n  @Prop({\n    type: Object,\n  })\n  public customFields?: { [key: string]: MixedValue };\n}\n\nexport const AgentsSchema = SchemaFactory.createForClass(Agents);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCommand.html":{"url":"classes/AgentsCommand.html","title":"class - AgentsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AgentsController.html":{"url":"controllers/AgentsController.html","title":"controller - AgentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AgentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                agents\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: AgentsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: AgentsUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { AgentsCreateDto, AgentsDto, AgentsUpdateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from './agents.service';\n\n@ApiTags('core/agents')\n@Controller('agents')\nexport class AgentsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    // entityId: 1,\n    username: 1,\n    displayName: 1,\n    email: 1,\n    state: 1,\n    hidden: 1,\n  };\n\n  public constructor(private readonly _service: AgentsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n  public async create(@Res() res: Response, @Body() body: AgentsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(AgentsDto, AgentsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      AgentsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(AgentsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n      security: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: AgentsUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(AgentsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateCommand.html":{"url":"classes/AgentsCreateCommand.html","title":"class - AgentsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, agentsService: AgentsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateDto.html":{"url":"classes/AgentsCreateDto.html","title":"class - AgentsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, ValidateNested, IsEmail, IsBoolean, IsMongoId, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsDto.html":{"url":"classes/AgentsDto.html","title":"class - AgentsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AgentsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:43\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, ValidateNested, IsEmail, IsBoolean, IsMongoId, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgentsModule.html":{"url":"modules/AgentsModule.html","title":"module - AgentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AgentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/agents/agents.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AgentsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AgentsSchema, Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from './agents.service';\nimport { AgentsController } from './agents.controller';\n// import { AgentsCommand } from '~/cli/agents.command';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Agents.name,\n        useFactory: () => AgentsSchema,\n      },\n    ]),\n  ],\n  providers: [AgentsService /* ...AgentsCommand.registerWithSubCommands() */],\n  controllers: [AgentsController],\n  exports: [AgentsService],\n})\nexport class AgentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService.html":{"url":"injectables/AgentsService.html","title":"injectable - AgentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/agents/agents.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: AgentsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:17\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:27\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { Document, Model, ModifyResult, Query, QueryOptions, SaveOptions, Types, UpdateQuery } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { AgentsCreateDto } from './_dto/agents.dto';\nimport { hash } from 'argon2';\nimport { randomBytes } from 'node:crypto';\nimport { SecurityPartDTO } from './_dto/parts/security.part.dto';\n\n@Injectable()\nexport class AgentsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Agents.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: AgentsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    data.password = await hash(data.password);\n    data.security = (data.security || {}) as SecurityPartDTO;\n    data.security.secretKey = randomBytes(32).toString('hex');\n    return await super.create(data, options);\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery & any,\n    options?: QueryOptions,\n  ): Promise>> {\n    if (update.password) {\n      update.password = await hash(update.password);\n    }\n    if (update.$set?.password) {\n      update.$set.password = await hash(update.$set.password);\n    }\n    return await super.update(\n      _id,\n      {\n        ...update,\n        $set: {\n          ...(update?.$set || {}),\n        },\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsUpdateDto.html":{"url":"classes/AgentsUpdateDto.html","title":"class - AgentsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(AgentsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, ValidateNested, IsEmail, IsBoolean, IsMongoId, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/all-exception.filter.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { Response } from 'express';\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    Logger.debug(exception['message'], 'AllExceptionFilter');\n\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = 500;\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception['message'] || exception['name'] || 'Internal server error',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiSession.html":{"url":"classes/ApiSession.html","title":"class - ApiSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/api-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/api-session.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ApiSession {\n  public readonly _id: string;\n  public readonly username: string;\n  public readonly displayName: string;\n  public readonly token: string;\n\n  public constructor(data: Partial) {\n    for (const key in data) {\n      this[key] = data[key];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                getInfo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get API infos'})@ApiResponse({status: 200, description: 'Return API infos'})\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(res: Response, project?: string, current?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'current', required: false})@Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                project\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Query, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\nimport { ApiBearerAuth, ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport { LRUCache } from 'lru-cache';\n\ninterface GithubAuthor {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  user_view_type: string;\n  site_admin: boolean;\n}\n\ninterface GithubAsset {\n  [key: string]: any;\n}\n\ninterface GithubUpdate {\n  url: string;\n  assets_url: string;\n  upload_url: string;\n  html_url: string;\n  id: number;\n  author: GithubAuthor;\n  node_id: string;\n  tag_name: string;\n  target_commitish: string;\n  name: string;\n  draft: boolean;\n  prerelease: boolean;\n  created_at: string;\n  published_at: string;\n  assets: GithubAsset[];\n  tarball_url: string;\n  zipball_url: string;\n  body: string;\n}\n\nconst storage = new LRUCache({\n  ttl: 1000 * 60 * 60,\n  ttlAutopurge: true,\n});\n\n@Public()\n@Controller()\n@ApiBearerAuth()\n// @see https://stackoverflow.com/questions/67314808/how-to-disable-security-for-a-specific-controller-method-in-nestjs-swagger\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get API infos' })\n  @ApiResponse({ status: 200, description: 'Return API infos' })\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n\n  @ApiQuery({ name: 'current', required: false })\n  @Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n  public async update(\n    @Res() res: Response,\n    @Param('project') project?: string,\n    @Query('current') current?: string,\n  ): Promise {\n    let data = {};\n    // console.log('this.storage', storage.get(project))\n    if (storage.has(project)) {\n      this.logger.log(`Fetching ${project} tags from cache`);\n      data = storage.get(project) as GithubUpdate;\n    } else {\n      this.logger.log(`Fetching ${project} tags`);\n      const update = await fetch(`https://api.github.com/repos/Libertech-FR/${project}/releases/latest`, {\n        signal: AbortSignal.timeout(1000),\n      });\n      data = await update.json();\n      console.log('update', data)\n      storage.set(project, data);\n      // console.log('this.storage', storage.get(project))\n    }\n    // if (!Array.isArray(data)) {\n    //   throw new BadRequestException(`Invalid data from Github `);\n    // }\n    const lastVersion = data.tag_name.replace(/^v/, '');\n    const pkgInfo = this.appService.getInfo();\n    const currentVersion = current || pkgInfo.version;\n\n    if (project !== pkgInfo.name || current) {\n      if (!/[0-9]+\\.[0-9]+\\.[0-9]+/.test(current)) {\n        throw new BadRequestException('Invalid version for current parameter');\n      }\n    }\n\n    const [currentMajor, currentMinor, currentPatch] = lastVersion.split('.').map(Number);\n    const [lastMajor, lastMinor, lastPatch] = currentVersion.split('.').map(Number);\n    const updateAvailable = currentMajor > lastMajor || currentMinor > lastMinor || currentPatch > lastPatch;\n\n    return res.json({\n      data: {\n        project,\n        updateAvailable,\n        currentVersion,\n        lastVersion,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nMigrationsModule\n\nMigrationsModule\n\nAppModule -->\n\nMigrationsModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nShutdownObserver\n\nShutdownObserver\n\nAppModule -->\n\nShutdownObserver->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ShutdownObserver\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            ManagementModule\n                        \n                        \n                            MigrationsModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BullModule } from '@nestjs/bullmq';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { CoreModule } from './core/core.module';\nimport { ManagementModule } from './management/management.module';\nimport config, { MongoosePlugin } from './config';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { RedisOptions } from 'ioredis';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RequestContextModule } from 'nestjs-request-context';\nimport { APP_FILTER, APP_GUARD, APP_PIPE } from '@nestjs/core';\nimport { AuthGuard } from './_common/guards/auth.guard';\nimport { MongooseValidationFilter } from './_common/filters/mongoose-validation.filter';\nimport { DtoValidationPipe } from './_common/pipes/dto-validation.pipe';\nimport { SettingsModule } from '~/settings/settings.module';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MailadmService } from '~/settings/mailadm.service';\nimport { FactorydriveModule } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { MigrationsService } from './migrations/migrations.service';\nimport { MigrationsModule } from './migrations/migrations.module';\nimport { ShutdownObserver } from './_common/observers/shutdown.observer';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MailerModule.forRootAsync({\n      imports: [SettingsModule],\n      inject: [MailadmService],\n      useFactory: async (service: MailadmService) => {\n        const params = await service.getParams();\n        const regex = /^(smtps?|):\\/\\/([a-zA-Z0-9.-]+|\\d{1,3}(?:\\.\\d{1,3}){3}|\\[(?:[0-9a-fA-F:]+)\\]):(\\d+)$/;\n        const [_, protocol, host, port] = `${params.host}`.match(regex);\n        const isDev = process.env.NODE_ENV === 'development';\n\n        return {\n          transport: {\n            host,\n            port: parseInt(port),\n            from: params.sender,\n            secure: protocol === 'smtps' && port === '465',\n            requireTLS: protocol === 'smtps' && port === '587',\n            auth: {\n              user: params.username,\n              pass: params.password,\n            },\n            tls: {\n              ciphers: 'SSLv3,TLSv1,TLSv1.1,TLSv1.2',\n            },\n            debug: isDev,\n            logger: isDev,\n          },\n          defaults: {\n            from: params.sender,\n          },\n          template: {\n            dir: __dirname + '/../templates',\n            adapter: new HandlebarsAdapter(),\n            options: {\n              strict: true,\n            },\n          },\n        };\n      },\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        type: 'single',\n        url: config.get('ioredis.uri'),\n        options: config.get('ioredis.options'),\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n        blockingConnection: true,\n      }),\n    }),\n    FactorydriveModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        ...config.get('factorydrive.options'),\n      }),\n    }),\n    RequestContextModule,\n    CoreModule.register(),\n    ManagementModule.register(),\n    SettingsModule.register(),\n    MigrationsModule.register(),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    ShutdownObserver,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard('jwt'),\n    },\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: AllExceptionFilter,\n    // },\n    {\n      provide: APP_FILTER,\n      useClass: MongooseValidationFilter,\n    },\n    {\n      provide: APP_PIPE,\n      useClass: DtoValidationPipe,\n    },\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                package\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Partial\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        package\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PackageJson } from 'types-package-json';\nimport { ModuleRef } from '@nestjs/core';\nimport { readFileSync } from 'fs';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { pick } from 'radash';\n\n@Injectable()\nexport class AppService extends AbstractService {\n  protected package: Partial;\n\n  public constructor(protected moduleRef: ModuleRef) {\n    super({ moduleRef });\n    this.package = JSON.parse(readFileSync('package.json', 'utf-8'));\n  }\n\n  public getInfo(): Partial {\n    return pick(this.package, ['name', 'version']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AskTokenDto.html":{"url":"classes/AskTokenDto.html","title":"class - AskTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AskTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/ask-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                mail\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'monemail@mondomaine.com', description: 'secondary mail'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/ask-token.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/ask-token.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class AskTokenDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User id' })\n  public uid: string;\n\n  @ApiProperty({ example: 'monemail@mondomaine.com', description: 'secondary mail' })\n  @IsString()\n  public mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                session\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(res: Response, user: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('local')@UseGuards(undefined)@ApiOperation({summary: 'Authentification interne utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(res: Response, jwt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@ApiOperation({summary: 'Supprime le jeton d'authentification utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh')@ApiOperation({summary: 'Récupère un nouveau jeton d'authentification'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        session\n                        \n                    \n                \n            \n            \n                \n                        \n                    session(res: Response, identity: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('session')@UseGuards(undefined)@ApiOperation({summary: 'Récupération de la session en cours'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res, UseGuards, Headers, Get } from '@nestjs/common';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ModuleRef } from '@nestjs/core';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Response } from 'express';\nimport { ReqIdentity } from '~/_common/decorators/params/req-identity.decorator';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { hash } from 'crypto';\nimport { omit, pick } from 'radash';\n\n@Public()\n@ApiTags('core/auth')\n@Controller('auth')\nexport class AuthController extends AbstractController {\n  constructor(\n    protected moduleRef: ModuleRef,\n    private readonly service: AuthService,\n  ) {\n    super();\n  }\n\n  @Post('local')\n  @UseGuards(AuthGuard('local'))\n  @ApiOperation({ summary: 'Authentification interne utilisateur' })\n  public async authenticateWithLocal(@Res() res: Response, @ReqIdentity() user: AgentType): Promise {\n    const tokens = await this.service.createTokens(user);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      user,\n    });\n  }\n\n  @Get('session')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiOperation({ summary: 'Récupération de la session en cours' })\n  public async session(@Res() res: Response, @ReqIdentity() identity: AgentType): Promise {\n    this.logger.debug(`Session request for ${identity._id} (${identity.email})`);\n    const user = await this.service.getSessionData(identity);\n    this.logger.debug(`Session data delivered for ${identity._id} (${identity.email}) with ${JSON.stringify(user)}`);\n    return res.status(HttpStatus.OK).json({\n      user: {\n        ...omit(user, ['security', 'metadata']),\n        sseToken: hash('sha256', user.security.secretKey),\n      },\n    });\n  }\n\n  //TODO: change any\n  @Post('refresh')\n  @ApiOperation({ summary: \"Récupère un nouveau jeton d'authentification\" })\n  public async refresh(@Res() res: Response, @Body() body: { refresh_token: string }): Promise {\n    const [agents, tokens] = await this.service.renewTokens(body.refresh_token);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      sseToken: hash('sha256', agents.security.secretKey),\n    });\n  }\n\n  @Post('logout')\n  @ApiOperation({ summary: \"Supprime le jeton d'authentification utilisateur\" })\n  public async logout(@Res() res: Response, @Headers('Authorization') jwt: string): Promise {\n    await this.service.clearSession(jwt.replace(/^Bearer\\s/, ''));\n    return res.status(HttpStatus.OK).send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { IAuthModuleOptions, PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { JwtModule, JwtModuleOptions } from '@nestjs/jwt';\nimport { JwtStrategy } from '~/core/auth/_strategies/jwt.strategy';\nimport { LocalStrategy } from '~/core/auth/_strategies/local.strategy';\nimport { KeyringsModule } from '../keyrings/keyrings.module';\n\n@Module({\n  imports: [\n    PassportModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('passport.options', {}),\n      }),\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('jwt.options', {}),\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, LocalStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                ACCESS_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                ACCESS_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                DEV_TOKEN_PATH\n                            \n                            \n                                    Protected\n                                REFRESH_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                REFRESH_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                TOKEN_PATH_SEPARATOR\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    Public\n                                    Async\n                                clearSession\n                            \n                            \n                                    Public\n                                    Async\n                                createTokens\n                            \n                            \n                                    Public\n                                    Async\n                                getSessionData\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                renewTokens\n                            \n                            \n                                    Public\n                                    Async\n                                verifyIdentity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, agentsService: AgentsService, keyringsService: KeyringsService, jwtService: JwtService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/auth.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearSession(jwt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTokens(identity, refresh_token?: string | , options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refresh_token\n                                            \n                                                        string | \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getSessionData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSessionData(identity: AgentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        renewTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    renewTokens(refresh_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refresh_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyIdentity\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyIdentity(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        ACCESS_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 5 * 60\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'access_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        DEV_TOKEN_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.dev-token.json'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        REFRESH_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 3600 * 24 * 7\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'refresh_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        TOKEN_PATH_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, OnModuleInit, UnauthorizedException } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ModuleRef } from '@nestjs/core';\nimport { Redis } from 'ioredis';\nimport { randomBytes } from 'crypto';\nimport { InjectRedis } from '@nestjs-modules/ioredis';\nimport { verify as argon2Verify } from 'argon2';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from '~/core/agents/agents.service';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { omit, pascal, pick } from 'radash';\nimport { JwtPayload } from 'jsonwebtoken';\nimport { JwtService } from '@nestjs/jwt';\nimport { resolve } from 'path';\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\nimport { ConsoleSession } from '~/_common/data/console-session';\nimport { KeyringsService } from '../keyrings/keyrings.service';\nimport { ApiSession } from '~/_common/data/api-session';\n\n@Injectable()\nexport class AuthService extends AbstractService implements OnModuleInit {\n  protected readonly DEV_TOKEN_PATH = '.dev-token.json';\n  protected readonly TOKEN_PATH_SEPARATOR = ':';\n\n  protected readonly ACCESS_TOKEN_PREFIX = 'access_token';\n  protected readonly REFRESH_TOKEN_PREFIX = 'refresh_token';\n\n  protected ACCESS_TOKEN_EXPIRES_IN = 5 * 60;\n  protected REFRESH_TOKEN_EXPIRES_IN = 3600 * 24 * 7;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    protected readonly agentsService: AgentsService,\n    protected readonly keyringsService: KeyringsService,\n    private readonly jwtService: JwtService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async onModuleInit(): Promise {\n    if (process.env.NODE_ENV !== 'production') {\n      this.logger.warn('DEV MODE ENABLED !');\n      const devTokenPath = resolve(process.cwd(), this.DEV_TOKEN_PATH);\n      if (existsSync(devTokenPath)) {\n        try {\n          const data = JSON.parse(readFileSync(devTokenPath, 'utf-8'));\n          if (data.access_token) {\n            this.logger.log(`TOKEN ALREADY EXIST : `);\n            return;\n          }\n        } catch (e) {\n          this.logger.error(`TOKEN FILE CORRUPTED ! REGENERATING...`);\n        }\n      }\n      const { access_token } = await this.createTokens(new ConsoleSession(), false, {\n        expiresIn: '1y',\n        scopes: ['offline', 'api'],\n      });\n      writeFileSync(\n        devTokenPath,\n        JSON.stringify({\n          access_token,\n        }),\n      );\n\n      this.logger.log(`NEW TOKEN CREATED : `);\n    }\n  }\n\n  public async authenticateWithLocal(username: string, password: string): Promise {\n    try {\n      const user = await this.agentsService.findOne({ username });\n      if (user && (await argon2Verify(user.password, password))) {\n        return user;\n      }\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n\n  // eslint-disable-next-line\n  public async verifyIdentity(payload: any & { identity: AgentType & { token: string } }): Promise {\n    // console.log('payload', payload);\n    if (payload.scopes.includes('offline')) {\n      return payload.identity;\n    }\n    if (payload.scopes.includes('api')) {\n      try {\n        const identity = await this.keyringsService.findOne({\n          _id: payload.identity._id,\n          token: payload.identity.token,\n        });\n        if (identity) {\n          return identity.toObject();\n        }\n      } catch (e) { }\n      return null;\n    }\n    try {\n      const identity = await this.redis.get([this.ACCESS_TOKEN_PREFIX, payload.jti].join(':'));\n      if (identity) {\n        const data = JSON.parse(identity);\n        // console.log('data', data);\n        const success = await this.agentsService.model.countDocuments({\n          _id: payload.identity._id,\n          'security.secretKey': data.identity?.security?.secretKey,\n        });\n\n        return success ? data : null;\n      }\n    } catch (e) {\n      this.logger.warn('Invalid jwt session', e);\n    }\n    return null;\n  }\n\n  public async createTokens(\n    identity: AgentType & any,\n    refresh_token?: string | false,\n    options?: any,\n  ): Promise {\n    const scopes = ['sesame'];\n    if (options?.scopes) scopes.push(...options.scopes);\n    const jwtid = `${identity._id}_${randomBytes(16).toString('hex')}`;\n    const access_token = this.jwtService.sign(\n      { identity: pick(identity, ['_id', 'username', 'email', 'token']), scopes },\n      {\n        expiresIn: this.ACCESS_TOKEN_EXPIRES_IN,\n        jwtid,\n        subject: `${identity._id}`,\n        ...omit(options, ['scopes']),\n      },\n    );\n    if (refresh_token === false) return { access_token };\n    if (!refresh_token) {\n      refresh_token = [`${identity._id}`, randomBytes(64).toString('hex')].join(this.TOKEN_PATH_SEPARATOR);\n      await this.redis.set(\n        [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n        JSON.stringify({\n          identityId: identity._id,\n        }),\n      );\n    }\n    await this.redis.expire(\n      [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n      this.REFRESH_TOKEN_EXPIRES_IN,\n    );\n    const userIdentity = await this.agentsService.findOne({ _id: identity._id });\n    await this.redis.set(\n      [this.ACCESS_TOKEN_PREFIX, jwtid].join(this.TOKEN_PATH_SEPARATOR),\n      JSON.stringify({\n        identity: userIdentity.toJSON(),\n        refresh_token,\n      }),\n      'EX',\n      this.ACCESS_TOKEN_EXPIRES_IN,\n    );\n    return {\n      access_token,\n      refresh_token,\n    };\n  }\n\n  public async getSessionData(identity: AgentType): Promise {\n    const entity = await this.agentsService.findOne(\n      { _id: identity._id },\n      {\n        projection: {\n          metadata: 0,\n          password: 0,\n        },\n      },\n    )\n    return {\n      ...omit(entity.toJSON(), ['password']),\n    };\n  }\n\n  public async renewTokens(refresh_token: string): Promise {\n    const data = await this.redis.get([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n    if (!data) throw new UnauthorizedException();\n    const { identityId } = JSON.parse(data);\n    const identity = await this.agentsService.findOne({ _id: identityId });\n    if (!identity) throw new ForbiddenException();\n    return [identity, await this.createTokens(omit(identity.toObject(), ['password']), refresh_token)];\n  }\n\n  public async clearSession(jwt: string): Promise {\n    try {\n      const data = this.jwtService.decode(jwt) as JwtPayload;\n      if (!data) return null;\n      const { jti } = data;\n      const infos = await this.redis.get([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      await this.redis.del([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      if (infos) {\n        const { refresh_token } = JSON.parse(infos);\n        await this.redis.del([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n      }\n    } finally {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginOptions.html":{"url":"interfaces/AutoIncrementPluginOptions.html","title":"interface - AutoIncrementPluginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            incrementBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overwriteModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rules\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerCollection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : _id\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the field to increment\n-> Only use this if it is not \"_id\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incrementBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incrementBy:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How much to increment the field by\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overwriteModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overwriteModelName:         string | OverwriteModelNameFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | OverwriteModelNameFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrite what to use for the modelName property in the tracker document\nThis can be overwritten when wanting to use a single tracker for multiple models\nDefaults to document.constructor.modelName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rules:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startAt:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 0\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    the count should start at\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerCollection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerCollection:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounters\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Tracker Collection to use to keep track of an counter for the ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerModelName:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounter\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the tracker model name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  type?: string;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n\n  rules?: Function;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginTrackerSpec.html":{"url":"interfaces/AutoIncrementPluginTrackerSpec.html","title":"interface - AutoIncrementPluginTrackerSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginTrackerSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            modelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current Tracker count\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field in the schema\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ModelName from the current model\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  type?: string;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n\n  rules?: Function;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInfoInterface.html":{"url":"interfaces/BackendResultInfoInterface.html","title":"interface - BackendResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInterface.html":{"url":"interfaces/BackendResultInterface.html","title":"interface - BackendResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backend\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsCommand.html":{"url":"classes/BackendsCommand.html","title":"class - BackendsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BackendsController.html":{"url":"controllers/BackendsController.html","title":"controller - BackendsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BackendsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                backends\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                deleteIdentities\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                executeJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                sse\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                syncAllIdentities\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                syncIdentities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        deleteIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteIdentities(res: Response, body: DeleteIdentitiesDto, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete')@ApiOperation({summary: 'Supprime une liste d'identitées'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            DeleteIdentitiesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        executeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeJob(res: Response, body: ExecuteJobDto, asyncQuery: string, timeoutDiscardQuery: string, disableLogsQuery: string, updateStatusQuery: string, syncTimeout?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('execute')@ApiOperation({summary: 'Execute un backend manuellement'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ExecuteJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                timeoutDiscardQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                disableLogsQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStatusQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                syncTimeout\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        sse\n                        \n                    \n                \n            \n            \n                \n                        \n                    sse(res: Response, id: string, key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Sse('sse')@ApiOperation({summary: 'Server Sent Event - Récupère en temps réel les Jobs et affiche leurs état'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        syncAllIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAllIdentities(res: Response, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('syncall')@ApiOperation({summary: 'Synchronise toutes les identitées à synchroniser'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        syncIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncIdentities(res: Response, body: SyncIdentitiesDto, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sync')@ApiOperation({summary: 'Synchronise une liste d'identitées'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            SyncIdentitiesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport {\n  Body,\n  Controller,\n  HttpStatus,\n  Logger,\n  ParseIntPipe,\n  Post,\n  Query,\n  Req,\n  Res,\n  Sse,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Response, Request } from 'express';\nimport Redis from 'ioredis';\nimport { Observable, Subscriber } from 'rxjs';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ExecuteJobDto } from './_dto/execute-job.dto';\nimport { BackendsService } from './backends.service';\nimport { SyncIdentitiesDto } from './_dto/sync-identities.dto';\nimport { Types } from 'mongoose';\nimport { ActionType } from './_enum/action-type.enum';\nimport { DeleteIdentitiesDto } from './_dto/delete-identities.dto';\nimport { hash } from 'crypto';\nimport { AgentsService } from '../agents/agents.service';\nimport { Agents } from '../agents/_schemas/agents.schema';\n\nfunction fireMessage(observer: Subscriber, channel: string, message: any, loggername: string) {\n  try {\n    observer.next({\n      data: { channel, payload: message },\n    } as MessageEvent);\n    Logger.debug(`Observer send to  with data `, loggername);\n  } catch (err) {\n    Logger.error(`Observer error from  with data . Error: ${err}`, loggername);\n  }\n}\n\n@ApiTags('core/backends')\n@Controller('backends')\nexport class BackendsController {\n  private readonly logger = new Logger(BackendsController.name);\n\n  constructor(\n    private agentsService: AgentsService,\n    private backendsService: BackendsService,\n    @InjectRedis() protected readonly redis: Redis,\n  ) { }\n\n  @Post('delete')\n  @ApiOperation({ summary: \"Supprime une liste d'identitées\" })\n  public async deleteIdentities(\n    @Res() res: Response,\n    @Body() body: DeleteIdentitiesDto,\n    @Query('async') asyncQuery: string,\n  ) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.deleteIdentities(body.payload, {\n      async,\n    });\n\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('sync')\n  @ApiOperation({ summary: \"Synchronise une liste d'identitées\" })\n  public async syncIdentities(\n    @Res() res: Response,\n    @Body() body: SyncIdentitiesDto,\n    @Query('async') asyncQuery: string,\n  ) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncIdentities(body.payload, {\n      async,\n    });\n\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('syncall')\n  @ApiOperation({ summary: 'Synchronise toutes les identitées à synchroniser' })\n  public async syncAllIdentities(@Res() res: Response, @Query('async') asyncQuery: string) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncAllIdentities({\n      async: false,\n    });\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('execute')\n  @ApiOperation({ summary: 'Execute un backend manuellement' })\n  public async executeJob(\n    @Res() res: Response,\n    @Body() body: ExecuteJobDto,\n    @Query('async') asyncQuery: string,\n    @Query('timeoutDiscard') timeoutDiscardQuery: string,\n    @Query('disableLogs') disableLogsQuery: string,\n    @Query('updateStatus') updateStatusQuery: string,\n    @Query(\n      'syncTimeout',\n      new ParseIntPipe({\n        optional: true,\n        errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE,\n      }),\n    )\n    syncTimeout?: number,\n  ): Promise {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const timeoutDiscard = /true|on|yes|1/i.test(timeoutDiscardQuery);\n    const disableLogs = /true|on|yes|1/i.test(disableLogsQuery);\n    const updateStatus = /true|on|yes|1/i.test(updateStatusQuery);\n    const [job, response] = await this.backendsService.executeJob(\n      body.action,\n      body.id ? new Types.ObjectId(body.id) : null,\n      body.payload,\n      {\n        async,\n        syncTimeout,\n        timeoutDiscard,\n        disableLogs,\n        updateStatus,\n      },\n    );\n    return res.status(HttpStatus.ACCEPTED).json({ async, job, response });\n  }\n\n  @Public()\n  @Sse('sse')\n  @ApiOperation({ summary: 'Server Sent Event - Récupère en temps réel les Jobs et affiche leurs état' })\n  public async sse(@Res() res: Response, @Query('id') id: string, @Query('key') key: string): Promise> {\n    if (!id || !key) throw new UnauthorizedException();\n    const user = await this.agentsService.findById(id);\n    if (!user) throw new UnauthorizedException();\n    if (key !== hash('sha256', user.security.secretKey)) throw new UnauthorizedException();\n\n    res.socket.on('close', () => {\n      Logger.debug(`Observer close connection`, this.constructor.name);\n    });\n\n    return new Observable((observer) => {\n      this.backendsService.queueEvents.on('added', (added) => {\n        if (\n          ![ActionType.IDENTITY_UPDATE, ActionType.IDENTITY_CREATE, ActionType.IDENTITY_DELETE].includes(\n            added.name,\n          )\n        )\n          return;\n        return fireMessage(observer, 'job:added', added, this.constructor.name);\n      });\n\n      this.backendsService.queueEvents.on('completed', (completed) => {\n        return fireMessage(observer, 'job:completed', completed, this.constructor.name);\n      });\n\n      this.backendsService.queueEvents.on('failed', (failed) => {\n        return fireMessage(observer, 'job:failed', failed, this.constructor.name);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BackendsModule.html":{"url":"modules/BackendsModule.html","title":"module - BackendsModule","body":"\n                   \n\n\n\n\n    Modules\n    BackendsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_imports\n\n\n\ncluster_BackendsModule_providers\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nAgentsModule->BackendsModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/backends/backends.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BackendsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            IdentitiesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BackendsService } from './backends.service';\nimport { BackendsController } from './backends.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { IdentitiesModule } from '~/management/identities/identities.module';\nimport { JobsModule } from '../jobs/jobs.module';\nimport { TasksModule } from '../tasks/tasks.module';\nimport { AgentsModule } from '../agents/agents.module';\n@Module({\n  imports: [ConfigModule, IdentitiesModule, JobsModule, TasksModule, AgentsModule],\n  controllers: [BackendsController],\n  providers: [BackendsService],\n  exports: [BackendsService],\n})\nexport class BackendsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsSyncallCommand.html":{"url":"classes/BackendsSyncallCommand.html","title":"class - BackendsSyncallCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsSyncallCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, backendsService: BackendsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendsService\n                                                  \n                                                        \n                                                                        BackendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                oldPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyNewPassword', description: 'New password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyOldPassword', description: 'Old password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ChangePasswordDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public uid: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyOldPassword', description: 'Old password', type: String })\n  public oldPassword: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyNewPassword', description: 'New password', type: String })\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CipherData.html":{"url":"interfaces/CipherData.html","title":"interface - CipherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CipherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {InjectRedis} from '@nestjs-modules/ioredis';\nimport {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport {randomInt} from 'crypto';\nimport Redis from 'ioredis';\nimport {AbstractService} from '~/_common/abstracts/abstract.service';\nimport {ActionType} from '~/core/backends/_enum/action-type.enum';\nimport {BackendsService} from '~/core/backends/backends.service';\nimport {Jobs} from '~/core/jobs/_schemas/jobs.schema';\nimport {AskTokenDto} from './_dto/ask-token.dto';\nimport {ChangePasswordDto} from './_dto/change-password.dto';\nimport {ResetPasswordDto} from './_dto/reset-password.dto';\nimport {IdentitiesCrudService} from '../identities/identities-crud.service';\nimport {get} from 'radash';\nimport {Identities} from '../identities/_schemas/identities.schema';\nimport {MailerService} from '@nestjs-modules/mailer';\nimport {InitAccountDto} from '~/management/passwd/_dto/init-account.dto';\nimport {ConfigService} from '@nestjs/config';\nimport {ResetByCodeDto} from '~/management/passwd/_dto/reset-by-code.dto';\nimport {PasswdadmService} from '~/settings/passwdadm.service';\nimport {IdentityState} from '~/management/identities/_enums/states.enum';\nimport {InitResetDto} from '~/management/passwd/_dto/init-reset.dto';\nimport {SmsadmService} from '~/settings/smsadm.service';\nimport {InitManyDto} from '~/management/passwd/_dto/init-many.dto';\nimport {InitStatesEnum} from '~/management/identities/_enums/init-state.enum';\nimport {MailadmService} from '~/settings/mailadm.service';\nimport {DataStatusEnum} from \"~/management/identities/_enums/data-status\";\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesCrudService,\n    protected mailer: MailerService,\n    protected config: ConfigService,\n    private passwdadmService: PasswdadmService,\n    private smsadmService: SmsadmService,\n    private mailadmService: MailadmService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n  //Initialisation du reset de mot de passe envoie un email ou par sms  un code et fourni un token au front.\n  // Le code est la clé du token\n  public async initReset(initDto: InitResetDto): Promise {\n    //envoi du mail\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //test si on peu reninitialiser le compte\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE ||  identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //prise des parametres\n      const params = await this.passwdadmService.getPolicies();\n      const k = randomInt(100000, 999999);\n      //asking for padding\n      const padd = await this.getPaddingForCode();\n      const mailAttribute = params.emailAttribute;\n      const mail = get(identity.toObject(), mailAttribute);\n      if (mail) {\n        const token = await this.askToken({ mail: mail, uid: initDto.uid }, padd + k.toString(16), params.resetCodeTTL);\n        this.logger.log('Token :' + token + '  int : ' + k.toString(10));\n        if (initDto.type === 0) {\n          this.logger.log('Reset password asked by mail for  : ' + initDto.uid);\n          const smtpParams = await this.mailadmService.getParams();\n          if (mailAttribute !== '') {\n            // this.mailer.addTransporter('lastStmp', smtpParams.host)\n            this.mailer\n              .sendMail({\n                // transporterName: 'lastStmp',\n                from: smtpParams.sender,\n                to: mail,\n                subject: 'Reinitialisation de votre mot de passe',\n                template: 'resetaccount',\n                context: {\n                  uid: identity.inetOrgPerson.uid,\n                  displayName: identity.inetOrgPerson.displayName,\n                  code: k,\n                },\n              })\n              .then(() => {\n                this.logger.log('reset compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              })\n              .catch(() => {\n                throw new BadRequestException({\n                  message: 'Erreur serveur lors de l envoi du mail',\n                  error: 'Bad Request',\n                  statusCode: 400,\n                });\n              });\n            return token;\n          } else {\n            return false;\n          }\n        } else {\n          //envoi par SMS si c est possible\n          const policies = await this.passwdadmService.getPolicies();\n          if (policies.resetBySms === true) {\n            this.logger.log('Reset password asked by SMS for  : ' + initDto.uid);\n            const smsAttribute = params.mobileAttribute;\n            if (smsAttribute !== '') {\n              const numTel = get(identity.toObject(), smsAttribute);\n              await this.smsadmService.send(numTel, 'Votre code de reinitialisation : ' + k.toString(10));\n            }\n            return token;\n          } else {\n            return false;\n          }\n        }\n      } else {\n        this.logger.error('Error while reset identityMailAttribute Empty');\n      }\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (uid=${initDto?.uid})`);\n      //on retoune un token qui ne sert à rien pour ne pas divulguer que l uid n existe pas\n      const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n      const falseToken = await this.askToken({ mail: 'xxxxxx@xxxxxxxxxxx', uid: 'xxxxxxxx@xxxxxxx' }, k, 0);\n      return falseToken;\n    }\n  }\n  //Initialisation du compte. Envoi d' un mail avec un token pour l'init du compte\n  public async initAccount(initDto: InitAccountDto): Promise {\n    //recherche de l'identity\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //test si on peu reninitialiser le compte\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE || identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //envoi du mail\n      const params = await this.passwdadmService.getPolicies();\n      const mailAttribute = params.emailAttribute;\n      this.logger.log('mailer.identityMailAttribute : ' + mailAttribute);\n      if (mailAttribute !== '') {\n        const mail = get(identity.toObject(), mailAttribute);\n        if (mail) {\n          const smtpParams = await this.mailadmService.getParams();\n          //demande du token\n          const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n          const token = await this.askToken({ mail: mail, uid: initDto.uid }, k, params.initTokenTTL);\n          //envoi du token\n          this.mailer\n            .sendMail({\n              from: smtpParams.sender,\n              to: mail,\n              subject: 'Activation de votre compte',\n              template: 'initaccount',\n              context: {\n                displayName: identity.inetOrgPerson.displayName,\n                uid: initDto.uid,\n                url: this.config.get('frontPwd.url') + '/initaccount/' + token,\n                mail: identity.inetOrgPerson.mail\n              },\n            })\n            .then(() => {\n              this.logger.log('Init compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              this.setInitState(identity, InitStatesEnum.SENT);\n            })\n            .catch((e) => {\n              this.logger.error('Erreur serveur lors de l envoi du mail' + e);\n              throw new BadRequestException({\n                message: 'Erreur serveur lors de l envoi du mail' + e,\n                error: 'Bad Request',\n                statusCode: 400,\n              });\n            });\n\n          return true;\n        } else {\n          this.logger.error('Error while initAccount identityMailAttribute Empty');\n          return false;\n        }\n      } else {\n        this.logger.error('Error while initAccount identityMailAttribute not defined');\n        return false;\n      }\n    } catch (e) {\n      this.logger.error('Error while initialize password. ' + e + ` (uid=${initDto?.uid})`);\n      return false;\n    }\n  }\n\n  //Changement du password\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': passwdDto.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE ||  identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //verification de la police de mdp\n      if ((await this.passwdadmService.checkPolicies(passwdDto.newPassword)) === false) {\n        throw new BadRequestException({\n          message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique des mots de passe',\n          error: 'Bad Request',\n          statusCode: 400,\n        });\n      }\n      //tout est ok en envoie au backend\n      const result = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_CHANGE,\n        identity._id,\n        {\n          uid: passwdDto.uid,\n          oldPassword: passwdDto.oldPassword,\n          newPassword: passwdDto.newPassword,\n          ...identity.toJSON(),\n        },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n      // on met actif l'identité\n      await this.identities.model.updateOne({ _id:identity._id},{dataStatus: DataStatusEnum.ACTIVE})\n      return result;\n    } catch (e) {\n      let job = undefined;\n      let _debug = undefined;\n      this.logger.error('Error while changing password. ' + e + ` (uid=${passwdDto?.uid})`);\n\n      if (e?.response?.status === HttpStatus.BAD_REQUEST) {\n        job = {};\n        job['status'] = e?.response?.job?.status;\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        _debug = e?.response?.error?.response;\n      }\n\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Mot de passe incorrect ou utilisateur inconnu',\n        error: 'Bad Request',\n        statusCode: 400,\n        job,\n        _debug,\n      });\n    }\n  }\n\n  // Genere un token pour les autres methodes\n  public async askToken(askToken: AskTokenDto, k, ttl: number): Promise {\n    try {\n      /*\n      if (ttl >0){\n\n        await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n      }\n      */\n\n      const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n      const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n      let ciphertext = cipher.update(\n        JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n        'utf8',\n        'base64',\n      );\n      ciphertext += cipher.final('base64');\n      //on enregistre pas dans redis si le ttl =0\n      if (ttl > 0) {\n        await this.redis.set(\n          ciphertext,\n          JSON.stringify({\n            k,\n            iv,\n            tag: cipher.getAuthTag().toString('base64'),\n          }),\n        );\n        await this.redis.expire(ciphertext, ttl);\n      }\n      return encodeURIComponent(ciphertext);\n    } catch (e) {\n      this.logger.error('Error while ask token. ' + e + ` (uid=${askToken?.uid})`);\n      throw new BadRequestException('Impossible de générer un token, une erreur est survenue');\n    }\n  }\n\n  // decrypte le token à l aide du code\n  public async decryptTokenWithCode(token: string, code: number): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n      this.logger.log('decrypt ' + cypherData);\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n      const padd = await this.getPaddingForCode();\n      const k = padd + code.toString(16);\n      this.logger.log('k=' + k);\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.error('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token xx');\n    }\n  }\n\n  // decrypte le token d'initialisation du compte\n  public async decryptToken(token: string): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.verbose('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token');\n    }\n  }\n\n  // reset du password\n  public async resetByCode(data: ResetByCodeDto): Promise {\n    this.logger.log('resetByCode : ' + data.token + ' ' + data.code);\n    //verification du passwordPolicies\n    if ((await this.passwdadmService.checkPolicies(data.newpassword)) === false) {\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique de securité',\n        error: 'Bad Request',\n        statusCode: 400,\n      });\n    }\n    const tokenData = await this.decryptTokenWithCode(data.token, data.code);\n    this.logger.log('dataToken :' + tokenData);\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid })) as Identities;\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: identity.inetOrgPerson.uid, newPassword: data.newpassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        this.logger.log('delete key');\n        await this.redis.del(data.token);\n        // mise de l indentité active\n        // on met actif l'identité\n        identity.dataStatus = DataStatusEnum.ACTIVE;\n        await identity.save()\n        return [_, response];\n      }\n      this.logger.error('Error from backend while reseting password by code');\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password by code. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  // methode pour le reset par token (pour l initialisation du compte)\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': tokenData.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newPassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        await this.redis.del(data.token);\n        await this.setInitState(identity, InitStatesEnum.INITIALIZED);\n        return [_, response];\n      }\n\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  //Envoi le message d init à plusieurs identités\n  public async initMany(ids: InitManyDto): Promise {\n    const identities = await this.identities.find({ _id: { $in: ids.ids } });\n    if (identities.length === 0) {\n      throw new HttpException('Aucune identité trouvée.', 404);\n    }\n    const updated = await Promise.all(\n      identities.map((identity) => {\n        this.logger.verbose('send To :' + identity.get('inetOrgPerson.uid'));\n        return this.initAccount({ uid: identity.get('inetOrgPerson.uid') });\n      }),\n    );\n    return updated as any;\n  }\n\n  // genere des octect pour completer le code qui est de 4 octets et demi\n  private async getPaddingForCode(): Promise {\n    let code = '';\n    if (await this.redis.exists('CODEPADDING')) {\n      code = await this.redis.get('CODEPADDING');\n    } else {\n      code = crypto.randomBytes(13).toString('hex') + '0';\n      await this.redis.set('CODEPADDING', code);\n    }\n    return code;\n  }\n\n  private async setInitState(identity: Identities, state: InitStatesEnum): Promise {\n    identity.initState = state;\n    // on met actif l'identité\n    identity.dataStatus = DataStatusEnum.ACTIVE;\n    if (state === InitStatesEnum.SENT) {\n      identity.initInfo.initDate = new Date();\n      identity.initInfo.sentDate = null;\n    } else if (state === InitStatesEnum.INITIALIZED) {\n      identity.initInfo.sentDate = new Date();\n    }\n    const ok = await identity.save();\n    return ok;\n  }\n\n  // sort les identites qui n ont pas repondu dans le delai à l init de leurs comptes\n  public async checkInitOutDated(): Promise {\n    const date = new Date();\n    const params = await this.passwdadmService.getPolicies();\n    date.setTime(date.getTime() - params.initTokenTTL * 1000);\n    console.log('modifié:' + date);\n    const identities = await this.identities.find({\n      initState: InitStatesEnum.SENT,\n      'initInfo.initDate': { $lt: date },\n    });\n    return identities;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CliModule.html":{"url":"modules/CliModule.html","title":"module - CliModule","body":"\n                   \n\n\n\n\n    Modules\n    CliModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CliModule\n\n\n\ncluster_CliModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cli/cli.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AgentCreateQuestions, AgentsCommand } from './agents.command';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { BullModule } from '@nestjs/bullmq';\nimport { RedisOptions } from 'ioredis';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport config, { MongoosePlugin } from '~/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { KeyringsCommand, KeyringsCreateQuestions } from './keyrings.command';\nimport { KeyringsModule } from '~/core/keyrings/keyrings.module';\nimport { BackendsCommand } from './backends.command';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { AuthModule } from '~/core/auth/auth.module';\nimport { FactorydriveModule } from '@the-software-compagny/nestjs_module_factorydrive';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        type: 'single',\n        url: config.get('ioredis.uri'),\n        options: config.get('ioredis.options'),\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    FactorydriveModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        ...config.get('factorydrive.options'),\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n    BackendsModule,\n    AuthModule,\n  ],\n  providers: [\n    ...AgentsCommand.registerWithSubCommands(),\n    ...KeyringsCommand.registerWithSubCommands(),\n    ...BackendsCommand.registerWithSubCommands(),\n    AgentCreateQuestions,\n    KeyringsCreateQuestions,\n  ],\n})\nexport class CliModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcernedToPart.html":{"url":"classes/ConcernedToPart.html","title":"class - ConcernedToPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcernedToPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                $ref\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        $ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\n\n@Schema({ _id: false })\nexport class ConcernedToPart extends Document {\n  @Prop({ type: String, required: true })\n  public $ref: string;\n\n  @Prop({ type: Types.ObjectId, required: true })\n  public id: Types.ObjectId;\n\n  @Prop({ type: String })\n  public name?: string;\n}\n\nexport const ConcernedToPartSchema = SchemaFactory.createForClass(ConcernedToPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcernedToPartDTO.html":{"url":"classes/ConcernedToPartDTO.html","title":"class - ConcernedToPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcernedToPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/_parts/concerned-to.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                $ref\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        $ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { Types } from 'mongoose';\n\nexport class ConcernedToPartDTO {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public $ref: string;\n\n  @IsMongoId()\n  @ApiProperty()\n  public id: Types.ObjectId;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInstance.html":{"url":"interfaces/ConfigInstance.html","title":"interface - ConfigInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            application\n                                        \n                                \n                                \n                                        \n                                            factorydrive\n                                        \n                                \n                                \n                                        \n                                            frontPwd\n                                        \n                                \n                                \n                                        \n                                            helmet\n                                        \n                                \n                                \n                                        \n                                            ioredis\n                                        \n                                \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            mailer\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                                \n                                        \n                                            passport\n                                        \n                                \n                                \n                                        \n                                            sms\n                                        \n                                \n                                \n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        application\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        application:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        factorydrive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        factorydrive:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frontPwd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frontPwd:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helmet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helmet:     HelmetOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HelmetOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ioredis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ioredis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mailer:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passport:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sms:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\nimport { StorageManagerConfig } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { AmazonWebServicesS3StorageConfig } from '@the-software-compagny/nestjs_module_factorydrive-s3';\nimport { parse } from 'path';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    lang: string\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n    https: {\n      enabled: boolean;\n      key: string;\n      cert: string;\n    }\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  factorydrive: {\n    options:\n    | StorageManagerConfig\n    | {\n      disks: {\n        [key: string]: {\n          driver: 's3';\n          config: AmazonWebServicesS3StorageConfig;\n        };\n      };\n    };\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  mailer: {\n    host: string;\n    port: number;\n    sender: string;\n  };\n  sms: {\n    host: string;\n    systemId: string;\n    password: string;\n    sourceAddr: string;\n    regionCode: string;\n  };\n  frontPwd: {\n    url: string;\n    identityMailAttribute: string;\n    identityMobileAttribute: string;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    lang: process.env['LANG'] || 'en',\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n    https: {\n      enabled: /yes|1|on|true/i.test(process.env['SESAME_HTTPS_ENABLED']),\n      key: process.env['SESAME_HTTPS_PATH_KEY'] || '',\n      cert: process.env['SESAME_HTTPS_PATH_CERT'] || '',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [\n    ],\n  },\n  factorydrive: {\n    options: {\n      default: 'local',\n      disks: {\n        local: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage',\n          },\n        },\n        identities: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage/identities',\n          },\n        },\n      },\n    },\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n  mailer: {\n    host: process.env['SESAME_SMTP_SERVER'],\n    port: parseInt(process.env['SESAME_SMTP_PORT']) || 25,\n    sender: process.env['SESAME_MDP_SENDER'] || 'noreply@mydomain.com',\n  },\n  frontPwd: {\n    url: process.env['SESAME_FRONT_MDP'],\n    identityMailAttribute: process.env['SESAME_RESET_PWD_MAIL'] || '',\n    identityMobileAttribute: process.env['SESAME_RESET_PWD_MOBILE'] || '',\n  },\n  sms: {\n    host: process.env['SESAME_SMPP_SERVER'] || '',\n    systemId: process.env['SESAME_SMPP_SYSTEMID'] || '',\n    password: process.env['SESAME_SMPP_PASSWORD'] || '',\n    sourceAddr: process.env['SESAME_SMPP_SOURCEADDR'] || '',\n    regionCode: process.env['SESAME_SMPP_REGIONCODE'] || 'FR',\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectAttributeDTO.html":{"url":"classes/ConfigObjectAttributeDTO.html","title":"class - ConfigObjectAttributeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectAttributeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                desc\n                            \n                            \n                                    \n                                    \n                                    Public\n                                format\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                required\n                            \n                            \n                                    \n                                    \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(ConfigObjectType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean, IsOptional} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  public type: ConfigObjectType;\n\n  @IsBoolean()\n  public required: boolean;\n\n  @IsString()\n  @IsOptional()\n  public format: string;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @ArrayNotEmpty()\n  public attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  public objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  public attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectObjectClassDTO.html":{"url":"classes/ConfigObjectObjectClassDTO.html","title":"class - ConfigObjectObjectClassDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectObjectClassDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    Public\n                                desc\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean, IsOptional} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  public type: ConfigObjectType;\n\n  @IsBoolean()\n  public required: boolean;\n\n  @IsString()\n  @IsOptional()\n  public format: string;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @ArrayNotEmpty()\n  public attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  public objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  public attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectSchemaDTO.html":{"url":"classes/ConfigObjectSchemaDTO.html","title":"class - ConfigObjectSchemaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectSchemaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    \n                                    Public\n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectAttributeDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectObjectClassDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean, IsOptional} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  public type: ConfigObjectType;\n\n  @IsBoolean()\n  public required: boolean;\n\n  @IsString()\n  @IsOptional()\n  public format: string;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @ArrayNotEmpty()\n  public attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  public objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  public attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleSession.html":{"url":"classes/ConsoleSession.html","title":"class - ConsoleSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/console-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/console-session.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '000000000000000000000000'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ConsoleSession {\n  public readonly _id: string = '000000000000000000000000';\n  public readonly username: string = 'console';\n  public readonly displayName: string = 'Console';\n\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                core\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { CoreService } from './core.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('core')\n@Controller('core')\nexport class CoreController {\n  public constructor(private readonly _service: CoreService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\nCoreModule -->\n\nFilestorageModule->CoreModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            FilestorageModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            KeyringsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/core.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { AgentsModule } from './agents/agents.module';\nimport { AuthModule } from './auth/auth.module';\nimport { BackendsModule } from './backends/backends.module';\nimport { CoreController } from './core.controller';\nimport { CoreService } from './core.service';\nimport { JobsModule } from './jobs/jobs.module';\nimport { KeyringsModule } from './keyrings/keyrings.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { TasksModule } from './tasks/tasks.module';\nimport { FilestorageModule } from './filestorage/filestorage.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    BackendsModule,\n    LoggerModule,\n    KeyringsModule,\n    AgentsModule,\n    JobsModule,\n    TasksModule,\n    FilestorageModule,\n  ],\n  providers: [CoreService],\n  controllers: [CoreController],\n})\nexport class CoreModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'core',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreService.html":{"url":"injectables/CoreService.html","title":"injectable - CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/core.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CoreService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomFieldsDto.html":{"url":"classes/CustomFieldsDto.html","title":"class - CustomFieldsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomFieldsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/custom-fields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/custom-fields.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class CustomFieldsDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  public customFields?: { [key: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataPart.html":{"url":"classes/DataPart.html","title":"class - DataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/_parts/data.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_DATA_TYPE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport const DEFAULT_DATA_TYPE = 'default';\n\n@Schema({ _id: false })\nexport class DataPart extends Document {\n  @Prop({\n    type: String,\n    default: DEFAULT_DATA_TYPE,\n  })\n  public type?: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public message: string;\n}\n\nexport const DataPartSchema = SchemaFactory.createForClass(DataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteIdentitiesDto.html":{"url":"classes/DeleteIdentitiesDto.html","title":"class - DeleteIdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteIdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/delete-identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/delete-identities.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class DeleteIdentitiesDto {\n  @IsArray()\n  @ApiProperty({ type: Array })\n  public payload: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidationPipe.html":{"url":"injectables/DtoValidationPipe.html","title":"injectable - DtoValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Public\n                                validationRecursive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validationRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    validationRecursive(error: ValidationError, prefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationRecursive\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        // console.log('validations', JSON.stringify(request.body));\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeeNumber1700395200.html":{"url":"classes/EmployeeNumber1700395200.html","title":"class - EmployeeNumber1700395200","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeeNumber1700395200\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/jobs/1700395200-employee-number.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _migrateEmployeeNumberToArray\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(mongo: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/migrations/jobs/1700395200-employee-number.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongo\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(EmployeeNumber1700395200.name)\n                    \n                \n                    \n                        \n                                Defined in src/migrations/jobs/1700395200-employee-number.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _migrateEmployeeNumberToArray\n                        \n                    \n                \n            \n            \n                \n                        \n                    _migrateEmployeeNumberToArray()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/jobs/1700395200-employee-number.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/jobs/1700395200-employee-number.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\"\nimport { InjectConnection, InjectModel } from \"@nestjs/mongoose\"\nimport { Connection, Model } from \"mongoose\"\n\nexport default class EmployeeNumber1700395200 {\n  private readonly logger = new Logger(EmployeeNumber1700395200.name)\n\n  public constructor(\n    @InjectConnection() private mongo: Connection,\n  ) {\n  }\n\n  public async up(): Promise {\n    this.logger.log('EmployeeNumber1700395200 up started')\n\n    await this._migrateEmployeeNumberToArray()\n  }\n\n  private async _migrateEmployeeNumberToArray(): Promise {\n    const identities = await this.mongo.collection('identities').find();\n\n    for await (const identity of identities) {\n      const employeeNumber = identity.inetOrgPerson.employeeNumber;\n\n      if (typeof employeeNumber === 'string') {\n        this.logger.log(`Migrating employeeNumber for identity ${identity._id}`);\n        identity.inetOrgPerson.employeeNumber = [employeeNumber];\n        this.mongo.collection('identities').updateOne({ _id: identity._id }, { $set: { 'inetOrgPerson.employeeNumber': [employeeNumber] } });\n      } else if (Array.isArray(employeeNumber)) {\n        if (typeof employeeNumber[0] === 'number') {\n          this.logger.log(`Migrating employeeNumber for identity ${identity._id}`);\n          identity.inetOrgPerson.employeeNumber = employeeNumber.map(String);\n          this.mongo.collection('identities').updateOne({ _id: identity._id }, { $set: { 'inetOrgPerson.employeeNumber': employeeNumber.map(String) } });\n        }\n      }\n    }\n\n    this.logger.log('Migration terminée avec succès');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnsureIdentitiesIndexMiddleware.html":{"url":"injectables/EnsureIdentitiesIndexMiddleware.html","title":"injectable - EnsureIdentitiesIndexMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EnsureIdentitiesIndexMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_middlewares/ensure-identities-index.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identityModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/_middlewares/ensure-identities-index.middleware.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identityModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/_middlewares/ensure-identities-index.middleware.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestMiddleware } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Request, Response } from 'express';\nimport { Model } from 'mongoose';\nimport { Identities } from '~/management/identities/_schemas/identities.schema';\n\n@Injectable()\nexport class EnsureIdentitiesIndexMiddleware implements NestMiddleware {\n  constructor(\n    @InjectModel(Identities.name) private readonly identityModel: Model,\n  ) { }\n\n  public async use(req: Request, res: Response, next: () => void) {\n    try {\n      await this.identityModel.ensureIndexes();\n      // console.log('Indexes synchronized.');\n    } catch (err) {\n      console.error('Erreur lors de la création des index :', err);\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorSchemaDto.html":{"url":"classes/ErrorSchemaDto.html","title":"class - ErrorSchemaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorSchemaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/error-schema.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                _exception\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        _exception\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class ErrorSchemaDto {\n  @ApiProperty({ enum: [HttpStatus.BAD_REQUEST] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n\n  @ApiProperty()\n  public validations?: { [key: string]: string }[];\n\n  @ApiProperty()\n  // eslint-disable-next-line\n  public _exception?: { [key: string]: any }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExecuteJobDto.html":{"url":"classes/ExecuteJobDto.html","title":"class - ExecuteJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExecuteJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/execute-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(ActionType)@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsOptional()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsNotEmpty, IsObject, IsOptional } from 'class-validator';\nimport { ActionType } from '../_enum/action-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ExecuteJobDto {\n  @IsNotEmpty()\n  @IsEnum(ActionType)\n  @ApiProperty({ type: String })\n  public action: ActionType;\n\n  @IsMongoId()\n  @IsOptional()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public id?: string;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: Object })\n  public payload: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExecuteJobOptions.html":{"url":"interfaces/ExecuteJobOptions.html","title":"interface - ExecuteJobOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExecuteJobOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/execute-job-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            async\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dataState\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLogs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            job\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            switchToProcessing\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            syncTimeout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            targetState\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeoutDiscard\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updateStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        async\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        async:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataState:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLogs:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        job\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        job:         JobsOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JobsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchToProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        switchToProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        syncTimeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        syncTimeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetState:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeoutDiscard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeoutDiscard:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateStatus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JobsOptions } from 'bullmq';\nimport { Types } from 'mongoose';\n\nexport interface ExecuteJobOptions {\n  job?: JobsOptions;\n  async?: boolean;\n  disableLogs?: boolean;\n  syncTimeout?: number;\n  timeoutDiscard?: boolean;\n  updateStatus?: boolean;\n  switchToProcessing?: boolean;\n  comment?: string;\n  targetState?: any;\n  dataState?: any;\n  task?: Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileUploadDto.html":{"url":"classes/FileUploadDto.html","title":"class - FileUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filestorage.html":{"url":"classes/Filestorage.html","title":"class - Filestorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filestorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_schemas/filestorage.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                fingerprint\n                            \n                            \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String, enum: FsTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\n\n@Schema({\n  collection: 'filestorage',\n  versionKey: false,\n})\nexport class Filestorage extends AbstractSchema {\n  @Prop({\n    required: true,\n    type: String,\n    enum: FsTypeList,\n  })\n  public type: FsType;\n\n  @Prop({\n    type: String,\n  })\n  public mime?: string;\n\n  @Prop({\n    required: true,\n    type: String,\n  })\n  public namespace: string;\n\n  @Prop({\n    required: true,\n    type: String,\n    //TODO: check file path ..?\n  })\n  public path: string;\n\n  @Prop({\n    required: true,\n    type: String,\n  })\n  public fingerprint: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  public comments?: string;\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public hidden: boolean;\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  public tags?: { [key: string]: any } // eslint-disable-line\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  public acls?: { [key: string]: any } // eslint-disable-line\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  // eslint-disable-next-line\n  public customFields?: { [key: string]: any }\n}\n\nexport const FilestorageSchema = SchemaFactory.createForClass(Filestorage).index(\n  { namespace: 1, path: 1 },\n  { unique: true },\n);\n\nFilestorageSchema.virtual('filename').get(function (this: Filestorage): string {\n  return this.path.split('/').pop();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilestorageController.html":{"url":"controllers/FilestorageController.html","title":"controller - FilestorageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilestorageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/filestorage.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                filestorage\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPath\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPathRawData\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                readRawData\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FilestorageCreateDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiFileUploadDecorator(FileUploadDto, FilestorageCreateDto, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FilestorageCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        readPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPath(namespace: string, path: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('path')@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        readPathRawData\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPathRawData(res: Response, namespace: string, path: string, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('path/raw')@ApiReadResponseDecorator(FilestorageDto)@ApiQuery({name: 'mime', required: false, type: String})\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        readRawData\n                        \n                    \n                \n            \n            \n                \n                        \n                    readRawData(res: Response, _id: Types.ObjectId, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})/raw')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FilestorageDto)@ApiQuery({name: 'mime', required: false, type: String})\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions, hiddenQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hiddenQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FilestorageUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FilestorageUpdateDto, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FilestorageUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  ParseFilePipe,\n  Patch,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiParam, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  FilterSchema,\n  ObjectIdValidationPipe,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiFileUploadDecorator } from '~/_common/decorators/api-file-upload.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { FilestorageCreateDto, FilestorageDto, FilestorageUpdateDto, FileUploadDto } from './_dto/filestorage.dto';\nimport { TransformersFilestorageService } from './_services/transformers-filestorage.service';\nimport { FilestorageService } from './filestorage.service';\n\n@ApiTags('core/filestorage')\n@Controller('filestorage')\nexport class FilestorageController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    type: 1,\n    namespace: 1,\n    path: 1,\n    hidden: 1,\n  };\n\n  public constructor(\n    private readonly _service: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n  ) {\n    super();\n  }\n\n  @Post()\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiFileUploadDecorator(FileUploadDto, FilestorageCreateDto, FilestorageDto)\n  public async create(\n    @Res() res: Response,\n    @Body() body: FilestorageCreateDto,\n    @UploadedFile(new ParseFilePipe({ fileIsRequired: false })) file?: Express.Multer.File,\n  ): Promise {\n    const data = await this._service.create({ ...body, file });\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FilestorageDto, FilestorageController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n    @Query('hidden') hiddenQuery: string,\n  ): Promise {\n    const hidden = /true|on|yes|1/i.test(hiddenQuery);\n    const extraSearch = { hidden: { $ne: true } };\n    if (hidden) delete extraSearch['hidden'];\n\n    const [data, total] = await this._service.findAndCount(\n      {\n        ...extraSearch,\n        ...searchFilterSchema,\n      },\n      FilestorageController.projection,\n      searchFilterOptions,\n    );\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Get('path')\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async readPath(\n    @Query('namespace') namespace: string,\n    @Query('path') path: string,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findOne({ namespace, path });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})/raw')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FilestorageDto)\n  @ApiQuery({\n    name: 'mime',\n    required: false,\n    type: String,\n  })\n  public async readRawData(\n    @Res() res: Response,\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Query('mime') mime: string = '',\n  ): Promise {\n    const [data, stream, parent] = await this._service.findByIdWithRawData(_id);\n    await this.transformerService.transform(mime, res, data, stream, parent);\n  }\n\n  @Get('path/raw')\n  @ApiReadResponseDecorator(FilestorageDto)\n  @ApiQuery({\n    name: 'mime',\n    required: false,\n    type: String,\n  })\n  public async readPathRawData(\n    @Res() res: Response,\n    @Query('namespace') namespace: string,\n    @Query('path') path: string,\n    @Query('mime') mime: string = '',\n  ): Promise {\n    const [data, stream, parent] = await this._service.findOneWithRawData({ namespace, path });\n    await this.transformerService.transform(mime, res, data, stream, parent);\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FilestorageUpdateDto, FilestorageDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: FilestorageUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FilestorageDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageCreateDto.html":{"url":"classes/FilestorageCreateDto.html","title":"class - FilestorageCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                fingerprint\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                linkedTo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        linkedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMimeType()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, default: '/'})@Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, {message: 'Path must be a valid path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FsTypeList)@IsNotEmpty()@ApiProperty({enum: FsTypeList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageDto.html":{"url":"classes/FilestorageDto.html","title":"class - FilestorageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FilestorageCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                fingerprint\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                linkedTo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        linkedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMimeType()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, default: '/'})@Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, {message: 'Path must be a valid path'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FsTypeList)@IsNotEmpty()@ApiProperty({enum: FsTypeList, default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilestorageModule.html":{"url":"modules/FilestorageModule.html","title":"module - FilestorageModule","body":"\n                   \n\n\n\n\n    Modules\n    FilestorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilestorageModule\n\n\n\ncluster_FilestorageModule_exports\n\n\n\ncluster_FilestorageModule_providers\n\n\n\n\nFilestorageService \n\nFilestorageService \n\n\n\nTransformersFilestorageService \n\nTransformersFilestorageService \n\n\n\nFilestorageModule\n\nFilestorageModule\n\nFilestorageService  -->\n\nFilestorageModule->FilestorageService \n\n\n\nTransformersFilestorageService  -->\n\nFilestorageModule->TransformersFilestorageService \n\n\n\n\n\nFilestorageService\n\nFilestorageService\n\nFilestorageModule -->\n\nFilestorageService->FilestorageModule\n\n\n\n\n\nTransformersFilestorageService\n\nTransformersFilestorageService\n\nFilestorageModule -->\n\nTransformersFilestorageService->FilestorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/filestorage/filestorage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilestorageService\n                        \n                        \n                            TransformersFilestorageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilestorageController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilestorageService\n                        \n                        \n                            TransformersFilestorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Filestorage, FilestorageSchema } from './_schemas/filestorage.schema';\nimport { FilestorageService } from './filestorage.service';\nimport { FilestorageController } from './filestorage.controller';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Filestorage.name,\n        useFactory: () => FilestorageSchema,\n      },\n    ]),\n  ],\n  controllers: [FilestorageController],\n  providers: [FilestorageService, TransformersFilestorageService],\n  exports: [FilestorageService, TransformersFilestorageService],\n})\nexport class FilestorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageUpdateDto.html":{"url":"classes/FilestorageUpdateDto.html","title":"class - FilestorageUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(FilestorageCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForcePasswordDto.html":{"url":"classes/ForcePasswordDto.html","title":"class - ForcePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForcePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/force-password-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/force-password-dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyNewPassword', description: 'New password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/force-password-dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ForcePasswordDto {\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'User object id', type: String })\n  public id: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyNewPassword', description: 'New password', type: String })\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/form.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                redirectUrl\n                            \n                            \n                                    \n                                sections\n                            \n                            \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map, of: FormSectionPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FormTypes } from '../_enum/types';\nimport { FormSectionPart, FormSectionPartSchema } from './parts/section.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema({\n  collection: 'forms',\n  versionKey: false,\n})\nexport class Form extends AbstractSchema {\n  @Prop()\n  title: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  defaultValues: { [key: string]: MixedValue };\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({ type: Map, of: FormSectionPartSchema })\n  sections: Map;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  submitApiUrl: string;\n\n  @Prop()\n  redirectUrl: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FormController.html":{"url":"controllers/FormController.html","title":"controller - FormController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FormController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                form\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FormDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(FormDto, FormDto)@ApiResponse({type: FormDto})\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FormUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FormUpdateDto, FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { FormDto, FormUpdateDto } from './_dto/form.dto';\nimport { FormService } from './form.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport {\n  SearchFilterSchema,\n  FilterSchema,\n  SearchFilterOptions,\n  FilterOptions,\n  ObjectIdValidationPipe,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Types } from 'mongoose';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\n\n@ApiTags('forms')\n@Controller('form')\nexport class FormController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    title: 1,\n    description: 1,\n    type: 1,\n    sections: 1,\n    submitButtonText: 1,\n  };\n  constructor(private readonly _service: FormService) {\n    super();\n  }\n  @Post()\n  @ApiCreateDecorator(FormDto, FormDto)\n  @ApiResponse({ type: FormDto })\n  public async create(@Res() res: Response, @Body() body: FormDto) {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FormDto, FormController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      FormController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FormDto)\n  public async read(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.findById(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FormUpdateDto, FormDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: FormUpdateDto,\n    @Res() res: Response,\n  ) {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FormDto)\n  public async remove(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormCreateDto.html":{"url":"classes/FormCreateDto.html","title":"class - FormCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MetadataDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormDto.html":{"url":"classes/FormDto.html","title":"class - FormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FormCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldDto.html":{"url":"classes/FormFieldDto.html","title":"class - FormFieldDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/field.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                    \n                                col\n                            \n                            \n                                    \n                                    \n                                component\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                model-value\n                            \n                            \n                                    \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNumber, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nexport class FormFieldDto {\n  @IsString()\n  @ApiProperty()\n  component: string;\n\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsString()\n  @ApiProperty()\n  'model-value': string;\n\n  @IsNumber()\n  @ApiProperty()\n  row: number;\n\n  @IsNumber()\n  @ApiProperty()\n  col: number;\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDefault: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnCreate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnRead: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnUpdate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDelete: { [attr: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldPart.html":{"url":"classes/FormFieldPart.html","title":"class - FormFieldPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/field.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                col\n                            \n                            \n                                    \n                                component\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                model-value\n                            \n                            \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema()\nexport class FormFieldPart {\n  @Prop()\n  component: string;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  'model-value': string;\n\n  @Prop()\n  row: number;\n\n  @Prop()\n  col: number;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDefault: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnCreate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnRead: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnUpdate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDelete: { [attr: string]: MixedValue } | object;\n}\n\nexport const FormFieldPartSchema = SchemaFactory.createForClass(FormFieldPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/form/form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FormController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { FormSchema, Form } from './_schemas/form.schema';\nimport { FormService } from './form.service';\nimport { FormController } from './form.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Form.name,\n        useFactory: () => FormSchema,\n      },\n    ]),\n  ],\n  providers: [FormService],\n  controllers: [FormController],\n})\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionDto.html":{"url":"classes/FormSectionDto.html","title":"class - FormSectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/section.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fields\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@Type(undefined)@ApiProperty({type: FormFieldDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@IsOptional()@Type(undefined)@ApiProperty({type: () => FormSectionDto, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypes)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { FormFieldDto } from './field.dto';\nimport { FormTypes } from '../../_enum/types';\n\nexport class FormSectionDto {\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsEnum(FormTypes)\n  @ApiProperty()\n  type: FormTypes;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  icon?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  @Type(() => FormSectionDto)\n  @ApiProperty({ type: () => FormSectionDto, required: false })\n  sections?: { [sectionName: string]: FormSectionDto };\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @Type(() => FormFieldDto)\n  @ApiProperty({ type: FormFieldDto })\n  fields: { [fieldName: string]: FormFieldDto };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionPart.html":{"url":"classes/FormSectionPart.html","title":"class - FormSectionPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/section.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                fields\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { FormTypes } from '../../_enum/types';\nimport { FormFieldPart } from './field.part.schema';\n\n@Schema({ _id: false })\nexport class FormSectionPart {\n  @Prop({\n    type: String,\n  })\n  label: string;\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({\n    type: String,\n  })\n  icon?: string;\n\n  @Prop({\n    type: String,\n  })\n  description?: string;\n\n  @Prop({ type: Map })\n  sections?: Map;\n\n  @Prop({ type: Map })\n  fields: Map;\n}\n\nexport const FormSectionPartSchema = SchemaFactory.createForClass(FormSectionPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/core/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Form } from './_schemas/form.schema';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { ModuleRef } from '@nestjs/core';\n\n@Injectable()\nexport class FormService extends AbstractServiceSchema {\n  constructor(\n    @InjectModel(Form.name) protected _model: Model,\n    protected readonly moduleRef: ModuleRef,\n  ) {\n    super({ moduleRef });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormUpdateDto.html":{"url":"classes/FormUpdateDto.html","title":"class - FormUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(FormDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FusionDto.html":{"url":"classes/FusionDto.html","title":"class - FusionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FusionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/fusion.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id1\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'Id of the first identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/fusion.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'Id of the second identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/fusion.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class FusionDto {\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'Id of the first identity', type: String })\n  public id1: string;\n\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'Id of the second identity', type: String })\n  public id2: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubAsset.html":{"url":"interfaces/GithubAsset.html","title":"interface - GithubAsset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubAsset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app.controller.ts:31\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Query, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\nimport { ApiBearerAuth, ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport { LRUCache } from 'lru-cache';\n\ninterface GithubAuthor {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  user_view_type: string;\n  site_admin: boolean;\n}\n\ninterface GithubAsset {\n  [key: string]: any;\n}\n\ninterface GithubUpdate {\n  url: string;\n  assets_url: string;\n  upload_url: string;\n  html_url: string;\n  id: number;\n  author: GithubAuthor;\n  node_id: string;\n  tag_name: string;\n  target_commitish: string;\n  name: string;\n  draft: boolean;\n  prerelease: boolean;\n  created_at: string;\n  published_at: string;\n  assets: GithubAsset[];\n  tarball_url: string;\n  zipball_url: string;\n  body: string;\n}\n\nconst storage = new LRUCache({\n  ttl: 1000 * 60 * 60,\n  ttlAutopurge: true,\n});\n\n@Public()\n@Controller()\n@ApiBearerAuth()\n// @see https://stackoverflow.com/questions/67314808/how-to-disable-security-for-a-specific-controller-method-in-nestjs-swagger\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get API infos' })\n  @ApiResponse({ status: 200, description: 'Return API infos' })\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n\n  @ApiQuery({ name: 'current', required: false })\n  @Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n  public async update(\n    @Res() res: Response,\n    @Param('project') project?: string,\n    @Query('current') current?: string,\n  ): Promise {\n    let data = {};\n    // console.log('this.storage', storage.get(project))\n    if (storage.has(project)) {\n      this.logger.log(`Fetching ${project} tags from cache`);\n      data = storage.get(project) as GithubUpdate;\n    } else {\n      this.logger.log(`Fetching ${project} tags`);\n      const update = await fetch(`https://api.github.com/repos/Libertech-FR/${project}/releases/latest`, {\n        signal: AbortSignal.timeout(1000),\n      });\n      data = await update.json();\n      console.log('update', data)\n      storage.set(project, data);\n      // console.log('this.storage', storage.get(project))\n    }\n    // if (!Array.isArray(data)) {\n    //   throw new BadRequestException(`Invalid data from Github `);\n    // }\n    const lastVersion = data.tag_name.replace(/^v/, '');\n    const pkgInfo = this.appService.getInfo();\n    const currentVersion = current || pkgInfo.version;\n\n    if (project !== pkgInfo.name || current) {\n      if (!/[0-9]+\\.[0-9]+\\.[0-9]+/.test(current)) {\n        throw new BadRequestException('Invalid version for current parameter');\n      }\n    }\n\n    const [currentMajor, currentMinor, currentPatch] = lastVersion.split('.').map(Number);\n    const [lastMajor, lastMinor, lastPatch] = currentVersion.split('.').map(Number);\n    const updateAvailable = currentMajor > lastMajor || currentMinor > lastMinor || currentPatch > lastPatch;\n\n    return res.json({\n      data: {\n        project,\n        updateAvailable,\n        currentVersion,\n        lastVersion,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubAuthor.html":{"url":"interfaces/GithubAuthor.html","title":"interface - GithubAuthor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubAuthor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar_url\n                                        \n                                \n                                \n                                        \n                                            events_url\n                                        \n                                \n                                \n                                        \n                                            followers_url\n                                        \n                                \n                                \n                                        \n                                            following_url\n                                        \n                                \n                                \n                                        \n                                            gists_url\n                                        \n                                \n                                \n                                        \n                                            gravatar_id\n                                        \n                                \n                                \n                                        \n                                            html_url\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            node_id\n                                        \n                                \n                                \n                                        \n                                            organizations_url\n                                        \n                                \n                                \n                                        \n                                            received_events_url\n                                        \n                                \n                                \n                                        \n                                            repos_url\n                                        \n                                \n                                \n                                        \n                                            site_admin\n                                        \n                                \n                                \n                                        \n                                            starred_url\n                                        \n                                \n                                \n                                        \n                                            subscriptions_url\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            user_view_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        events_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gists_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gists_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gravatar_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gravatar_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizations_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizations_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        received_events_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        received_events_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        site_admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        site_admin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starred_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        starred_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscriptions_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscriptions_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_view_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_view_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Query, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\nimport { ApiBearerAuth, ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport { LRUCache } from 'lru-cache';\n\ninterface GithubAuthor {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  user_view_type: string;\n  site_admin: boolean;\n}\n\ninterface GithubAsset {\n  [key: string]: any;\n}\n\ninterface GithubUpdate {\n  url: string;\n  assets_url: string;\n  upload_url: string;\n  html_url: string;\n  id: number;\n  author: GithubAuthor;\n  node_id: string;\n  tag_name: string;\n  target_commitish: string;\n  name: string;\n  draft: boolean;\n  prerelease: boolean;\n  created_at: string;\n  published_at: string;\n  assets: GithubAsset[];\n  tarball_url: string;\n  zipball_url: string;\n  body: string;\n}\n\nconst storage = new LRUCache({\n  ttl: 1000 * 60 * 60,\n  ttlAutopurge: true,\n});\n\n@Public()\n@Controller()\n@ApiBearerAuth()\n// @see https://stackoverflow.com/questions/67314808/how-to-disable-security-for-a-specific-controller-method-in-nestjs-swagger\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get API infos' })\n  @ApiResponse({ status: 200, description: 'Return API infos' })\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n\n  @ApiQuery({ name: 'current', required: false })\n  @Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n  public async update(\n    @Res() res: Response,\n    @Param('project') project?: string,\n    @Query('current') current?: string,\n  ): Promise {\n    let data = {};\n    // console.log('this.storage', storage.get(project))\n    if (storage.has(project)) {\n      this.logger.log(`Fetching ${project} tags from cache`);\n      data = storage.get(project) as GithubUpdate;\n    } else {\n      this.logger.log(`Fetching ${project} tags`);\n      const update = await fetch(`https://api.github.com/repos/Libertech-FR/${project}/releases/latest`, {\n        signal: AbortSignal.timeout(1000),\n      });\n      data = await update.json();\n      console.log('update', data)\n      storage.set(project, data);\n      // console.log('this.storage', storage.get(project))\n    }\n    // if (!Array.isArray(data)) {\n    //   throw new BadRequestException(`Invalid data from Github `);\n    // }\n    const lastVersion = data.tag_name.replace(/^v/, '');\n    const pkgInfo = this.appService.getInfo();\n    const currentVersion = current || pkgInfo.version;\n\n    if (project !== pkgInfo.name || current) {\n      if (!/[0-9]+\\.[0-9]+\\.[0-9]+/.test(current)) {\n        throw new BadRequestException('Invalid version for current parameter');\n      }\n    }\n\n    const [currentMajor, currentMinor, currentPatch] = lastVersion.split('.').map(Number);\n    const [lastMajor, lastMinor, lastPatch] = currentVersion.split('.').map(Number);\n    const updateAvailable = currentMajor > lastMajor || currentMinor > lastMinor || currentPatch > lastPatch;\n\n    return res.json({\n      data: {\n        project,\n        updateAvailable,\n        currentVersion,\n        lastVersion,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubUpdate.html":{"url":"interfaces/GithubUpdate.html","title":"interface - GithubUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assets\n                                        \n                                \n                                \n                                        \n                                            assets_url\n                                        \n                                \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            draft\n                                        \n                                \n                                \n                                        \n                                            html_url\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            node_id\n                                        \n                                \n                                \n                                        \n                                            prerelease\n                                        \n                                \n                                \n                                        \n                                            published_at\n                                        \n                                \n                                \n                                        \n                                            tag_name\n                                        \n                                \n                                \n                                        \n                                            tarball_url\n                                        \n                                \n                                \n                                        \n                                            target_commitish\n                                        \n                                \n                                \n                                        \n                                            upload_url\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            zipball_url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assets:         GithubAsset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GithubAsset[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assets_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         GithubAuthor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GithubAuthor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prerelease\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prerelease:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        published_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        published_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tarball_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tarball_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target_commitish\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target_commitish:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upload_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        upload_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipball_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipball_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Query, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\nimport { ApiBearerAuth, ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport { LRUCache } from 'lru-cache';\n\ninterface GithubAuthor {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  user_view_type: string;\n  site_admin: boolean;\n}\n\ninterface GithubAsset {\n  [key: string]: any;\n}\n\ninterface GithubUpdate {\n  url: string;\n  assets_url: string;\n  upload_url: string;\n  html_url: string;\n  id: number;\n  author: GithubAuthor;\n  node_id: string;\n  tag_name: string;\n  target_commitish: string;\n  name: string;\n  draft: boolean;\n  prerelease: boolean;\n  created_at: string;\n  published_at: string;\n  assets: GithubAsset[];\n  tarball_url: string;\n  zipball_url: string;\n  body: string;\n}\n\nconst storage = new LRUCache({\n  ttl: 1000 * 60 * 60,\n  ttlAutopurge: true,\n});\n\n@Public()\n@Controller()\n@ApiBearerAuth()\n// @see https://stackoverflow.com/questions/67314808/how-to-disable-security-for-a-specific-controller-method-in-nestjs-swagger\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get API infos' })\n  @ApiResponse({ status: 200, description: 'Return API infos' })\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n\n  @ApiQuery({ name: 'current', required: false })\n  @Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n  public async update(\n    @Res() res: Response,\n    @Param('project') project?: string,\n    @Query('current') current?: string,\n  ): Promise {\n    let data = {};\n    // console.log('this.storage', storage.get(project))\n    if (storage.has(project)) {\n      this.logger.log(`Fetching ${project} tags from cache`);\n      data = storage.get(project) as GithubUpdate;\n    } else {\n      this.logger.log(`Fetching ${project} tags`);\n      const update = await fetch(`https://api.github.com/repos/Libertech-FR/${project}/releases/latest`, {\n        signal: AbortSignal.timeout(1000),\n      });\n      data = await update.json();\n      console.log('update', data)\n      storage.set(project, data);\n      // console.log('this.storage', storage.get(project))\n    }\n    // if (!Array.isArray(data)) {\n    //   throw new BadRequestException(`Invalid data from Github `);\n    // }\n    const lastVersion = data.tag_name.replace(/^v/, '');\n    const pkgInfo = this.appService.getInfo();\n    const currentVersion = current || pkgInfo.version;\n\n    if (project !== pkgInfo.name || current) {\n      if (!/[0-9]+\\.[0-9]+\\.[0-9]+/.test(current)) {\n        throw new BadRequestException('Invalid version for current parameter');\n      }\n    }\n\n    const [currentMajor, currentMinor, currentPatch] = lastVersion.split('.').map(Number);\n    const [lastMajor, lastMinor, lastPatch] = currentVersion.split('.').map(Number);\n    const updateAvailable = currentMajor > lastMajor || currentMinor > lastMinor || currentPatch > lastPatch;\n\n    return res.json({\n      data: {\n        project,\n        updateAvailable,\n        currentVersion,\n        lastVersion,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identities.html":{"url":"classes/Identities.html","title":"class - Identities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/identities.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                additionalFields\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                dataStatus\n                            \n                            \n                                    \n                                    Public\n                                deletedFlag\n                            \n                            \n                                    \n                                    Public\n                                destFusionId\n                            \n                            \n                                    \n                                    Public\n                                fingerprint\n                            \n                            \n                                    \n                                    Public\n                                inetOrgPerson\n                            \n                            \n                                    \n                                    Public\n                                initInfo\n                            \n                            \n                                    \n                                    Public\n                                initState\n                            \n                            \n                                    \n                                    Public\n                                lastBackendSync\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastSync\n                            \n                            \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    Public\n                                primaryEmployeeNumber\n                            \n                            \n                                    \n                                    Public\n                                srcFusionId\n                            \n                            \n                                    \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdditionalFieldsPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: AdditionalFieldsPartSchema, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        dataStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: DataStatusEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deletedFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        destFusionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPerson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: inetOrgPersonSchema, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        initInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitInfoPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: InitInfoPartSchema, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        initState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitStatesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: InitStatesEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastBackendSync\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastSync\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityLifecycle, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        primaryEmployeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        srcFusionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdentityLifecycle } from './../_enums/lifecycle.enum';\nimport { inetOrgPerson, inetOrgPersonSchema } from './_parts/inetOrgPerson.part';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentityState } from '../_enums/states.enum';\nimport { AdditionalFieldsPart, AdditionalFieldsPartSchema } from './_parts/additionalFields.part.schema';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { InitInfoPart, InitInfoPartSchema } from '~/management/identities/_schemas/_parts/init-info.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { AutoIncrementPlugin } from '~/_common/plugins/mongoose/auto-increment.plugin';\nimport { AutoIncrementPluginOptions } from '~/_common/plugins/mongoose/auto-increment.interface';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport type IdentitiesDocument = Identities & Document;\n\n@Schema({ versionKey: false })\nexport class Identities extends AbstractSchema {\n  @Prop({ type: Number, enum: IdentityState, default: IdentityState.UNKNOWN })\n  public state: IdentityState;\n\n  @Prop({ type: Number, enum: IdentityLifecycle, default: IdentityLifecycle.INACTIVE })\n  public lifecycle: IdentityLifecycle;\n\n  @Prop({ type: Number, enum: DataStatusEnum, default: DataStatusEnum.NOTINITIALIZED })\n  public dataStatus: DataStatusEnum;\n\n  @Prop({ type: Boolean, default: false })\n  public deletedFlag: boolean;\n\n  @Prop({ type: inetOrgPersonSchema, required: true })\n  public inetOrgPerson: inetOrgPerson;\n\n  @Prop({ type: AdditionalFieldsPartSchema, required: false, default: {} })\n  public additionalFields: AdditionalFieldsPart;\n\n  @Prop({ type: String })\n  public fingerprint: string;\n\n  @Prop({ type: Date })\n  public lastSync?: Date;\n\n  @Prop({ type: Date, default: null })\n  public lastBackendSync: Date;\n\n  @Prop({ type: Number, enum: InitStatesEnum, default: InitStatesEnum.NOSENT })\n  public initState: InitStatesEnum;\n\n  @Prop({ type: InitInfoPartSchema, default: {} })\n  public initInfo: InitInfoPart;\n\n  @Prop({\n    type: Object,\n  })\n  public customFields?: { [key: string]: MixedValue };\n\n  //pour les identités fusionnées ont met les deux identités sources\n  @Prop({ type: Types.ObjectId, required: false, default: null })\n  public srcFusionId: Types.ObjectId;\n\n  //pour les identités qui on servit à une fusion on met la destination (la nouvelle identité fusionnée)\n  @Prop({ type: Types.ObjectId, required: false })\n  public destFusionId: Types.ObjectId;\n\n  @Prop({ type: String, required: false, default: null })\n  public primaryEmployeeNumber: string;\n}\n\nexport const IdentitiesSchema = SchemaFactory.createForClass(Identities)\n  .plugin(AutoIncrementPlugin, {\n    incrementBy: 1,\n    field: 'inetOrgPerson.employeeNumber',\n    startAt: 1,\n    type: 'array',\n    rules: (ctx) => {\n      return ctx.inetOrgPerson.employeeType === 'LOCAL';\n    },\n  })\n  .index(\n    { 'inetOrgPerson.employeeNumber': 1, 'inetOrgPerson.employeeType': 1 },\n    { unique: true },\n  );\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesActivationController.html":{"url":"controllers/IdentitiesActivationController.html","title":"controller - IdentitiesActivationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesActivationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-activation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                activation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        activation\n                        \n                    \n                \n            \n            \n                \n                        \n                    activation(res: Response, body: ActivationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('activation')@ApiOperation({summary: 'active/desactive l identité'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-activation.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ActivationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {AbstractController} from '~/_common/abstracts/abstract.controller';\nimport {IdentitiesActivationService} from '~/management/identities/identities-activation.service';\nimport {ApiOperation, ApiResponse, ApiTags} from '@nestjs/swagger';\nimport {Body, Controller, HttpStatus, Post, Res} from '@nestjs/common';\nimport {Response} from 'express';\nimport {ActivationDto} from '~/management/identities/_dto/_parts/activation-dto';\nimport {DataStatusEnum} from \"~/management/identities/_enums/data-status\";\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesActivationController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesActivationService) {\n    super();\n  }\n\n  @Post('activation')\n  @ApiOperation({ summary: 'active/desactive l identité' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async activation(@Res() res: Response, @Body() body: ActivationDto): Promise {\n    try {\n      let param = DataStatusEnum.INACTIVE\n      if ( body.status === true){\n         param=DataStatusEnum.ACTIVE\n      }\n      const data = await this._service.activation(body.id, param);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesCreateDto.html":{"url":"classes/IdentitiesCreateDto.html","title":"class - IdentitiesCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IntersectionType(CustomFieldsDto, MetadataDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                dataStatus\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                initState\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        dataStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(DataStatusEnum)@ApiProperty({enum: DataStatusEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        initState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitStatesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(InitStatesEnum)@ApiProperty({enum: InitStatesEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesCrudController.html":{"url":"controllers/IdentitiesCrudController.html","title":"controller - IdentitiesCrudController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesCrudController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-crud.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                countAll\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getdeleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateStateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')@ApiOperation({summary: 'Compte le nombre d'identitées en fonctions des filtres fournis'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        countAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    countAll(res: Response, body: literal type, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('count-all')@ApiOperation({summary: 'Compte le nombre d'identitées en fonctions des filtres fournis via un body de counts'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: IdentitiesCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getdeleted\n                        \n                    \n                \n            \n            \n                \n                        \n                    getdeleted(res: Response, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getdeleted')@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:287\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:232\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateState(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})/state')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:247\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        updateStateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStateMany(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('state')@ApiOperation({summary: 'Met à jour l'état d'une ou plusieurs  en masse'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:268\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Res,\n} from '@nestjs/common';\nimport { ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  filterSchema,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Document, Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesCreateDto, IdentitiesDto, IdentitiesUpdateDto } from './_dto/identities.dto';\nimport { IdentityState } from './_enums/states.enum';\nimport { Identities } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { FilestorageService } from '~/core/filestorage/filestorage.service';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\nimport { IdentitiesCrudService } from '~/management/identities/identities-crud.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesCrudController extends AbstractController {\n  public constructor(\n    protected readonly _service: IdentitiesCrudService,\n    protected readonly _validation: IdentitiesValidationService,\n    protected readonly filestorage: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n    dataStatus: 1,\n  };\n\n  @Post()\n  @ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n  public async create(\n    @Res() res: Response,\n    @Body() body: IdentitiesCreateDto,\n  ): Promise;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    let statusCode = HttpStatus.CREATED;\n    let message = null;\n    if (!body.inetOrgPerson.employeeType) {\n      body.inetOrgPerson.employeeType = 'LOCAL';\n    }\n    if (!body.inetOrgPerson.cn) {\n      body.inetOrgPerson.cn = [\n        body.inetOrgPerson.sn?.toUpperCase(),\n        body.inetOrgPerson.givenName,\n      ].join(' ').trim();\n    }\n    if (!body.inetOrgPerson.displayName) {\n      body.inetOrgPerson.displayName = [\n        body.inetOrgPerson.givenName,\n        body.inetOrgPerson.sn?.toUpperCase(),\n      ].join(' ').trim();\n    }\n    const data = await this._service.create(body);\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if (data.toObject().state === IdentityState.TO_COMPLETE) {\n      statusCode = HttpStatus.ACCEPTED;\n      message = 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.';\n    }\n\n    return res.status(statusCode).json({\n      statusCode,\n      data,\n      message,\n    });\n  }\n  @Get('getdeleted')\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesCrudController.projection))\n  public async getdeleted(\n    @Res() res: Response,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise;\n        total?: number;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    const [data, total] = await this._service.trashAndCount(IdentitiesCrudController.projection, searchFilterOptions);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesCrudController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise;\n        total?: number;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      IdentitiesCrudController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(IdentitiesDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const identity = await this._service.findById(_id);\n      const data = this._service.transformNullsToString(JSON.parse(JSON.stringify(identity)));\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      console.log('error', error);\n      let validations = error.validations;\n      if (error instanceof BadRequestException) validations = error.getResponse();\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: validations,\n      });\n    }\n  }\n\n  @Get('count')\n  @ApiOperation({ summary: \"Compte le nombre d'identitées en fonctions des filtres fournis\" })\n  public async count(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise> {\n    const total = await this._service.count(searchFilterSchema, searchFilterOptions);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: total,\n    });\n  }\n\n  @Post('count-all')\n  @ApiOperation({ summary: \"Compte le nombre d'identitées en fonctions des filtres fournis via un body de counts\" })\n  public async countAll(\n    @Res() res: Response,\n    @Body() body: {\n      [key: string]: FilterSchema;\n    },\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise> {\n    const filters = Object.entries(body).reduce((acc, [key, value]) => {\n      acc[key] = filterSchema(value);\n      return acc;\n    }, {} as Record);\n\n    const data = await this._service.countAll(filters, searchFilterOptions);\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})/state')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async updateState(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const identity = await this._service.findById(_id);\n    if (!identity) {\n      throw new BadRequestException('Identity not found');\n    }\n    if (identity.state !== IdentityState.TO_VALIDATE) {\n      throw new BadRequestException(\"La validation de l'identité est déjà complétée.\");\n    }\n    const data = await this._service.updateState(_id, body.state);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch('state')\n  @ApiOperation({ summary: \"Met à jour l'état d'une ou plusieurs  en masse\" })\n  public async updateStateMany(\n    @Res() res: Response,\n    @Body()\n    body: {\n      originState: IdentityState;\n      targetState: IdentityState;\n      ids: Types.ObjectId[];\n    },\n  ): Promise {\n    const data = await this._service.updateStateMany(body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  //@Delete(':_id([0-9a-fA-F]{24})')\n  //@ApiParam({ name: '_id', type: String })\n  //@ApiDeletedResponseDecorator(IdentitiesDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.delete(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesDoublonController.html":{"url":"controllers/IdentitiesDoublonController.html","title":"controller - IdentitiesDoublonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesDoublonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-doublon.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                fusion\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getDoublons\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        fusion\n                        \n                    \n                \n            \n            \n                \n                        \n                    fusion(body: FusionDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('fusion')@ApiOperation({summary: 'fusionne les deux identités'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-doublon.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            FusionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getDoublons\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDoublons(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('duplicates')@ApiOperation({summary: 'Renvoie la liste des doublons supposés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-doublon.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesDto } from './_dto/identities.dto';\nimport { FusionDto } from '~/management/identities/_dto/fusion.dto';\nimport { IdentitiesDoublonService } from '~/management/identities/identities-doublon.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\n\nexport class IdentitiesDoublonController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesDoublonService) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n  };\n\n  @Get('duplicates')\n  @ApiOperation({ summary: 'Renvoie la liste des doublons supposés' })\n  public async getDoublons(@Res() res: Response): Promise {\n    const data = await this._service.searchDoubles();\n    const total = data.length;\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n      total,\n    });\n  }\n\n  @Post('fusion')\n  @ApiOperation({ summary: 'fusionne les deux identités' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async fusion(\n    @Body() body: FusionDto,\n    @Res() res: Response,\n  ): Promise {\n    const newId = await this._service.fusion(body.id1, body.id2);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      newId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesDto.html":{"url":"classes/IdentitiesDto.html","title":"class - IdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdentitiesCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                dataStatus\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                initState\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:59\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        dataStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(DataStatusEnum)@ApiProperty({enum: DataStatusEnum})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        initState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitStatesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(InitStatesEnum)@ApiProperty({enum: InitStatesEnum})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:17\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesForcePasswordController.html":{"url":"controllers/IdentitiesForcePasswordController.html","title":"controller - IdentitiesForcePasswordController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesForcePasswordController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-forcepassword.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                forcePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                needToChangePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        forcePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    forcePassword(res: Response, body: ForcePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forcepassword')@ApiOperation({summary: 'force le mot de passe de l identite'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-forcepassword.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ForcePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        needToChangePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    needToChangePassword(res: Response, body: NeedChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('needtochangepassword')@ApiOperation({summary: 'force l'utilisateur a changer son mot de passe'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-forcepassword.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            NeedChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { IdentitiesActivationService } from '~/management/identities/identities-activation.service';\nimport { ApiOperation, ApiResponse, ApiTags} from '@nestjs/swagger';\nimport { Body, Controller, HttpStatus, Post, Res} from '@nestjs/common';\nimport { Response } from 'express';\nimport { ActivationDto } from '~/management/identities/_dto/_parts/activation-dto';\nimport {ForcePasswordDto} from \"~/management/identities/_dto/force-password-dto\";\nimport {IdentitiesForcepasswordService} from \"~/management/identities/identities-forcepassword.service\";\nimport {NeedChangePasswordDto} from \"~/management/identities/_dto/need-change-password.dto\";\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesForcePasswordController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesForcepasswordService) {\n    super();\n  }\n  @Post('forcepassword')\n  @ApiOperation({ summary: 'force le mot de passe de l identite' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async forcePassword(@Res() res: Response, @Body() body: ForcePasswordDto): Promise {\n    try {\n      const data = await this._service.forcePassword(body.id, body.newPassword);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n      });\n    }\n  }\n  @Post('needtochangepassword')\n  @ApiOperation({ summary: \"force l'utilisateur a changer son mot de passe\" })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async needToChangePassword(@Res() res: Response, @Body() body: NeedChangePasswordDto): Promise {\n    try {\n      const data = await this._service.needToChangePassword(body.id)\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesJsonFormsController.html":{"url":"controllers/IdentitiesJsonFormsController.html","title":"controller - IdentitiesJsonFormsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesJsonFormsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/jsonforms\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                generate\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                generateAll\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                searchAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(res: Response, schema: string | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generate')@ApiOperation({summary: 'Génère un JSON Forms d'un schéma personnalisé'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                schema\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generateAll')@ApiOperation({summary: 'Génère tous les JSON Forms liés aux schémas personnalisés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema, mode: \"create\" | \"update\", body: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':schema')@ApiOperation({summary: 'Récupère un JSON Forms d'un schéma personnalisé'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mode\n                                            \n                                                        \"create\" | \"update\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Liste les JSON Forms de schémas personnalisés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Query, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { Response } from 'express';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management/identities/jsonforms')\n@Controller('management/identities/jsonforms')\nexport class IdentitiesJsonFormsController extends AbstractController {\n  public constructor(private readonly _service: IdentitiesJsonformsService) {\n    super();\n  }\n\n  @Post('generateAll')\n  @ApiOperation({ summary: 'Génère tous les JSON Forms liés aux schémas personnalisés' })\n  public async generateAll(@Res() res: Response): Promise {\n    const result = await this._service.generateAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Post('generate')\n  @ApiOperation({ summary: \"Génère un JSON Forms d'un schéma personnalisé\" })\n  public async generate(@Res() res: Response, @Body('schema') schema: string | null = null): Promise {\n    const result = await this._service.generate({ schema, path: './configs/identities/jsonforms' });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Liste les JSON Forms de schémas personnalisés' })\n  public async searchAll(@Res() res: Response): Promise {\n    const result = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  // @Get(':schema')\n  @Post(':schema')\n  @ApiOperation({ summary: \"Récupère un JSON Forms d'un schéma personnalisé\" })\n  public async search(\n    @Res() res: Response,\n    @Param('schema') schema,\n    @Query('mode') mode: 'create' | 'update',\n    @Body() body: Partial,\n  ): Promise {\n    const [filePath, result] = await this._service.findOne(schema, { mode, employeeType: body?.employeeType });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n      file: filePath,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesJsonformsModule.html":{"url":"modules/IdentitiesJsonformsModule.html","title":"module - IdentitiesJsonformsModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesJsonformsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesJsonFormsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { IdentitiesJsonFormsController } from './identities.jsonforms.controller';\n\n@Module({\n  controllers: [IdentitiesJsonFormsController],\n  providers: [IdentitiesJsonformsService],\n  exports: [IdentitiesJsonformsService],\n})\nexport class IdentitiesJsonformsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesJsonformsService.html":{"url":"injectables/IdentitiesJsonformsService.html","title":"injectable - IdentitiesJsonformsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesJsonformsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                generate\n                            \n                            \n                                    Public\n                                    Async\n                                generateAll\n                            \n                            \n                                    Public\n                                onApplicationBootstrap\n                            \n                            \n                                    Private\n                                resolveJsonFormPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema: string, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveJsonFormPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveJsonFormPath(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnApplicationBootstrap, OnModuleInit } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { parse, stringify } from 'yaml';\nimport { existsSync, readFileSync, writeFileSync, readdirSync, readdir } from 'fs';\n// import Ajv from 'ajv';\nimport { ValidationConfigException } from '~/_common/errors/ValidationException';\n\n@Injectable()\nexport class IdentitiesJsonformsService extends AbstractService implements OnApplicationBootstrap {\n  // private ajv: Ajv = new Ajv({ allErrors: true });\n  // private validateSchema;\n\n  public constructor() {\n    super();\n  }\n\n  public onApplicationBootstrap(): void {\n    let files = [];\n    let defaultFiles = [];\n\n    this.logger.log('Initializing identities jsonforms service');\n\n    try {\n      files = readdirSync(`${process.cwd()}/configs/identities/jsonforms`);\n      defaultFiles = readdirSync(`${process.cwd()}/defaults/identities/jsonforms`);\n    } catch (error) {\n      this.logger.error('Error reading identities jsonforms', error.message, error.stack);\n    }\n\n    for (const file of defaultFiles) {\n      if (!files.includes(file)) {\n        try {\n          const defaultFile = readFileSync(`${process.cwd()}/defaults/identities/jsonforms/${file}`, 'utf-8');\n          writeFileSync(`${process.cwd()}/configs/identities/jsonforms/${file}`, defaultFile);\n\n          this.logger.warn(`Copied default jsonform file: ${file}`);\n        } catch (error) {\n          this.logger.error(`Error copying default jsonform file: ${file}`, error.message, error.stack);\n        }\n      }\n    }\n\n    this.logger.log('Identities jsonforms service initialized');\n  }\n\n  private resolveJsonFormPath(schema: string): string | null {\n    if (!schema.endsWith('.yml')) schema += '.yml';\n    const hardConfigPath = `./src/management/identities/jsonforms/_config/${schema}`;\n    const dynamicConfigPath = `./configs/identities/jsonforms/${schema}`;\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    return null;\n  }\n\n  public async generate({ schema, path }): Promise {\n    if (schema) {\n      console.log(`Generating jsonforms for schema: ${schema}`);\n      if (!schema.endsWith('.yml')) schema += '.yml';\n      const filePath = `${path}/${schema}`;\n      console.log(`File path: ${filePath}`);\n      if (!existsSync(filePath)) {\n        console.log(`File not found: ${filePath}`);\n        const message = `File not found: ${filePath}`;\n        throw new ValidationConfigException({ message });\n      }\n\n      const jsonSchema = parse(readFileSync(filePath, 'utf-8'));\n\n      // const jsonForm = {\n      //   type: 'VerticalLayout',\n      //   elements: Object.keys(jsonSchema.properties).map((key) => {\n      //     return {\n      //       type: 'Control',\n      //       label: key,\n      //       scope: `#/properties/${key}`,\n      //       options: {\n      //         required: jsonSchema.required && jsonSchema.required.includes(key),\n      //       },\n      //     };\n      //   }),\n      // };\n\n      const jsonForm = {\n        type: 'Group',\n        label: schema,\n        elements: Object.keys(jsonSchema.properties)\n          .reduce((acc, key, index) => {\n            const groupIndex = Math.floor(index / 3); // Determine the current group based on the index\n            if (!acc[groupIndex]) {\n              acc[groupIndex] = {\n                // Initialize a new HorizontalLayout group if it doesn't exist\n                type: 'HorizontalLayout',\n                elements: [],\n              };\n            }\n\n            acc[groupIndex].elements.push({\n              // Add the current element to its corresponding group\n              type: 'Control',\n              label: key,\n              scope: `#/properties/${key}`,\n              options: {\n                required: jsonSchema.required && jsonSchema.required.includes(key),\n                showUnfocusedDescription: false,\n              },\n            });\n\n            return acc;\n          }, [])\n          .map((group) => group), // Flatten the structure\n      };\n      if (!schema.endsWith('.ui.yml')) schema = schema.replace('.yml', '.ui.yml');\n      const jsonFormPath = `${path.replace('validations', 'jsonforms')}/${schema}`;\n      console.log(`Writing jsonform to: ${jsonFormPath}`);\n      writeFileSync(`${jsonFormPath}`, stringify(jsonForm));\n      return jsonForm;\n    }\n  }\n\n  public async generateAll(): Promise {\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ schema: file, path: hardConfigPath }));\n    } catch (error) {\n      console.log(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n        schema: file,\n        path: dynamicConfigPath,\n      }));\n    } catch (error) {\n      console.log(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    console.log('Generating jsonforms for all schemas');\n    console.log('Hard config files:', hardConfigFiles);\n    console.log('Dynamic config files:', dynamicConfigFiles);\n\n    const files = [...hardConfigFiles, ...dynamicConfigFiles].filter((file) => file.schema.endsWith('.yml'));\n    for (const file of files) {\n      this.generate(file);\n    }\n    return files.length;\n  }\n\n  public async findAll(): Promise {\n    const hardConfigPath = './src/management/identities/jsonforms/_config';\n    const dynamicConfigPath = './configs/identities/jsonforms';\n\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ file, path: hardConfigPath }));\n    } catch (error) {\n      console.log(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({ file, path: dynamicConfigPath }));\n    } catch (error) {\n      console.log(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    const files = [...hardConfigFiles, ...dynamicConfigFiles];\n    const result = [];\n    for (const fileObj of files) {\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.ui.yml', '');\n      result.push({ [key]: data });\n    }\n    return [result, files.length];\n  }\n\n  public async findOne(\n    schema: string,\n    options?: { mode?: string; employeeType?: string }\n  ): Promise {\n    const { mode = 'create', employeeType = '' } = options || {};\n    if (schema.endsWith('.yml')) schema = schema.replace('.yml', '');\n\n    const filePaths = [\n      `${schema}.${mode}.${employeeType.toLowerCase()}.ui`,\n      `${schema}.${mode}.ui`,\n      `${schema}.${employeeType.toLowerCase()}.ui`,\n      `${schema}.ui`,\n    ];\n\n    let finalPath = null;\n    const filePath = filePaths.find((path) => {\n      const resolved = this.resolveJsonFormPath(path)\n      if (!resolved) return null;\n      finalPath = resolved;\n\n      return resolved;\n    });\n\n    if (!filePath) {\n      throw new ValidationConfigException({ message: `File not found: ${schema}.ui.yml` });\n    }\n\n    return [filePath, parse(readFileSync(finalPath, 'utf-8'))];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesModule.html":{"url":"modules/IdentitiesModule.html","title":"module - IdentitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\ncluster_IdentitiesModule_imports\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesModule -->\n\nAgentsModule->IdentitiesModule\n\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\nIdentitiesModule -->\n\nFilestorageModule->IdentitiesModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nIdentitiesModule -->\n\nSettingsModule->IdentitiesModule\n\n\n\n\n\nIdentitiesCrudService \n\nIdentitiesCrudService \n\nIdentitiesCrudService  -->\n\nIdentitiesModule->IdentitiesCrudService \n\n\n\n\n\nIdentitiesForcepasswordService\n\nIdentitiesForcepasswordService\n\nIdentitiesModule -->\n\nIdentitiesForcepasswordService->IdentitiesModule\n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/identities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesForcepasswordService\n                        \n                        \n                            IdentitiesJsonformsService\n                        \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesCrudController\n                        \n                        \n                            IdentitiesUpsertController\n                        \n                        \n                            IdentitiesPhotoController\n                        \n                        \n                            IdentitiesDoublonController\n                        \n                        \n                            IdentitiesActivationController\n                        \n                        \n                            IdentitiesForcePasswordController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            FilestorageModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesCrudService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                        \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/identities.module.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { forwardRef, MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Identities, IdentitiesSchema } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { IdentitiesValidationModule } from './validations/identities.validation.module';\nimport { IdentitiesJsonformsService } from './jsonforms/identities.jsonforms.service';\nimport { IdentitiesJsonformsModule } from './jsonforms/identities.jsonforms.module';\nimport { APP_FILTER } from '@nestjs/core';\nimport { IdentitiesValidationFilter } from '~/_common/filters/identities-validation.filter';\nimport { FilestorageModule } from '~/core/filestorage/filestorage.module';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { IdentitiesUpsertService } from '~/management/identities/identities-upsert.service';\nimport { IdentitiesCrudService } from '~/management/identities/identities-crud.service';\nimport { IdentitiesDoublonService } from '~/management/identities/identities-doublon.service';\nimport { IdentitiesCrudController } from '~/management/identities/identities-crud.controller';\nimport { IdentitiesUpsertController } from '~/management/identities/identities-upsert.controller';\nimport { IdentitiesPhotoController } from '~/management/identities/identities-photo.controller';\nimport { IdentitiesActivationController } from '~/management/identities/identities-activation.controller';\nimport { IdentitiesActivationService } from '~/management/identities/identities-activation.service';\nimport { IdentitiesDoublonController } from '~/management/identities/identities-doublon.controller';\nimport {IdentitiesForcePasswordController} from \"~/management/identities/identities-forcepassword.controller\";\nimport {IdentitiesForcepasswordService} from \"~/management/identities/identities-forcepassword.service\";\nimport {SettingsModule} from \"~/settings/settings.module\";\nimport { EnsureIdentitiesIndexMiddleware } from './_middlewares/ensure-identities-index.middleware';\nimport { AgentsModule } from '~/core/agents/agents.module';\n\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Identities.name,\n        imports: [IdentitiesValidationModule, IdentitiesJsonformsModule],\n        inject: [IdentitiesValidationService, IdentitiesJsonformsService],\n        useFactory: () => IdentitiesSchema,\n      },\n    ]),\n    FilestorageModule,\n    forwardRef(() => BackendsModule),\n    SettingsModule,\n    AgentsModule,\n  ],\n  providers: [\n    IdentitiesUpsertService,\n    IdentitiesCrudService,\n    IdentitiesDoublonService,\n    IdentitiesValidationService,\n    IdentitiesActivationService,\n    {\n      provide: APP_FILTER,\n      useClass: IdentitiesValidationFilter,\n    },\n    IdentitiesJsonformsService,\n    IdentitiesForcepasswordService\n  ],\n  controllers: [\n    IdentitiesCrudController,\n    IdentitiesUpsertController,\n    IdentitiesPhotoController,\n    IdentitiesDoublonController,\n    IdentitiesActivationController,\n    IdentitiesForcePasswordController\n  ],\n  exports: [IdentitiesCrudService],\n})\nexport class IdentitiesModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer.apply(EnsureIdentitiesIndexMiddleware).forRoutes('/management/identities/*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesPhotoController.html":{"url":"controllers/IdentitiesPhotoController.html","title":"controller - IdentitiesPhotoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesPhotoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-photo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPhotoRaw\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsertInetOrgPersonJpegPhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        readPhotoRaw\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPhotoRaw(res: Response, searchFilterSchema: FilterSchema, id: string, key: string, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('photo/raw')@ApiReadResponseDecorator(FilestorageDto)@ApiQuery({required: false, name: 'filters', style: 'deepObject', explode: true, type: 'object', schema: undefined, description: 'Filtres de recherche, voir la documentation de chaque endpoint pour plus de détails'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-photo.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        upsertInetOrgPersonJpegPhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertInetOrgPersonJpegPhoto(res: Response, body: Partial, searchFilterSchema: FilterSchema, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert/photo')@UseInterceptors(undefined)@ApiFileUploadDecorator(FileUploadDto, undefined, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-photo.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  ParseFilePipe,\n  Post,\n  Query,\n  Res,\n  UnauthorizedException,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiQuery, ApiTags, getSchemaPath, PartialType } from '@nestjs/swagger';\nimport { FilterSchema, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesDto } from './_dto/identities.dto';\nimport { Identities } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiFileUploadDecorator } from '~/_common/decorators/api-file-upload.decorator';\nimport { FilestorageCreateDto, FilestorageDto, FileUploadDto } from '~/core/filestorage/_dto/filestorage.dto';\nimport { FilestorageService } from '~/core/filestorage/filestorage.service';\nimport { FsType } from '~/core/filestorage/_enum/fs-type.enum';\nimport { join } from 'node:path';\nimport { omit } from 'radash';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\nimport { PaginatedFilterDto } from '~/_common/dto/paginated-filter.dto';\nimport { IdentitiesCrudService } from '~/management/identities/identities-crud.service';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { hash } from 'crypto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesPhotoController extends AbstractController {\n  public constructor(\n    protected readonly _service: IdentitiesCrudService,\n    protected readonly _validation: IdentitiesValidationService,\n    protected readonly filestorage: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n    private agentsService: AgentsService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n  };\n\n  @Post('upsert/photo')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiFileUploadDecorator(FileUploadDto, PartialType(FilestorageCreateDto), FilestorageDto)\n  public async upsertInetOrgPersonJpegPhoto(\n    @Res() res: Response,\n    @Body() body: Partial,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @UploadedFile(new ParseFilePipe({ fileIsRequired: false })) file?: Express.Multer.File,\n  ): Promise {\n    const identity = await this._service.findOne(searchFilterSchema);\n    const filter = {\n      namespace: 'identities',\n      path: join(\n        [identity.inetOrgPerson?.employeeType, identity.inetOrgPerson?.employeeNumber, 'jpegPhoto.jpg'].join('/'),\n      ),\n    };\n\n    const data = await this.filestorage.upsertFile(filter, {\n      ...filter,\n      type: FsType.FILE,\n      file,\n      ...omit(body, ['namespace', 'path', 'type', 'file'] as any),\n    });\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Public()\n  @Get('photo/raw')\n  @ApiReadResponseDecorator(FilestorageDto)\n  @ApiQuery({\n    required: false,\n    name: 'filters',\n    style: 'deepObject',\n    explode: true,\n    type: 'object',\n    schema: {\n      $ref: getSchemaPath(PaginatedFilterDto),\n    },\n    description: 'Filtres de recherche, voir la documentation de chaque endpoint pour plus de détails',\n  })\n  public async readPhotoRaw(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @Query('id') id: string,\n    @Query('key') key: string,\n    @Query('mime') mime: string = '',\n  ): Promise {\n    if (!id || !key) throw new UnauthorizedException();\n    const user = await this.agentsService.findById(id);\n    if (!user) throw new UnauthorizedException();\n    if (key !== hash('sha256', user.security.secretKey)) throw new UnauthorizedException();\n\n    const identity = await this._service.findOne(searchFilterSchema);\n    const [data, stream, parent] = await this.filestorage.findOneWithRawData({\n      namespace: 'identities',\n      path: join(\n        [identity.inetOrgPerson?.employeeType, identity.inetOrgPerson?.employeeNumber, 'jpegPhoto.jpg'].join('/'),\n      ),\n    });\n    await this.transformerService.transform(mime, res, data, stream, parent);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpdateDto.html":{"url":"classes/IdentitiesUpdateDto.html","title":"class - IdentitiesUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesUpsertController.html":{"url":"controllers/IdentitiesUpsertController.html","title":"controller - IdentitiesUpsertController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesUpsertController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-upsert.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsert\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsertInetOrgPersonJpegPhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(res: Response, body: IdentitiesUpsertDto, filtersQuery: literal type[], forceString: string, errorOnNotFound: string, upsert: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert')@ApiCreateDecorator(IdentitiesUpsertDto, IdentitiesDto, {operationOptions: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-upsert.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpsertDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filtersQuery\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                        \n                                                forceString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                errorOnNotFound\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'false'\n                                            \n\n                                        \n                                        \n                                                upsert\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'true'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        upsertInetOrgPersonJpegPhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertInetOrgPersonJpegPhoto(res: Response, body: Partial, searchFilterSchema: FilterSchema, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert/photo')@UseInterceptors(undefined)@ApiFileUploadDecorator(FileUploadDto, undefined, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-upsert.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  HttpStatus,\n  ParseFilePipe,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiTags, PartialType } from '@nestjs/swagger';\nimport { FilterSchema, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Document, Types, isValidObjectId } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesDto, IdentitiesUpsertDto } from './_dto/identities.dto';\nimport { IdentityState } from './_enums/states.enum';\nimport { Identities } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiFileUploadDecorator } from '~/_common/decorators/api-file-upload.decorator';\nimport { FilestorageCreateDto, FilestorageDto, FileUploadDto } from '~/core/filestorage/_dto/filestorage.dto';\nimport { FilestorageService } from '~/core/filestorage/filestorage.service';\nimport { FsType } from '~/core/filestorage/_enum/fs-type.enum';\nimport { join } from 'node:path';\nimport { omit } from 'radash';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\nimport { IdentitiesUpsertService } from '~/management/identities/identities-upsert.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesUpsertController extends AbstractController {\n  public constructor(\n    protected readonly _service: IdentitiesUpsertService,\n    protected readonly _validation: IdentitiesValidationService,\n    protected readonly filestorage: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n  };\n\n  @Post('upsert')\n  @ApiCreateDecorator(IdentitiesUpsertDto, IdentitiesDto, {\n    operationOptions: {\n      summary: 'Importe ou met à jour une  en fonction des filtres fournis',\n    },\n  })\n  public async upsert(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesUpsertDto,\n    @Query('filters')\n    filtersQuery: {\n      [key: string]: string;\n    }[] = [],\n    @Query('force') forceString: string,\n    @Query('errorOnNotFound') errorOnNotFound: string = 'false',\n    @Query('upsert') upsert: string = 'true',\n  ): Promise;\n      message?: string;\n      validations?: MixedValue;\n    }>\n  > {\n    const force = /true|on|yes|1/i.test(forceString);\n    if (force) {\n      this.logger.warn('Upserting with force mode enabled.');\n    }\n    const filters = {};\n    if (filtersQuery.length === 0) {\n      throw new BadRequestException('Missing filters array');\n    }\n    for (const [key, filter] of Object.entries(filtersQuery)) {\n      filters[key] = isValidObjectId(filter) ? new Types.ObjectId(`${filter}`) : filter;\n    }\n\n    //TODO: check if the filters are valid and if the body is equal to filters\n\n    const [code, data] = await this._service.upsertWithFingerprint(filters, body, {\n      errorOnNotFound: /true|on|yes|1/i.test(errorOnNotFound),\n      upsert: /true|on|yes|1/i.test(upsert),\n    }, { force });\n\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as unknown as Identities).state === IdentityState.TO_COMPLETE) {\n      return res.status(HttpStatus.ACCEPTED).json({\n        statusCode: HttpStatus.ACCEPTED,\n        message: 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.',\n        data,\n      });\n    }\n\n    return res.status(code).json({\n      statusCode: code,\n      message: code === HttpStatus.OK ? 'Identitée mise à jour avec succès.' : 'Identitée créée avec succès.',\n      data,\n    });\n  }\n\n  @Post('upsert/photo')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiFileUploadDecorator(FileUploadDto, PartialType(FilestorageCreateDto), FilestorageDto)\n  public async upsertInetOrgPersonJpegPhoto(\n    @Res() res: Response,\n    @Body() body: Partial,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @UploadedFile(new ParseFilePipe({ fileIsRequired: false })) file?: Express.Multer.File,\n  ): Promise {\n    const identity = await this._service.findOne(searchFilterSchema);\n    const filter = {\n      namespace: 'identities',\n      path: join(\n        [identity.inetOrgPerson?.employeeType, identity.inetOrgPerson?.employeeNumber[0], 'jpegPhoto.jpg'].join('/'),\n      ),\n    };\n\n    const data = await this.filestorage.upsertFile(filter, {\n      ...filter,\n      type: FsType.FILE,\n      file,\n      ...omit(body, ['namespace', 'path', 'type', 'file'] as any),\n    });\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpsertDto.html":{"url":"classes/IdentitiesUpsertDto.html","title":"class - IdentitiesUpsertDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpsertDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesUpdateDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                $setOnInsert\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        $setOnInsert\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesValidationController.html":{"url":"controllers/IdentitiesValidationController.html","title":"controller - IdentitiesValidationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesValidationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/validation\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    Async\n                                searchAll\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':schema')@ApiOperation({summary: 'Récupère un schéma personnalisé d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Liste les schémas personnalisés d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(res: Response, body: AdditionalFieldsPart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Effectue la validation des schémas personnalisés d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AdditionalFieldsPart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport { IdentitiesValidationService } from './identities.validation.service';\n\n@ApiTags('management/identities/validation')\n@Controller('management/identities/validation')\nexport class IdentitiesValidationController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesValidationService) {\n    super();\n  }\n\n  @Post()\n  @ApiOperation({ summary: \"Effectue la validation des schémas personnalisés d'identités\" })\n  public async validate(\n    @Res()\n    res: Response,\n    @Body() body: AdditionalFieldsPart,\n  ): Promise\n  > {\n    try {\n      const data = await this._service.validate(body);\n      return res.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Get()\n  @ApiOperation({ summary: \"Liste les schémas personnalisés d'identités\" })\n  async searchAll(@Res() res: Response): Promise {\n    const [result] = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get(':schema')\n  @ApiOperation({ summary: \"Récupère un schéma personnalisé d'identités\" })\n  async search(@Res() res: Response, @Param('schema') schema): Promise {\n    const result = await this._service.findOne(schema);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesValidationFilter.html":{"url":"classes/IdentitiesValidationFilter.html","title":"class - IdentitiesValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/identities-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/identities-validation.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            ValidationException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { ValidationException } from '~/_common/errors/ValidationException';\nimport { Response } from 'express';\n\n@Catch(ValidationException)\nexport class IdentitiesValidationFilter implements ExceptionFilter {\n  catch(exception: ValidationException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n\n    Logger.debug(exception['message'], 'IdentitiesValidationFilter');\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception.message,\n      validations: exception.getValidations(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesValidationModule.html":{"url":"modules/IdentitiesValidationModule.html","title":"module - IdentitiesValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_IdentitiesValidationModule_providers\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesValidationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesValidationService } from './identities.validation.service';\nimport { IdentitiesValidationController } from './identities.validation.controller';\n\n@Module({\n  controllers: [IdentitiesValidationController],\n  providers: [IdentitiesValidationService],\n  exports: [IdentitiesValidationService],\n})\nexport class IdentitiesValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesValidationService.html":{"url":"injectables/IdentitiesValidationService.html","title":"injectable - IdentitiesValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for validating identities.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                validateSchema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkAndCreateObjectClasses\n                            \n                            \n                                    Private\n                                    Async\n                                createAttributes\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                onApplicationBootstrap\n                            \n                            \n                                    Private\n                                resolveConfigPath\n                            \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Public\n                                    Async\n                                transformAttribute\n                            \n                            \n                                    Private\n                                    Async\n                                transformNumber\n                            \n                            \n                                    Private\n                                    Async\n                                translateAjv\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                            \n                                    Public\n                                    Async\n                                validateAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/validations/identities.validation.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        checkAndCreateObjectClasses\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAndCreateObjectClasses(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:100\n                        \n                    \n\n\n            \n                \n                        check objectclasses and add missing keys\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createAttributes\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAttributes(key: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:374\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:429\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveConfigPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveConfigPath(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(data: AdditionalFieldsPart | additionalFieldsPartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        AdditionalFieldsPart | additionalFieldsPartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transformAttribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformAttribute(key: string, attribute: any, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Transform data following schema validation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                attribute\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        transformNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformNumber(value)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:214\n                        \n                    \n\n\n            \n                \n                        transform string in number if it is possible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        translateAjv\n                        \n                    \n                \n            \n            \n                \n                        \n                    translateAjv(messages)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:447\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messages\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(data: AdditionalFieldsPart | additionalFieldsPartDto, callException: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:230\n                        \n                    \n\n\n            \n                \n                        Validates additional fields for identities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        AdditionalFieldsPart | additionalFieldsPartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe additional fields data to validate.\n\n\n                                            \n                                        \n                                        \n                                                callException\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves if validation succeeds, or rejects with validation errors.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validateAttribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAttribute(key: string, attribute: any, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:309\n                        \n                    \n\n\n            \n                \n                        Validates a single attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the attribute to validate.\n\n\n                                            \n                                        \n                                        \n                                                attribute\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe attribute value to validate.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with an error message if validation fails, otherwise null.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Ajv\n\n                    \n                \n                \n                    \n                        Default value : new Ajv({ allErrors: true })\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateSchema\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger, OnApplicationBootstrap } from '@nestjs/common';\nimport { parse } from 'yaml';\nimport { existsSync, readFileSync, readdirSync, writeFileSync } from 'fs';\nimport { ConfigObjectSchemaDTO } from './_dto/config.dto';\nimport { diff } from 'radash';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\nimport localize from 'ajv-i18n';\nimport validSchema from './_config/validSchema';\nimport ajvErrors from 'ajv-errors';\nimport { ValidationConfigException, ValidationSchemaException } from '~/_common/errors/ValidationException';\nimport { additionalFieldsPartDto } from '../_dto/_parts/additionalFields.dto';\nimport {ConfigService} from \"@nestjs/config\";\n\n/**\n * Service responsible for validating identities.\n */\n@Injectable()\nexport class IdentitiesValidationService implements OnApplicationBootstrap {\n  private ajv: Ajv = new Ajv({ allErrors: true });\n  private validateSchema;\n  private logger: Logger;\n\n  public constructor(protected config: ConfigService) {\n    addFormats(this.ajv);\n    ajvErrors(this.ajv);\n    this.ajv.addFormat('number', /^\\d*$/);\n    this.validateSchema = this.ajv.compile(validSchema);\n    this.logger = new Logger(IdentitiesValidationService.name);\n\n  }\n\n  public onApplicationBootstrap(): void {\n    let files = [];\n    let defaultFiles = [];\n\n    this.logger.log('Initializing identities validations service');\n\n    try {\n      files = readdirSync(`${process.cwd()}/configs/identities/validations`);\n      defaultFiles = readdirSync(`${process.cwd()}/defaults/identities/validations`);\n    } catch (error) {\n      this.logger.error('Error reading identities validations files', error.message, error.stack);\n    }\n\n    for (const file of defaultFiles) {\n      if (!files.includes(file)) {\n        try {\n          const defaultFile = readFileSync(`${process.cwd()}/defaults/identities/validations/${file}`, 'utf-8');\n          writeFileSync(`${process.cwd()}/configs/identities/validations/${file}`, defaultFile);\n          this.logger.warn(`Copied default validation file: ${file}`);\n        } catch (error) {\n          this.logger.error(`Error copying default validation file: ${file}`, error.message, error.stack);\n        }\n      }\n    }\n\n    this.logger.log('Identities validations service initialized');\n  }\n\n  private resolveConfigPath(key: string): string | null {\n    //lecture deja dans le repertoire /validation pour les schemas non modifiables\n    const hardConfigPath = `./validation/${key}.yml`;\n    const dynamicConfigPath = `./configs/identities/validations/${key}.yml`;\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    return null;\n  }\n\n  public async transform(data: AdditionalFieldsPart | additionalFieldsPartDto): Promise {\n    if (!data.objectClasses) {\n      data.objectClasses = [];\n    }\n    if (!data.attributes) {\n      data.attributes = {};\n    }\n    data.validations = {};\n\n    const objectClasses = data.objectClasses || [];\n    const attributes = data.attributes || {};\n    const attributesKeys = Object.keys(attributes);\n    const validations = {};\n    //test si il y a les attributs sans attributes\n    await this.checkAndCreateObjectClasses(data);\n    for (const key of attributesKeys) {\n      await this.transformAttribute(key, attributes[key], attributes);\n    }\n    return data\n  }\n\n  /**\n   * check objectclasses and add missing keys\n   * @param data\n   */\n  public async checkAndCreateObjectClasses(data) {\n    const objectClasses = data.objectClasses || [];\n    const attributes = data.attributes || {};\n    const attributesKeys = Object.keys(attributes);\n    for (const objectclass of objectClasses) {\n      if (!attributesKeys.includes(objectclass)) {\n        this.logger.log(objectclass + \" attribute not found creating\");\n        await this.createAttributes(objectclass, data);\n      }\n    }\n  }\n  private async createAttributes(key: string, data: any) {\n\n    // Validate the key to prevent prototype pollution\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      this.logger.error('Invalid key: ' + key);\n      throw new BadRequestException('Invalid key: ' + key);\n    }\n    const path = this.resolveConfigPath(key);\n    if (path === null) {\n      this.logger.error('schema for ' + key + ' does not exist');\n      throw new BadRequestException('schema for ' + key + ' does not exist');\n    }\n    const schema: any = parse(readFileSync(path, 'utf8'));\n    //creation de la clé\n    data.attributes[key] = {}\n    for (const [index, def] of Object.entries(schema?.properties || {})) {\n      switch ((def as any).type) {\n        case 'array':\n          data.attributes[key][index] = [];\n          break;\n\n        case 'object':\n          data.attributes[key][index] = {};\n          break;\n\n        case 'number':\n          data.attributes[key][index] = 0;\n          break;\n\n        default:\n          data.attributes[key][index] = '';\n          break;\n      }\n    }\n  }\n  /**\n   * Transform data following schema validation\n   * @param key\n   * @param attribute\n   * @param data\n   */\n  public async transformAttribute(key: string, attribute: any, data: any) {\n\n    const path = this.resolveConfigPath(key);\n    if (path === null) {\n      this.logger.error('schema for ' + key + ' does not exist');\n      throw new BadRequestException('schema for ' + key + ' does not exist');\n    }\n    const schema: any = parse(readFileSync(path, 'utf8'));\n    this.logger.debug(`Additionalfields object transformation: ${JSON.stringify(data[key])}`);\n    for (const [index, def] of Object.entries(schema?.properties || {})) {\n      switch ((def as any).type) {\n        case 'array':\n          if (typeof data[key][index] === 'undefined' || data[key][index] === null) {\n            data[key][index] = [];\n          }\n          if (!(data[key][index] instanceof Array)) {\n            data[key][index] = [data[key][index]];\n          }\n          if (typeof def['items'] !== 'undefined') {\n            //test si toutes les valeurs sont du bon type\n            for (const elems in data[key][index]) {\n              if (typeof data[key][index][elems] !== def['items']['type']) {\n                switch (def['items']['type']) {\n                  case 'string':\n                    data[key][index][elems] = String(data[key][index][elems]);\n                    break;\n                  case 'number':\n                    data[key][index][elems] = await this.transformNumber(data[key][index][elems])\n                    break;\n                }\n              }\n            }\n          }\n          break;\n        case 'number':\n          if (typeof data[key][index] === 'undefined' || data[key][index] === null) {\n            data[key][index] = 0;\n          }\n          if (typeof data[key][index] !== 'number') {\n            //on ne convertit pas si la chaine est vide\n            if (typeof data[key][index] === 'string' && data[key][index] !== \"\") {\n              data[key][index] = await this.transformNumber(data[key][index])\n            }\n          }\n          break;\n        case 'string':\n          if (typeof data[key][index] === 'undefined' || data[key][index] === null) {\n            data[key][index] = \"\";\n          }\n          if (typeof data[key][index] !== 'string') {\n            data[key][index] = String(data[key][index]);\n          }\n          break;\n      }\n    }\n  }\n\n  /**\n   * transform string in number if it is possible\n   * @param value\n   * @private\n   */\n  private async transformNumber(value) {\n    if (typeof value === 'string') {\n      const tr = parseFloat(value)\n      if (!isNaN(tr)) {\n        return tr\n      } else {\n        return 0\n      }\n    }\n    return value\n  }\n  /**\n   * Validates additional fields for identities.\n   * @param data - The additional fields data to validate.\n   * @returns A promise that resolves if validation succeeds, or rejects with validation errors.\n   */\n  public async validate(data: AdditionalFieldsPart | additionalFieldsPartDto,callException:boolean=true): Promise {\n    if (!data.objectClasses) {\n      data.objectClasses = [];\n    }\n    if (!data.attributes) {\n      data.attributes = {};\n    }\n    data.validations = {};\n\n    const objectClasses = data.objectClasses || [];\n    const attributes = data.attributes || {};\n    const attributesKeys = Object.keys(attributes);\n    const validations = {};\n    let reject = false;\n\n    // Check for missing attributes\n    for (const attribute of diff(objectClasses, attributesKeys)) {\n      validations[attribute] = `Attribut '${attribute}' manquant dans les champs additionnels`;\n      reject = true;\n    }\n\n    for (const key of attributesKeys) {\n      // Check for invalid object classes\n      if (!objectClasses.includes(key)) {\n        validations[key] =\n          `${key} n'est pas une classe d'objet valide dans ce contexte, les classes d'objets valides sont: ${objectClasses.join(\n            ', ',\n          )}'`;\n        reject = true;\n        continue;\n      }\n\n      // Check for missing schema files\n      const path = this.resolveConfigPath(key);\n      if (!existsSync(path)) {\n        validations['message'] = `Fichier de config '${key}.yml' introuvable`;\n        throw new ValidationConfigException(validations);\n      }\n\n      // Check for invalid schema\n      this.logger.verbose(`Validating schema ${key}.yml`);\n      const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n      if (!this.validateSchema(schema)) {\n        validations['message'] = `Schema ${key}.yml invalide: ${this.ajv.errorsText(this.validateSchema.errors)}`;\n        throw new ValidationConfigException(validations);\n      }\n      //verification des required, il faut que l'entree soit presente dans les proprietes\n      if (schema.hasOwnProperty('required')) {\n        for (const required of schema['required']) {\n          if (!schema['properties'].hasOwnProperty(required)) {\n            validations['message'] = `Schema ${key}.yml invalide : required : ${required} without property`;\n            throw new ValidationConfigException(validations);\n          }\n        }\n      }\n    }\n    // Validate each attribute\n    for (const key of attributesKeys) {\n      const validationError = await this.validateAttribute(key, attributes[key], attributes);\n      if (validationError) {\n        validations[key] = validationError;\n        reject = true;\n      } else {\n        delete validations[key];\n      }\n    }\n\n    if (reject && callException) {\n      throw new ValidationSchemaException({ validations });\n    }\n    return Promise.resolve({ message: 'Validation succeeded' });\n  }\n\n  /**\n   * Validates a single attribute.\n   * @param key - The key of the attribute to validate.\n   * @param attribute - The attribute value to validate.\n   * @returns A promise that resolves with an error message if validation fails, otherwise null.\n   */\n  public async validateAttribute(key: string, attribute: any, data: any): Promise {\n    const path = this.resolveConfigPath(key);\n    if (path === null) {\n      this.logger.error('schema for ' + key + ' does not exist');\n      throw new BadRequestException('schema for ' + key + ' does not exist');\n    }\n    const schema: any = parse(readFileSync(path, 'utf8'));\n    // mise de min length et minItems dans les champs requis\n    if (schema.hasOwnProperty('required')) {\n      for (const required of schema['required']) {\n        switch(schema['properties'][required]['type']){\n          case 'array':\n            if (!schema['properties'][required]['minItems']){\n              schema['properties'][required]['minItems']=1\n            }\n            break;\n          case 'string':\n            if (!schema['properties'][required]['minLength']){\n              schema['properties'][required]['minLength']=1\n            }\n            break;\n        }\n      }\n    }\n    for (const [index, def] of Object.entries(schema?.properties || {})) {\n      if (typeof data[key][index] === 'undefined' || data[key][index] === null) {\n        switch ((def as any).type) {\n          case 'array':\n            data[key][index] = [];\n            break;\n\n          case 'object':\n            data[key][index] = {};\n            break;\n\n          case 'number':\n            data[key][index] = 0;\n            break;\n\n          default:\n            data[key][index] = '';\n            break;\n        }\n      }\n    }\n\n    this.logger.debug(`Additionalfields object validation: ${JSON.stringify(data[key])}`);\n    //limitation de la taille du data pour le pb de deny of service de ajv\n    //voir (https://ajv.js.org/security.html)\n    if (Object.keys(data[key]).length > 500) {\n      this.logger.error('Request too large');\n      throw new BadRequestException('Request too large');\n    }\n    const ok = await this.ajv.validate(schema, data[key]);\n    if (ok === false) {\n      const retErrors = {};\n      await this.translateAjv(this.ajv.errors)\n      for (const err of this.ajv.errors) {\n        retErrors[err['instancePath'].substring(1)] = err['instancePath'].substring(1) + ' ' + err['message']\n      }\n      return (retErrors)\n    }\n    return null\n  }\n\n  public async findAll(): Promise {\n    this.logger.debug(['findAll', JSON.stringify(Object.values({ ...arguments }))].join(' '));\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n    // Retrieve files from each directory and tag them with their source\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({\n        file,\n        path: hardConfigPath,\n        source: 'hardConfig',\n      }));\n    } catch (error) {\n      this.logger.error(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n        file,\n        path: dynamicConfigPath,\n        source: 'dynamicConfig',\n      }));\n    } catch (error) {\n      this.logger.error(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    // const files = [...hardConfigFiles, ...dynamicConfigFiles];\n    const filesMap = new Map();\n\n    for (const target of dynamicConfigFiles) {\n      filesMap.set(target.file, target);\n    }\n\n    for (const target of hardConfigFiles) {\n      if (filesMap.has(target.file)) {\n        continue;\n      }\n      filesMap.set(target.file, target);\n    }\n\n    const files = Array.from(filesMap.values());\n\n    const result = [];\n    for (const fileObj of files) {\n      if (/.yml$/.test(fileObj.file) === false) continue;\n\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.yml', '');\n      result.push({ [key]: data, source: fileObj.source, name: key });\n    }\n    return [result, files.length];\n  }\n\n  public async findOne(schema): Promise {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '));\n    let filePath = '';\n    if (schema === 'inetorgperson') {\n      filePath = './validation/inetorgperson.yml';\n      if (!existsSync(filePath)) {\n        const message = `File not found /validation/inetorgperson.yml`;\n        throw new ValidationConfigException({ message });\n      }\n    } else {\n      filePath = this.resolveConfigPath(schema);\n      if (!existsSync(filePath)) {\n        const message = `File not found: ${filePath}`;\n        throw new ValidationConfigException({ message });\n      }\n    }\n    return parse(readFileSync(filePath, 'utf-8'));\n  }\n  private async translateAjv(messages){\n    switch(this.config.get('application.lang')){\n      case 'en':\n        break\n      case 'fr':\n      case 'fr_FR.UTF-8':\n      case 'fr_FR':\n        localize.fr(messages)\n        break\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAccountDto.html":{"url":"classes/InitAccountDto.html","title":"class - InitAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uid', description: 'paul.smith'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-account.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class InitAccountDto {\n  @ApiProperty({ example: 'uid', description: 'paul.smith' })\n  @IsString()\n  public uid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitInfoPart.html":{"url":"classes/InitInfoPart.html","title":"class - InitInfoPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitInfoPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/init-info.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                initDate\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                sentDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        initDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/init-info.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        sentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/init-info.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class InitInfoPart extends Document {\n  @Prop({ type: Date })\n  public sentDate?: Date;\n\n  @Prop({ type: Date })\n  public initDate?: Date;\n}\nexport const InitInfoPartSchema = SchemaFactory.createForClass(InitInfoPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitManyDto.html":{"url":"classes/InitManyDto.html","title":"class - InitManyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitManyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-many.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Envoie la demande d init à plusieurs identitées. Id des identities'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-many.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class InitManyDto {\n  @ApiProperty({ description: 'Envoie la demande d init à plusieurs identitées. Id des identities' })\n  @IsArray()\n  public ids: Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitResetDto.html":{"url":"classes/InitResetDto.html","title":"class - InitResetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitResetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-reset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: 0, description: '0 = send by mail, 1 = send by SMS'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-reset.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-reset.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class InitResetDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User id' })\n  public uid: string;\n\n  @IsNumber()\n  @ApiProperty({ example: 0, description: '0 = send by mail, 1 = send by SMS' })\n  public type: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLogOptions.html":{"url":"interfaces/InternalLogOptions.html","title":"interface - InternalLogOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLogOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     Request\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Request\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         InternalLogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InternalLogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InternalLogger.html":{"url":"injectables/InternalLogger.html","title":"injectable - InternalLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InternalLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                connection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commonLogDb\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                    Public\n                                    Async\n                                initialize\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_options?: InternalLoggerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/internal.logger.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _options\n                                                  \n                                                        \n                                                                        InternalLoggerOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commonLogDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    commonLogDb(payload: literal type, options: InternalLogOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InternalLogOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/core/logger/internal.logger.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLoggerOptions.html":{"url":"interfaces/InternalLoggerOptions.html","title":"interface - InternalLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLoggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     LogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Jobs.html":{"url":"classes/Jobs.html","title":"class - Jobs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Jobs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/jobs.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                concernedTo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                finishedAt\n                            \n                            \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                params\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                processedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                result\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ConcernedToPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        finishedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        processedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JobState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: JobState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { JobState } from '../_enums/state.enum';\nimport { ConcernedToPart, ConcernedToPartSchema } from './_parts/concerned-to.parts.schema';\n\nexport type JobsDocument = Jobs & Document;\n\n@Schema({ versionKey: false })\nexport class Jobs extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public jobId: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public action: string;\n\n  @Prop({\n    type: ConcernedToPartSchema,\n  })\n  public concernedTo?: ConcernedToPart;\n\n  @Prop({ type: Types.ObjectId })\n  public task?: Types.ObjectId;\n\n  @Prop({ type: String })\n  public comment?: string;\n\n  @Prop({ type: Object, default: {} })\n  public params?: object;\n\n  @Prop({ type: Object, default: {} })\n  public result?: object;\n\n  @Prop({ type: Date })\n  public processedAt?: Date;\n\n  @Prop({ type: Date })\n  public finishedAt?: Date;\n\n  @Prop({ type: Number, enum: JobState, default: JobState.CREATED })\n  state: JobState;\n}\n\nexport const JobsSchema = SchemaFactory.createForClass(Jobs);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(JobsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/jobs/jobs.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, req: Request, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/jobs/jobs.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus, Param, Req, Res } from '@nestjs/common';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Request, Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { JobsDto } from './_dto/jobs.dto';\nimport { JobsService } from './jobs.service';\n\n@ApiTags('core/jobs')\n@Controller('jobs')\nexport class JobsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    jobId: 1,\n    action: 1,\n    concernedTo: 1,\n    metadata: 1,\n    params: 1,\n    result: 1,\n    state: 1,\n  };\n\n  public constructor(private readonly _service: JobsService) {\n    super();\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(JobsDto, JobsController.projection))\n  public async search(\n    @Res() res: Response,\n    @Req() req: Request,\n    @SearchFilterSchema({ unsafe: true }) searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    // console.log('req', req.query)\n\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      JobsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(JobsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsCreateDto.html":{"url":"classes/JobsCreateDto.html","title":"class - JobsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                concernedTo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                params\n                            \n                            \n                                    \n                                    \n                                    Public\n                                result\n                            \n                            \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    Public\n                                task\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: ConcernedToPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {IsMongoId, IsNotEmpty, IsNumber, IsObject, IsString, ValidateNested} from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\nimport {JobState} from \"~/core/jobs/_enums/state.enum\";\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n\n  @IsNumber()\n  @ApiProperty()\n  public state: number;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsDto.html":{"url":"classes/JobsDto.html","title":"class - JobsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            JobsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                concernedTo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                params\n                            \n                            \n                                    \n                                    \n                                    Public\n                                result\n                            \n                            \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    Public\n                                task\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: ConcernedToPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {IsMongoId, IsNotEmpty, IsNumber, IsObject, IsString, ValidateNested} from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\nimport {JobState} from \"~/core/jobs/_enums/state.enum\";\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n\n  @IsNumber()\n  @ApiProperty()\n  public state: number;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService \n\nJobsService \n\n\n\nJobsModule\n\nJobsModule\n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Jobs, JobsSchema } from './_schemas/jobs.schema';\nimport { JobsController } from './jobs.controller';\nimport { JobsService } from './jobs.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Jobs.name,\n        useFactory: () => JobsSchema,\n      },\n    ]),\n  ],\n  providers: [JobsService],\n  controllers: [JobsController],\n  exports: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/jobs/jobs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Jobs } from './_schemas/jobs.schema';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class JobsService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Jobs.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsUpdateDto.html":{"url":"classes/JobsUpdateDto.html","title":"class - JobsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(JobsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {IsMongoId, IsNotEmpty, IsNumber, IsObject, IsString, ValidateNested} from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\nimport {JobState} from \"~/core/jobs/_enums/state.enum\";\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n\n  @IsNumber()\n  @ApiProperty()\n  public state: number;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, payload, done: VerifiedCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/jwt.strategy.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifiedCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(JwtStrategy.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/_strategies/jwt.strategy.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy, VerifiedCallback } from 'passport-jwt';\nimport { AuthService } from '../auth.service';\nimport { Request } from 'express';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { JwtPayload } from 'jsonwebtoken';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  protected logger: Logger = new Logger(JwtStrategy.name);\n\n  constructor(\n    private readonly auth: AuthService,\n    config: ConfigService,\n  ) {\n    super({\n      secretOrKey: `${config.get('jwt.options.secret')}`,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      passReqToCallback: true,\n    });\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  public async validate(\n    _: Request,\n    payload: JwtPayload & { identity: AgentType },\n    done: VerifiedCallback,\n  ): Promise {\n    this.logger.verbose(`Atempt to authenticate with JTI: `);\n    if (!payload?.identity) return done(new UnauthorizedException(), false);\n    const user = await this.auth.verifyIdentity(payload);\n\n    if (!user) return done(new ForbiddenException(), false);\n    return done(null, payload?.identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Keyrings.html":{"url":"classes/Keyrings.html","title":"class - Keyrings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Keyrings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_schemas/keyrings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type KeyringsDocument = Keyrings & Document;\n\n@Schema({ versionKey: false })\nexport class Keyrings extends AbstractSchema {\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public name: string;\n\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public token: string;\n\n  @Prop({\n    type: [String],\n    default: ['0.0.0.0/0'],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n}\n\nexport const KeyringsSchema = SchemaFactory.createForClass(Keyrings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCommand.html":{"url":"classes/KeyringsCommand.html","title":"class - KeyringsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KeyringsController.html":{"url":"controllers/KeyringsController.html","title":"controller - KeyringsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KeyringsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                keyrings\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: KeyringsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Types } from 'mongoose';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { Response } from 'express';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport {\n  FilterOptions,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\nimport { KeyringsCreateDto, KeyringsDto } from '~/core/keyrings/_dto/keyrings.dto';\n\n@ApiTags('core/keyrings')\n@Controller('keyrings')\nexport class KeyringsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    token: 0,\n    // allowedNetworks: 1,\n    // suspendedAt: 1,\n  };\n\n  public constructor(private readonly _service: KeyringsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n  public async create(@Res() res: Response, @Body() body: KeyringsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(KeyringsDto, KeyringsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      KeyringsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(KeyringsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      token: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(KeyringsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateCommand.html":{"url":"classes/KeyringsCreateCommand.html","title":"class - KeyringsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, keyringsService: KeyringsService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateDto.html":{"url":"classes/KeyringsCreateDto.html","title":"class - KeyringsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateQuestions.html":{"url":"classes/KeyringsCreateQuestions.html","title":"class - KeyringsCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseName\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseName(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Name ?', name: 'name'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsDto.html":{"url":"classes/KeyringsDto.html","title":"class - KeyringsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            KeyringsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeyringsModule.html":{"url":"modules/KeyringsModule.html","title":"module - KeyringsModule","body":"\n                   \n\n\n\n\n    Modules\n    KeyringsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_providers\n\n\n\ncluster_KeyringsModule_exports\n\n\n\n\nKeyringsService \n\nKeyringsService \n\n\n\nKeyringsModule\n\nKeyringsModule\n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/keyrings/keyrings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KeyringsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { KeyringsSchema, Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from './keyrings.service';\nimport { KeyringsController } from './keyrings.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Keyrings.name,\n        useFactory: () => KeyringsSchema,\n      },\n    ]),\n  ],\n  providers: [KeyringsService],\n  controllers: [KeyringsController],\n  exports: [KeyringsService],\n})\nexport class KeyringsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyringsService.html":{"url":"injectables/KeyringsService.html","title":"injectable - KeyringsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeyringsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/keyrings/keyrings.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: KeyringsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:16\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { Model, SaveOptions, Document } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { KeyringsCreateDto } from './_dto/keyrings.dto';\nimport { randomBytes } from 'node:crypto';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\n@Injectable()\nexport class KeyringsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Keyrings.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: KeyringsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    const token = randomBytes(64).toString('hex');\n    return await super.create(\n      {\n        ...data,\n        token,\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, username: string, password: string, done: (error: any,user: Express.User | ,options: IVerifyOptions) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/local.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { IVerifyOptions, Strategy } from 'passport-local';\nimport { Request } from 'express';\nimport { ExcludeAgentType, AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  public constructor(private readonly auth: AuthService) {\n    super({\n      passReqToCallback: true,\n    });\n  }\n\n  //TODO: change any\n  public async validate(\n    _: Request,\n    username: string,\n    password: string,\n    // eslint-disable-next-line\n    done: (error: any, user?: Express.User | false, options?: IVerifyOptions) => void,\n  ): Promise {\n    Logger.verbose(`Try to authenticate user : ${username}`, LocalStrategy.name);\n    const user = await this.auth.authenticateWithLocal(username, password);\n    // console.log(user);\n    if (!user) done(new UnauthorizedException(), false);\n    // if (user.state.current !== IdentityState.ACTIVE) done(new ForbiddenException(), false)\n    done(null, omit(user.toObject(), ExcludeAgentType) as AgentType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/logger.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                concerned\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                context\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concerned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:36\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:29\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: DataPartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { DataPart, DataPartSchema } from './_parts/data.part.schema';\n\nexport const DEFAULT_CONTEXT = 'default';\nexport type LoggerDocument = Logger & Document;\n\n@Schema({ versionKey: false })\nexport class Logger extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public level: string;\n\n  @Prop({\n    type: DataPartSchema,\n    required: true,\n    default: {},\n  })\n  public data: DataPart;\n\n  /**\n   * @description The context of the log message.\n   * @example 'identity'\n   */\n  @Prop({ type: String })\n  public context?: string;\n\n  /**\n   * @description The concerned document in collection of the log message.\n   * @example '5f7b1b3b7f7b1b3b7f7b1b3b'\n   */\n  @Prop({ type: String })\n  public concerned?: string;\n}\n\nexport const LoggerSchema = SchemaFactory.createForClass(Logger).pre(\n  'save',\n  function (this: Logger, next: () => void): void {\n    this.context = this.context.toLocaleLowerCase() || DEFAULT_CONTEXT;\n    this.concerned = this.concerned.toLocaleLowerCase() || null;\n    next();\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoggerController.html":{"url":"controllers/LoggerController.html","title":"controller - LoggerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoggerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logger\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { LoggerService } from './logger.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('logger')\nexport class LoggerController extends AbstractController {\n  constructor(private readonly _service: LoggerService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService\n\nLoggerService\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoggerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LoggerSchema, Logger } from './_schemas/logger.schema';\nimport { LoggerService } from './logger.service';\nimport { LoggerController } from './logger.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Logger.name,\n        useFactory: () => LoggerSchema,\n      },\n    ]),\n  ],\n  providers: [LoggerService],\n  controllers: [LoggerController],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Logger } from './_schemas/logger.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class LoggerService extends AbstractServiceSchema {\n  constructor(@InjectModel(Logger.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailSettingsDto.html":{"url":"classes/MailSettingsDto.html","title":"class - MailSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_dto/mail.settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                host\n                            \n                            \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    Public\n                                sender\n                            \n                            \n                                    \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'smtp://localhost:25'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl({protocols: undefined, require_protocol: true})@ApiProperty({example: 'smtp://smscsim.smpp.org:25', description: 'Serveur SMTP', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'myPassword', description: 'password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        sender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({example: 'no-reply@mondomaine', description: 'Emetteur', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'monlogin@mondomaine', description: 'username', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, IsUrl } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MailSettingsDto {\n  @IsUrl({ protocols: ['smtp', 'smtps'], require_protocol: true })\n  @ApiProperty({ example: 'smtp://smscsim.smpp.org:25', description: 'Serveur SMTP', type: String })\n  public host: string = 'smtp://localhost:25';\n\n  @IsEmail()\n  @ApiProperty({ example: 'no-reply@mondomaine', description: 'Emetteur', type: String })\n  public sender: string;\n\n  @IsString()\n  @ApiProperty({ example: 'monlogin@mondomaine', description: 'username', type: String })\n  public username: string;\n\n  @IsString()\n  @ApiProperty({ example: 'myPassword', description: 'password', type: String })\n  public password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailadmController.html":{"url":"controllers/MailadmController.html","title":"controller - MailadmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailadmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/mailadm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get')@ApiOperation({summary: 'Retourne les parametres pour l envoi Mail'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/mailadm.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(body: MailSettingsDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('set')@ApiOperation({summary: 'Enregistre les parametres'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/mailadm.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            MailSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { MailadmService } from '~/settings/mailadm.service';\nimport { MailSettingsDto } from '~/settings/_dto/mail.settings.dto';\n\n@Controller('settings/mail')\n@ApiTags('settings')\nexport class MailadmController {\n  public constructor(private mailadmService: MailadmService) {}\n\n  @Get('get')\n  @ApiOperation({ summary: 'Retourne les parametres pour l envoi Mail' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async get(@Res() res: Response): Promise {\n    const data = await this.mailadmService.getParams();\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Post('set')\n  @ApiOperation({ summary: 'Enregistre les parametres' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async set(@Body() body: MailSettingsDto, @Res() res: Response): Promise {\n    const data = await this.mailadmService.setParams(body);\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailadmService.html":{"url":"injectables/MailadmService.html","title":"injectable - MailadmService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailadmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/mailadm.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractSettingsService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                settingsName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                defaultValues\n                            \n                            \n                                    Public\n                                    Async\n                                getParams\n                            \n                            \n                                    Public\n                                    Async\n                                setParams\n                            \n                            \n                                    Protected\n                                    Async\n                                getParameter\n                            \n                            \n                                    Protected\n                                    Async\n                                setParameter\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        defaultValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultValues()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractSettingsService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractSettingsService:16\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/mailadm.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        setParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParams(params: MailSettingsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/mailadm.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            MailSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameter(settingName: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractSettingsService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractSettingsService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        setParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParameter(settingName: string, parameters: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractSettingsService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractSettingsService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        settingsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractSettingsService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractSettingsService:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AbstractSettingsService } from '~/settings/_abstracts/abstract-settings.service';\nimport { Injectable } from '@nestjs/common';\nimport { MailSettingsDto } from '~/settings/_dto/mail.settings.dto';\n\n@Injectable()\nexport class MailadmService extends AbstractSettingsService {\n  public async getParams(): Promise {\n    const data = await this.getParameter('smtpServer');\n    return data;\n  }\n\n  public async setParams(params: MailSettingsDto): Promise {\n    return await this.setParameter('smtpServer', params);\n  }\n\n  protected async defaultValues(): Promise {\n    return new MailSettingsDto();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManagementController.html":{"url":"controllers/ManagementController.html","title":"controller - ManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management')\n@Controller('management')\nexport class ManagementController {\n  public constructor(private readonly _service: ManagementService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                        \n                            PasswdModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/management.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ManagementController } from './management.controller';\nimport { RouterModule } from '@nestjs/core';\nimport { IdentitiesModule } from './identities/identities.module';\nimport { PasswdModule } from './passwd/passwd.module';\n\n@Module({\n  imports: [IdentitiesModule, PasswdModule],\n  providers: [ManagementService],\n  controllers: [ManagementController],\n})\nexport class ManagementModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'management',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagementService.html":{"url":"injectables/ManagementService.html","title":"injectable - ManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/management.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ManagementService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataDto.html":{"url":"classes/MetadataDto.html","title":"class - MetadataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/metadata.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/metadata.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { MetadataPartDto } from './parts/metadata.part.dto';\n\nexport class MetadataDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => MetadataPartDto)\n  @ApiProperty({ type: MetadataPartDto })\n  public metadata?: MetadataPartDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPart.html":{"url":"classes/MetadataPart.html","title":"class - MetadataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    Public\n                                createdBy\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class MetadataPart extends Document {\n  @Prop({ type: String })\n  public createdBy: string;\n\n  @Prop({ type: Date })\n  public createdAt: Date;\n\n  @Prop({ type: String })\n  public lastUpdatedBy: string;\n\n  @Prop({ type: Date })\n  public lastUpdatedAt: Date;\n}\n\nexport const MetadataPartSchema = SchemaFactory.createForClass(MetadataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPartDto.html":{"url":"classes/MetadataPartDto.html","title":"class - MetadataPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/parts/metadata.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsDate } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MetadataPartDto {\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public createdBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public createdAt?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MigrationsModule.html":{"url":"modules/MigrationsModule.html","title":"module - MigrationsModule","body":"\n                   \n\n\n\n\n    Modules\n    MigrationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MigrationsModule\n\n\n\ncluster_MigrationsModule_providers\n\n\n\n\nMigrationsService\n\nMigrationsService\n\n\n\nMigrationsModule\n\nMigrationsModule\n\nMigrationsModule -->\n\nMigrationsService->MigrationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/migrations/migrations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MigrationsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { MigrationsService } from './migrations.service';\n\n@Module({\n  providers: [\n    MigrationsService,\n  ],\n})\nexport class MigrationsModule {\n  public static async register(): Promise {\n    return {\n      module: this,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MigrationsService.html":{"url":"injectables/MigrationsService.html","title":"injectable - MigrationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MigrationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/migrations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                lockLocation\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Protected\n                                migrations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _checkMigrationLockFile\n                            \n                            \n                                    Private\n                                    Async\n                                _executeMigrations\n                            \n                            \n                                    Private\n                                    Async\n                                _loadMigrationsFiles\n                            \n                            \n                                    Private\n                                    Async\n                                _writeMigrationLockFile\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(mongo: Connection, moduleRef: ModuleRef, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/migrations/migrations.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongo\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _checkMigrationLockFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    _checkMigrationLockFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _executeMigrations\n                        \n                    \n                \n            \n            \n                \n                        \n                    _executeMigrations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _loadMigrationsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    _loadMigrationsFiles(currentTimestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                currentTimestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _writeMigrationLockFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    _writeMigrationLockFile(migrationKey: string, migrationTimestamp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                migrationKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                migrationTimestamp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lockLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/migrations/migrations.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(`${chalk.bold.red(MigrationsService.name)}\\x1b[33m`)\n                    \n                \n                    \n                        \n                                Defined in src/migrations/migrations.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        migrations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/migrations/migrations.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common'\nimport { glob } from 'glob'\nimport chalk from 'chalk'\nimport { ModuleRef } from '@nestjs/core'\nimport { startLoader, stopLoader } from './migration-loader.function'\nimport { readFile, writeFile } from 'fs/promises'\nimport { posix } from 'path'\nimport { ConfigService } from '@nestjs/config'\nimport { Connection } from 'mongoose'\nimport { InjectConnection } from '@nestjs/mongoose'\n\n@Injectable()\nexport class MigrationsService implements OnModuleInit {\n  private readonly logger = new Logger(`${chalk.bold.red(MigrationsService.name)}\\x1b[33m`)\n\n  protected lockLocation: string\n  protected migrations = new Map()\n\n  public constructor(\n    @InjectConnection() private readonly mongo: Connection,\n    private readonly moduleRef: ModuleRef,\n    private readonly config: ConfigService,\n\n  ) {\n    this.lockLocation = posix.join(this.config.get('factorydrive.options.disks.local.config.root', '/tmp'), 'migrations.lock')\n  }\n\n  public async onModuleInit() {\n    this.logger.debug(chalk.yellow('Migrations service initialized.'));\n    this.logger.debug(chalk.yellow('Lock file location: ' + this.lockLocation));\n    const currentTimestamp = await this._checkMigrationLockFile()\n    this.logger.debug(chalk.yellow('Checking migrations files...'));\n    await this._loadMigrationsFiles(currentTimestamp);\n\n    const loader = startLoader('Migration en cours...');\n    await this._executeMigrations();\n    stopLoader(loader);\n  }\n\n  private async _checkMigrationLockFile() {\n    let currentTimestamp = 0\n\n    try {\n      const migration = await readFile(this.lockLocation, 'utf-8');\n      currentTimestamp = parseInt(migration, 10);\n      this.logger.log(chalk.blue(`Migration lock state is  !`));\n    } catch (error) {\n      this.logger.warn(chalk.red('No migration lock file found.'));\n    }\n\n    const dbMigration = await this.mongo.collection('migrations').findOne({}, { sort: { timestamp: -1 } });\n\n    if (currentTimestamp === 0) {\n      if (dbMigration) {\n        try {\n          this.logger.warn(chalk.yellow('No migration lock file found. Creating one with the last migration timestamp...'));\n          await writeFile(this.lockLocation, dbMigration.timestamp.toString());\n          this.logger.log(chalk.green('Migration lock file created.'));\n        } catch (error) {\n          this.logger.error(chalk.red('Error while creating migration lock file !'));\n        }\n      } else {\n        try {\n          await writeFile(this.lockLocation, currentTimestamp.toString());\n          this.logger.log(chalk.green('Migration lock file created.'));\n        } catch (error) {\n          this.logger.error(chalk.red('Error while creating migration lock file !'));\n        }\n      }\n    }\n\n    if (!dbMigration && currentTimestamp !== 0) {\n      this.logger.error(chalk.red('Database is not up to date with the migrations files !'));\n      await this.mongo.collection('migrations').insertOne({\n        timestamp: currentTimestamp,\n        comment: 'Synchronization with the migration lock file',\n      });\n      this.logger.log(chalk.green('Database updated with the current migration lock file !'));\n    }\n\n    return currentTimestamp\n  }\n\n  private async _loadMigrationsFiles(currentTimestamp = 0) {\n    let files = await glob(`./jobs/*.js`, {\n      cwd: __dirname,\n      root: __dirname,\n    });\n\n    files = files.filter((file) => {\n      const [timestampMatch] = file.match(/\\d{10,}/) || []\n\n      if (!timestampMatch) {\n        this.logger.warn(chalk.yellow(`Migration ${chalk.bold('')} does not have a timestamp in the filename !`));\n        return;\n      }\n\n      if (parseInt(timestampMatch) ')} are already executed !`));\n        return false;\n      }\n\n      return true\n    })\n\n    files = files.sort((a, b) => {\n      const [aTimestamp] = a.match(/\\d{10,}/) || []\n      const [bTimestamp] = b.match(/\\d{10,}/) || []\n\n      return parseInt(aTimestamp) - parseInt(bTimestamp)\n    })\n\n    for (const file of files) {\n      const migration = await import(`${__dirname}/${file}`);\n\n      if (!migration.default) {\n        this.logger.log(chalk.yellow(`Migration ${chalk.bold('')} does not have a default export !`));\n        return;\n      }\n\n      this.migrations.set(file, migration)\n    }\n  }\n\n  private async _executeMigrations() {\n    if (this.migrations.size === 0) {\n      this.logger.log(chalk.green('No migrations to execute.'));\n      return;\n    }\n\n    if (!this.migrations.size) {\n      this.logger.log(chalk.blue('No migrations to execute.'));\n      return;\n    }\n\n    for (const key of this.migrations.keys()) {\n      const [migrationTimestamp] = key.match(/\\d{10,}/) || []\n\n      const migration = this.migrations.get(key);\n      const instance = await this.moduleRef.create(migration.default);\n\n      if (typeof instance.up !== 'function') {\n        this.logger.log(chalk.yellow(`Migration ${chalk.bold('')} does not have an up method !`));\n        break;\n      }\n\n      try {\n        this.logger.log(chalk.yellow(`Running migration ${chalk.bold('')}...`));\n        await instance.up();\n      } catch (e) {\n        this.logger.error(chalk.red(`Error while running migration ${chalk.bold('')} !`));\n        this.logger.error(e.message, e.stack);\n        return;\n      }\n\n      this._writeMigrationLockFile(key, migrationTimestamp);\n    }\n\n    this.logger.log(chalk.blue('All migrations done.'));\n  }\n\n  private async _writeMigrationLockFile(migrationKey: string, migrationTimestamp: string) {\n    try {\n      await writeFile(this.lockLocation, migrationTimestamp);\n      await this.mongo.collection('migrations').insertOne({\n        timestamp: parseInt(migrationTimestamp),\n        comment: `Migration ${migrationKey} executed`,\n      })\n      this.logger.log(chalk.blue(`Migration ${chalk.bold('')} done.`));\n    } catch (e) {\n      this.logger.error(chalk.red(`Error while updating migration lock file !`));\n      this.logger.error(e);\n\n      throw new Error('Error while updating migration lock file !');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDbTestInstance.html":{"url":"classes/MongoDbTestInstance.html","title":"class - MongoDbTestInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDbTestInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/tests/mongodb.test.instance.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mongoConnection\n                            \n                            \n                                mongod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabase\n                            \n                            \n                                    Async\n                                getModel\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mongoConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mongod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongoMemoryServer\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModel(name: string, schema: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoMemoryServer } from 'mongodb-memory-server';\nimport { connect, Connection } from 'mongoose';\n\nexport class MongoDbTestInstance {\n  mongod: MongoMemoryServer;\n  mongoConnection: Connection;\n\n  async start() {\n    this.mongod = await MongoMemoryServer.create({\n      binary: {\n        version: '5.0.22',\n      },\n    });\n    const uri = await this.mongod.getUri();\n    this.mongoConnection = (await connect(uri)).connection;\n  }\n\n  async stop() {\n    await this.mongoConnection.dropDatabase();\n    await this.mongoConnection.close();\n    if (this.mongod) await this.mongod.stop();\n  }\n\n  async clearDatabase() {\n    const collections = this.mongoConnection.collections;\n    for (const key in collections) {\n      await collections[key].deleteMany({});\n    }\n  }\n\n  async getModel(name: string, schema: any) {\n    return this.mongoConnection.model(name, schema);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoosePlugin.html":{"url":"interfaces/MongoosePlugin.html","title":"interface - MongoosePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MongoosePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            package\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        package\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        package:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\nimport { StorageManagerConfig } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { AmazonWebServicesS3StorageConfig } from '@the-software-compagny/nestjs_module_factorydrive-s3';\nimport { parse } from 'path';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    lang: string\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n    https: {\n      enabled: boolean;\n      key: string;\n      cert: string;\n    }\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  factorydrive: {\n    options:\n    | StorageManagerConfig\n    | {\n      disks: {\n        [key: string]: {\n          driver: 's3';\n          config: AmazonWebServicesS3StorageConfig;\n        };\n      };\n    };\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  mailer: {\n    host: string;\n    port: number;\n    sender: string;\n  };\n  sms: {\n    host: string;\n    systemId: string;\n    password: string;\n    sourceAddr: string;\n    regionCode: string;\n  };\n  frontPwd: {\n    url: string;\n    identityMailAttribute: string;\n    identityMobileAttribute: string;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    lang: process.env['LANG'] || 'en',\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n    https: {\n      enabled: /yes|1|on|true/i.test(process.env['SESAME_HTTPS_ENABLED']),\n      key: process.env['SESAME_HTTPS_PATH_KEY'] || '',\n      cert: process.env['SESAME_HTTPS_PATH_CERT'] || '',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [\n    ],\n  },\n  factorydrive: {\n    options: {\n      default: 'local',\n      disks: {\n        local: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage',\n          },\n        },\n        identities: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage/identities',\n          },\n        },\n      },\n    },\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n  mailer: {\n    host: process.env['SESAME_SMTP_SERVER'],\n    port: parseInt(process.env['SESAME_SMTP_PORT']) || 25,\n    sender: process.env['SESAME_MDP_SENDER'] || 'noreply@mydomain.com',\n  },\n  frontPwd: {\n    url: process.env['SESAME_FRONT_MDP'],\n    identityMailAttribute: process.env['SESAME_RESET_PWD_MAIL'] || '',\n    identityMobileAttribute: process.env['SESAME_RESET_PWD_MOBILE'] || '',\n  },\n  sms: {\n    host: process.env['SESAME_SMPP_SERVER'] || '',\n    systemId: process.env['SESAME_SMPP_SYSTEMID'] || '',\n    password: process.env['SESAME_SMPP_PASSWORD'] || '',\n    sourceAddr: process.env['SESAME_SMPP_SOURCEADDR'] || '',\n    regionCode: process.env['SESAME_SMPP_REGIONCODE'] || 'FR',\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongooseValidationFilter.html":{"url":"classes/MongooseValidationFilter.html","title":"class - MongooseValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongooseValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/mongoose-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                            \n                                    Protected\n                                getValidationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValidationErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Error } from 'mongoose';\nimport { ValidationError } from 'class-validator';\n\n@Catch(Error.ValidationError, Error.CastError, ValidationError)\nexport class MongooseValidationFilter implements ExceptionFilter {\n  public catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    Logger.debug(exception['message'], 'MongooseValidationFilter');\n    const debug = {};\n    if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n      debug['_exception'] = exception;\n    }\n    response.status(HttpStatus.NOT_ACCEPTABLE).json(\n      // @ts-expect-error( )\n      HttpException.createBody(\n        {\n          statusCode: HttpStatus.NOT_ACCEPTABLE,\n          message: exception['message'],\n          validations: this.getValidationErrors(exception),\n          ...debug,\n        },\n        exception.constructor.name,\n        HttpStatus.NOT_ACCEPTABLE,\n      ),\n    );\n  }\n\n  // eslint-disable-next-line\n  protected getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError): Record {\n    const validations = {};\n    if (err instanceof Error.ValidationError) {\n      for (const key in err.errors) {\n        if (err.errors[key]['constraints']) {\n          Object.keys(err.errors[key]['constraints']).forEach((ckey) => {\n            const property = err.errors[key]['property'];\n            validations[`${key}.${property}`] = err.errors[key]['constraints'][ckey];\n          });\n          continue;\n        }\n        validations[key] = err.errors[key].message;\n      }\n    } else if (err instanceof Error.CastError) {\n      validations[err.path] = err.message;\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NeedChangePasswordDto.html":{"url":"classes/NeedChangePasswordDto.html","title":"class - NeedChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NeedChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/need-change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/need-change-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class NeedChangePasswordDto {\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'User object id', type: String })\n  public id: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundDto.html":{"url":"classes/NotFoundDto.html","title":"class - NotFoundDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/not-found.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class NotFoundDto {\n  @ApiProperty({ enum: [HttpStatus.NOT_FOUND] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjectIdValidationPipe.html":{"url":"injectables/ObjectIdValidationPipe.html","title":"injectable - ObjectIdValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ObjectIdValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/object-id-validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/object-id-validation.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Types.ObjectId\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ObjectIdValidationPipe implements PipeTransform {\n  /* eslint-disable */\n  public transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata): Types.ObjectId {\n    if (!Types.ObjectId.isValid(value)) {\n      throw new BadRequestException(`Invalid ObjectId `);\n    }\n    return new Types.ObjectId(value);\n  }\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedFilterDto.html":{"url":"classes/PaginatedFilterDto.html","title":"class - PaginatedFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-filter.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/dto/paginated-filter.dto.ts:1\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatedFilterDto {\n  // eslint-disable-next-line\n  [key: string]: any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class PaginatedResponseDto> {\n  @ApiProperty({ enum: [HttpStatus.OK] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public total: number;\n\n  @ApiProperty()\n  public data: TData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdController.html":{"url":"controllers/PasswdController.html","title":"controller - PasswdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                passwd\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                change\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getPolicies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                initMany\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                initreset\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                reset\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                resetbycode\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(body: ChangePasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change')@ApiOperation({summary: 'Execute un job de changement de mot de passe sur le/les backends'})@ApiResponse({status: undefined, description: 'Mot de passe synchronisé sur le/les backends'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPolicies(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getpolicies')@ApiOperation({summary: 'Retourne la politique de mot de passe à appliquer'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(body: InitAccountDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('init')@ApiOperation({summary: 'Initialise le compte envoi un jeton par mail à l'identité'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        initMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    initMany(body: InitManyDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('initmany')@ApiOperation({summary: 'Initialise plusieurs identités. envoi un jeton par mail à l'identité'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitManyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        initreset\n                        \n                    \n                \n            \n            \n                \n                        \n                    initreset(body: InitResetDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('initreset')@ApiOperation({summary: 'Demande l envoi de mail pour le reset'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitResetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(body: ResetPasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset')@ApiOperation({summary: 'Execute un job de réinitialisation de mot de passe sur le/les backends'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        resetbycode\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetbycode(body: ResetByCodeDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('resetbycode')@ApiOperation({summary: 'reinitialise le mot de passe avec le code reçu'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ResetByCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('ioutdated')@ApiOperation({summary: 'Compte donc l invitation d init n a pas été repondue dans les temps'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { Document } from 'mongoose';\nimport { Identities } from '~/management/identities/_schemas/identities.schema';\nimport { InitAccountDto } from '~/management/passwd/_dto/init-account.dto';\nimport { InitManyDto } from '~/management/passwd/_dto/init-many.dto';\nimport { InitResetDto } from '~/management/passwd/_dto/init-reset.dto';\nimport { ResetByCodeDto } from '~/management/passwd/_dto/reset-by-code.dto';\nimport { PasswdadmService } from '~/settings/passwdadm.service';\nimport { ChangePasswordDto } from './_dto/change-password.dto';\nimport { ResetPasswordDto } from './_dto/reset-password.dto';\nimport { PasswdService } from './passwd.service';\n\n@Controller('passwd')\n@ApiTags('management/passwd')\nexport class PasswdController {\n  private readonly logger = new Logger(PasswdController.name);\n\n  public constructor(\n    private passwdService: PasswdService,\n    private passwdadmService: PasswdadmService,\n  ) { }\n\n  @Post('change')\n  @ApiOperation({ summary: 'Execute un job de changement de mot de passe sur le/les backends' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Mot de passe synchronisé sur le/les backends' })\n  public async change(@Body() body: ChangePasswordDto, @Res() res: Response): Promise {\n    const debug = {};\n\n    const [_, data] = await this.passwdService.change(body);\n    this.logger.log(`Call passwd change for : ${body.uid}`);\n\n    if (process.env.NODE_ENV === 'development') {\n      debug['_debug'] = data;\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Password changed',\n      status: 0,\n      ...debug,\n    });\n  }\n\n  @Post('resetbycode')\n  @ApiOperation({ summary: 'reinitialise le mot de passe avec le code reçu' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async resetbycode(@Body() body: ResetByCodeDto, @Res() res: Response): Promise {\n    const debug = {};\n    this.logger.log('Reset by code : ' + body.token + ' code : ' + body.code);\n    try{\n      const [_, data] = await this.passwdService.resetByCode(body);\n      if (process.env.NODE_ENV === 'development') {\n        debug['_debug'] = data;\n      }\n\n      return res.status(HttpStatus.OK).json({\n        message: 'Password changed',\n        ...debug,\n      });\n    } catch (e) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        message: 'Erreur serveur',\n        ...debug,\n      });\n    }\n\n  }\n\n  @Post('reset')\n  @ApiOperation({ summary: 'Execute un job de réinitialisation de mot de passe sur le/les backends' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async reset(@Body() body: ResetPasswordDto, @Res() res: Response): Promise {\n    const debug = {};\n    const [_, data] = await this.passwdService.reset(body);\n\n    if (process.env.NODE_ENV === 'development') {\n      debug['_debug'] = data;\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Password changed',\n      ...debug,\n    });\n  }\n\n  @Get('getpolicies')\n  @ApiOperation({ summary: 'Retourne la politique de mot de passe à appliquer' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async getPolicies(@Res() res: Response): Promise {\n    const data = await this.passwdadmService.getPolicies();\n    //const datax=omit(data.toObject,['_id'])\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Post('init')\n  @ApiOperation({ summary: \"Initialise le compte envoi un jeton par mail à l'identité\" })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async init(@Body() body: InitAccountDto, @Res() res: Response): Promise {\n    const debug = {};\n    const ok = await this.passwdService.initAccount(body);\n    if (ok){\n      return res.status(HttpStatus.OK).json({\n        message: 'Email envoyé verifiez votre boite mail alternative et vos spam',\n        ...debug,\n      });\n    }else{\n      return res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n        message: 'Erreur serveur impossible d\\'envoyer le mail',\n        ...debug,\n      });\n    }\n\n  }\n  @Post('initmany')\n  @ApiOperation({ summary: \"Initialise plusieurs identités. envoi un jeton par mail à l'identité\" })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async initMany(@Body() body: InitManyDto, @Res() res: Response): Promise {\n    const result = await this.passwdService.initMany(body);\n    return res.status(HttpStatus.OK).json({\n      message: 'identités initialisées',\n    });\n  }\n  @Post('initreset')\n  @ApiOperation({ summary: 'Demande l envoi de mail pour le reset' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async initreset(@Body() body: InitResetDto, @Res() res: Response): Promise {\n    const debug = {};\n    const data = await this.passwdService.initReset(body);\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Email envoyé verifiez votre boite mail alternative et vos spam',\n      token: data,\n      ...debug,\n    });\n  }\n  @Get('ioutdated')\n  @ApiOperation({ summary: 'Compte donc l invitation d init n a pas été repondue dans les temps' })\n  public async search(@Res() res: Response): Promise;\n      },\n      any\n    >\n  > {\n    const data = await this.passwdService.checkInitOutDated();\n    const total = data.length;\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswdModule.html":{"url":"modules/PasswdModule.html","title":"module - PasswdModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswdModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_imports\n\n\n\ncluster_PasswdModule_providers\n\n\n\n\nBackendsModule\n\nBackendsModule\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nBackendsModule->PasswdModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nPasswdModule -->\n\nIdentitiesModule->PasswdModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nPasswdModule -->\n\nSettingsModule->PasswdModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/passwd/passwd.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswdService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PasswdController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BackendsModule\n                        \n                        \n                            IdentitiesModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PasswdService } from './passwd.service';\nimport { PasswdController } from './passwd.controller';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { IdentitiesModule } from '../identities/identities.module';\nimport { SettingsModule } from '~/settings/settings.module';\n\n@Module({\n  imports: [BackendsModule, IdentitiesModule, SettingsModule],\n  controllers: [PasswdController],\n  providers: [PasswdService],\n})\nexport class PasswdModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdadmController.html":{"url":"controllers/PasswdadmController.html","title":"controller - PasswdadmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdadmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/passwdadm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/passwdadm\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getPolicies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                setPolicies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPolicies(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getpolicies')@ApiOperation({summary: 'Retourne la police de mot de passe'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/passwdadm.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        setPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPolicies(body: PasswordPoliciesDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('setpolicies')@ApiOperation({summary: 'enregistre la police de mdp'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/passwdadm.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            PasswordPoliciesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { PasswordPoliciesDto } from '~/settings/_dto/password-policy.dto';\nimport { PasswdadmService } from './passwdadm.service';\n\n@Controller('settings/passwdadm')\n@ApiTags('settings')\nexport class PasswdadmController {\n  public constructor(private passwdadmService: PasswdadmService) {}\n\n  @Post('setpolicies')\n  @ApiOperation({ summary: 'enregistre la police de mdp' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async setPolicies(@Body() body: PasswordPoliciesDto, @Res() res: Response): Promise {\n    const data = await this.passwdadmService.setPolicies(body);\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Get('getpolicies')\n  @ApiOperation({ summary: 'Retourne la police de mot de passe' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async getPolicies(@Res() res: Response): Promise {\n    const data = await this.passwdadmService.getPolicies();\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordPoliciesDto.html":{"url":"classes/PasswordPoliciesDto.html","title":"class - PasswordPoliciesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordPoliciesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_dto/password-policy.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                checkPwned\n                            \n                            \n                                    \n                                    \n                                    Public\n                                emailAttribute\n                            \n                            \n                                    \n                                    \n                                    Public\n                                goodComplexity\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasLowerCase\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasNumbers\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasSpecialChars\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasUpperCase\n                            \n                            \n                                    \n                                    \n                                    Public\n                                initTokenTTL\n                            \n                            \n                                    \n                                    \n                                    Public\n                                len\n                            \n                            \n                                    \n                                    \n                                    Public\n                                minComplexity\n                            \n                            \n                                    \n                                    Public\n                                mobileAttribute\n                            \n                            \n                                    \n                                    \n                                    Public\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                    Public\n                                resetBySms\n                            \n                            \n                                    \n                                    \n                                    Public\n                                resetCodeTTL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        checkPwned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: true, description: 'Teh password will be checked on Pwned', type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        emailAttribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'interOrgPerson.mail', description: 'Attribut de l email alternatif pour envoi message', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        goodComplexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 70\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '70', description: 'Good complexity (entropy), Upper this number the password is considered  good', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasLowerCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of letters in lowercase', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasNumbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of numbers', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasSpecialChars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of special characters', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasUpperCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of letters in uppercase', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        initTokenTTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 604800\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '604800', description: 'TTL du jeton d'initialisation ( en secondes)', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        len\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '8', description: 'Password minimal Length', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        minComplexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '30', description: 'Minimal complexity (entropy), Below this number the password wont be accepted', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        mobileAttribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'interOrgPerson.mobile', description: 'Attribut de l email alternatif pour envoi message', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'https://monsite.com', description: 'Après un changement ou reset reussi le navigateur sera redirigé', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        resetBySms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: true, description: 'Mote de passe peut etre reinitialisé par sms', type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        resetCodeTTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 900\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '900', description: 'TTL du code de reset ( en secondes)', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsBoolean, IsString } from 'class-validator';\n\nexport class PasswordPoliciesDto {\n  @IsNumber()\n  @ApiProperty({ example: '8', description: 'Password minimal Length', type: Number })\n  public len: number = 10;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of letters in uppercase', type: Number })\n  public hasUpperCase: number = 1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of letters in lowercase', type: Number })\n  public hasLowerCase: number = 1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of numbers', type: Number })\n  public hasNumbers: number = 1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of special characters', type: Number })\n  public hasSpecialChars: number = 1;\n\n  @IsNumber()\n  @ApiProperty({\n    example: '30',\n    description: 'Minimal complexity (entropy), Below this number the password wont be accepted',\n    type: Number,\n  })\n  public minComplexity: number = 30;\n\n  @IsNumber()\n  @ApiProperty({\n    example: '70',\n    description: 'Good complexity (entropy), Upper this number the password is considered  good',\n    type: Number,\n  })\n  public goodComplexity: number = 70;\n\n  @IsBoolean()\n  @ApiProperty({ example: true, description: 'Teh password will be checked on Pwned', type: Boolean })\n  public checkPwned: boolean = true;\n\n  @IsBoolean()\n  @ApiProperty({ example: true, description: 'Mote de passe peut etre reinitialisé par sms', type: Boolean })\n  public resetBySms: boolean = false;\n\n  @IsString()\n  @ApiProperty({\n    example: 'https://monsite.com',\n    description: 'Après un changement ou reset reussi le navigateur sera redirigé',\n    type: Number,\n  })\n  public redirectUrl: string = '';\n  @IsString()\n  @ApiProperty({\n    example: 'interOrgPerson.mail',\n    description: 'Attribut de l email alternatif pour envoi message',\n    type: String,\n  })\n  public emailAttribute: string = '';\n  @ApiProperty({\n    example: 'interOrgPerson.mobile',\n    description: 'Attribut de l email alternatif pour envoi message',\n    type: String,\n  })\n  public mobileAttribute: string = '';\n\n  @IsNumber()\n  @ApiProperty({ example: '900', description: 'TTL du code de reset ( en secondes)', type: Number })\n  public resetCodeTTL: number = 900;\n\n  @IsNumber()\n  @ApiProperty({ example: '604800', description: \"TTL du jeton d'initialisation ( en secondes)\", type: Number })\n  public initTokenTTL: number = 604800;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawBodyBufferOptions.html":{"url":"interfaces/RawBodyBufferOptions.html","title":"interface - RawBodyBufferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawBodyBufferOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/middlewares/raw-body-buffer.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blacklistedHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            whitelistedHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blacklistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blacklistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitelistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whitelistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as bodyParser from 'body-parser';\n\nexport interface RawBodyBufferOptions {\n  whitelistedHeaders?: string[];\n  blacklistedHeaders?: string[];\n  limit?: string;\n}\n\nexport function rawBodyBuffer(options?: RawBodyBufferOptions) {\n  return [bodyParser.urlencoded({ limit: options.limit, extended: true }), bodyParser.json({ limit: options.limit })];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetByCodeDto.html":{"url":"classes/ResetByCodeDto.html","title":"class - ResetByCodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetByCodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/reset-by-code.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                code\n                            \n                            \n                                    \n                                    \n                                    Public\n                                newpassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '123456', description: 'Code received by email or Sms'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'hdfddyf18A', description: 'new password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '3F4AC...', description: 'Token received by initreset'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class ResetByCodeDto {\n  @IsString()\n  @ApiProperty({ example: '3F4AC...', description: 'Token received by initreset' })\n  public token: string;\n\n  @IsNumber()\n  @ApiProperty({ example: '123456', description: 'Code received by email or Sms' })\n  public code: number;\n\n  @IsString()\n  @ApiProperty({ example: 'hdfddyf18A', description: 'new password' })\n  public newpassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'MyNewPassword', description: 'New Password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-password.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'Token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-password.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @IsString()\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'Token',\n  })\n  public token: string;\n\n  @ApiProperty({ example: 'MyNewPassword', description: 'New Password' })\n  @IsString()\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPart.html":{"url":"classes/SecurityPart.html","title":"class - SecurityPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/security.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    Public\n                                secretKey\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class SecurityPart extends Document {\n  @Prop({\n    type: [String],\n    default: [],\n  })\n  public oldPasswords?: string[];\n\n  @Prop({\n    type: String,\n  })\n  public otpKey?: string;\n\n  @Prop({\n    type: [String],\n  })\n  public u2fKey?: string[];\n\n  @Prop({\n    type: [String],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public changePwdAtNextLogin: boolean;\n\n  @Prop({\n    type: String,\n  })\n  public secretKey: string;\n}\n\nexport const SecurityPartSchema = SchemaFactory.createForClass(SecurityPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPartDTO.html":{"url":"classes/SecurityPartDTO.html","title":"class - SecurityPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/security.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                secretKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsArray, IsBoolean, IsOptional } from 'class-validator';\n\nexport class SecurityPartDTO {\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public oldPasswords?: string[];\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public otpKey?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public u2fKey?: string[];\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public allowedNetworks?: string[];\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public changePwdAtNextLogin: boolean;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public secretKey?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceSchemaInterface.html":{"url":"interfaces/ServiceSchemaInterface.html","title":"interface - ServiceSchemaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceSchemaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/interfaces/service.schema.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        count\n                                    \n                                \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findAndCount\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n            \n                \ncount(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:24\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:52\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:18\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAndCount\n                        \n                    \n                \n            \n            \n                \nfindAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:32\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: Types.ObjectId | any, update: UpdateQuery | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:46\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Document,\n  FilterQuery,\n  ModifyResult,\n  MongooseBaseQueryOptions,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { AbstractSchema } from '../schemas/abstract.schema';\nimport mongodb from 'mongodb';\n\nexport interface ServiceSchemaInterface {\n  /* eslint-disable */\n  find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]>\n\n  count(filter?: FilterQuery, options?: (mongodb.CountOptions & MongooseBaseQueryOptions) | null): Promise\n\n  findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]>\n\n  findById(\n    id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  create(data?: any, options?: SaveOptions): Promise>\n\n  update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>>\n\n  delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise>\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_schemas/settings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parameters\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '', required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_schemas/settings.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parameters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_schemas/settings.schema.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type SettingsDocument = Document;\n\n@Schema({ versionKey: false })\nexport class Settings extends AbstractSchema {\n  @Prop({ type: String, default: '', required: true, unique: true })\n  name: string;\n  @Prop({ type: Object, default: {} })\n  parameters: object;\n}\n\nexport const SettingsSchema = SchemaFactory.createForClass(Settings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { SettingsService } from '~/settings/settings.service';\n\n@ApiTags('settings')\n@Controller('settings')\nexport class SettingsController {\n  public constructor(private readonly _service: SettingsService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nMailadmService \n\nMailadmService \n\n\n\nPasswdadmService \n\nPasswdadmService \n\n\n\nSmsadmService \n\nSmsadmService \n\n\n\nSettingsModule\n\nSettingsModule\n\nMailadmService  -->\n\nSettingsModule->MailadmService \n\n\n\nPasswdadmService  -->\n\nSettingsModule->PasswdadmService \n\n\n\nSmsadmService  -->\n\nSettingsModule->SmsadmService \n\n\n\n\n\nMailadmService\n\nMailadmService\n\nSettingsModule -->\n\nMailadmService->SettingsModule\n\n\n\n\n\nPasswdadmService\n\nPasswdadmService\n\nSettingsModule -->\n\nPasswdadmService->SettingsModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nSmsadmService\n\nSmsadmService\n\nSettingsModule -->\n\nSmsadmService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailadmService\n                        \n                        \n                            PasswdadmService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            SmsadmService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                        \n                            SmsadmController\n                        \n                        \n                            PasswdadmController\n                        \n                        \n                            MailadmController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailadmService\n                        \n                        \n                            PasswdadmService\n                        \n                        \n                            SmsadmService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/settings.module.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { SettingsController } from '~/settings/settings.controller';\nimport { SettingsService } from '~/settings/settings.service';\nimport { SmsadmService } from '~/settings/smsadm.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Settings, SettingsSchema } from '~/settings/_schemas/settings.schema';\nimport { SmsadmController } from '~/settings/smsadm.controller';\nimport { PasswdadmService } from '~/settings/passwdadm.service';\nimport { PasswdadmController } from '~/settings/passwdadm.controller';\nimport { MailadmService } from '~/settings/mailadm.service';\nimport { MailadmController } from '~/settings/mailadm.controller';\n@Module({\n  exports: [SmsadmService, PasswdadmService, MailadmService],\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Settings.name,\n        useFactory: () => SettingsSchema,\n      },\n    ]),\n  ],\n  providers: [SettingsService, SmsadmService, PasswdadmService, MailadmService],\n  controllers: [SettingsController, SmsadmController, PasswdadmController, MailadmController],\n})\nexport class SettingsModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'settings',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/settings/settings.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SettingsService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShutdownObserver.html":{"url":"injectables/ShutdownObserver.html","title":"injectable - ShutdownObserver","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShutdownObserver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/observers/shutdown.observer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpServers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addHttpServer\n                            \n                            \n                                    Public\n                                    Async\n                                onApplicationShutdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addHttpServer\n                        \n                    \n                \n            \n            \n                \n                        \n                    addHttpServer(server: http.Server)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/observers/shutdown.observer.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                        http.Server\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationShutdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/observers/shutdown.observer.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpServers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     http.Server[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/_common/observers/shutdown.observer.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnApplicationShutdown } from \"@nestjs/common\";\nimport * as http from 'http';\n\n@Injectable()\nexport class ShutdownObserver implements OnApplicationShutdown {\n  private httpServers: http.Server[] = [];\n\n  public addHttpServer(server: http.Server): void {\n    this.httpServers.push(server);\n  }\n\n  public async onApplicationShutdown(): Promise {\n    await Promise.all(\n      this.httpServers.map(\n        (server) =>\n          new Promise((resolve, reject) => {\n            server.close((error) => {\n              if (error) {\n                reject(error);\n              } else {\n                resolve(null);\n              }\n            });\n          }),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SmsSettingsDto.html":{"url":"classes/SmsSettingsDto.html","title":"class - SmsSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SmsSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_dto/sms.settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                host\n                            \n                            \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    Public\n                                regionCode\n                            \n                            \n                                    \n                                    \n                                    Public\n                                sourceAddr\n                            \n                            \n                                    \n                                    \n                                    Public\n                                systemId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'smpp://smscsim.smpp.org:2775', description: 'Serveur Sms (protocole SMPP)', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'ZsvyNgf8', description: 'Password (fournit par votre provider)', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        regionCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'FR', description: 'Code region', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        sourceAddr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'SMPP.ORG', description: 'Adresse emetteur (11 caracteres max)', type: String, maxLength: 11})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        systemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'WkFSJlDXGryAJG1', description: 'SystemId (fournit par votre provider)', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class SmsSettingsDto {\n  @IsString()\n  @ApiProperty({ example: 'smpp://smscsim.smpp.org:2775', description: 'Serveur Sms (protocole SMPP)', type: String })\n  public host: string;\n\n  @IsString()\n  @ApiProperty({ example: 'WkFSJlDXGryAJG1', description: 'SystemId (fournit par votre provider)', type: String })\n  public systemId: string;\n\n  @IsString()\n  @ApiProperty({ example: 'ZsvyNgf8', description: 'Password (fournit par votre provider)', type: String })\n  public password: string;\n\n  @IsString()\n  @ApiProperty({ example: 'FR', description: 'Code region', type: String })\n  public regionCode: string = 'FR';\n\n  @IsString()\n  @ApiProperty({\n    example: 'SMPP.ORG',\n    description: 'Adresse emetteur (11 caracteres max)',\n    type: String,\n    maxLength: 11,\n  })\n  public sourceAddr: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SmsadmController.html":{"url":"controllers/SmsadmController.html","title":"controller - SmsadmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SmsadmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/smsadm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/sms\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get')@ApiOperation({summary: 'Retourne les parametres pour l envoi SMS'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/smsadm.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(body: SmsSettingsDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('set')@ApiOperation({summary: 'Enregistre les parametres'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/smsadm.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SmsSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { SmsadmService } from '~/settings/smsadm.service';\nimport { Response } from 'express';\nimport { SmsSettingsDto } from '~/settings/_dto/sms.settings.dto';\n\n@Controller('settings/sms')\n@ApiTags('settings')\nexport class SmsadmController {\n  public constructor(private smsadmService: SmsadmService) {}\n\n  @Get('get')\n  @ApiOperation({ summary: 'Retourne les parametres pour l envoi SMS' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async get(@Res() res: Response): Promise {\n    const data = await this.smsadmService.getParams();\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Post('set')\n  @ApiOperation({ summary: 'Enregistre les parametres' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async set(@Body() body: SmsSettingsDto, @Res() res: Response): Promise {\n    const data = await this.smsadmService.setParams(body);\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePart.html":{"url":"classes/StatePart.html","title":"class - StatePart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/state.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Number, enum: AgentStateList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AgentState, AgentStateList } from '~/core/agents/_enum/agent-state.enum';\n\n@Schema({ _id: false })\nexport class StatePart extends Document {\n  @Prop({\n    required: true,\n    type: Number,\n    enum: AgentStateList,\n    default: AgentState.PENDING,\n  })\n  public current: number;\n\n  @Prop({\n    type: Date,\n    default: new Date(),\n  })\n  public lastChangedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedUntil?: Date;\n\n  @Prop({ type: String })\n  public suspendedReason?: string;\n}\n\nexport const StatePartSchema = SchemaFactory.createForClass(StatePart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePartDTO.html":{"url":"classes/StatePartDTO.html","title":"class - StatePartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/state.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, IsNumber, IsDate, IsOptional } from 'class-validator';\n\nexport class StatePartDTO {\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty()\n  public current: number;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastChangedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedUntil?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedReason?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SyncIdentitiesDto.html":{"url":"classes/SyncIdentitiesDto.html","title":"class - SyncIdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SyncIdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/sync-identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/sync-identities.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class SyncIdentitiesDto {\n  @IsArray()\n  @ApiProperty({ type: Array })\n  public payload: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tasks.html":{"url":"classes/Tasks.html","title":"class - Tasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/_schemas/tasks.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                jobs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        jobs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/tasks/_schemas/tasks.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type TasksDocument = Tasks & Document;\n\n@Schema({ versionKey: false })\nexport class Tasks extends AbstractSchema {\n  @Prop({ type: [Types.ObjectId] })\n  public jobs?: Types.ObjectId[];\n}\n\nexport const TasksSchema = SchemaFactory.createForClass(Tasks);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { TasksService } from './tasks.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('tasks')\nexport class TasksController extends AbstractController {\n  constructor(private readonly _service: TasksService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService \n\nTasksService \n\n\n\nTasksModule\n\nTasksModule\n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TasksSchema, Tasks } from './_schemas/tasks.schema';\nimport { TasksService } from './tasks.service';\nimport { TasksController } from './tasks.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Tasks.name,\n        useFactory: () => TasksSchema,\n      },\n    ]),\n  ],\n  providers: [TasksService],\n  controllers: [TasksController],\n  exports: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/tasks/tasks.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Tasks } from './_schemas/tasks.schema';\n\n@Injectable()\nexport class TasksService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Tasks.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketForm.html":{"url":"interfaces/TicketForm.html","title":"interface - TicketForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            submitApiUrl\n                                        \n                                \n                                \n                                        \n                                            submitButtonText\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitApiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitApiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormField.html":{"url":"interfaces/TicketFormField.html","title":"interface - TicketFormField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attrsOnCreate\n                                        \n                                \n                                \n                                        \n                                            attrsOnDefault\n                                        \n                                \n                                \n                                        \n                                            attrsOnDelete\n                                        \n                                \n                                \n                                        \n                                            attrsOnRead\n                                        \n                                \n                                \n                                        \n                                            attrsOnUpdate\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            model-value\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDefault\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDefault:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDelete:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnRead:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnUpdate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model-value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model-value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormSection.html":{"url":"interfaces/TicketFormSection.html","title":"interface - TicketFormSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fields\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenData.html":{"url":"interfaces/TokenData.html","title":"interface - TokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            iv\n                                        \n                                \n                                \n                                        \n                                            k\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iv:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        k\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        k:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {InjectRedis} from '@nestjs-modules/ioredis';\nimport {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport {randomInt} from 'crypto';\nimport Redis from 'ioredis';\nimport {AbstractService} from '~/_common/abstracts/abstract.service';\nimport {ActionType} from '~/core/backends/_enum/action-type.enum';\nimport {BackendsService} from '~/core/backends/backends.service';\nimport {Jobs} from '~/core/jobs/_schemas/jobs.schema';\nimport {AskTokenDto} from './_dto/ask-token.dto';\nimport {ChangePasswordDto} from './_dto/change-password.dto';\nimport {ResetPasswordDto} from './_dto/reset-password.dto';\nimport {IdentitiesCrudService} from '../identities/identities-crud.service';\nimport {get} from 'radash';\nimport {Identities} from '../identities/_schemas/identities.schema';\nimport {MailerService} from '@nestjs-modules/mailer';\nimport {InitAccountDto} from '~/management/passwd/_dto/init-account.dto';\nimport {ConfigService} from '@nestjs/config';\nimport {ResetByCodeDto} from '~/management/passwd/_dto/reset-by-code.dto';\nimport {PasswdadmService} from '~/settings/passwdadm.service';\nimport {IdentityState} from '~/management/identities/_enums/states.enum';\nimport {InitResetDto} from '~/management/passwd/_dto/init-reset.dto';\nimport {SmsadmService} from '~/settings/smsadm.service';\nimport {InitManyDto} from '~/management/passwd/_dto/init-many.dto';\nimport {InitStatesEnum} from '~/management/identities/_enums/init-state.enum';\nimport {MailadmService} from '~/settings/mailadm.service';\nimport {DataStatusEnum} from \"~/management/identities/_enums/data-status\";\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesCrudService,\n    protected mailer: MailerService,\n    protected config: ConfigService,\n    private passwdadmService: PasswdadmService,\n    private smsadmService: SmsadmService,\n    private mailadmService: MailadmService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n  //Initialisation du reset de mot de passe envoie un email ou par sms  un code et fourni un token au front.\n  // Le code est la clé du token\n  public async initReset(initDto: InitResetDto): Promise {\n    //envoi du mail\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //test si on peu reninitialiser le compte\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE ||  identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //prise des parametres\n      const params = await this.passwdadmService.getPolicies();\n      const k = randomInt(100000, 999999);\n      //asking for padding\n      const padd = await this.getPaddingForCode();\n      const mailAttribute = params.emailAttribute;\n      const mail = get(identity.toObject(), mailAttribute);\n      if (mail) {\n        const token = await this.askToken({ mail: mail, uid: initDto.uid }, padd + k.toString(16), params.resetCodeTTL);\n        this.logger.log('Token :' + token + '  int : ' + k.toString(10));\n        if (initDto.type === 0) {\n          this.logger.log('Reset password asked by mail for  : ' + initDto.uid);\n          const smtpParams = await this.mailadmService.getParams();\n          if (mailAttribute !== '') {\n            // this.mailer.addTransporter('lastStmp', smtpParams.host)\n            this.mailer\n              .sendMail({\n                // transporterName: 'lastStmp',\n                from: smtpParams.sender,\n                to: mail,\n                subject: 'Reinitialisation de votre mot de passe',\n                template: 'resetaccount',\n                context: {\n                  uid: identity.inetOrgPerson.uid,\n                  displayName: identity.inetOrgPerson.displayName,\n                  code: k,\n                },\n              })\n              .then(() => {\n                this.logger.log('reset compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              })\n              .catch(() => {\n                throw new BadRequestException({\n                  message: 'Erreur serveur lors de l envoi du mail',\n                  error: 'Bad Request',\n                  statusCode: 400,\n                });\n              });\n            return token;\n          } else {\n            return false;\n          }\n        } else {\n          //envoi par SMS si c est possible\n          const policies = await this.passwdadmService.getPolicies();\n          if (policies.resetBySms === true) {\n            this.logger.log('Reset password asked by SMS for  : ' + initDto.uid);\n            const smsAttribute = params.mobileAttribute;\n            if (smsAttribute !== '') {\n              const numTel = get(identity.toObject(), smsAttribute);\n              await this.smsadmService.send(numTel, 'Votre code de reinitialisation : ' + k.toString(10));\n            }\n            return token;\n          } else {\n            return false;\n          }\n        }\n      } else {\n        this.logger.error('Error while reset identityMailAttribute Empty');\n      }\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (uid=${initDto?.uid})`);\n      //on retoune un token qui ne sert à rien pour ne pas divulguer que l uid n existe pas\n      const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n      const falseToken = await this.askToken({ mail: 'xxxxxx@xxxxxxxxxxx', uid: 'xxxxxxxx@xxxxxxx' }, k, 0);\n      return falseToken;\n    }\n  }\n  //Initialisation du compte. Envoi d' un mail avec un token pour l'init du compte\n  public async initAccount(initDto: InitAccountDto): Promise {\n    //recherche de l'identity\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //test si on peu reninitialiser le compte\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE || identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //envoi du mail\n      const params = await this.passwdadmService.getPolicies();\n      const mailAttribute = params.emailAttribute;\n      this.logger.log('mailer.identityMailAttribute : ' + mailAttribute);\n      if (mailAttribute !== '') {\n        const mail = get(identity.toObject(), mailAttribute);\n        if (mail) {\n          const smtpParams = await this.mailadmService.getParams();\n          //demande du token\n          const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n          const token = await this.askToken({ mail: mail, uid: initDto.uid }, k, params.initTokenTTL);\n          //envoi du token\n          this.mailer\n            .sendMail({\n              from: smtpParams.sender,\n              to: mail,\n              subject: 'Activation de votre compte',\n              template: 'initaccount',\n              context: {\n                displayName: identity.inetOrgPerson.displayName,\n                uid: initDto.uid,\n                url: this.config.get('frontPwd.url') + '/initaccount/' + token,\n                mail: identity.inetOrgPerson.mail\n              },\n            })\n            .then(() => {\n              this.logger.log('Init compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              this.setInitState(identity, InitStatesEnum.SENT);\n            })\n            .catch((e) => {\n              this.logger.error('Erreur serveur lors de l envoi du mail' + e);\n              throw new BadRequestException({\n                message: 'Erreur serveur lors de l envoi du mail' + e,\n                error: 'Bad Request',\n                statusCode: 400,\n              });\n            });\n\n          return true;\n        } else {\n          this.logger.error('Error while initAccount identityMailAttribute Empty');\n          return false;\n        }\n      } else {\n        this.logger.error('Error while initAccount identityMailAttribute not defined');\n        return false;\n      }\n    } catch (e) {\n      this.logger.error('Error while initialize password. ' + e + ` (uid=${initDto?.uid})`);\n      return false;\n    }\n  }\n\n  //Changement du password\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': passwdDto.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE ||  identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //verification de la police de mdp\n      if ((await this.passwdadmService.checkPolicies(passwdDto.newPassword)) === false) {\n        throw new BadRequestException({\n          message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique des mots de passe',\n          error: 'Bad Request',\n          statusCode: 400,\n        });\n      }\n      //tout est ok en envoie au backend\n      const result = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_CHANGE,\n        identity._id,\n        {\n          uid: passwdDto.uid,\n          oldPassword: passwdDto.oldPassword,\n          newPassword: passwdDto.newPassword,\n          ...identity.toJSON(),\n        },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n      // on met actif l'identité\n      await this.identities.model.updateOne({ _id:identity._id},{dataStatus: DataStatusEnum.ACTIVE})\n      return result;\n    } catch (e) {\n      let job = undefined;\n      let _debug = undefined;\n      this.logger.error('Error while changing password. ' + e + ` (uid=${passwdDto?.uid})`);\n\n      if (e?.response?.status === HttpStatus.BAD_REQUEST) {\n        job = {};\n        job['status'] = e?.response?.job?.status;\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        _debug = e?.response?.error?.response;\n      }\n\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Mot de passe incorrect ou utilisateur inconnu',\n        error: 'Bad Request',\n        statusCode: 400,\n        job,\n        _debug,\n      });\n    }\n  }\n\n  // Genere un token pour les autres methodes\n  public async askToken(askToken: AskTokenDto, k, ttl: number): Promise {\n    try {\n      /*\n      if (ttl >0){\n\n        await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n      }\n      */\n\n      const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n      const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n      let ciphertext = cipher.update(\n        JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n        'utf8',\n        'base64',\n      );\n      ciphertext += cipher.final('base64');\n      //on enregistre pas dans redis si le ttl =0\n      if (ttl > 0) {\n        await this.redis.set(\n          ciphertext,\n          JSON.stringify({\n            k,\n            iv,\n            tag: cipher.getAuthTag().toString('base64'),\n          }),\n        );\n        await this.redis.expire(ciphertext, ttl);\n      }\n      return encodeURIComponent(ciphertext);\n    } catch (e) {\n      this.logger.error('Error while ask token. ' + e + ` (uid=${askToken?.uid})`);\n      throw new BadRequestException('Impossible de générer un token, une erreur est survenue');\n    }\n  }\n\n  // decrypte le token à l aide du code\n  public async decryptTokenWithCode(token: string, code: number): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n      this.logger.log('decrypt ' + cypherData);\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n      const padd = await this.getPaddingForCode();\n      const k = padd + code.toString(16);\n      this.logger.log('k=' + k);\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.error('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token xx');\n    }\n  }\n\n  // decrypte le token d'initialisation du compte\n  public async decryptToken(token: string): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.verbose('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token');\n    }\n  }\n\n  // reset du password\n  public async resetByCode(data: ResetByCodeDto): Promise {\n    this.logger.log('resetByCode : ' + data.token + ' ' + data.code);\n    //verification du passwordPolicies\n    if ((await this.passwdadmService.checkPolicies(data.newpassword)) === false) {\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique de securité',\n        error: 'Bad Request',\n        statusCode: 400,\n      });\n    }\n    const tokenData = await this.decryptTokenWithCode(data.token, data.code);\n    this.logger.log('dataToken :' + tokenData);\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid })) as Identities;\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: identity.inetOrgPerson.uid, newPassword: data.newpassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        this.logger.log('delete key');\n        await this.redis.del(data.token);\n        // mise de l indentité active\n        // on met actif l'identité\n        identity.dataStatus = DataStatusEnum.ACTIVE;\n        await identity.save()\n        return [_, response];\n      }\n      this.logger.error('Error from backend while reseting password by code');\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password by code. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  // methode pour le reset par token (pour l initialisation du compte)\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': tokenData.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newPassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        await this.redis.del(data.token);\n        await this.setInitState(identity, InitStatesEnum.INITIALIZED);\n        return [_, response];\n      }\n\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  //Envoi le message d init à plusieurs identités\n  public async initMany(ids: InitManyDto): Promise {\n    const identities = await this.identities.find({ _id: { $in: ids.ids } });\n    if (identities.length === 0) {\n      throw new HttpException('Aucune identité trouvée.', 404);\n    }\n    const updated = await Promise.all(\n      identities.map((identity) => {\n        this.logger.verbose('send To :' + identity.get('inetOrgPerson.uid'));\n        return this.initAccount({ uid: identity.get('inetOrgPerson.uid') });\n      }),\n    );\n    return updated as any;\n  }\n\n  // genere des octect pour completer le code qui est de 4 octets et demi\n  private async getPaddingForCode(): Promise {\n    let code = '';\n    if (await this.redis.exists('CODEPADDING')) {\n      code = await this.redis.get('CODEPADDING');\n    } else {\n      code = crypto.randomBytes(13).toString('hex') + '0';\n      await this.redis.set('CODEPADDING', code);\n    }\n    return code;\n  }\n\n  private async setInitState(identity: Identities, state: InitStatesEnum): Promise {\n    identity.initState = state;\n    // on met actif l'identité\n    identity.dataStatus = DataStatusEnum.ACTIVE;\n    if (state === InitStatesEnum.SENT) {\n      identity.initInfo.initDate = new Date();\n      identity.initInfo.sentDate = null;\n    } else if (state === InitStatesEnum.INITIALIZED) {\n      identity.initInfo.sentDate = new Date();\n    }\n    const ok = await identity.save();\n    return ok;\n  }\n\n  // sort les identites qui n ont pas repondu dans le delai à l init de leurs comptes\n  public async checkInitOutDated(): Promise {\n    const date = new Date();\n    const params = await this.passwdadmService.getPolicies();\n    date.setTime(date.getTime() - params.initTokenTTL * 1000);\n    console.log('modifié:' + date);\n    const identities = await this.identities.find({\n      initState: InitStatesEnum.SENT,\n      'initInfo.initDate': { $lt: date },\n    });\n    return identities;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformersFilestorageService.html":{"url":"injectables/TransformersFilestorageService.html","title":"injectable - TransformersFilestorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformersFilestorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_services/transformers-filestorage.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                TRANSFORMERS\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Async\n                                streamToString\n                            \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Static\n                                    Async\n                                transformHtml\n                            \n                            \n                                    Static\n                                    Async\n                                transformImage\n                            \n                            \n                                    Static\n                                    Async\n                                transformPdf\n                            \n                            \n                                    Static\n                                    Async\n                                transformPlain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Async\n                        streamToString\n                        \n                    \n                \n            \n            \n                \n                        \n                    streamToString(stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(mime: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream, _parent?: Filestorage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _parent\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformHtml\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformHtml(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformImage(mime: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformPdf\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformPdf(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformPlain\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformPlain(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        TRANSFORMERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    'text/plain': TransformersFilestorageService.transformPlain,\n    'text/html': TransformersFilestorageService.transformHtml,\n    'application/pdf': TransformersFilestorageService.transformPdf,\n    'image/*': TransformersFilestorageService.transformImage,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { Injectable } from '@nestjs/common';\nimport { Response } from 'express';\nimport { Filestorage } from '~/core/filestorage/_schemas/filestorage.schema';\n\n@Injectable()\nexport class TransformersFilestorageService extends AbstractService {\n  public static readonly TRANSFORMERS = {\n    'text/plain': TransformersFilestorageService.transformPlain,\n    'text/html': TransformersFilestorageService.transformHtml,\n    'application/pdf': TransformersFilestorageService.transformPdf,\n    'image/*': TransformersFilestorageService.transformImage,\n  };\n\n  public constructor() {\n    super();\n  }\n\n  public async transform(\n    mime: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n    _parent?: Filestorage,\n  ): Promise {\n    const mimeType = mime || data.mime || 'application/octet-stream';\n    const hasTransformer = TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType);\n    // TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType) || TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType.split('/')[0] + '/*')\n    if (!hasTransformer) {\n      if (TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType.split('/')[0] + '/*')) {\n        await TransformersFilestorageService.TRANSFORMERS[mimeType.split('/')[0] + '/*'](mime, res, data, stream);\n        return;\n      }\n    }\n    if (!hasTransformer) {\n      res.setHeader('Content-Type', mimeType);\n      // eslint-disable-next-line\n      res.setHeader('Content-Disposition', `attachment; filename=\"${(data as any).filename}\"`)\n      stream.pipe(res);\n      return;\n    }\n    await TransformersFilestorageService.TRANSFORMERS[mimeType](mime, res, data, stream);\n  }\n\n  public static async transformPlain(\n    _: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'text/plain');\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res);\n    return;\n  }\n\n  public static async transformPdf(\n    _: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'application/pdf');\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res);\n    return;\n  }\n\n  public static async transformHtml(\n    _: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'text/html');\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    res.render('core/filestorage/transformers/html', {\n      data,\n      html: await TransformersFilestorageService.streamToString(stream),\n    });\n  }\n\n  public static async transformImage(\n    mime: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'image/' + mime.split('/').pop());\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res);\n    return;\n  }\n\n  private static async streamToString(stream: NodeJS.ReadableStream): Promise {\n    const chunks = [];\n    return new Promise((resolve, reject) => {\n      stream.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\n      stream.on('error', (err) => reject(err));\n      stream.on('end', () => resolve(Buffer.concat(chunks).toString('utf8')));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniquenessMailValidator.html":{"url":"injectables/UniquenessMailValidator.html","title":"injectable - UniquenessMailValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UniquenessMailValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/validators/uniqueness-example.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/_common/validators/uniqueness-example.validator.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(validationArguments?: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validators/uniqueness-example.validator.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationArguments\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(value: any, args?: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validators/uniqueness-example.validator.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectConnection } from '@nestjs/mongoose'\nimport {\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  registerDecorator,\n} from 'class-validator'\nimport { Connection } from 'mongoose'\nimport { get } from 'radash'\n\n@ValidatorConstraint({ name: 'UniquenessMailValidator', async: true })\n@Injectable()\nexport class UniquenessMailValidator implements ValidatorConstraintInterface {\n  public constructor(@InjectConnection() private connection: Connection) { }\n  public async validate(\n    value: any,\n    args?: ValidationArguments\n  ): Promise {\n    for (const contraint of args.constraints) {\n      const $ne = get(args.object, contraint.primaryKey)\n      const val = get(value, contraint.key)\n      const count = await this.connection.collection(contraint.collection).countDocuments({\n        [contraint.primaryKey]: { $ne },\n        [contraint.key]: val,\n      })\n\n      console.log('count', count)\n      console.log('debug', {\n        [contraint.primaryKey]: { $ne },\n        [contraint.key]: val,\n      })\n\n      if (count > 0) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  defaultMessage(validationArguments?: ValidationArguments): string {\n    // return custom field message\n    const field: string = validationArguments.property\n    return `${field} is already exist`\n  }\n}\n\nexport type UniquenessMailInterface = {\n  collection: string\n  primaryKey: string\n  key: string\n}\n\nexport function isUnique(options: UniquenessMailInterface, validationOptions?: ValidationOptions) {\n  return function (object: any, propertyName: string) {\n    registerDecorator({\n      name: 'isUnique',\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [options],\n      validator: UniquenessMailValidator,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConfigException.html":{"url":"classes/ValidationConfigException.html","title":"class - ValidationConfigException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConfigException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/errors/ValidationException.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationRecursive.html":{"url":"interfaces/ValidationRecursive.html","title":"interface - ValidationRecursive","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:15\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        // console.log('validations', JSON.stringify(request.body));\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationSchemaException.html":{"url":"classes/ValidationSchemaException.html","title":"class - ValidationSchemaException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationSchemaException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyTokenDto.html":{"url":"classes/VerifyTokenDto.html","title":"class - VerifyTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/verify-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'token received by getToken'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/verify-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class VerifyTokenDto {\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'token received by getToken',\n  })\n  @IsString()\n  public token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInfoInterface.html":{"url":"interfaces/WorkerResultInfoInterface.html","title":"interface - WorkerResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [backendName: string]:        Partial\n\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/_interfaces/worker-result.interface.ts:13\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobName?: string;\n  options?: {\n    [key: string | number]: any;\n  };\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInterface.html":{"url":"interfaces/WorkerResultInterface.html","title":"interface - WorkerResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            jobId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            jobName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         WorkerResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WorkerResultInfoInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobName?: string;\n  options?: {\n    [key: string | number]: any;\n  };\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/additionalFieldsPartDto.html":{"url":"classes/additionalFieldsPartDto.html","title":"class - additionalFieldsPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  additionalFieldsPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/additionalFields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    Public\n                                objectClasses\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, name: 'attributes'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, name: 'validations'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional } from 'class-validator';\n\nexport class additionalFieldsPartDto {\n  @ApiProperty({\n    type: 'array',\n    items: {\n      type: 'string',\n    },\n  })\n  public objectClasses: string[] = [];\n\n  @ApiProperty({\n    type: Object,\n    name: 'attributes',\n  })\n  @IsOptional()\n  public attributes: { [key: string]: any } = {};\n\n  @ApiProperty({\n    type: Object,\n    name: 'validations',\n  })\n  public validations?: { [key: string]: { [key: string]: string } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/ioredis : ^2.0.2\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/bullmq : ^10.1.1\n        \n            @nestjs/common : ^10.4.8\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.4.8\n        \n            @nestjs/event-emitter : ^2.1.1\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.4.8\n        \n            @nestjs/swagger : ^8.0.7\n        \n            @the-software-compagny/nestjs_module_factorydrive : ^1.1.5\n        \n            @the-software-compagny/nestjs_module_factorydrive-s3 : ^1.0.1\n        \n            @the-software-compagny/nestjs_module_restools : ^0.0.11\n        \n            ajv : ^8.16.0\n        \n            ajv-errors : ^3.0.0\n        \n            ajv-formats : ^3.0.1\n        \n            ajv-i18n : ^4.2.0\n        \n            argon2 : ^0.41.1\n        \n            awesome-phonenumber : ^6.10.0\n        \n            bullmq : ^5.8.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.6\n        \n            fast-password-entropy : ^1.1.1\n        \n            glob : ^11.0.0\n        \n            handlebars : ^4.7.8\n        \n            helmet : ^7.1.0\n        \n            hibp : ^14.1.2\n        \n            ioredis : ^5.4.1\n        \n            loglevel : ^1.9.1\n        \n            lru-cache : ^11.0.2\n        \n            mjml : ^4.15.3\n        \n            mongoose : ^8.9.5\n        \n            nest-commander : ^3.13.0\n        \n            nest-winston : ^1.10.0\n        \n            nestjs-request-context : ^3.0.0\n        \n            nodemailer : ^6.9.16\n        \n            ora : ^8.1.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            radash : ^12.1.0\n        \n            reflect-metadata : ^0.2.2\n        \n            request-ip : ^3.3.0\n        \n            rxjs : ^7.8.1\n        \n            schema-to-yup : ^1.12.18\n        \n            smpp : ^0.6.0-rc.4\n        \n            swagger-themes : ^1.4.3\n        \n            types-package-json : ^2.0.39\n        \n            winston : ^3.17.0\n        \n            winston-mongodb : ^6.0.0\n        \n            winston-transport : ^4.9.0\n        \n            yaml : ^2.6.1\n        \n            yup : ^1.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../action-type.enum.ts)\n                        \n                        \n                            AgentState   (src/.../agent-state.enum.ts)\n                        \n                        \n                            BackendCodesEnum   (src/.../backend-codes.enum.ts)\n                        \n                        \n                            ConfigObjectType   (src/.../config.object.ts)\n                        \n                        \n                            DataStatusEnum   (src/.../data-status.ts)\n                        \n                        \n                            FormTypes   (src/.../types.ts)\n                        \n                        \n                            FsType   (src/.../fs-type.enum.ts)\n                        \n                        \n                            IdentityLifecycle   (src/.../lifecycle.enum.ts)\n                        \n                        \n                            IdentityState   (src/.../states.enum.ts)\n                        \n                        \n                            InitStatesEnum   (src/.../init-state.enum.ts)\n                        \n                        \n                            InternalLogLevel   (src/.../internal.logger.ts)\n                        \n                        \n                            JobState   (src/.../state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/backends/_enum/action-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                Value : LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                 DUMP_PACKAGE_CONFIG\n                            \n                        \n                        \n                            \n                                Value : DUMP_PACKAGE_CONFIG\n                            \n                        \n                        \n                            \n                                 PING_TARGET\n                            \n                        \n                        \n                            \n                                Value : PING_TARGET\n                            \n                        \n                        \n                            \n                                 IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_CHANGE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_CHANGE\n                            \n                        \n                        \n                            \n                                 IDENTITY_DISABLE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_DISABLE\n                            \n                        \n                        \n                            \n                                 IDENTITY_ENABLE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_ENABLE\n                            \n                        \n            \n        \n\n    src/core/agents/_enum/agent-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AgentState\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/core/backends/_interfaces/backend-codes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        BackendCodesEnum\n                    \n                \n                    \n                        \n                            BackendCodesEnum\n\n                        \n                    \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 GENERIC_ERROR\n                            \n                        \n                        \n                            \n                                 GENERIC_STOPPED\n                            \n                        \n                        \n                            \n                                 CONNECTION_ERROR\n                            \n                        \n                        \n                            \n                                 INVALID_LOGIN\n                            \n                        \n                        \n                            \n                                 INVALID_CREDENTIALS\n                            \n                        \n                        \n                            \n                                 INVALID_JSON_RESPONSE\n                            \n                        \n            \n        \n\n    src/management/identities/validations/_enums/config.object.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigObjectType\n                    \n                \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                 date\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/data-status.ts\n    \n        \n            \n                \n                    \n                        \n                        DataStatusEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 NOTINITIALIZED\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                 PASSWORDNEEDTOBECHANGED\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n\n    src/core/form/_enum/types.ts\n    \n        \n            \n                \n                    \n                        \n                        FormTypes\n                    \n                \n                        \n                            \n                                 BASE\n                            \n                        \n                        \n                            \n                                 STEPS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TABS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/core/filestorage/_enum/fs-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FsType\n                    \n                \n                        \n                            \n                                 DIRECTORY\n                            \n                        \n                        \n                            \n                                Value : d\n                            \n                        \n                        \n                            \n                                 FILE\n                            \n                        \n                        \n                            \n                                Value : f\n                            \n                        \n                        \n                            \n                                 SYMLINK\n                            \n                        \n                        \n                            \n                                Value : l\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/lifecycle.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityLifecycle\n                    \n                \n                        \n                            \n                                 IMPORTED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 OFFICIAL\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 PROVISIONAL\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityState\n                    \n                \n                        \n                            \n                                 SYNCED\n                            \n                        \n                        \n                            \n                                Value : 99\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : 50\n                            \n                        \n                        \n                            \n                                 TO_SYNC\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 TO_VALIDATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                 TO_CREATE\n                            \n                        \n                        \n                            \n                                 TO_COMPLETE\n                            \n                        \n                        \n                            \n                                 ON_ERROR\n                            \n                        \n                        \n                            \n                                 DONT_SYNC\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/init-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        InitStatesEnum\n                    \n                \n                        \n                            \n                                 NOSENT\n                            \n                        \n                        \n                            \n                                 SENT\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INITIALIZED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/core/logger/internal.logger.ts\n    \n        \n            \n                \n                    \n                        \n                        InternalLogLevel\n                    \n                \n                        \n                            \n                                 CONSOLE\n                            \n                        \n                        \n                            \n                                Value : console\n                            \n                        \n                        \n                            \n                                 DB\n                            \n                        \n                        \n                            \n                                Value : db\n                            \n                        \n            \n        \n\n    src/core/jobs/_enums/state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        JobState\n                    \n                \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nSésame ochestrator - Synchronisation d'Identités Multi-sources\n\n  \n  \n  \n  \n\n\n\nDescription\nSésame est une application open source conçue pour faciliter la synchronisation d'identités entre différentes sources de données, y compris des bases de données, des annuaires LDAP/Active Directory et des applications tierces, vers des serveurs OpenLDAP ou Active Directory. Le projet se compose de deux modules principaux : l'orchestrateur et le démon.\nSesame Orchestrateur\nAPI du projet SESAME\nArchitecture du projet\nFigma\nDocumentation\n Aller à la documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPerson.html":{"url":"classes/inetOrgPerson.html","title":"class - inetOrgPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                cn\n                            \n                            \n                                    \n                                    Public\n                                departmentNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    Public\n                                employeeNumber\n                            \n                            \n                                    \n                                    Public\n                                employeeType\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                jpegPhoto\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    Public\n                                sn\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    Public\n                                uid\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                userCertificate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, validate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        jpegPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AutoIncrementPluginOptions } from '~/_common/plugins/mongoose/auto-increment.interface';\nimport { AutoIncrementPlugin } from '~/_common/plugins/mongoose/auto-increment.plugin';\n\n@Schema({ _id: false })\nexport class inetOrgPerson extends Document {\n  @Prop({ type: String, required: true })\n  public cn: string;\n\n  @Prop({ type: String, default: null })\n  public displayName?: string;\n\n  @Prop({ type: String, default: null })\n  public facsimileTelephoneNumber?: string;\n\n  @Prop({ type: String, default: null })\n  public givenName?: string;\n\n  @Prop({ type: String, default: null })\n  public labeledURI?: string;\n\n  @Prop({ type: String, default: null })\n  public mail?: string;\n\n  @Prop({ type: String, default: null })\n  public mobile?: string;\n\n  @Prop({ type: String, default: null })\n  public postalAddress?: string;\n\n  @Prop({ type: String, default: null })\n  public preferredLanguage?: string;\n\n  @Prop({ type: String, required: true })\n  public sn: string;\n\n  @Prop({ type: String, default: null })\n  public telephoneNumber?: string;\n\n  @Prop({ type: String, default: null })\n  public title?: string;\n\n  @Prop({ type: String, required: true })\n  public uid: string;\n\n  @Prop({\n    type: Array,\n    of: String,\n    validate: [\n      {\n        validator: (employeeNumbers: string[]) => {\n          if (!Array.isArray(employeeNumbers)) return false;\n\n          return employeeNumbers.every((employeeNumber) => /[A-Za-z0-9_-]+/.test(employeeNumber));\n        },\n        message: 'EmployeeNumber invalide.',\n      },\n    ],\n  })\n  public employeeNumber: string[];\n\n  @Prop({ type: String, required: true })\n  public employeeType: string;\n\n  @Prop({ type: Array, of: String, required: true, default: [] })\n  public departmentNumber: string[];\n\n  @Prop({ type: String, default: null })\n  public jpegPhoto?: string;\n\n  // @Prop({ type: String, default: null })\n  // public photo?: string;\n\n  @Prop({ type: String, default: null })\n  public userCertificate?: string;\n\n  // @Prop({ type: String, default: null })\n  // public userPassword?: string;\n}\n\nexport const inetOrgPersonSchema = SchemaFactory.createForClass(inetOrgPerson).index(\n  { employeeNumber: 1, employeeType: 1 },\n  { unique: true },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonCreateDto.html":{"url":"classes/inetOrgPersonCreateDto.html","title":"class - inetOrgPersonCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                departmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                employeeNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                employeeType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                jpegPhoto\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                userCertificate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                initForFingerprint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()@IsString({each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@Type(undefined)@IsString({each: true})@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        jpegPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(o => )@IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:121\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        initForFingerprint\n                        \n                    \n                \n            \n            \n                \n                        \n                    initForFingerprint(partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { plainToInstance, Type } from 'class-transformer';\nimport { IsString, IsEmail, IsOptional, IsArray, ValidateIf } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  public static initForFingerprint(partial: Partial) {\n    return plainToInstance(inetOrgPersonCreateDto, {\n      cn: partial.cn || null,\n      sn: partial.sn || null,\n      uid: partial.uid || null,\n      employeeNumber: partial.employeeNumber || [],\n      employeeType: partial.employeeType || null,\n      departmentNumber: partial.departmentNumber || [],\n      displayName: partial.displayName || null,\n      facsimileTelephoneNumber: partial.facsimileTelephoneNumber || null,\n      givenName: partial.givenName || null,\n      labeledURI: partial.labeledURI || null,\n      mail: partial.mail || null,\n      mobile: partial.mobile || null,\n      postalAddress: partial.postalAddress || null,\n      preferredLanguage: partial.preferredLanguage || null,\n      telephoneNumber: partial.telephoneNumber || null,\n      title: partial.title || null,\n      userCertificate: partial.userCertificate || null,\n      jpegPhoto: partial.jpegPhoto || null,\n\n      ...partial\n    });\n  }\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public uid: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public cn: string;\n\n  @IsArray()\n  @Type(() => String)\n  @IsString({ each: true })\n  @ApiProperty()\n  @IsOptional()\n  public employeeNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public employeeType: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  public departmentNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public labeledURI?: string;\n\n  @ValidateIf(o => {\n    return o.mail && o.mail.length > 0;\n  })\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public userCertificate?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public userPassword?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public jpegPhoto?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public photo?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonDto.html":{"url":"classes/inetOrgPersonDto.html","title":"class - inetOrgPersonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            inetOrgPersonCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                departmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                employeeNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                employeeType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                jpegPhoto\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                userCertificate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                initForFingerprint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()@IsString({each: true})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@Type(undefined)@IsString({each: true})@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:77\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        jpegPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:131\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:82\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(o => )@IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:90\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:96\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:101\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:111\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:116\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:121\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        initForFingerprint\n                        \n                    \n                \n            \n            \n                \n                        \n                    initForFingerprint(partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         inetOrgPersonCreateDto\n\n                        \n                    \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:6\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { plainToInstance, Type } from 'class-transformer';\nimport { IsString, IsEmail, IsOptional, IsArray, ValidateIf } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  public static initForFingerprint(partial: Partial) {\n    return plainToInstance(inetOrgPersonCreateDto, {\n      cn: partial.cn || null,\n      sn: partial.sn || null,\n      uid: partial.uid || null,\n      employeeNumber: partial.employeeNumber || [],\n      employeeType: partial.employeeType || null,\n      departmentNumber: partial.departmentNumber || [],\n      displayName: partial.displayName || null,\n      facsimileTelephoneNumber: partial.facsimileTelephoneNumber || null,\n      givenName: partial.givenName || null,\n      labeledURI: partial.labeledURI || null,\n      mail: partial.mail || null,\n      mobile: partial.mobile || null,\n      postalAddress: partial.postalAddress || null,\n      preferredLanguage: partial.preferredLanguage || null,\n      telephoneNumber: partial.telephoneNumber || null,\n      title: partial.title || null,\n      userCertificate: partial.userCertificate || null,\n      jpegPhoto: partial.jpegPhoto || null,\n\n      ...partial\n    });\n  }\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public uid: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public cn: string;\n\n  @IsArray()\n  @Type(() => String)\n  @IsString({ each: true })\n  @ApiProperty()\n  @IsOptional()\n  public employeeNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public employeeType: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  public departmentNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public labeledURI?: string;\n\n  @ValidateIf(o => {\n    return o.mail && o.mail.length > 0;\n  })\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public userCertificate?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public userPassword?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public jpegPhoto?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public photo?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonUpdateDto.html":{"url":"classes/inetOrgPersonUpdateDto.html","title":"class - inetOrgPersonUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(inetOrgPersonCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { plainToInstance, Type } from 'class-transformer';\nimport { IsString, IsEmail, IsOptional, IsArray, ValidateIf } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  public static initForFingerprint(partial: Partial) {\n    return plainToInstance(inetOrgPersonCreateDto, {\n      cn: partial.cn || null,\n      sn: partial.sn || null,\n      uid: partial.uid || null,\n      employeeNumber: partial.employeeNumber || [],\n      employeeType: partial.employeeType || null,\n      departmentNumber: partial.departmentNumber || [],\n      displayName: partial.displayName || null,\n      facsimileTelephoneNumber: partial.facsimileTelephoneNumber || null,\n      givenName: partial.givenName || null,\n      labeledURI: partial.labeledURI || null,\n      mail: partial.mail || null,\n      mobile: partial.mobile || null,\n      postalAddress: partial.postalAddress || null,\n      preferredLanguage: partial.preferredLanguage || null,\n      telephoneNumber: partial.telephoneNumber || null,\n      title: partial.title || null,\n      userCertificate: partial.userCertificate || null,\n      jpegPhoto: partial.jpegPhoto || null,\n\n      ...partial\n    });\n  }\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public uid: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public cn: string;\n\n  @IsArray()\n  @Type(() => String)\n  @IsString({ each: true })\n  @ApiProperty()\n  @IsOptional()\n  public employeeNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public employeeType: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  public departmentNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public labeledURI?: string;\n\n  @ValidateIf(o => {\n    return o.mail && o.mail.length > 0;\n  })\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public userCertificate?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public userPassword?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public jpegPhoto?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public photo?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AgentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BackendsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CliModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilestorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesJsonformsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KeyringsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MigrationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswdModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_imports\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_CliModule\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_FilestorageModule\n\n\n\ncluster_FilestorageModule_exports\n\n\n\ncluster_FilestorageModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_exports\n\n\n\ncluster_KeyringsModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_imports\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_MigrationsModule\n\n\n\ncluster_MigrationsModule_providers\n\n\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesModule -->\n\nAgentsModule->IdentitiesModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nAgentsModule->BackendsModule\n\n\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nMigrationsModule\n\nMigrationsModule\n\nAppModule -->\n\nMigrationsModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\nIdentitiesModule -->\n\nSettingsModule->IdentitiesModule\n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nSettingsModule->PasswdModule\n\n\n\n\n\nMailadmService \n\nMailadmService \n\nMailadmService  -->\n\nSettingsModule->MailadmService \n\n\n\n\n\nPasswdadmService \n\nPasswdadmService \n\nPasswdadmService  -->\n\nSettingsModule->PasswdadmService \n\n\n\n\n\nSmsadmService \n\nSmsadmService \n\nSmsadmService  -->\n\nSettingsModule->SmsadmService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nShutdownObserver\n\nShutdownObserver\n\nAppModule -->\n\nShutdownObserver->AppModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\nKeyringsService \n\nKeyringsService \n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nIdentitiesCrudService \n\nIdentitiesCrudService \n\nIdentitiesCrudService  -->\n\nIdentitiesModule->IdentitiesCrudService \n\n\n\nPasswdModule -->\n\nIdentitiesModule->PasswdModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nJobsService \n\nJobsService \n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\nPasswdModule -->\n\nBackendsModule->PasswdModule\n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\nCoreModule -->\n\nFilestorageModule->CoreModule\n\n\n\nIdentitiesModule -->\n\nFilestorageModule->IdentitiesModule\n\n\n\n\n\nFilestorageService \n\nFilestorageService \n\nFilestorageService  -->\n\nFilestorageModule->FilestorageService \n\n\n\n\n\nTransformersFilestorageService \n\nTransformersFilestorageService \n\nTransformersFilestorageService  -->\n\nFilestorageModule->TransformersFilestorageService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\nFilestorageService\n\nFilestorageService\n\nFilestorageModule -->\n\nFilestorageService->FilestorageModule\n\n\n\n\n\nTransformersFilestorageService\n\nTransformersFilestorageService\n\nFilestorageModule -->\n\nTransformersFilestorageService->FilestorageModule\n\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\nIdentitiesForcepasswordService\n\nIdentitiesForcepasswordService\n\nIdentitiesModule -->\n\nIdentitiesForcepasswordService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\nMigrationsService\n\nMigrationsService\n\nMigrationsModule -->\n\nMigrationsService->MigrationsModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\nMailadmService\n\nMailadmService\n\nSettingsModule -->\n\nMailadmService->SettingsModule\n\n\n\n\n\nPasswdadmService\n\nPasswdadmService\n\nSettingsModule -->\n\nPasswdadmService->SettingsModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nSmsadmService\n\nSmsadmService\n\nSettingsModule -->\n\nSmsadmService->SettingsModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    25 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    33 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    102 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.3.4\n        \n            Description : Synchronisation d'Identités Multi-sources\n        \n            License : Open Source\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AgentType   (src/.../agent.type.ts)\n                        \n                        \n                            IdentitiesDocument   (src/.../identities.schema.ts)\n                        \n                        \n                            JobsDocument   (src/.../jobs.schema.ts)\n                        \n                        \n                            KeyringsDocument   (src/.../keyrings.schema.ts)\n                        \n                        \n                            LoggerDocument   (src/.../logger.schema.ts)\n                        \n                        \n                            MixedValue   (src/.../mixed-value.type.ts)\n                        \n                        \n                            OverwriteModelNameFunction   (src/.../auto-increment.interface.ts)\n                        \n                        \n                            PartialProjectionType   (src/.../partial-projection.type.ts)\n                        \n                        \n                            SettingsDocument   (src/.../settings.schema.ts)\n                        \n                        \n                            TasksDocument   (src/.../tasks.schema.ts)\n                        \n                        \n                            UniquenessMailInterface   (src/.../uniqueness-example.validator.ts)\n                        \n                        \n                            ValidationExceptionPayload   (src/.../validation-exception-payload.type.ts)\n                        \n                        \n                            WrapperType   (src/.../wrapper.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/types/agent.type.ts\n    \n    \n        \n            \n                \n                    \n                    AgentType\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    src/management/identities/_schemas/identities.schema.ts\n    \n    \n        \n            \n                \n                    \n                    IdentitiesDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/jobs/_schemas/jobs.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/keyrings/_schemas/keyrings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    KeyringsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/logger/_schemas/logger.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LoggerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/mixed-value.type.ts\n    \n    \n        \n            \n                \n                    \n                    MixedValue\n                \n            \n            \n                \n                            string | Types.ObjectId | Date | number | boolean | null | object | Array | literal type\n\n                \n            \n        \n    \n    src/_common/plugins/mongoose/auto-increment.interface.ts\n    \n    \n        \n            \n                \n                    \n                    OverwriteModelNameFunction\n                \n            \n            \n                \n                    A function to generate the name used for the auto-increment \"modelName\" field\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/_common/types/partial-projection.type.ts\n    \n    \n        \n            \n                \n                    \n                    PartialProjectionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/settings/_schemas/settings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsDocument\n                \n            \n            \n                \n                        Document\n\n                \n            \n        \n    \n    src/core/tasks/_schemas/tasks.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TasksDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/validators/uniqueness-example.validator.ts\n    \n    \n        \n            \n                \n                    \n                    UniquenessMailInterface\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/_common/types/validation-exception-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    ValidationExceptionPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/_common/types/wrapper.type.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/cahier-des-charges.html":{"url":"additional-documentation/cahier-des-charges.html","title":"additional-page - Cahier des charges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCahier des charges pour le Projet Sésame\nObjectif du Projet\nLe projet Sésame vise à développer une application open source de synchronisation d'identités, permettant de gérer la synchronisation entre différentes sources de données (bases de données, annuaires LDAP/Active Directory, applications tierces). Le système se compose de deux modules principaux, l'orchestrateur et le daemon. Et de scripts et projets tel que les backends de synchronisation et les interfaces utilisateur frontend pour la configuration et la manipulation des données.\nSchemas\n  \n\nFonctionnalités Principales\n\nOrchestrateur :\n\n\nGestion de la synchronisation des identités stockés dans MongoDB.\nMaintenance d'une base d'identités pour faciliter la synchronisation.\nConfiguration flexible des schémas additionnels.\nExposition d'entrypoints via une API REST avec des tokens JWT.\nGestion du cycle de vie des identités.\n\n\nDaemon :\n\n\nDéclenchement des scripts backend pour la synchronisation.\nUtilisation de BullMQ et Redis pour la communication avec l'orchestrateur.\n\n\nSchémas d'Identité :\n\n\nUtilisation du schéma LDAP NnetOrgPerson comme base de stockage dans MongoDB.\nConfiguration possible de schémas additionnels pour une variabilité des champs dans chaque enregistrement.\nDéfinition du typage, des règles, et de la présence des champs dans les identités.\nPré-intégration de schémas optionnels, notamment Supann et/ou Renater.\n\n\nTechnologies Utilisées :\n\n\nLangages : NodeJS avec les frameworks NestJS et NuxtJS.\nCommunication daemon-Orchestrateur : BullMQ et Redis.\nAuthentification Orchestrateur : Comptes stockés dans MongoDB, possibilité de stocker les mots de passe dans un serveur tiers (OpenLDAP, ...).\nBackends : Scripts système utilisant les sorties standards, indépendant du langage de l'application principale (Python, PowerShell, Perl, Bash, etc).\n\n\nInterfaces Utilisateur Frontend :\n\n\nConfiguration de l'orchestrateur.\nManipulation et completion des données à synchroniser.\nGestion des schémas d'identité.\nAffichage des logs.\n\nExigences Techniques\n\nSécurité :\n\n\nToutes les communications doivent être sécurisées par des protocoles cryptographiques standards.\nGestion sécurisée des tokens JWT pour l'API REST de l'orchestrateur.\nMise en place de mécanismes de chiffrement appropriés pour les données sensibles.\n\n\nExtensibilité :\n\n\nLe système doit être conçu de manière modulaire pour permettre l'ajout aisé de nouveaux schémas d'identité et sources de données.\n\n\nDocumentation :\n\n\nUne documentation exhaustive doit être fournie pour permettre aux développeurs, administrateurs système et utilisateurs de comprendre et utiliser efficacement l'application.\n\n\nTests Automatisés :\n\n\nLes développements doivent être accompagnés de suites de tests automatisés pour garantir la stabilité et la fiabilité du système.\n\n\nPerformance :\n\n\nLe système doit être optimisé pour gérer un grand nombre d'identités et de sources de données tout en maintenant des performances élevées.\n\nLivrables\n\nCode Source :\n\n\nL'ensemble du code source doit être bien commenté et respecter les normes de codage définies.\nLe code doit être versionné et accessible à travers la plateforme de gestion de versions GitHub.\n\n\nDocumentation Technique :\n\n\nManuels d'installation et de configuration.\nGuides d'utilisation pour les développeurs, administrateurs système et utilisateurs finaux.\n\n\nTests Automatisés :\n\n\nLes résultats des tests automatisés doivent être fournis en accompagnement du code source.\n\nPlanning\nLe projet sera découpé en sprints avec des jalons précis pour chaque fonctionnalité. Les délais de livraison doivent être respectés, et tout écart significatif doit être justifié et discuté avec l'équipe de gestion de projet.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/filtres-api.html":{"url":"additional-documentation/filtres-api.html","title":"additional-page - Filtres API","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiltres API\nUsages\nFilters\nSyntax\nfilters[PREFIX + FIELD]=SEARCH\nExample\nfilters[=subject]=53\nsubject field equal to 53\nUsage\nExample :curl --request GET \\\n  --url 'http://localhost/search?limit=9999&filters%5B%5Esequence%5D=%2F53%2F&sort%5Bmetadata.createdAt%5D=-1&sort%5Bsubject%5D=1'\n  \n# limit=9999\n# filters[^sequence]=/53/\n# sort[metadata.createdAt]=-1\n# sort[subject]=1List\n\n\n\nFilter\nDescription\n\n\n\n\n:\nEqual\n\n\n#\nNumber Equal\n\n\n!#\nNumber Not Equal\n\n\n!:\nNot Equal\n\n\n>\nGreater Than\n\n\n>\n\n\n\n\nLess Than\n\n\n\n\n\n\n@\nin\n\n\n!@\nnot in\n\n\n@#\nnumber in\n\n\n!@#\nnumber not in\n\n\n^\nregex\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique.html":{"url":"additional-documentation/documentation-technique.html","title":"additional-page - Documentation technique","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDAEMON\nIdentitiesValidation\nQueueProcessorService\nTests\nFormulaires Customs\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/demon.html":{"url":"additional-documentation/documentation-technique/demon.html","title":"additional-page - Demon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommunication avec sesame-daemon\nVoir doc sesame-daemon\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/queue-processor-service.html":{"url":"additional-documentation/documentation-technique/queue-processor-service.html","title":"additional-page - Queue processor service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQueueProcessorService\nVue d'ensemble\nQueueProcessorService est une classe abstraite conçue pour fournir une configuration de base pour les services de traitement de files d'attente dans une application NestJS. Elle intègre des fonctionnalités de gestion de file d'attente en utilisant bullmq et Redis.\nDépendances\n\nConfigService : Service de @nestjs/config pour accéder aux variables de configuration.\nRedis : Client Redis pour interagir avec un serveur Redis.\n\nPropriétés\n\nqueue (Queue) : Instance de Queue de bullmq, représentant la file d'attente à traiter.\nqueueEvents (QueueEvents) : Instance de QueueEvents de bullmq, utilisée pour gérer les événements liés à la file d'attente.\n\nConstructeur\nExample :public constructor(\n  protected readonly config: ConfigService,\n  protected readonly redis: Redis,\n) {\n  this.queue = new Queue(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n  this.queueEvents = new QueueEvents(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n}Paramètres\n\nconfig (ConfigService):  Service de configuration pour accéder aux variables de configuration de l'application.\nredis (Redis): Instance du client Redis pour se connecter au serveur Redis.\n\nDescription\nInitialise les propriétés queue et queueEvents en créant de nouvelles instances de Queue et QueueEvents, en utilisant la configuration nameQueue pour le nom de la file d'attente et l'instance Redis pour la connexion.\nMéthodes\nCeci est une classe abstraite et n'implémente pas de méthodes. Les classes dérivées doivent implémenter une logique spécifique de traitement de file d'attente.\nUtilisation\nÉtendez cette classe dans les services qui nécessitent des capacités de traitement de file d'attente. Implémentez la logique de traitement des éléments dans la file d'attente dans le service étendu.\nExample :import Redis from 'ioredis';\nimport { InjectRedis } from 'nestjs-ioredis';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\n\n@Injectable()\nexport class ExampleQueueService extends AbstractQueueProcessor {\nconstructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n)  {\n        super(configService, redis);\n   }\n\n    async example(params: any) {\n        const job = await this.queue.add('EXEMPLE', params);\n        this.queueEvents.on('failed', (errors) => {\n            console.log(errors);\n        });\n        return await job.waitUntilFinished(this.queueEvents, 30000);\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{"url":"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html","title":"additional-page - Ecriture des test et utilisation des utilitaires","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation des Tests Jest et NestJS\nTable des matières\n\nDocumentation des Tests Jest et NestJS\nTable des matières\nIntroduction\nPrérequis\n\n\nStubs\nExemple\n\n\nConstantes\nUtilisation de MongoDbTestInstance\nFonctions\nConstantes\nExemple d'utilisation\n\n\nMock du module et créer des modèles simulés avec createMockModel\nExemple\n\n\nAssertions dans les tests\nAssertions findAndCount\nExemple\n\n\nAssertions findById\nExemple\n\n\nAssertions findOne\nExemple\n\n\nAssertions create\nExemple\n\n\nAssertions update\nExemple\n\n\nAssertions delete\nExemple\n\n\n\n\nExemple complet d'un cas de test\nConfiguration du Test\n\n\nTest d'un controller CRUD\nVue d'ensemble\nFonction : createMockService\nBut\nParamètres\nRetours\nExemple d'utilisation\n\n\n\n\nRéférences supplémentaires\n\n\n\nIntroduction\nCe document fournit des directives et des exemples pour tester les services NestJS en utilisant Jest et MongoDB Memory Server. Dans ce document, nous allons prendre comme exemple le service IdentitiesService et le modèle Identities.\nCette methode ne fonctionne que pour les services CRUD qui héritent d'AbstractServiceSchema.\nPrérequis\n\nNode.js\nNestJS\nJest\nMongoDB Memory Server\n\nStubs\nLes stubs sont utilisés pour simuler des données dans les tests. Les stubs sont créés dans le dossier stubs au sein du module ou se trouve le test et sont utilisés dans les tests.\nExemple\nExample :import { IdentitiesUpdateDto } from './../_dto/identities.dto';\nimport { IdentitiesDto } from '~/management/identities/_dto/identities.dto';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { additionalFieldsPartDtoStub } from './_parts/addtionalFields.dto.stub';\nimport { inetOrgPersonDtoStub } from './_parts/inetOrgPerson.dto.stub';\n\nexport const IdentitiesDtoStub = (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};\n\nexport const IdentitiesUpdateDtoStub = (): IdentitiesUpdateDto => {\n  const inetOrgPerson = inetOrgPersonDtoStub();\n  inetOrgPerson.cn = 'updated-cn';\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson,\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};Ici pour clarifier les données, nous avons déporté une partie des données dans des fichiers séparés stocké dans le dossier _parts du dossier stubs.\nVoici un exemple de stub pour inetOrgPersonDtoStub:\nExample :import { inetOrgPersonDto } from '~/management/identities/_dto/_parts/inetOrgPerson.dto';\n\nexport const inetOrgPersonDtoStub = (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    employeeNumber: 'employeeNumber',\n    employeeType: 'employeeType',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n};Constantes\nLes constantes suivantes sont utilisées dans les tests.\nExample :describe('Identities Service', () => {\n  let mongoDbTestInstance: MongoDbTestInstance;\n  let service: IdentitiesService;\n  let model: Model;\n  let identitiesModel: Model;\n  const _id = new Types.ObjectId();\n  const newIdentityData = {\n    _id,\n    ...IdentitiesDtoStub(),\n  };\n  const updatedIdentityData = {\n    _id,\n    ...IdentitiesUpdateDtoStub(),\n  };\n\n  const options: QueryOptions = {\n    limit: 10,\n    skip: 0,\n    sort: {\n      'metadata.createdAt': 'asc',\n    },\n  };\n  const projection: ProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n  const filter: FilterQuery = {};\n});Utilisation de MongoDbTestInstance\nLa classe MongoDbTestInstance est utilisée pour créer une instance MongoDB temporaire pour les tests.\nFonctions\nstart() démarre une instance MongoDB temporaire pour les tests.\nstop() arrête l'instance MongoDB temporaire.\nclearDatabase() supprime toutes les données de la base de données temporaire.\ngetModel() crée un modèle Mongoose à partir d'un schéma Mongoose.\nConstantes\nmongod: MongoMemoryServer est l'instance MongoDB temporaire.\nmongoConnection: Connection est la connexion à l'instance MongoDB temporaire.\nExemple d'utilisation\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Mock du module et créer des modèles simulés avec createMockModel\ncreateMockModel est utilisé pour simuler des modèles Mongoose pour les tests.\nExample :function createMockModel(model: Model, stub, updatedStub?): Modelmodel est le modèle Mongoose à simuler.\nstub est le stub à utiliser pour simuler les données.\nupdatedStub est le stub à utiliser pour simuler les données mises à jour.\nLa fonction retourne un modèle Mongoose simulé.\nExemple\nExample :  beforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n\n    // Mock the module\n    const module: TestingModule = await Test.createTestingModule({\n      controllers: [IdentitiesController],\n      providers: [\n        IdentitiesService,\n        {\n          provide: getModelToken(Identities.name),\n          useValue: identitiesModel,\n        },\n        IdentitiesValidationService,\n      ],\n      imports: [IdentitiesValidationModule],\n    }).compile();\n\n    // Get the service\n    service = module.get(IdentitiesService);\n  });Assertions dans les tests\nLes fonctions fournies aident à affirmer diverses conditions dans les tests. Ces méthodes sont utilisables uniquement pour les services CRUD qui héritent d'AbstractServiceSchema.\nAssertions findAndCount\nfindAndCountAssertions vérifie la méthode de service findAndCount.\nExemple\nExample :  describe('findAndCount', () => {\n    it('should return an array of identities or throw an error', async () => {\n      findAndCountAssertions(service, model, filter, projection, options, newIdentityData);\n      findAndCountErrorAssertions(service, filter, projection, options);\n    });\n  });Assertions findById\nfindByIdAssertions vérifie la fonctionnalité de la méthode de service findById.\nExemple\nExample :  describe('findById', () => {\n    it('should return a single identity by id or throw an error', async () => {\n      findByIdAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should return an empty array and count 0 documents', async () => {\n      findByIdErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions findOne\nfindOneAssertions assure le bon fonctionnement de la méthode findOne du service.\nExemple\nExample :  describe('findOne', () => {\n    it('should return a single identity matching the filter or throw an error', async () => {\n      findOneAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      findOneErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions create\ncreateAssertions teste la méthode create du service.\nExemple\nExample :  describe('create', () => {\n    it('should create and return a new identity or throw an error', async () => {\n      createAssertions(service, model, newIdentityData, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      createErrorAssertions(service, newIdentityData);\n    });\n  });Assertions update\nupdateAssertions évalue la fonctionnalité update.\nExemple\nExample :  describe('update', () => {\n    it('should update and return an identity or throw an error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateAssertions(service, model, _id, updateData, updateOptions, updatedIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateErrorAssertions(service, _id, updateData, updateOptions);\n    });\n  });Assertions delete\ndeleteAssertions évalue la méthode delete dans le service.\nExemple\nExample :  describe('delete', () => {\n    it('should delete and return the deleted identity or throw an error', async () => {\n      deleteAssertions(service, model, _id, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      deleteErrorAssertions(service, _id, options);\n    });\n  });Exemple complet d'un cas de test\nUn exemple de cas de test pour IdentitiesService en utilisant les méthodes ci-dessus.\nConfiguration du Test\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nbeforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n    // Autres configurations de test\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n    jest.clearAllMocks();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Test d'un controller CRUD\nCette documentation fournit un aperçu détaillé de la fonction utilitaire createMockService, conçue pour faciliter la création de services mock pour les besoins de test dans les applications TypeScript, en mettant un accent particulier sur celles utilisant Jest et NestJS. L'initiation du test est similaire à celle des tests de services au niveau du module et de l'instantiation de la base mongoDB.\nVue d'ensemble\nLa fonction createMockService améliore dynamiquement la création de services mock, permettant de configurer un nombre arbitraire de comportements d'appel de méthode de manière dynamique. Elle simplifie le processus de configuration des implémentations mock pour les méthodes de service, supportant à la fois des valeurs fixes et des comportements dynamiques définis par des fonctions, y compris des comportements asynchrones basés sur des promesses et la gestion des erreurs.\nFonction : createMockService\nBut\nGénérer une instance de service mock avec des méthodes simulées selon les comportements spécifiés, rationalisant le test de divers scénarios incluant le succès, l'échec, et les exceptions.\nParamètres\n\nservice (new (...args: any[]) => T): Le constructeur de la classe de service à mocker. Ce paramètre prend une référence de classe que le service mock va imiter.\n\nmethodStubs (Record): Un objet où les clés représentent les noms des méthodes à mocker, et les valeurs sont les comportements à simuler pour ces méthodes. Ces comportements peuvent être spécifiés comme des valeurs uniques pour un comportement uniforme à travers les appels, des tableaux de valeurs pour définir des comportements séquentiels d'appels, des fonctions pour calculer dynamiquement les valeurs de retour, ou des instances de Error pour simuler des exceptions.\n\n\nRetours\n\nT: Une instance mock de la classe de service (T), avec des méthodes simulées comme spécifié par le paramètre methodStubs.\n\nExemple d'utilisation\nExample :service = createMockService(IdentitiesService, {\n  create: [\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_VALIDATE }),\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_COMPLETE }),\n  ],\n  findAndCount: [\n    () => Promise.resolve([[{ ...IdentitiesDtoStub(), _id }], 1]),\n    () => Promise.reject(new Error('Erreur')), // Fonction qui lance une erreur\n  ],\n  // Autres simulations de méthodes...\n});Dans cet exemple, la fonction createMockService est utilisée pour mocker un IdentitiesService avec des comportements spécifiques pour les méthodes create, findAndCount, et d'autres, démontrant comment gérer à la fois les opérations réussies et les erreurs.\nImportance de l'ordre des valeurs retournées : Il est crucial de comprendre que l'ordre des valeurs retournées dans l'exemple a une importance significative car il correspondra à l'ordre des appels dans les tests. Cela signifie que le comportement simulé pour le premier appel sera le premier dans la liste, et ainsi de suite, permettant une simulation précise des scénarios de test.\nRéférences supplémentaires\nCette documentation couvre l'essentiel des tests des services NestJS en utilisant Jest. Pour plus d'informations détaillées, référez-vous à la documentation de Jest et NestJS.\n\nTests NestJS\nJest\nMongoDB Memory Server\nArticle sur les tests en  NestJS avec Mongo\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/validation-des-identités.html":{"url":"additional-documentation/documentation-technique/validation-des-identités.html","title":"additional-page - Validation des identités","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation Technique - Service de Validation des Identités (Mise à Jour)\nDescription\nCette documentation mise à jour décrit les améliorations apportées au service de validation des identités dans une application NestJS. Ce service utilise yup pour la validation des données et ajv pour gérer la validation des schémas JSON et YML. Les fichiers de configuration YML sont chargés dynamiquement et convertis en schémas yup pour valider les données utilisateur.\nServices\nIdentitiesValidationService\nModifications Clés\n\nExtraction de la logique de validation d'attributs dans une méthode privée validateAttribute, améliorant la lisibilité et la maintenabilité.\nUtilisation améliorée de la gestion des erreurs pour fournir des messages d'erreur spécifiques.\nCommentaires et annotations de type TypeScript ajoutés pour une meilleure compréhension et utilisation du type checking de TypeScript.\n\nMéthodes\n\nvalidate(data: AdditionalFieldsPart): Promise\nValide les données fournies en utilisant des schémas de validation yup.\nLes schémas sont chargés à partir de fichiers YAML spécifiques à chaque classe d'objet.\nRenvoie une promesse rejetée avec les détails des erreurs en cas d'échec de la validation.\n\n\nprivate validateAttribute(key: string, attribute: any): Promise\nValide un attribut individuel.\nRenvoie un message d'erreur spécifique ou null si la validation réussit.\n\n\n\nUtilisation\nExample :@Injectable()\nclass IdentitiesValidationService {\n  async validate(data: AdditionalFieldsPart): Promise {\n    // ... Implémentation de la validation\n  }\n\n  private async validateAttribute(key: string, attribute: any): Promise {\n    // ... Implémentation de la validation d'un attribut individuel\n  }\n}Modèles\nAdditionalFieldsPart\n\nReprésente les champs supplémentaires d'une identité.\nUtilisé par IdentitiesValidationService pour la validation.\n\nConfigObjectSchemaDTO\n\nNouveau modèle ajouté pour représenter les schémas de configuration des objets.\n\nConfiguration\nFichiers YAML\n\nChaque classe d'objet a son fichier de configuration YAML correspondant.\nCes fichiers sont utilisés pour générer des schémas de validation yup.\n\nIntégrations\nIntégration avec AJV\n\nAJV est utilisé pour compiler et valider les schémas JSON.\nAmélioration de la gestion des erreurs et des validations de schémas.\n\nIntégration avec Mongoose\n\nLes schémas Mongoose sont définis comme auparavant.\nLa validation yup est intégrée dans le cycle de vie des documents Mongoose via des hooks (pre validate, pre save).\n\nModule\nIdentitiesModule\n\nConfigure le schéma Mongoose et intègre le service de validation avec les améliorations apportées.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/formulaires-customs.html":{"url":"additional-documentation/documentation-technique/formulaires-customs.html","title":"additional-page - Formulaires customs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\nIntroduction\nStructure du JSON de Configuration\nChamp title\nChamp description\nChamp type\nChamp defaultValues\nChamp sections\nExemple de section\n\n\nChamps dans fields\nExemple de champ\n\n\nAutres champs importants\n\n\nExemple complet d'un json de formulaire pour la creation de ticket\nDocumentation des Composants Vue.js\nbuilder.vue\nAperçu\nStructure\nFonctionnalités\nScript\n\n\ntk-form-type.vue\nAperçu\nStructure\nFonctionnalités\n\n\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-tabs\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-base\nAperçu\nStructure\nFonctionnalités\n\n\nÉnumérations et Types\nFormTypes\nCRUDMode\nTicketFormField et TicketFormSection\n\n\n\n\n\n\n\nIntroduction\nCette documentation décrit le composant de formulaire dynamique utilisé dans les applications avec NestJS et Mongoose, en utilisant des composants du framework Quasar. Le formulaire est construit dynamiquement à partir d'une configuration JSON.\nCe fichier json est stocké dans la base de données et est récupéré par l'API pour construire le formulaire, tout est géré dans le module nestjs /tickets/form\nStructure du JSON de Configuration\nChamp title\n\nType: string\nDescription: Titre du formulaire.\nExemple: \"title\": \"Creation de ticket\"\n\nChamp description\n\nType: string\nDescription: Description ou instructions pour le formulaire.\nExemple: \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\"\n\nChamp type\n\nType: number\nDescription: Type de formulaire, représenté par un numéro (par exemple, 0 pour base, 1 pour étapes).\nExemple: \"type\": 1\n\nChamp defaultValues\n\nType: object\nDescription: Valeurs par défaut pour certains champs du formulaire.\nExemple: \"defaultValues\": { \"lifestep\": 1 }\n\nChamp sections\n\nType: object\nDescription: Sections du formulaire, chacune contenant ses propres champs.\nSous-champs:\nlabel: Nom de la section.\ntype: Type de la section (similaire au type de formulaire).\ndescription: Description de la section.\nicon: Icône représentant la section.\nfields: Champs de la section.\n\n\n\nExemple de section\nExample :\"sections\": {\n  \"envelope\": {\n    \"label\": \"Enveloppe\",\n    \"type\": 0,\n    \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n    \"icon\": \"mdi-email\",\n    \"fields\": {\n      // Définition des champs ici...\n    }\n  }\n}Champs dans fields\nChaque champ dans fields est un objet avec les propriétés suivantes :\n\ncomponent: Type de composant Quasar à utiliser (par exemple, autocomplete).\nlabel: Étiquette du champ.\nmodel-value: Chemin de liaison de données pour le champ.\nrow et col: Positionnement du champ dans une grille.\nattrsOnDefault, attrsOnCreate, attrsOnRead, attrsOnUpdate, attrsOnDelete: Objets définissant les attributs et comportements du champ dans différents états. Pour connaître les attributs disponibles, consultez la documentation de Quasar Framework. Les composants disponibles sont les suivants : \nselect\ninput\nautocomplete\ncheckbox\nradio\n\n\n\nExemple de champ\nExample :\"senders\": {\n  \"component\": \"autocomplete\",\n  \"label\": \"Appelant\",\n  \"model-value\": \"envelope.senders\",\n  \"attrsOnDefault\": {\n    \"filled\": true,\n    \"dense\": true,\n    // Autres attributs...\n  },\n    \"attrsOnCreate\": {\n        // Autres attributs...\n    },\n    \"attrsOnRead\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n    \"attrsOnUpdate\": {\n        // Autres attributs...\n    },\n    \"attrsOnDelete\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n  \"row\": 1,\n  \"col\": 4\n}Autres champs importants\n\nsubmitButtonText: Texte du bouton de soumission.\nsubmitApiUrl: URL à appeler lors de la soumission du formulaire.\nredirectUrl: URL de redirection après la soumission, l'id de la nouvelle entrée est automatiquement ajoutée a la fin de l'url.\n\nExemple complet d'un json de formulaire pour la creation de ticket\nExample :{\n  \"title\": \"Creation de ticket\",\n  \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\",\n  \"type\": 1,\n  \"defaultValues\": {\n    \"lifestep\": 1\n  },\n  \"sections\": {\n    \"envelope\": {\n      \"label\": \"Enveloppe\",\n      \"type\": 0,\n      \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n      \"icon\": \"mdi-email\",\n      \"fields\": {\n        \"senders\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Appelant\",\n          \"model-value\": \"envelope.senders\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {\n            \"disable\": false\n          },\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {\n            \"disable\": false\n          },\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"observers\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Concernés\",\n          \"model-value\": \"envelope.observers\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {},\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {},\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"assigned\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Assignés\",\n          \"model-value\": \"envelope.assigned\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"modelLabel\": \"name\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"additionalFilters\": [\n              {\n                \"field\": \"type\",\n                \"value\": 2,\n                \"operator\": \"Documentation des Composants Vue.js\nbuilder.vue\nAperçu\nLe composant builder.vue est un constructeur de formulaires dynamique utilisant les composants du Framework Quasar. Il est conçu pour les opérations CRUD (Créer, Lire, Mettre à jour, Supprimer) et prend en charge différents types de champs et de dispositions.\nStructure\n\nQCard : Conteneur principal avec une barre d'outils affichant le titre et la description du formulaire.\nTkFormType : Composant personnalisé rendant les champs de formulaire basés sur la structure JSON fournie.\nQCardActions : Contient des boutons d'action et des emplacements pour des actions personnalisées.\n\nFonctionnalités\n\nRendu dynamique des champs de formulaire.\nPrise en charge de plusieurs modes CRUD.\nPersonnalisable via des emplacements (slots).\n\nScript\n\nUtilise l'API de Composition Vue 3.\nMéthodes reset, resetValidation et submit pour les interactions avec le formulaire.\nÉmet un événement submit avec les données du formulaire.\n\n\ntk-form-type.vue\nAperçu\nComposant pour rendre différents types de dispositions de formulaire : base, stepper, tabs.\nStructure\n\nComposant dynamique basé sur la propriété type.\nPrend en charge différentes structures de formulaire telles que le formulaire de base, le stepper et les onglets.\n\nFonctionnalités\n\nRendu flexible basé sur la propriété type.\nUtilise des propriétés calculées pour déterminer la disposition du formulaire.\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nUn composant de type stepper pour naviguer à travers différentes sections de formulaire.\nStructure\n\nQStepper : Composant stepper de Quasar pour la navigation entre les sections.\nÉtapes générées dynamiquement en fonction de la propriété sections.\n\nFonctionnalités\n\nPrend en charge la navigation à travers les sections du formulaire.\nCrée dynamiquement des étapes basées sur les données fournies.\n\n\ntk-form-tabs\nAperçu\nDisposition de formulaire basée sur des onglets pour organiser les sections de formulaire.\nStructure\n\nQTabs : Conteneur pour les en-têtes des onglets.\nQTabPanels : Panneaux qui rendent le contenu de chaque onglet.\n\nFonctionnalités\n\nPermet de passer entre les sections du formulaire à l'aide d'onglets.\nGénère dynamiquement des onglets en fonction des données fournies.\n\n\ntk-form-base\nAperçu\nDisposition de formulaire de base avec un système de grille pour le placement des champs.\nStructure\n\nUtilise une classe .row pour organiser les champs en lignes.\nCrée dynamiquement des champs de formulaire en fonction de la propriété fields.\n\nFonctionnalités\n\nDisposition de grille flexible pour les champs de formulaire.\nRendu de composant personnalisé pour chaque champ.\n\n\nÉnumérations et Types\nFormTypes\nDéfinit différents types de dispositions de formulaire : Base, Étapes, Onglets.\n'BASE' = 0,\n'STEPS' = 1,\n'TABS' = 2,\nCRUDMode\nDéfinit les opérations CRUD : Créer, Lire, Mettre à jour.\nTicketFormField et TicketFormSection\nTypes définissant la structure des champs de formulaire et des sections.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur.html":{"url":"additional-documentation/documentation-utilisateur.html","title":"additional-page - Documentation utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDocumentation du système de validation\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{"url":"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html","title":"additional-page - Création et modification d'une identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCréation et Modification d'Identité dans le Système\nSommaire\n\nCréation et Modification d'Identité dans le Système\nSommaire\nCréation d'Identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nInformations de Base (inetOrgPerson)\nChamps obligatoires :\nChamps facultatifs :\n\n\n\n\nChamps Additionnels\nExemple de Corps de Requête\nExemple de requete avec cUrl\nÉtats (IdentityState)\nGestion Automatique du lifecycle\n\n\nRéponse Attendue\n\n\nModification de l'identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nRéponse Attendue\n\n\n\nCréation d'Identité\nPour créer une identité dans le système, suivez les instructions ci-dessous. Ces instructions sont destinées à des utilisateurs ayant une certaine connaissance technique, notamment en matière de requêtes HTTP.\nEndpoint pour la Création d'Identité\nURL: /management/identities : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure les informations de base de l'identité (inetOrgPerson), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nInformations de Base (inetOrgPerson)\nLes informations de base de l'identité sont définies dans l'objet inetOrgPerson. Les champs requis sont cn (Nom Commun), sn (Nom de Famille), uid (Identifiant Unique), et employeeNumber + employeeType (Identifiant Identité). Ces champs sont validés en dur.\nChamps obligatoires :\n\ncn  \nsn\nuid\nemployeeNumber\nemployeeType\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nChamps Additionnels\nPour les champs additionnels, assurez-vous que les valeurs sont conformes aux attentes du système. Voici comment il se structure :\nExample :{\n  \"additionalFields\": {\n    \"objectClasses\": [],\n    \"attributes\": {}\n  }\n}\nobjectClasses : Un tableau contenant les noms des objectClasses concernées. Par exemple, si vous attendez des informations supann, vous devez inclure une valeur supann en chaine de charactères dans ce tableau.\n\nattributes : Un objet contenant les attributs spécifiques à chaque objectClass. Par exemple, si vous attendez des informations supann, vous devez inclure un objet supann contenant les attributs spécifiques à cette objectClass.\n\n\nATTENTION : Les champs additionnels sont validés via des fichiers de configuration YAML spécifiques à chaque objectClass. Assurez-vous que les valeurs envoyées sont conformes à ces fichiers de configuration pour garantir le succès de la création de l'identité. Ces fichiers de configuration sont définis dans la documentation Validation d'identité et doivent être nommés selon le nom de l'objectClass qu'ils définissent, par exemple supann.yml pour l'objectClass supann.\nExemple de Corps de Requête\nVoici un exemple de corps de requête pour la création d'une identité avec les informations minimales requises et un état (state) défini à -1 pour indiquer une création :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"cn\": \"Nom Commun\",\n    \"sn\": \"Nom de Famille\",\n    \"uid\": \"Identifiant Unique\",\n    \"employeeNumber\": \"Identifiant Identité\"\n    \"employeeType\": \"Type Identité\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Exemple de requete avec cUrl\nExample :curl -X POST \"http:///identities\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"cn\": \"Nom Commun\",\n             \"sn\": \"Nom de Famille\",\n             \"uid\": \"Identifiant Unique\",\n             \"employeeNumber\": \"Identifiant Identité\",\n             \"employeeType\": \"Type Identité\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'États (IdentityState)\nLe state doit être défini à -1 pour indiquer une création. Par la suite, le système gère automatiquement l'état de l'identité en fonction des actions de validations ou de syncronisation effectuées sur celle-ci.\nGestion Automatique du lifecycle\nLe cycle de vie de l'identité (lifecycle) est géré automatiquement par le système. Vous n'avez pas besoin de le spécifier dans votre requête.\nRéponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\nModification de l'identité\nEndpoint pour la Création d'Identité\nMême procédure pour la validation, mais ici nous avons : \nURL: /management/identities/upsert : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure au moins la données (inetOrgPerson.uid) et (inetOrgPerson.employeeNumber + inetOrgPerson.employeeType), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nDe plus pour une modification, il specifier le state a -1\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"uid\": \"Identifiant Unique\",\n    \"employeeNumber\": \"Identifiant Identite\",\n    \"employeeType\": \"Type Identite\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Example :curl -X POST \"http:///identities/upsert\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"uid\": \"Identifiant Unique\",\n             \"employeeNumber\": \"Identifiant Identite\",\n             \"employeeType\": \"Type Identite\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'Réponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{"url":"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html","title":"additional-page - Validation des schemas complémentaires de l'identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nValidation d'Identité\nVue d'ensemble\nLe système de validation d'identité utilise des fichiers de configuration YAML pour définir des règles de validation pour différents types d'objets d'identité. Chaque fichier YAML correspond à une objectClass spécifique et définit les attributs requis et leurs types pour cette classe.\nValidation des champs InetOrgPerson\nLes champs de base de l'objet inetOrgPerson sont validés par défaut. \nChamps obligatoires :\n\ncn  \nsn\nuid\nemployeeNumber\nemployeeType\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nValidation des champs des schema additionnels\nFichiers de Configuration\nLe fichier de configuration YAML doit être nommé selon le nom de l'objectClass qu'il définit, par exemple supann.yml pour l'objectClass supann. Il doit être placé dans le dossier TBD.\nVous pouvez vous baser sur le template si dessous pour créer votre fichier YAML. Les champs $schema, type, properties et required sont obligatoires. Vpis ajouterez le champs désirés dans properties. Pour les champs requis, vous les listerez dans required.\nExemple Générique de Fichier YAML\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n    [Nom de l'attribut 1] :\n        description: \"[Description de l'attribut]\"\n        type: [Type de l'attribut]\n        [Autres options]\n    # plus de détails d'attributs...\nrequired:\n    - [Nom de l'attribut 1]\n    - [Nom de l'attribut 2]\n    # plus d'attributs requis...\nExemple de Fichier YAML (supann.yml)\nCe fichier définit la structure et les attributs requis pour l'objectClass supann.\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n  supannEmpId:\n    type: \"string\"\n    description: \"Employee ID\"\n  supannCivilite:\n    type: \"string\"\n    description: \"Title (Mr, Ms, etc.)\"\n  supannBirthName:\n    type: \"string\"\n    description: \"Birth name\"\n  supannBirthDate:\n    type: \"string\"\n    format: \"date\"\n    description: \"Date of birth\"\n  # plus d'attributs...\nrequired:\n  - \"supannEmpId\"\n  - \"supannCivilite\"\n  - \"supannBirthName\"Options\nChaque attribut peut avoir des options supplémentaires pour définir des règles de validation spécifiques. Les options sont définies en tant que clés dans le fichier YAML.\nArray (Tableau)\n\nensure: Assure que la valeur est toujours un tableau.\nExample :type: array\nensure: true\ncompact: Supprime les valeurs vides du tableau.\nExample :type: array\ncompact: true\nitems (of) : Définit le type des éléments du tableau.\nExample :type: array\nitems: \n  type: string\nmaxItems (max) : Définit le nombre maximum d'éléments du tableau.\nExample :type: array\nmaxItems: 5\nminItems (min) : Définit le nombre minimum d'éléments du tableau.\nExample :type: array\nminItems: 2\n\nBoolean (Booléen)\n\nPas de clés spécifiquesExample :type: boolean\n\nDate\n\nmaxDate (max): Définit la date maximum.Example :type: date\nmaxDate: '2024-01-01'\nminDate (min): Définit la date minimum.Example :type: date\nminDate: '2020-01-01'\n\nNumber (Nombre)\n\ninteger: Définit que la valeur doit être un entier.Example :type: number\ninteger: true\nmoreThan (exclusiveMinimum): Définit la valeur minimum.Example :type: number\nmoreThan: 10\nlessThan (exclusiveMaximum): Définit la valeur maximum.Example :type: number\nlessThan: 20\npositive: Définit que la valeur doit être positive.Example :type: number\npositive: true\nnegative: Définit que la valeur doit être négative.Example :type: number\nnegative: true\nmin (minimum): Définit la valeur minimum.Example :type: number\nmin: 5\nmax (maximum): Définit la valeur maximum.Example :type: number\nmax: 100\ntruncate: Tronque la valeur.Example :type: number\ntruncate: true\nround: Arrondi la valeur.Example :type: number\nround: true\n\nObject (Objet)\n\ncamelCase: Convertit les clés de l'objet en camelCase.Example :type: object\ncamelCase: true\nconstantCase: Convertit les clés de l'objet en CONSTANT_CASE.Example :type: object\nconstantCase: true\nnoUnknown (propertyNames): Définit que l'objet ne peut pas contenir de clés non définies.Example :type: object\nnoUnknown: true\n\nString (Chaîne de caractères)\n\nminLength (min): Définit la longueur minimum de la chaîne de caractères.Example :type: string\nminLength: 5\nmaxLength (max): Définit la longueur maximum de la chaîne de caractères.Example :type: string\nmaxLength: 20\npattern (matches or regex): Définit une expression régulière à respecter.Example :type: string\npattern: '^[a-zA-Z]+$'\nemail (format: 'email'): Définit que la chaîne de caractères doit être un email.Example :type: string\nformat: 'email'\nurl (format: 'url'): Définit que la chaîne de caractères doit être une URL.Example :type: string\nformat: 'url'\nlowercase: Convertit la chaîne de caractères en minuscule.Example :type: string\nlowercase: true\nuppercase: Convertit la chaîne de caractères en majuscule.Example :type: string\nuppercase: true\ntrim: Supprime les espaces en début et fin de chaîne de caractères.Example :type: string\ntrim: true\n\nCorps de la Requête\nPour valider une entrée, un objet JSON doit être fourni avec les champs suivants :\n\nstate: État de l'entrée, -1 pour une création.\ninetOrgPerson: Informations générales de la personne.\nadditionalFields: Contient objectClasses (un tableau de noms d'objectClass) et attributes (les attributs spécifiques pour chaque objectClass).\n\nExemple\nVoici un exemple de JSON à valider :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    // [Détails de inetOrgPerson]\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        // [Détails des attributs supann]\n      }\n    }\n  }\n}Remarques\nAssurez-vous que le fichier YAML correspondant à votre objectClass est disponible et correctement configuré.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
