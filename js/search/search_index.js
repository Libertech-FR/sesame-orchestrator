var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractController.html",[0,0.239,1,2.424]],["body/classes/AbstractController.html",[0,0.303,1,3.846,2,0.919,3,0.121,4,0.095,5,0.102,6,5.907,7,0.379,8,0.927,9,2.851,10,3.367,11,1.084,12,3.9,13,6.837,14,8.066,15,1.756,16,6.092,17,7.819,18,0.611,19,8.233,20,1.474,21,0.005,22,1.057,23,0.372,24,3.593,25,3.014,26,6.58,27,6.58,28,6.58,29,0.192,30,2.614,31,5.907,32,1.256,33,5.133,34,5.464,35,5.907,36,1.07,37,0.16,38,1.802,39,2.058,40,0.597,41,1.874,42,2.414,43,2.307,44,2.571,45,3.272,46,3.423,47,4.649,48,5.907,49,3.593,50,4.869,51,5.133,52,4.869,53,1.976,54,5.907,55,0.435,56,1.319,57,5.907,58,0.004,59,0.004]],["title/interfaces/AbstractControllerContext.html",[17,4.31,38,1.421]],["body/interfaces/AbstractControllerContext.html",[0,0.317,1,3.213,3,0.127,4,0.1,5,0.106,6,6.175,7,0.396,8,0.952,9,2.576,10,3.121,11,1.021,12,3.988,14,6.175,16,5.09,17,7.612,18,0.446,21,0.005,23,0.285,29,0.195,30,2.732,31,6.175,32,1.313,33,5.366,34,5.712,35,6.175,36,1.118,37,0.164,38,1.883,39,2.647,40,0.665,41,2.41,42,2.523,43,2.411,44,2.688,45,3.42,46,3.578,47,4.86,48,6.175,49,3.756,50,5.09,51,5.366,52,5.09,53,2.066,54,6.175,55,0.455,56,1.379,57,6.175,58,0.004,59,0.004,60,2.825,61,4.663,62,6.878]],["title/classes/AbstractQueueProcessor.html",[0,0.239,63,4.31]],["body/classes/AbstractQueueProcessor.html",[0,0.243,2,0.738,3,0.097,4,0.077,5,0.082,7,0.304,8,0.804,9,2.835,10,2.753,11,1.091,12,3.109,13,5.93,15,1.411,16,5.284,18,0.663,20,1.184,21,0.005,22,0.849,23,0.411,24,2.887,25,2.422,29,0.19,36,0.86,37,0.103,40,0.518,49,2.887,50,3.913,53,2.428,55,0.65,56,1.06,58,0.003,59,0.003,63,5.93,64,5.287,65,1.104,66,4.586,67,3.551,68,7.049,69,8.085,70,4.206,71,8.365,72,2.759,73,6.317,74,3.803,75,3.803,76,1.659,77,3.803,78,3.803,79,1.599,80,1.788,81,7.91,82,6.754,83,5.287,84,5.287,85,4.937,86,5.287,87,5.287,88,5.287,89,3.828,90,2.963,91,2.963,92,2.963,93,2.816,94,2.963,95,2.963,96,2.963,97,5.287,98,1.113,99,5.287,100,5.287,101,3.913,102,5.287,103,5.287,104,2.75,105,3.452,106,3.132,107,3.044,108,7.141,109,5.287,110,2.332,111,5.287,112,3.228,113,5.287,114,5.287,115,6.411,116,1.788,117,7.259,118,5.287,119,5.287,120,3.803,121,4.747,122,5.287]],["title/classes/AbstractSchema.html",[0,0.239,123,2.833]],["body/classes/AbstractSchema.html",[0,0.327,2,0.993,3,0.131,4,0.103,5,0.11,7,0.409,8,0.972,11,1.042,18,0.561,21,0.005,23,0.385,29,0.19,37,0.138,42,2.608,43,2.493,44,2.778,49,3.882,55,0.667,58,0.004,59,0.004,65,1.335,76,2.161,123,4.715,124,7.11,125,3.82,126,2.58,127,4.728,128,3.12,129,7.11,130,7.724,131,1.156,132,3.322,133,8.35,134,7.11,135,4.034,136,2.025,137,2.608,138,1.737,139,7.11]],["title/injectables/AbstractService.html",[66,2.424,140,1.35]],["body/injectables/AbstractService.html",[0,0.236,3,0.094,4,0.074,5,0.079,7,0.295,8,0.786,9,2.82,10,3.142,11,1.078,12,3.696,13,5.799,15,1.365,16,5.167,18,0.651,20,1.146,21,0.005,22,1.121,23,0.382,24,3.813,25,2.344,29,0.182,30,2.032,36,0.832,37,0.135,38,1.401,39,1.6,40,0.707,41,1.457,42,2.916,43,2.787,44,3.106,45,2.544,46,2.661,47,3.615,49,2.794,50,3.786,51,3.991,52,3.786,53,2.387,55,0.462,56,1.594,58,0.003,59,0.003,66,3.262,72,2.74,74,4.234,75,4.234,76,1.847,77,4.234,78,4.549,82,6.663,93,4.549,104,2.661,110,3.08,112,4.854,140,1.817,141,2.216,142,4.593,143,4.679,144,8.284,145,7.668,146,6.983,147,5.116,148,5.116,149,5.116,150,5.116,151,5.116,152,5.116,153,5.116,154,5.116,155,5.116,156,5.116,157,5.116,158,1.821,159,3.786,160,3.786,161,4.593,162,3.786,163,3.714,164,6.602,165,6.269,166,4.593,167,4.593,168,4.593,169,4.593,170,6.269,171,4.593,172,6.269,173,4.593,174,1.767,175,4.593,176,2.945,177,3.34,178,1.579,179,3.615,180,4.593,181,4.593,182,0.896,183,4.593,184,4.593,185,4.593,186,4.593,187,4.593]],["title/interfaces/AbstractServiceContext.html",[38,1.421,82,4.049]],["body/interfaces/AbstractServiceContext.html",[0,0.249,3,0.099,4,0.078,5,0.084,7,0.311,8,0.816,9,2.561,10,2.784,11,1.202,12,3.831,16,4.002,18,0.531,21,0.005,22,0.868,23,0.362,24,2.953,29,0.186,30,2.148,36,0.879,37,0.141,38,1.481,39,2.268,40,0.734,41,2.064,42,3,43,2.867,44,3.196,45,2.689,46,2.813,47,3.821,49,2.953,50,4.002,51,4.219,52,4.002,53,2.456,55,0.48,56,1.64,58,0.003,59,0.003,60,2.221,61,3.666,66,2.526,72,2.298,74,2.881,75,2.881,76,1.257,77,2.881,78,4.853,82,6.38,93,4.853,104,2.813,110,3.197,112,4.994,140,1.886,142,4.855,143,4.565,144,8.601,145,8.18,158,1.924,159,4.002,160,4.002,161,4.855,162,6.466,163,3.821,164,6.791,165,6.509,166,4.855,167,4.855,168,4.855,169,4.855,170,6.509,171,4.855,172,6.509,173,4.855,174,1.868,175,4.855,176,3.113,177,3.531,178,1.669,179,3.821,180,4.855,181,4.855,182,0.947,183,4.855,184,4.855,185,4.855,186,4.855,187,4.855,188,5.408]],["title/classes/AbstractSettingsService.html",[0,0.239,189,4.049]],["body/classes/AbstractSettingsService.html",[0,0.147,2,0.446,3,0.059,4,0.046,5,0.049,7,0.184,8,0.557,9,2.768,10,2.063,11,1.159,12,2.33,15,0.852,18,0.642,20,2.277,21,0.005,22,1.544,23,0.421,25,4.488,29,0.139,37,0.062,40,0.641,49,2.702,53,0.959,55,0.648,56,1.368,58,0.002,59,0.002,65,0.765,66,3.65,72,2.196,74,2.636,75,2.636,76,1.15,77,2.636,78,2.636,79,1.108,80,2.243,89,3.948,90,1.789,91,1.789,92,1.789,93,1.7,94,1.789,95,1.789,96,1.789,98,1.949,126,1.681,128,2.822,136,0.909,138,0.78,174,3.447,182,1.061,189,3.86,190,7.812,191,2.866,192,5.903,193,5.439,194,4.304,195,4.627,196,4.442,197,4.442,198,2.636,199,2.182,200,2.46,201,2.931,202,3.021,203,3.021,204,2.849,205,3.23,206,3.971,207,3.021,208,2.084,209,3.383,210,4.442,211,2.084,212,2.866,213,2.45,214,4.442,215,2.866,216,7.013,217,4.442,218,2.257,219,2.866,220,2.013,221,5.395,222,3.539,223,2.084,224,4.95,225,4.138,226,2.013,227,3.12,228,2.256,229,0.946,230,2.013,231,5.823,232,2.71,233,2.084,234,2.013,235,4.122,236,5.395,237,2.084,238,2.013,239,2.084,240,2.084,241,2.084,242,2.013,243,2.084,244,2.084,245,2.084,246,1.789,247,4.304,248,2.164,249,2.084,250,2.084,251,1.838,252,2.013,253,2.256,254,2.651,255,2.866,256,0.909,257,1.227,258,4.442,259,1.255,260,2.866,261,2.866,262,1.171,263,1.891,264,2.866,265,2.866,266,3.354,267,2.866,268,2.256,269,1.949]],["title/classes/AbstractSettingsService-1.html",[0,0.2,189,3.393,270,1.595]],["body/classes/AbstractSettingsService-1.html",[0,0.146,2,0.444,3,0.058,4,0.046,5,0.049,7,0.183,8,0.555,9,2.766,10,2.057,11,1.159,12,2.323,15,0.848,18,0.642,20,2.286,21,0.005,22,1.542,23,0.423,25,4.485,29,0.139,37,0.062,40,0.64,49,2.693,53,0.955,55,0.648,56,1.365,58,0.002,59,0.002,65,0.763,66,3.643,72,2.192,74,2.627,75,2.627,76,1.146,77,2.627,78,2.627,79,1.104,80,2.242,89,3.946,90,1.781,91,1.781,92,1.781,93,1.693,94,1.781,95,1.781,96,1.781,98,1.947,126,1.676,128,2.817,136,0.905,138,0.777,174,3.445,182,1.059,189,3.848,191,2.854,192,5.898,193,5.425,194,4.294,195,4.616,196,4.428,197,4.428,198,2.627,199,2.175,200,2.452,201,2.922,202,3.011,203,3.011,204,2.839,205,3.22,206,3.965,207,3.011,208,2.076,209,3.376,210,4.428,211,2.076,212,2.854,213,2.448,214,4.428,215,2.854,216,7.001,217,4.428,218,2.251,219,2.854,220,2.005,221,5.388,222,3.537,223,2.076,224,5.113,225,4.13,226,2.005,227,3.11,228,2.246,229,0.942,230,2.005,231,5.819,232,2.708,233,2.076,234,2.005,235,4.117,236,5.388,237,2.076,238,2.005,239,2.076,240,2.076,241,2.076,242,2.005,243,2.076,244,2.076,245,2.076,246,1.781,247,4.294,248,2.155,249,2.076,250,2.076,251,1.83,252,2.005,253,2.246,254,2.64,255,2.854,256,0.905,257,1.222,258,4.428,259,1.251,260,2.854,261,2.854,262,1.166,263,1.883,264,2.854,265,2.854,266,3.343,267,2.854,268,2.246,269,1.941,271,7.799,272,2.64]],["title/classes/ActivationDto.html",[0,0.239,273,4.049]],["body/classes/ActivationDto.html",[0,0.39,2,0.96,3,0.127,4,0.1,5,0.106,7,0.396,8,0.952,18,0.549,21,0.005,23,0.414,29,0.172,32,1.313,37,0.133,40,0.725,43,2.967,55,0.661,58,0.004,59,0.004,116,2.119,131,1.376,273,6.602,274,9.166,275,6.175,276,3.9,277,3.969,278,3.96,279,6.602,280,2.872,281,4.141,282,6.175,283,3.537,284,6.175,285,2.222,286,5.737,287,6.175,288,2.51,289,4.741,290,2.611,291,1.745,292,3.361]],["title/classes/AdditionalFieldsPart.html",[0,0.239,293,3.667]],["body/classes/AdditionalFieldsPart.html",[0,0.301,2,0.914,3,0.12,4,0.095,5,0.101,7,0.377,8,0.924,11,0.99,18,0.582,21,0.005,23,0.409,29,0.183,37,0.159,40,0.682,55,0.676,58,0.004,59,0.004,65,1.012,116,2.354,125,3.371,126,1.816,131,1.458,132,4.188,135,4.39,136,1.864,138,1.599,182,1.147,218,3.501,232,2.247,285,1.907,293,5.798,294,6.546,295,5.16,296,5.16,297,4.557,298,5.738,299,2.94,300,6.546,301,4.724,302,3.247,303,6.546,304,6.546,305,3.01,306,3.121,307,3.058,308,3.121,309,3.121,310,5.436,311,5.877,312,6.546]],["title/classes/AgentCreateQuestions.html",[0,0.239,313,3.84]],["body/classes/AgentCreateQuestions.html",[0,0.372,2,0.738,3,0.097,4,0.077,5,0.082,7,0.304,9,1.486,11,0.975,12,3.477,15,1.411,18,0.525,20,1.811,21,0.005,22,1.62,23,0.374,29,0.176,30,2.1,37,0.157,40,0.74,42,2.619,43,2.503,44,2.79,45,3.551,46,3.714,55,0.472,56,1.621,58,0.003,59,0.003,65,1.104,72,2.007,76,1.659,79,1.599,80,1.579,98,1.703,131,1.315,182,0.926,199,3.566,213,1.834,222,2.58,232,1.448,256,2.033,257,2.033,259,1.811,262,1.94,313,5.284,314,4.391,315,7.141,316,7.141,317,7.141,318,5.93,319,7.259,320,4.503,321,5.287,322,6.317,323,5.93,324,3.963,325,5.287,326,5.93,327,4.503,328,5.287,329,4.36,330,4.937,331,5.045,332,6.117,333,5.045,334,4.36,335,3.132,336,3.132,337,3.334,338,4.125,339,4.79,340,3.913,341,6.308,342,5.045,343,2.529,344,5.571,345,3.736,346,3.271,347,4.36,348,4.36,349,4.36,350,4.391,351,4.391,352,4.391,353,2.963,354,3.736,355,2.58,356,3.736,357,3.452,358,3.044,359,3.132,360,3.228,361,3.736,362,2.816]],["title/classes/Agents.html",[0,0.239,358,2.988]],["body/classes/Agents.html",[0,0.232,2,0.703,3,0.093,4,0.073,5,0.078,7,0.29,8,0.777,11,0.833,18,0.631,21,0.005,23,0.43,29,0.181,37,0.134,39,1.575,40,0.761,55,0.698,58,0.003,59,0.003,65,0.779,116,1.261,123,3.771,128,2.495,131,1.58,132,4.539,135,4.637,136,1.434,182,1.21,218,2.573,232,1.379,285,2.356,299,2.872,302,3.357,305,2.534,306,2.4,307,3.227,308,2.4,309,2.4,320,4.101,324,3.353,327,4.101,358,3.976,363,5.035,364,6.15,365,4.539,366,3.837,367,5.345,368,3.081,369,6.15,370,5.035,371,1.936,372,5.035,373,5.035,374,6.281,375,5.035,376,5.035,377,6.547,378,7.078,379,5.035,380,6.547,381,7.078,382,5.035,383,7.884,384,5.035,385,5.035,386,2.983,387,5.035,388,5.035,389,3.287,390,3.074,391,3.726,392,4.52,393,5.035]],["title/classes/AgentsCommand.html",[0,0.239,361,3.667]],["body/classes/AgentsCommand.html",[0,0.383,2,0.779,3,0.103,4,0.081,5,0.086,7,0.321,9,1.569,11,0.893,12,3.77,15,1.976,18,0.481,20,1.658,21,0.005,22,1.575,23,0.344,29,0.18,30,2.218,37,0.161,40,0.7,42,2.716,43,2.596,44,2.894,45,3.682,46,3.852,55,0.55,56,1.666,58,0.003,59,0.003,65,1.145,72,2.081,76,1.721,79,1.658,80,1.958,98,1.176,182,0.978,199,3.665,213,2.134,222,3.197,232,1.529,256,2.109,257,2.147,259,1.878,262,2.048,313,4.131,314,4.636,318,4.636,320,3.852,322,5.633,323,4.636,324,3.534,326,4.636,327,3.852,329,4.522,330,5.074,331,5.232,332,6.253,333,5.232,334,4.522,335,3.307,336,3.307,337,3.521,338,4.356,339,4.922,340,4.131,341,6.483,342,5.232,343,2.599,344,5.777,345,3.945,346,3.392,347,4.522,348,4.522,349,5.074,350,4.636,351,4.636,352,4.636,353,3.128,354,3.945,355,2.675,356,3.945,357,3.645,358,3.214,359,3.307,360,3.409,361,5.232,362,2.974,394,4.67,395,3.409,396,5.583,397,5.583,398,3.645]],["title/controllers/AgentsController.html",[399,1.478,400,4.31]],["body/controllers/AgentsController.html",[0,0.183,1,2.726,3,0.073,4,0.058,5,0.061,7,0.229,9,1.116,11,0.98,18,0.527,20,1.819,21,0.005,22,1.446,23,0.392,29,0.202,32,0.758,36,0.646,37,0.077,40,0.502,55,0.655,56,1.628,58,0.003,59,0.003,65,0.902,76,1.356,79,1.307,80,2.175,98,1.71,126,2.658,128,3.319,131,1.321,137,1.457,138,0.97,158,1.413,176,2.286,182,1.423,199,2.573,200,1.974,206,3.516,213,2.4,229,2.768,235,1.893,246,2.225,256,1.131,259,2.06,270,3.115,276,1.577,320,2.065,324,1.689,327,2.065,337,4.807,338,3.098,339,3.456,358,2.286,366,1.933,367,2.692,368,1.552,391,2.938,399,1.131,400,4.845,401,1.242,402,3.971,403,1.659,404,4.977,405,4.887,406,4.807,407,2.938,408,4.067,409,4.045,410,3.971,411,6.01,412,3.971,413,4.415,414,2.806,415,4.122,416,5.756,417,5.756,418,4.887,419,3.971,420,3.971,421,2.938,422,4.317,423,3.971,424,3.971,425,2.504,426,5.544,427,4.977,428,5.756,429,4.977,430,2.806,431,3.971,432,5.641,433,4.552,434,3.971,435,3.971,436,1.631,437,1.933,438,3.098,439,2.84,440,5.168,441,1.784,442,2.065,443,2.352,444,1.974,445,2.938,446,5.302,447,2.938,448,3.098,449,2.692,450,3.955,451,2.806,452,2.806,453,2.692,454,3.098,455,3.098,456,2.806,457,2.806,458,2.806,459,4.807,460,2.938,461,2.806,462,3.562,463,2.504,464,2.504,465,3.565,466,3.971,467,3.971,468,1.933,469,2.424,470,1.974,471,1.933,472,3.971,473,3.297,474,3.098,475,2.938,476,3.336,477,2.806,478,3.971,479,5.834,480,3.297,481,3.297,482,3.269,483,2.806,484,3.71,485,3.71,486,4.887,487,3.971,488,4.887,489,2.806,490,2.317,491,3.971,492,3.098,493,3.971,494,2.938]],["title/classes/AgentsCreateCommand.html",[0,0.239,344,4.049]],["body/classes/AgentsCreateCommand.html",[0,0.38,2,0.77,3,0.102,4,0.08,5,0.085,7,0.318,9,1.551,11,0.886,12,3.761,15,1.961,18,0.477,20,1.646,21,0.005,22,1.571,23,0.342,29,0.18,30,2.192,37,0.16,40,0.698,42,2.695,43,2.576,44,2.871,45,3.654,46,3.822,55,0.547,56,1.657,58,0.003,59,0.003,65,1.136,72,2.065,76,1.708,79,1.646,80,1.948,98,1.162,182,0.967,199,3.644,213,2.122,222,3.182,232,1.511,256,2.092,257,2.122,259,1.864,262,2.024,313,4.083,314,4.582,318,4.582,320,3.822,322,5.6,323,4.582,324,3.514,326,4.582,327,3.822,329,4.487,330,5.044,331,6.224,332,6.224,333,5.192,334,4.487,335,3.269,336,3.269,337,3.48,338,4.305,339,5.704,340,4.083,341,6.445,342,5.192,343,2.584,344,6.445,345,5.837,346,3.366,347,4.487,348,4.487,349,5.044,350,4.582,351,4.582,352,4.582,353,3.092,354,3.899,355,2.655,356,3.899,357,3.603,358,3.177,359,3.269,360,3.369,361,3.899,362,2.939,394,4.634,395,3.369,398,3.603,495,5.518,496,5.518]],["title/classes/AgentsCreateDto.html",[0,0.239,337,3.273]],["body/classes/AgentsCreateDto.html",[0,0.408,2,0.696,3,0.092,4,0.072,5,0.077,7,0.287,8,0.772,11,1.153,18,0.637,21,0.005,23,0.428,29,0.187,32,0.952,37,0.152,40,0.747,55,0.701,58,0.003,59,0.003,65,1.307,89,2.049,126,1.384,131,1.596,283,2.868,285,1.159,288,2.755,289,3.845,290,2.894,291,1.265,320,4.081,324,3.337,327,4.081,337,4.948,364,6.121,365,3.951,366,3.819,367,5.319,368,3.066,369,6.121,371,1.918,391,3.691,411,3.691,432,3.691,469,4.79,497,4.143,498,4.202,499,5.543,500,4.988,501,4.988,502,4.479,503,4.988,504,4.143,505,4.988,506,5.079,507,4.988,508,6.47,509,4.479,510,4.988,511,6.776,512,3.892,513,4.988,514,4.988,515,4.988,516,3.146,517,3.257,518,2.16,519,4.365,520,3.594,521,4.653,522,3.989,523,3.462,524,2.16,525,4.143,526,4.143,527,2.595,528,2.595,529,2.657,530,2.16,531,4.143,532,4.143]],["title/classes/AgentsDto.html",[0,0.239,411,3.84]],["body/classes/AgentsDto.html",[0,0.402,2,0.669,3,0.088,4,0.069,5,0.074,7,0.276,8,0.751,11,1.141,18,0.639,21,0.005,23,0.428,29,0.184,32,0.915,37,0.149,40,0.749,55,0.701,58,0.003,59,0.003,65,1.285,89,3.999,126,2.131,131,1.6,283,2.79,285,1.114,288,2.738,289,3.74,290,2.863,291,1.216,320,3.996,324,3.267,327,3.996,337,6.258,364,5.993,365,3.843,366,3.739,367,5.208,368,3.002,369,5.993,371,1.843,391,3.547,411,4.94,432,3.547,469,4.69,497,3.98,498,3.82,499,5.427,502,4.303,504,3.98,506,4.94,508,6.39,509,4.303,511,6.692,512,3.739,516,3.023,517,3.129,518,2.076,519,4.311,520,3.519,521,4.526,522,3.905,523,3.413,524,2.076,525,3.98,526,3.98,527,2.493,528,2.493,529,2.553,530,2.076,531,3.98,532,3.98,533,3.547,534,4.793,535,4.793,536,4.793,537,4.793,538,4.793,539,4.793,540,4.793,541,4.793,542,4.793,543,4.793]],["title/modules/AgentsModule.html",[178,1.601,544,3.273]],["body/modules/AgentsModule.html",[0,0.315,3,0.126,4,0.099,5,0.106,21,0.005,22,1.099,29,0.204,36,1.112,37,0.133,58,0.004,59,0.004,136,1.948,178,2.821,339,6.199,358,3.938,361,4.834,392,7.572,400,7.593,401,2.638,465,6.142,544,6.38,545,2.962,546,3.074,547,3.196,548,3.196,549,2.91,550,4.189,551,4.272,552,6.142,553,6.142,554,6.142,555,3.94,556,2.91,557,3.134,558,6.841,559,3.938,560,5.337,561,6.841,562,6.841,563,3.402,564,4.314,565,6.841,566,3.938,567,6.142]],["title/injectables/AgentsService.html",[140,1.35,339,3.074]],["body/injectables/AgentsService.html",[0,0.153,3,0.061,4,0.048,5,0.052,7,0.192,8,0.576,9,2.461,10,2.119,11,1.15,12,2.393,15,0.889,18,0.633,20,2.219,21,0.005,22,1.46,23,0.42,25,4.517,29,0.179,36,0.542,37,0.065,40,0.371,49,2.793,55,0.659,56,1.026,58,0.002,59,0.002,65,0.791,66,3.713,72,2.234,74,2.724,75,2.724,76,1.189,77,2.724,78,2.724,79,1.145,80,2.202,89,3.978,90,1.867,91,1.867,92,1.867,93,1.775,94,1.867,95,1.867,96,1.867,98,1.883,125,1.369,126,2.089,128,2.99,136,0.949,137,1.222,138,0.814,140,1.331,141,1.443,174,3.466,192,5.955,194,4.403,198,2.724,199,2.745,200,2.543,201,3.03,202,3.123,203,3.123,204,2.945,205,3.339,206,4.452,207,3.123,208,2.176,209,3.45,211,2.176,213,2.37,220,2.102,221,5.458,222,3.625,223,2.176,224,5.009,225,4.22,226,2.102,227,4.403,229,1.516,230,2.102,231,5.953,232,2.726,233,2.176,234,2.102,235,4.175,236,5.458,237,2.176,238,2.102,239,2.176,240,2.176,241,2.176,242,2.102,243,2.176,244,2.176,245,2.176,246,1.867,247,4.403,249,2.176,250,2.176,251,1.919,252,2.102,256,0.949,259,1.91,269,2.035,337,4.403,339,3.03,358,1.919,508,3.614,560,2.6,568,3.333,569,3.333,570,3.333,571,3.333,572,2.992,573,2.102,574,3.333,575,2.6,576,2.768,577,2.768,578,2.992,579,3.333,580,3.333,581,3.333,582,3.333,583,5.115,584,3.333,585,3.333,586,3.333,587,5.115,588,3.333,589,3.333,590,3.333,591,3.333,592,3.333,593,3.333]],["title/classes/AgentsUpdateDto.html",[0,0.239,432,3.84]],["body/classes/AgentsUpdateDto.html",[0,0.436,2,0.848,3,0.112,4,0.088,5,0.094,21,0.005,23,0.413,29,0.197,32,1.16,37,0.168,40,0.747,55,0.681,58,0.004,59,0.004,65,1.414,126,1.685,283,2.539,285,1.412,288,2.834,289,4.385,290,3.041,291,1.541,320,3.16,324,2.584,327,3.16,337,4.935,364,4.739,366,2.957,367,4.118,368,2.374,369,4.739,391,4.495,411,4.495,432,5.791,469,3.709,497,5.044,498,3.891,508,6.46,511,6.766,518,2.63,519,4.618,520,3.966,521,5.305,522,4.401,523,3.697,524,2.63,525,5.044,526,5.044,527,3.16,528,3.16,529,3.236,530,2.63,531,5.044,532,6.498]],["title/classes/AllExceptionFilter.html",[0,0.239,594,4.31]],["body/classes/AllExceptionFilter.html",[0,0.324,2,0.983,3,0.13,4,0.102,5,0.109,7,0.406,10,2.398,11,0.85,18,0.457,20,1.577,21,0.005,22,1.131,23,0.292,29,0.175,36,1.145,37,0.137,56,1.413,58,0.004,59,0.004,67,4.27,79,1.923,98,1.483,158,2.507,182,1.623,262,3.537,277,3.718,343,2.204,355,2.545,408,3.527,476,2.894,594,7.692,595,8.587,596,7.044,597,7.692,598,7.131,599,5.841,600,8.007,601,7.044,602,4.775,603,4.301,604,5.85,605,5.495,606,5.85,607,5.85,608,6.324,609,6.324,610,6.324,611,7.044,612,7.044,613,4.977]],["title/classes/ApiSession.html",[0,0.239,614,3.667]],["body/classes/ApiSession.html",[0,0.312,2,0.945,3,0.125,4,0.098,5,0.105,7,0.39,8,0.943,11,0.816,15,1.806,18,0.634,20,1.516,21,0.005,22,1.087,23,0.405,37,0.131,39,2.117,40,0.74,55,0.696,58,0.004,59,0.004,76,2.429,126,2.524,182,1.186,229,2.482,327,4.733,366,4.429,614,5.92,615,9.958,616,6.076,617,4.733,618,8.378,619,4.338,620,8.378,621,6.076,622,6.076,623,6.076,624,6.768,625,6.076]],["title/controllers/AppController.html",[399,1.478,626,4.31]],["body/controllers/AppController.html",[0,0.199,1,2.899,3,0.08,4,0.063,5,0.067,7,0.249,11,0.749,18,0.403,20,1.39,21,0.005,22,1.48,23,0.257,25,2.843,29,0.178,32,0.826,36,0.703,37,0.084,40,0.527,43,1.516,53,1.298,55,0.61,56,1.591,58,0.003,59,0.003,65,0.96,76,1.005,79,1.39,80,1.606,98,1.941,104,2.249,110,2.737,116,1.554,131,1.009,158,1.539,182,1.39,206,4.271,213,1.594,229,2.151,256,1.231,259,1.097,277,1.872,280,1.864,302,2.144,367,2.931,399,2.067,401,1.352,408,3.961,413,3.857,437,2.104,444,2.15,470,2.15,490,1.717,573,2.727,626,5.154,627,4.323,628,4.593,629,4.323,630,3.59,631,4.658,632,4.323,633,6.206,634,6.518,635,4.323,636,6.589,637,5.606,638,5.572,639,5.13,640,5.485,641,4.323,642,7.209,643,5.606,644,6.965,645,4.323,646,4.323,647,6.206,648,6.206,649,6.206,650,4.385,651,4.385,652,4.323,653,5.572,654,4.207,655,4.052,656,6.206,657,6.639,658,4.593,659,7.851,660,4.385,661,6.518,662,5.664,663,5.154,664,5.186,665,7.26,666,6.206,667,4.445,668,5.154,669,5.572,670,3.882,671,3.373,672,6.206,673,3.389,674,5.154,675,3.914,676,3.373,677,4.323,678,3.59,679,2.931,680,3.373,681,2.303,682,4.323,683,6.206,684,6.206,685,4.323,686,4.323,687,4.323,688,4.323,689,6.206,690,4.323,691,6.206,692,6.206,693,6.206,694,4.323,695,2.823,696,4.323,697,4.323,698,2.727,699,3.882,700,4.323,701,4.323,702,4.323,703,6.206,704,4.323,705,3.373,706,4.323,707,7.26,708,4.323,709,7.26,710,4.323,711,4.323,712,6.206,713,6.206,714,6.206,715,4.323]],["title/modules/AppModule.html",[178,1.601,716,4.049]],["body/modules/AppModule.html",[0,0.185,3,0.074,4,0.058,5,0.062,10,1.368,21,0.005,23,0.166,24,2.193,29,0.211,30,1.596,36,0.653,37,0.078,53,1.206,56,1.18,58,0.003,59,0.003,70,4.582,80,1.886,85,5.864,104,3.987,105,2.623,106,2.38,107,2.313,115,3.606,116,1.006,120,2.14,136,1.144,138,1.437,143,1.955,159,2.972,160,2.972,163,1.877,178,2.148,182,1.429,222,2.126,259,1.019,285,1.896,401,1.841,416,2.723,417,2.723,442,2.089,461,2.838,545,1.739,546,1.805,547,1.877,548,1.877,549,1.709,550,3.19,551,1.877,555,2.749,556,1.709,557,1.84,559,2.313,563,4.492,566,4.908,594,3.336,599,4.391,626,5.782,640,5.566,670,3.606,716,7.737,717,3.606,718,3.606,719,3.606,720,6.038,721,6.038,722,6.038,723,5.78,724,6.651,725,4.017,726,3.606,727,3.336,728,6.651,729,4.017,730,4.017,731,2.972,732,2.723,733,3.606,734,3.134,735,4.017,736,5.884,737,6.251,738,5.884,739,5.884,740,3.606,741,4.017,742,4.886,743,4.017,744,3.606,745,4.59,746,4.017,747,3.336,748,4.017,749,3.134,750,5.884,751,4.017,752,4.92,753,2.972,754,3.606,755,2.972,756,4.017,757,4.017,758,4.017,759,4.017,760,2.723,761,4.017,762,2.623,763,3.606,764,3.606,765,3.336,766,4.017,767,4.017,768,4.017,769,4.017,770,3.134,771,4.017,772,4.017,773,4.017,774,6.024,775,2.193,776,2.533,777,4.017,778,2.972,779,4.017,780,3.336,781,3.606,782,3.606,783,4.017,784,4.017,785,2.723,786,6.963,787,6.366,788,4.017,789,6.963,790,2.313,791,2.533,792,3.606,793,4.017,794,5.884,795,4.017,796,5.282,797,4.017,798,4.017,799,4.017,800,3.134,801,4.017,802,3.336,803,4.017,804,4.017,805,4.017,806,4.017,807,2.623,808,3.336,809,3.134,810,4.017,811,3.606,812,4.017,813,4.017,814,3.606,815,5.282,816,3.606,817,3.606,818,3.606,819,3.606,820,3.606,821,3.606,822,2.623,823,3.606,824,3.606,825,2.723,826,2.193,827,3.606,828,3.606,829,3.606,830,3.606,831,3.606,832,4.017,833,3.606,834,3.606,835,4.017,836,4.017,837,4.017,838,4.017,839,4.017,840,4.017,841,4.017,842,5.98,843,6.882,844,4.017]],["title/injectables/AppService.html",[140,1.35,640,3.388]],["body/injectables/AppService.html",[0,0.128,3,0.051,4,0.04,5,0.043,7,0.159,8,0.498,9,2.516,10,1.882,11,0.931,12,3.26,15,1.181,18,0.589,20,1.238,21,0.005,22,1.437,23,0.351,29,0.173,30,1.1,36,0.451,37,0.134,38,1.513,39,0.867,40,0.732,41,1.797,53,1.66,55,0.6,56,1.658,58,0.002,59,0.002,65,0.684,66,3.862,67,1.378,72,2.383,74,2.357,75,2.357,76,1.284,77,2.357,78,2.357,79,0.991,80,1.829,89,3.021,90,1.552,91,1.552,92,1.552,93,1.476,94,1.552,95,1.552,96,1.552,98,1.91,110,1.952,131,0.451,137,1.016,140,1.151,141,1.2,174,2.18,182,0.968,213,2.382,229,1.637,256,0.789,257,1.065,259,1.402,262,1.016,270,1.016,276,1.758,280,1.329,283,2.31,285,1.029,299,1.384,355,1.997,395,1.692,409,1.2,437,2.154,490,1.758,530,2.733,549,3.411,619,3.289,628,4.67,631,1.476,637,6.228,639,3.853,640,3.608,642,7.499,643,6.117,650,1.958,651,1.958,654,5.436,655,5.235,657,4.504,658,6.862,660,6.117,667,1.552,679,5.436,760,1.878,762,1.809,775,3.446,790,2.548,791,3.98,826,2.417,845,2.05,846,3.746,847,5.738,848,4.426,849,4.924,850,4.986,851,6.023,852,4.426,853,3.453,854,5.738,855,2.771,856,6.256,857,6.983,858,1.624,859,6.614,860,5.197,861,2.771,862,4.67,863,4.357,864,4.67,865,3.453,866,2.771,867,5.105,868,4.311,869,2.771,870,4.089,871,4.75,872,6.256,873,3.453,874,5.738,875,4.67,876,3.98,877,3.98,878,3.275,879,4.67,880,3.453,881,3.127,882,3.453,883,3.127,884,2.771,885,3.127,886,2.622,887,4.67,888,2.091,889,3.453,890,4.311,891,3,892,4.311,893,4.986,894,3.453,895,2.771,896,2.161,897,1.692,898,1.809,899,1.878,900,1.747,901,1.958,902,1.441,903,2.05,904,4.089,905,2.161,906,3.453,907,1.958,908,2.05,909,2.05,910,3.374,911,2.05,912,2.05,913,1.809,914,2.05,915,3.275,916,2.161,917,3.453,918,2.161,919,2.161,920,3.453,921,2.161,922,2.161,923,2.161,924,2.161,925,2.161,926,2.161,927,2.161,928,2.161,929,2.161,930,2.161,931,2.161,932,3.275,933,2.161,934,2.161,935,2.05,936,2.161,937,2.161,938,2.161,939,2.161,940,2.161,941,2.161,942,2.05,943,2.161,944,2.161,945,2.161,946,2.161,947,1.747,948,1.692,949,2.161,950,2.161,951,3.453,952,2.791,953,3.453,954,3.453,955,4.311,956,2.161,957,3.127,958,2.161,959,3.453,960,1.809,961,2.161,962,2.161,963,2.05,964,3.453,965,4.311,966,3.485,967,3.453,968,2.161,969,2.161,970,2.161,971,2.161,972,1.878,973,2.161,974,3.274,975,2.161,976,1.809,977,2.161,978,1.878,979,2.161,980,2.05,981,2.05,982,1.878,983,2.161,984,1.878]],["title/classes/AskTokenDto.html",[0,0.239,985,4.049]],["body/classes/AskTokenDto.html",[0,0.396,2,0.987,3,0.13,4,0.102,5,0.109,7,0.407,8,0.969,18,0.559,21,0.005,23,0.356,29,0.175,32,1.35,37,0.137,40,0.7,55,0.666,58,0.004,59,0.004,131,1.399,163,4.021,276,3.418,278,4.07,280,2.899,288,2.541,290,2.863,291,1.793,292,3.418,985,6.714,986,9.278,987,6.348,988,5.271,989,5.198,990,5.232,991,8.606,992,8.606,993,7.07,994,7.07,995,6.714,996,7.07]],["title/controllers/AuthController.html",[399,1.478,997,4.31]],["body/controllers/AuthController.html",[0,0.211,1,3.023,3,0.084,4,0.066,5,0.071,7,0.264,9,1.289,11,0.983,12,2.883,15,1.224,18,0.529,20,1.824,21,0.005,22,1.308,23,0.369,29,0.201,30,1.821,32,0.875,36,0.746,37,0.089,40,0.591,55,0.661,56,1.634,58,0.003,59,0.003,65,1.001,72,1.289,76,1.065,79,1.449,80,2.178,98,1.716,127,2.331,131,1.325,143,2.231,158,1.632,163,4.166,176,2.639,177,2.993,182,1.314,213,2.404,229,1.358,256,1.306,259,2.066,281,3.247,358,2.639,367,3.108,371,2.488,399,1.306,401,1.434,403,1.916,408,4.078,409,3.721,413,4.197,436,1.883,439,2.231,441,2.06,444,2.28,484,3.65,575,3.577,671,3.577,673,4.691,681,4.339,740,4.116,775,2.503,800,3.577,901,3.239,902,2.385,997,5.374,998,4.585,999,5.809,1000,6.471,1001,6.471,1002,5.523,1003,4.585,1004,6.781,1005,4.585,1006,5.809,1007,6.471,1008,5.756,1009,4.585,1010,4.585,1011,5.084,1012,4.585,1013,5.048,1014,3.085,1015,6.765,1016,8.147,1017,4.585,1018,4.585,1019,4.585,1020,5.048,1021,3.023,1022,5.374,1023,4.585,1024,4.585,1025,4.585,1026,6.471,1027,2.658,1028,3.085,1029,3.218,1030,5.809,1031,4.585,1032,4.585,1033,4.585,1034,3.951,1035,3.393,1036,3.108,1037,7.499,1038,4.585,1039,4.585,1040,3.577,1041,3.239,1042,3.239,1043,4.585,1044,4.585,1045,4.585,1046,4.585,1047,4.585,1048,7.314,1049,4.585,1050,4.585,1051,4.585,1052,4.585,1053,6.471,1054,4.081,1055,6.471,1056,4.585,1057,4.585,1058,4.585,1059,4.585,1060,6.471,1061,5.374,1062,3.807,1063,4.585,1064,4.585,1065,4.116,1066,4.585,1067,4.585,1068,4.585,1069,4.585,1070,4.585,1071,4.585,1072,4.585]],["title/modules/AuthModule.html",[178,1.601,1073,3.667]],["body/modules/AuthModule.html",[0,0.279,3,0.111,4,0.088,5,0.094,21,0.005,29,0.207,36,0.985,37,0.117,58,0.004,59,0.004,80,1.727,85,6.012,107,3.486,178,2.667,401,2.443,544,6.103,545,2.622,546,2.721,547,2.829,548,2.829,549,2.575,550,3.96,551,4.038,555,3.648,556,2.575,557,2.774,563,4.541,566,4.496,728,6.743,774,5.518,997,7.178,1034,6.286,1036,4.105,1073,7.367,1074,5.436,1075,5.436,1076,5.436,1077,5.436,1078,6.561,1079,7.55,1080,7.55,1081,6.055,1082,6.055,1083,5.436,1084,5.028,1085,6.055,1086,5.028,1087,6.055,1088,5.028,1089,4.481,1090,6.055,1091,6.055,1092,5.436,1093,6.055,1094,6.055,1095,6.055,1096,6.055]],["title/injectables/AuthService.html",[140,1.35,1034,3.169]],["body/injectables/AuthService.html",[0,0.125,3,0.05,4,0.039,5,0.067,7,0.156,8,0.489,9,2.775,10,1.853,11,1.037,12,3.154,15,1.16,18,0.619,20,1.713,21,0.005,22,1.228,23,0.378,25,1.99,29,0.192,30,1.075,36,0.44,37,0.052,40,0.7,42,0.993,43,0.949,44,1.058,53,1.305,55,0.642,56,1.784,58,0.002,59,0.002,65,0.672,66,3.833,67,1.346,68,5.387,72,2.235,73,5.186,74,2.314,75,2.314,76,2.184,77,2.314,78,2.314,79,0.973,80,2.122,89,2.991,90,1.517,91,1.517,92,1.517,93,1.442,94,1.517,95,1.517,96,1.517,98,1.611,104,1.408,105,1.768,106,1.604,110,1.916,116,1.363,126,2.02,127,1.376,140,1.13,141,1.172,163,2.542,174,2.356,182,1.67,213,2.317,222,1.966,229,2.431,235,1.291,256,0.771,257,2.622,259,2.363,262,2.285,263,4.04,281,3.853,299,2.277,320,1.408,324,3.254,327,2.831,339,4.531,340,2.003,346,1.24,353,1.517,358,1.559,395,1.653,490,1.726,560,2.112,576,2.248,577,2.248,614,1.913,617,3.24,631,1.442,634,3.901,790,1.559,858,2.671,893,2.945,898,1.768,899,1.835,900,1.707,901,1.913,902,1.408,910,1.653,947,1.707,948,1.653,952,1.707,999,3.901,1002,3.689,1004,5.387,1011,2.945,1034,2.653,1040,2.112,1041,1.913,1042,1.913,1054,4.3,1065,7.989,1089,2.003,1097,2.707,1098,5.442,1099,5.442,1100,5.442,1101,5.442,1102,5.442,1103,5.442,1104,4.345,1105,5.442,1106,4.345,1107,4.345,1108,4.345,1109,4.824,1110,7.649,1111,4.345,1112,4.345,1113,2.707,1114,4.345,1115,2.707,1116,2.707,1117,2.707,1118,4.345,1119,2.707,1120,2.707,1121,4.345,1122,2.707,1123,4.345,1124,2.707,1125,2.501,1126,3.215,1127,2.707,1128,5.968,1129,2.707,1130,4.345,1131,4.345,1132,2.707,1133,3.901,1134,4.345,1135,3.901,1136,2.707,1137,2.707,1138,3.608,1139,3.215,1140,3.215,1141,2.707,1142,2.707,1143,2.707,1144,3.901,1145,2.431,1146,2.707,1147,1.318,1148,2.248,1149,3.39,1150,3.608,1151,2.707,1152,2.707,1153,2.112,1154,2.112,1155,2.707,1156,2.112,1157,4.345,1158,2.707,1159,2.707,1160,2.707,1161,2.707,1162,2.707,1163,2.707,1164,1.707,1165,2.003,1166,2.707,1167,2.707,1168,2.707,1169,2.707,1170,4.345,1171,2.707,1172,4.859,1173,2.707,1174,4.519,1175,2.707,1176,6.228,1177,2.707,1178,2.707,1179,2.707,1180,2.707,1181,2.707,1182,2.707,1183,2.707,1184,4.345,1185,2.707,1186,2.707,1187,4.345,1188,2.707,1189,2.707,1190,2.707,1191,4.345,1192,2.707,1193,2.707,1194,2.707,1195,2.707,1196,2.707,1197,2.707,1198,4.345,1199,2.707,1200,2.707,1201,2.707,1202,4.345,1203,2.003,1204,2.707,1205,2.707,1206,3.608,1207,4.345,1208,6.228,1209,4.885,1210,2.707,1211,2.707,1212,2.707,1213,2.707,1214,2.707,1215,2.707,1216,2.707,1217,2.431,1218,2.707,1219,2.707,1220,2.707,1221,2.707,1222,2.707,1223,2.431,1224,4.345,1225,2.707,1226,2.707,1227,2.707,1228,2.431]],["title/interfaces/AutoIncrementPluginOptions.html",[38,1.421,1229,3.84]],["body/interfaces/AutoIncrementPluginOptions.html",[3,0.093,4,0.073,5,0.078,7,0.291,8,0.78,11,1.236,21,0.005,22,1.27,23,0.418,29,0.103,37,0.153,38,1.898,40,0.751,41,2.682,42,1.857,43,1.775,44,1.978,58,0.003,59,0.003,60,2.079,125,2.847,126,2.359,138,1.236,198,4.529,209,4.213,269,5.192,270,2.543,276,2.753,299,3.078,305,1.857,346,2.319,490,2.753,644,4.699,808,5.757,825,4.699,858,3.267,877,4.371,978,4.699,1229,5.13,1230,4.203,1231,4.203,1232,6.487,1233,7.061,1234,7.633,1235,5.764,1236,7.061,1237,7.633,1238,7.633,1239,7.396,1240,7.096,1241,6.223,1242,7.061,1243,6.223,1244,7.638,1245,4.526,1246,8.733,1247,6.223,1248,6.223,1249,6.223,1250,6.223,1251,4.764,1252,6.223,1253,4.898,1254,5.757,1255,6.223,1256,6.223,1257,6.223,1258,3.576,1259,3.746,1260,4.203,1261,4.203]],["title/interfaces/AutoIncrementPluginTrackerSpec.html",[38,1.421,1261,4.31]],["body/interfaces/AutoIncrementPluginTrackerSpec.html",[3,0.108,4,0.085,5,0.091,7,0.338,8,0.862,21,0.005,22,1.23,23,0.388,29,0.12,37,0.165,38,2.097,40,0.747,41,2.666,42,2.156,43,2.06,44,2.296,58,0.003,59,0.003,60,2.414,125,2.414,126,2.125,138,1.435,198,5.208,209,4.398,269,4.677,270,2.156,276,2.334,299,2.929,305,2.81,346,2.692,490,2.334,644,6.121,808,4.88,825,3.984,877,3.706,978,3.984,1229,4.349,1230,4.88,1231,4.88,1232,6.603,1233,4.88,1234,5.276,1235,3.984,1236,4.88,1237,5.276,1238,5.276,1239,7.076,1240,6.681,1241,5.276,1242,6.361,1243,5.276,1244,8.324,1245,3.837,1246,8.619,1247,5.276,1248,5.276,1249,5.276,1250,5.276,1251,4.292,1252,5.276,1253,4.152,1254,4.88,1255,5.276,1256,5.276,1257,5.276,1258,4.152,1259,4.349,1260,4.88,1261,6.361]],["title/interfaces/BackendResultInfoInterface.html",[38,1.421,1262,4.31]],["body/interfaces/BackendResultInfoInterface.html",[3,0.136,4,0.107,5,0.114,7,0.425,8,0.995,11,1.182,21,0.005,23,0.392,37,0.171,38,2.42,40,0.711,41,2.79,58,0.004,59,0.004,60,3.034,218,3.522,229,2.903,277,4.337,343,3.065,355,2.669,1262,8.137,1263,6.134,1264,5.763,1265,5.466,1266,4.823,1267,6.134]],["title/interfaces/BackendResultInterface.html",[38,1.421,1265,3.84]],["body/interfaces/BackendResultInterface.html",[3,0.134,4,0.106,5,0.113,7,0.42,8,0.986,11,1.176,21,0.005,23,0.404,37,0.17,38,2.4,40,0.708,41,2.777,58,0.004,59,0.004,60,2.994,218,2.715,229,2.159,277,4.321,343,2.28,355,3.524,1262,8.511,1263,6.052,1264,5.685,1265,6.486,1266,6.368,1267,8.1]],["title/classes/BackendsCommand.html",[0,0.239,1268,4.049]],["body/classes/BackendsCommand.html",[0,0.368,2,0.875,3,0.115,4,0.091,5,0.097,7,0.361,9,1.761,11,0.963,12,3.863,15,2.13,18,0.518,20,1.787,21,0.005,22,1.485,23,0.331,29,0.179,30,2.488,37,0.155,40,0.671,42,2.928,43,2.798,44,3.119,45,3.969,46,4.152,55,0.581,58,0.004,59,0.004,65,1.234,72,1.761,76,1.456,79,1.787,80,2.113,98,1.319,182,1.398,213,2.256,222,3.341,256,2.273,259,1.589,281,2.713,285,1.456,329,4.874,330,5.363,334,4.874,335,3.711,336,3.711,346,3.656,347,4.874,348,4.874,349,5.363,359,3.711,360,3.825,362,3.337,394,5.033,395,3.825,398,4.09,1268,6.227,1269,5.625,1270,6.265,1271,6.265,1272,5.955,1273,4.888,1274,5.625,1275,6.628,1276,3.259,1277,5.203,1278,5.625,1279,5.625,1280,4.247]],["title/controllers/BackendsController.html",[399,1.478,1281,4.31]],["body/controllers/BackendsController.html",[0,0.153,3,0.061,4,0.048,5,0.051,7,0.192,9,0.936,10,1.74,11,0.958,15,0.889,18,0.489,20,1.686,21,0.005,22,1.209,23,0.312,25,1.525,29,0.196,32,0.636,36,0.541,37,0.065,39,2.355,40,0.739,41,1.771,53,2.485,55,0.641,56,1.756,58,0.002,59,0.002,72,1.748,73,4.217,76,1.188,79,1.145,80,2.241,98,1.585,104,1.732,105,2.174,106,1.972,110,2.744,112,4.261,116,0.834,120,1.774,131,1.224,137,1.221,138,0.813,143,1.621,158,1.185,162,2.464,163,2.388,174,1.15,182,1.616,213,1.792,229,2.594,257,1.28,259,1.909,262,1.221,276,2.772,285,0.774,339,3.685,343,1.599,355,1.847,358,1.917,399,0.948,401,1.042,403,1.392,408,4.004,409,4.045,413,4.164,436,1.368,439,1.621,441,1.496,573,3.223,575,2.598,603,3.798,613,3.611,671,2.598,673,4.338,681,4.01,871,3.028,907,2.353,957,3.611,1013,3.988,1020,3.988,1021,2.388,1029,2.542,1041,2.353,1061,2.765,1062,2.765,1125,1.917,1139,5.164,1140,3.782,1251,1.866,1266,3.337,1272,4.217,1277,2.765,1280,2.257,1281,4.245,1282,3.33,1283,6.221,1284,6.221,1285,6.221,1286,5.111,1287,6.221,1288,3.33,1289,5.795,1290,9.224,1291,3.33,1292,3.717,1293,5.164,1294,6.265,1295,3.33,1296,3.33,1297,5.795,1298,6.221,1299,6.221,1300,6.221,1301,6.759,1302,3.33,1303,3.988,1304,5.111,1305,3.33,1306,3.33,1307,3.33,1308,4.589,1309,3.611,1310,4.589,1311,5.111,1312,3.47,1313,3.223,1314,2.488,1315,5.111,1316,3.988,1317,4.245,1318,3.33,1319,3.33,1320,3.33,1321,6.978,1322,3.988,1323,4.589,1324,4.589,1325,3.33,1326,3.33,1327,5.795,1328,3.33,1329,3.33,1330,5.111,1331,3.33,1332,5.111,1333,3.33,1334,3.33,1335,2.989,1336,3.33,1337,5.111,1338,2.464,1339,2.989,1340,1.972,1341,3.33,1342,3.33,1343,3.33,1344,6.978,1345,5.111,1346,6.221,1347,3.33,1348,3.33,1349,5.111,1350,2.989,1351,3.611,1352,3.33,1353,3.33,1354,3.33,1355,3.33,1356,3.33,1357,6.978,1358,6.978,1359,3.33,1360,6.265,1361,3.33,1362,3.33,1363,3.33,1364,3.33,1365,3.33,1366,3.33,1367,3.33,1368,3.33,1369,3.33,1370,2.989,1371,3.988,1372,3.33,1373,3.988,1374,3.33,1375,3.988,1376,3.33,1377,3.33,1378,3.33,1379,3.33,1380,3.33,1381,3.33,1382,3.33,1383,3.33,1384,2.989,1385,2.989,1386,2.989,1387,3.33,1388,3.33,1389,3.33,1390,3.33,1391,4.589,1392,3.33,1393,3.33,1394,3.33,1395,3.33,1396,3.33,1397,3.33,1398,3.33,1399,3.33,1400,3.611,1401,3.33]],["title/modules/BackendsModule.html",[178,1.601,1402,3.388]],["body/modules/BackendsModule.html",[0,0.299,3,0.12,4,0.094,5,0.1,21,0.005,29,0.206,36,1.057,37,0.126,58,0.004,59,0.004,107,3.743,178,2.757,401,2.556,544,6.217,545,2.815,546,2.921,547,3.037,548,3.037,549,2.765,550,4.093,551,4.175,555,3.817,556,2.765,557,2.978,563,4.063,728,6.374,1272,7.047,1281,7.42,1335,5.836,1402,6.862,1403,5.836,1404,5.836,1405,5.836,1406,5.836,1407,6.02,1408,6.966,1409,6.966,1410,6.501,1411,6.501,1412,5.836,1413,5.836,1414,5.836,1415,5.836]],["title/classes/BackendsSyncallCommand.html",[0,0.239,1275,4.31]],["body/classes/BackendsSyncallCommand.html",[0,0.366,2,0.869,3,0.115,4,0.09,5,0.096,7,0.358,9,1.749,11,0.959,12,3.858,15,2.121,18,0.516,20,1.78,21,0.005,22,1.482,23,0.329,29,0.178,30,2.472,37,0.154,40,0.669,42,2.916,43,2.787,44,3.106,45,3.952,46,4.134,55,0.579,58,0.004,59,0.004,65,1.229,72,1.749,76,1.446,79,1.78,80,2.109,98,1.311,182,1.392,213,2.249,222,3.333,256,2.263,259,1.579,281,2.695,285,1.446,329,4.853,330,5.347,334,4.853,335,3.687,336,3.687,346,3.641,347,4.853,348,4.853,349,5.347,359,3.687,360,3.8,362,3.315,394,5.012,395,3.8,398,4.063,1268,4.856,1269,5.588,1272,6.718,1273,4.856,1274,5.588,1275,7.272,1276,3.237,1277,5.169,1278,5.588,1279,5.588,1280,4.219,1416,6.224,1417,6.224]],["title/classes/ChangePasswordDto.html",[0,0.239,1418,3.84]],["body/classes/ChangePasswordDto.html",[0,0.378,2,0.915,3,0.121,4,0.095,5,0.101,7,0.377,8,0.925,18,0.582,21,0.005,23,0.423,29,0.167,32,1.252,37,0.127,40,0.755,53,2.467,55,0.677,58,0.004,59,0.004,131,1.459,163,3.838,218,3.06,276,3.263,278,5.165,280,2.967,288,2.575,290,2.901,291,1.663,292,3.563,324,4,989,5.026,995,6.409,1418,6.079,1419,9.403,1420,5.445,1421,6.338,1422,7.45,1423,6.822,1424,6.557,1425,8.215,1426,6.822,1427,6.557,1428,5.887]],["title/interfaces/CipherData.html",[38,1.421,1429,4.31]],["body/interfaces/CipherData.html",[0,0.078,3,0.031,4,0.025,5,0.026,7,0.097,8,0.33,9,1.301,15,0.452,18,0.11,21,0.005,23,0.121,24,1.601,29,0.186,36,0.275,37,0.033,38,0.803,39,0.529,40,0.532,41,0.835,53,2.617,55,0.522,56,1.729,58,0.001,59,0.001,60,0.695,65,0.262,66,1.37,70,0.88,72,1.612,73,3.139,76,1.333,80,1.78,85,1.791,104,1.525,105,1.105,106,1.002,107,0.974,110,3.714,116,2.109,126,0.469,140,0.763,143,2.549,174,0.585,182,1.72,213,1.937,232,1.784,256,0.482,257,2.505,259,2.459,262,2.504,263,4.676,266,2.631,277,0.733,281,2.268,285,1.333,320,0.88,324,3.017,343,1.795,355,2.466,366,1.427,368,2.242,408,1.902,436,0.695,468,1.889,476,2.151,490,2.711,556,1.969,617,4.72,667,4.107,705,2.288,749,1.32,752,2.743,753,1.252,776,2.448,785,3.139,790,0.974,791,1.067,809,2.288,826,0.924,871,2.299,886,1.002,891,3.55,900,1.067,902,0.88,985,2.288,988,4.955,989,4.655,1008,1.196,1014,3.763,1021,3.044,1027,3.97,1028,2.207,1029,0.841,1041,2.743,1054,2.448,1140,2.17,1174,2.436,1203,2.17,1206,1.405,1266,1.915,1272,1.988,1273,1.32,1276,2.408,1280,1.147,1292,3.635,1312,1.458,1313,1.067,1314,1.427,1316,1.32,1338,1.252,1340,1.002,1371,3.028,1373,3.028,1375,3.028,1418,2.17,1421,2.743,1422,1.405,1429,2.436,1430,1.519,1431,1.196,1432,1.519,1433,1.519,1434,1.519,1435,1.519,1436,1.519,1437,1.519,1438,1.519,1439,1.405,1440,2.288,1441,2.17,1442,1.405,1443,1.988,1444,1.405,1445,1.196,1446,3.064,1447,1.405,1448,2.633,1449,2.17,1450,3.223,1451,1.405,1452,2.17,1453,1.405,1454,1.405,1455,2.743,1456,1.32,1457,0.974,1458,1.405,1459,2.17,1460,1.405,1461,2.872,1462,1.32,1463,2.17,1464,1.405,1465,1.915,1466,1.147,1467,1.105,1468,1.067,1469,1.105,1470,4.765,1471,6.937,1472,4.157,1473,2.436,1474,1.252,1475,1.519,1476,1.405,1477,1.519,1478,1.405,1479,1.519,1480,1.519,1481,1.519,1482,1.519,1483,1.32,1484,3.485,1485,4.655,1486,5.579,1487,5.238,1488,2.436,1489,1.791,1490,2.299,1491,2.448,1492,4.82,1493,1.405,1494,1.988,1495,1.519,1496,4.766,1497,1.405,1498,1.519,1499,4.822,1500,5.151,1501,4.765,1502,6.127,1503,2.17,1504,3.272,1505,2.633,1506,2.633,1507,5.325,1508,5.85,1509,3.223,1510,3.485,1511,5.459,1512,6.581,1513,4.701,1514,4.349,1515,5.114,1516,1.405,1517,1.622,1518,1.32,1519,3.612,1520,1.519,1521,1.519,1522,1.405,1523,1.519,1524,4.157,1525,2.633,1526,5.528,1527,2.633,1528,3.485,1529,3.485,1530,1.519,1531,1.519,1532,1.519,1533,1.519,1534,2.633,1535,1.519,1536,3.223,1537,2.633,1538,2.633,1539,2.436,1540,1.519,1541,1.519,1542,2.633,1543,2.633,1544,1.519,1545,1.519,1546,2.633,1547,2.633,1548,2.743,1549,1.519,1550,2.633,1551,2.633,1552,2.436,1553,3.313,1554,2.631,1555,2.872,1556,4.109,1557,4.701,1558,3.875,1559,1.405,1560,1.196,1561,1.519,1562,1.519,1563,3.485,1564,1.519,1565,1.519,1566,1.519,1567,5.425,1568,3.028,1569,2.288,1570,4.157,1571,2.633,1572,1.519,1573,2.743,1574,3.023,1575,1.519,1576,1.519,1577,3.89,1578,1.519,1579,1.105,1580,2.436,1581,1.519,1582,2.633,1583,2.633,1584,1.519,1585,1.519,1586,1.737,1587,0.901,1588,1.519,1589,1.519,1590,1.405,1591,1.519,1592,1.519,1593,1.32,1594,2.633,1595,1.405,1596,4.157,1597,1.519,1598,1.519,1599,1.519,1600,2.633,1601,3.485,1602,1.519,1603,1.519,1604,1.32,1605,1.519,1606,2.633,1607,2.633,1608,2.436,1609,1.405,1610,1.405,1611,1.519,1612,2.633,1613,2.436,1614,1.405,1615,1.252,1616,3.485,1617,1.519,1618,1.519,1619,1.519,1620,3.485,1621,3.223,1622,2.631,1623,3.485,1624,2.743,1625,1.519,1626,1.519,1627,3.485,1628,3.485,1629,1.405,1630,1.519,1631,1.519,1632,1.067,1633,1.519,1634,1.519,1635,1.519,1636,1.519,1637,1.519,1638,2.633,1639,1.252,1640,1.519,1641,1.519,1642,2.633,1643,1.519,1644,1.519,1645,1.519,1646,3.485,1647,1.519,1648,1.519,1649,1.405,1650,4.701,1651,1.519,1652,1.252,1653,1.562,1654,1.519,1655,1.519,1656,1.519,1657,1.519,1658,1.519,1659,1.519,1660,1.32,1661,2.633,1662,1.519,1663,1.519,1664,2.633,1665,2.633,1666,3.485,1667,2.633,1668,1.519,1669,2.633,1670,2.633,1671,2.633,1672,2.633,1673,1.519,1674,1.519,1675,2.633,1676,2.633,1677,2.633,1678,2.633,1679,2.633,1680,2.633,1681,2.633,1682,2.633,1683,2.633,1684,2.633,1685,1.519,1686,1.405,1687,1.519,1688,1.519,1689,1.519,1690,1.519,1691,1.519,1692,1.519,1693,2.633,1694,1.519,1695,1.519,1696,1.519,1697,1.519,1698,1.519,1699,3.485,1700,2.633,1701,2.633,1702,2.633,1703,1.519,1704,2.633,1705,1.196,1706,1.519,1707,1.252,1708,2.633,1709,2.633,1710,2.633,1711,2.633,1712,1.405,1713,1.519,1714,1.519,1715,2.633,1716,2.288,1717,1.196,1718,1.105,1719,1.519,1720,2.633,1721,1.519,1722,1.405,1723,1.519,1724,1.147,1725,1.519,1726,1.519,1727,2.17,1728,1.405,1729,1.519,1730,1.519,1731,2.633,1732,1.519,1733,1.519,1734,1.519,1735,1.32,1736,1.519,1737,1.519,1738,1.519,1739,1.519,1740,1.519,1741,1.519,1742,1.519,1743,1.519,1744,1.519,1745,1.519,1746,2.398,1747,2.633,1748,1.252,1749,1.519,1750,1.405,1751,1.519,1752,1.519,1753,1.405,1754,1.519,1755,1.519,1756,1.519,1757,1.519,1758,1.002,1759,1.519,1760,1.519]],["title/modules/CliModule.html",[178,1.601,1761,4.049]],["body/modules/CliModule.html",[0,0.241,3,0.096,4,0.076,5,0.081,21,0.005,23,0.217,29,0.211,36,0.853,37,0.102,56,1.051,58,0.003,59,0.003,70,4.835,80,1.909,85,6.049,104,2.727,105,3.423,106,3.106,107,3.019,120,2.793,136,1.493,138,1.734,178,2.484,182,0.919,222,1.894,285,1.219,313,5.254,361,3.705,442,2.727,544,5.862,545,2.271,546,2.356,547,2.45,548,2.45,549,2.23,550,3.253,551,2.45,555,3.317,556,2.23,557,2.402,559,3.019,563,4.622,566,4.967,567,4.707,599,3.307,726,4.707,727,4.354,728,7.034,731,3.88,732,3.555,733,4.707,734,4.091,754,4.707,755,3.88,763,4.707,764,4.707,765,4.354,774,6.096,787,4.091,814,4.707,815,6.375,816,4.707,817,4.707,818,4.707,819,4.707,820,4.707,821,4.707,822,3.423,823,4.707,824,4.707,825,3.555,826,2.863,827,4.707,828,4.707,829,4.707,830,4.707,831,4.707,833,4.707,834,4.707,1073,6.568,1078,6.301,1086,4.354,1268,4.091,1402,6.069,1407,5.675,1412,4.707,1761,7.954,1762,4.707,1763,5.243,1764,5.243,1765,5.243,1766,3.88,1767,5.254,1768,5.243,1769,5.243,1770,5.243,1771,4.354,1772,5.243,1773,4.091,1774,5.243,1775,5.243,1776,5.243,1777,5.243]],["title/classes/ConcernedToPart.html",[0,0.239,1778,4.31]],["body/classes/ConcernedToPart.html",[0,0.308,2,0.935,3,0.123,4,0.097,5,0.103,7,0.385,8,0.937,11,1.004,18,0.588,21,0.005,22,1.454,23,0.411,29,0.17,37,0.161,40,0.738,55,0.679,58,0.004,59,0.004,65,1.036,116,1.677,125,3.419,126,1.858,128,3.272,131,1.473,132,4.231,135,4.426,136,1.907,137,2.456,138,1.636,179,6.399,182,1.173,232,1.834,276,3.597,285,2.202,302,3.273,305,3.053,306,3.192,1778,6.912,1779,9.474,1780,6.696,1781,6.696,1782,6.696,1783,6.696,1784,6.012,1785,6.696]],["title/classes/ConcernedToPartDTO.html",[0,0.239,1786,3.84]],["body/classes/ConcernedToPartDTO.html",[0,0.392,2,0.969,3,0.128,4,0.101,5,0.107,7,0.4,8,0.958,11,1.026,18,0.597,21,0.005,22,1.478,23,0.381,29,0.188,32,1.325,37,0.135,40,0.696,55,0.683,58,0.004,59,0.004,128,3.074,131,1.496,137,2.546,138,1.695,179,6.502,276,3.655,288,2.627,290,2.84,291,1.761,499,4.904,506,5.136,519,4.057,522,4.326,523,3.325,1786,6.297,1787,9.593,1788,6.941,1789,6.941,1790,5.764,1791,6.941,1792,6.941]],["title/interfaces/ConfigInstance.html",[38,1.421,1793,4.31]],["body/interfaces/ConfigInstance.html",[3,0.104,4,0.055,5,0.059,7,0.219,8,0.637,21,0.005,23,0.431,29,0.189,32,0.727,37,0.131,38,1.549,39,2.111,40,0.734,41,1.084,42,1.397,43,1.335,44,1.488,45,1.893,46,1.98,47,2.69,58,0.003,59,0.003,60,1.564,70,3.51,106,4.954,116,0.954,136,1.084,138,1.949,163,1.779,174,1.315,222,3.528,283,2.364,285,1.568,298,2.325,299,1.769,324,2.406,371,3.893,389,4.877,442,2.942,599,4.71,631,3.013,639,2.325,676,2.97,680,6.524,731,4.185,732,3.834,734,4.412,755,4.185,762,2.486,770,2.97,787,4.412,822,4.877,826,3.088,846,2.581,863,4.728,910,2.325,1002,2.581,1011,5.67,1029,1.893,1036,2.581,1084,4.697,1088,4.697,1089,2.817,1126,2.817,1147,3.284,1156,5.265,1245,2.486,1446,1.591,1483,6.226,1491,5.033,1568,4.412,1793,5.604,1794,3.418,1795,6.628,1796,7.165,1797,7.165,1798,6.945,1799,5.906,1800,6.706,1801,5.078,1802,5.078,1803,5.078,1804,4.697,1805,2.817,1806,5.078,1807,5.078,1808,3.996,1809,4.697,1810,4.697,1811,3.996,1812,5.078,1813,5.078,1814,5.078,1815,5.078,1816,6.058,1817,4.697,1818,4.697,1819,4.697,1820,4.697,1821,5.078,1822,3.418,1823,3.418,1824,3.418,1825,3.418,1826,3.418,1827,3.418,1828,3.418,1829,3.418,1830,3.162,1831,3.418,1832,7.774,1833,3.418,1834,3.418,1835,3.418,1836,3.418,1837,3.418,1838,3.418,1839,3.418,1840,3.418,1841,3.418,1842,3.418,1843,3.418,1844,3.418,1845,3.418,1846,3.418,1847,3.418,1848,3.693,1849,3.418,1850,3.418,1851,3.418,1852,4.697,1853,5.078,1854,3.418,1855,3.418,1856,3.418,1857,3.418,1858,3.418,1859,3.418,1860,3.418,1861,3.418,1862,3.418,1863,3.418,1864,3.418,1865,3.418,1866,3.418,1867,3.418,1868,3.418,1869,3.418,1870,3.418,1871,3.418,1872,3.418,1873,3.418,1874,3.418,1875,3.418,1876,2.97]],["title/classes/ConfigObjectAttributeDTO.html",[0,0.239,1877,4.049]],["body/classes/ConfigObjectAttributeDTO.html",[0,0.438,2,0.865,3,0.114,4,0.09,5,0.096,7,0.357,8,0.892,18,0.618,21,0.005,22,1.479,23,0.425,29,0.178,37,0.169,40,0.734,55,0.7,58,0.004,59,0.004,131,1.548,283,3.311,285,1.841,289,4.895,290,3.123,291,1.571,295,4.561,296,3.566,302,3.018,520,4.002,523,3.096,524,2.682,530,3.431,664,5.03,1877,7.185,1878,5.143,1879,7.648,1880,6.193,1881,6.193,1882,6.193,1883,6.193,1884,6.193,1885,6.816,1886,6.193,1887,6.193,1888,6.58,1889,2.893,1890,5.143,1891,5.143,1892,6.816,1893,3.782]],["title/classes/ConfigObjectIdentitiesDTO.html",[0,0.239,1894,4.049]],["body/classes/ConfigObjectIdentitiesDTO.html",[0,0.369,2,0.616,3,0.081,4,0.064,5,0.068,7,0.254,8,0.708,18,0.52,21,0.005,23,0.401,29,0.163,32,0.842,37,0.122,40,0.694,41,2.724,55,0.652,56,1.472,58,0.003,59,0.003,98,0.929,116,2.005,131,1.302,174,2.174,182,0.772,218,2.345,232,2.537,280,2.782,281,3.466,285,2.046,288,2.318,290,1.36,291,1.118,292,3.18,302,3.13,343,1.379,368,3.128,437,2.146,490,2.5,519,3,520,2.883,523,3.128,524,1.909,529,3.352,530,3.178,662,4.91,778,3.263,858,3.398,888,3.029,984,6.281,1164,2.78,1235,5.739,1251,2.47,1446,1.843,1586,2.612,1889,2.06,1893,2.692,1894,6.604,1895,3.958,1896,4.976,1897,5.739,1898,7.83,1899,4.409,1900,4.409,1901,5.283,1902,4.629,1903,3.958,1904,3.896,1905,4.409,1906,4.409,1907,4.409,1908,4.409,1909,4.409,1910,6.867,1911,7.943,1912,7.03,1913,6.589,1914,7.903,1915,5.65,1916,5.65,1917,4.409,1918,5.427,1919,3.958,1920,3.91,1921,3,1922,3.661,1923,3.661,1924,5.227,1925,2.989,1926,3.958,1927,3.661,1928,6.589,1929,7.187,1930,6.589,1931,3.661,1932,3.661,1933,3.958,1934,5.65,1935,5.65,1936,5.186,1937,6.095,1938,3.44,1939,2.989,1940,3.958,1941,5.65,1942,5.65,1943,3.958,1944,3.958,1945,3.958,1946,3.661,1947,3.958,1948,3.958,1949,3.958,1950,3.958,1951,3.958,1952,3.958,1953,3.958,1954,3.958,1955,3.958,1956,3.958]],["title/classes/ConfigObjectObjectClassDTO.html",[0,0.239,1892,4.049]],["body/classes/ConfigObjectObjectClassDTO.html",[0,0.444,2,0.9,3,0.119,4,0.093,5,0.1,7,0.371,8,0.915,18,0.578,21,0.005,22,1.501,23,0.414,29,0.181,37,0.173,40,0.739,55,0.697,58,0.004,59,0.004,131,1.447,283,2.694,285,1.889,289,4.554,290,3.146,291,1.635,295,5.38,296,3.711,302,2.227,520,4.077,523,3.176,524,2.791,530,3.519,664,3.711,1877,6.944,1878,5.353,1879,7.761,1885,6.34,1888,7.391,1889,3.011,1890,5.353,1891,5.353,1892,7.291,1893,3.936,1957,6.446,1958,6.446,1959,6.446]],["title/classes/ConfigObjectSchemaDTO.html",[0,0.239,1893,3.169]],["body/classes/ConfigObjectSchemaDTO.html",[0,0.384,2,0.677,3,0.089,4,0.07,5,0.075,7,0.279,8,0.757,18,0.315,21,0.005,23,0.393,29,0.17,32,0.926,37,0.13,40,0.675,41,2.702,55,0.616,56,1.55,58,0.003,59,0.003,98,1.021,116,1.936,131,0.788,174,2.325,182,0.849,218,1.806,232,2.286,280,2.634,281,2.914,285,1.94,288,2.402,290,1.496,291,1.23,292,2.673,302,3.03,343,1.517,368,2.629,437,2.36,490,2.673,519,3.208,520,3.082,523,3.262,524,2.099,529,3.584,530,2.914,662,5.25,778,3.588,858,3.481,888,2.547,984,6.31,1164,3.057,1235,5.239,1251,2.717,1446,3.23,1586,2.872,1889,2.265,1893,4.109,1894,7.081,1895,4.353,1896,3.287,1897,4.562,1898,7.537,1901,4.914,1902,4.244,1904,3.275,1910,6.513,1911,7.73,1912,6.933,1913,6.041,1914,7.874,1915,4.353,1916,4.353,1918,5.66,1919,4.353,1920,4.117,1921,3.208,1922,4.026,1923,4.026,1924,5.588,1925,3.287,1926,4.353,1927,4.026,1928,6.938,1929,7.495,1930,6.938,1931,4.026,1932,4.026,1933,4.353,1934,6.041,1935,6.041,1936,5.461,1937,6.418,1938,3.782,1939,3.287,1940,4.353,1941,6.041,1942,6.041,1943,4.353,1944,4.353,1945,4.353,1946,4.026,1947,4.353,1948,4.353,1949,4.353,1950,4.353,1951,4.353,1952,4.353,1953,4.353,1954,4.353,1955,4.353,1956,4.353,1960,4.848,1961,4.848,1962,3.782,1963,4.848]],["title/classes/ConfigObjectSchemaDTO-1.html",[0,0.2,270,1.595,1893,2.656]],["body/classes/ConfigObjectSchemaDTO-1.html",[0,0.446,2,0.915,3,0.121,4,0.095,5,0.101,7,0.377,8,0.925,18,0.533,21,0.005,22,1.319,23,0.409,29,0.183,37,0.174,40,0.717,55,0.694,58,0.004,59,0.004,131,1.336,283,2.74,285,1.909,289,4.603,290,3.093,291,1.663,295,5.414,296,5.165,302,2.265,520,4.109,523,3.21,524,2.84,530,3.557,664,3.775,1877,7.336,1878,5.445,1879,6.822,1885,6.409,1888,6.822,1889,3.063,1890,5.445,1891,5.445,1892,7.336,1893,5.016,1962,6.409,1964,6.822,1965,6.557,1966,6.557]],["title/classes/ConsoleSession.html",[0,0.239,1150,4.31]],["body/classes/ConsoleSession.html",[0,0.321,2,0.973,3,0.128,4,0.101,5,0.108,7,0.401,8,0.96,15,2.46,18,0.624,21,0.005,23,0.382,37,0.135,40,0.727,55,0.691,58,0.004,59,0.004,76,2.401,126,2.557,299,2.883,327,4.795,366,4.486,616,6.254,621,6.254,622,7.657,623,6.254,858,3.381,1150,7.083,1967,9.854,1968,8.529,1969,7.108]],["title/controllers/CoreController.html",[399,1.478,1970,4.31]],["body/controllers/CoreController.html",[0,0.356,3,0.142,4,0.112,5,0.12,21,0.005,29,0.196,32,1.477,36,1.258,37,0.15,55,0.512,58,0.004,59,0.004,76,1.797,399,2.202,401,2.419,403,3.232,441,3.475,470,3.845,471,3.764,1970,7.54,1971,7.733,1972,6.943,1973,6.719,1974,6.943,1975,7.733,1976,7.733]],["title/modules/CoreModule.html",[178,1.601,720,3.84]],["body/modules/CoreModule.html",[0,0.266,3,0.106,4,0.084,5,0.089,18,0.375,21,0.005,29,0.208,30,2.295,36,0.94,37,0.112,55,0.382,56,1.159,58,0.003,59,0.003,79,1.294,98,1.217,178,2.768,401,2.37,468,3.687,544,6.026,545,2.502,546,2.597,547,2.7,548,2.7,549,2.458,550,3.871,551,2.7,555,3.539,556,2.458,557,2.647,563,4.202,720,7.815,1073,6.752,1078,6.479,1092,5.188,1147,2.812,1402,6.239,1408,6.752,1409,6.752,1413,5.188,1414,5.188,1415,5.188,1970,7.018,1972,5.188,1973,7.072,1974,5.188,1977,5.188,1978,5.188,1979,5.188,1980,6.752,1981,7.072,1982,5.778,1983,6.593,1984,5.778,1985,6.593,1986,4.799,1987,5.778,1988,5.778,1989,5.778,1990,5.778,1991,5.778,1992,4.799,1993,4.508,1994,4.799]],["title/injectables/CoreService.html",[140,1.35,1973,3.84]],["body/injectables/CoreService.html",[0,0.364,3,0.146,4,0.115,5,0.122,15,2.597,18,0.513,21,0.005,29,0.161,36,1.286,37,0.153,55,0.609,58,0.004,59,0.004,140,2.394,141,3.426,1973,6.808,1995,7.91,1996,7.91]],["title/classes/CustomFieldsDto.html",[0,0.239,498,2.58]],["body/classes/CustomFieldsDto.html",[0,0.409,2,1.039,3,0.137,4,0.108,5,0.115,7,0.429,8,0.999,11,1.071,18,0.483,21,0.005,23,0.368,29,0.181,37,0.144,39,2.329,40,0.54,55,0.628,58,0.004,59,0.004,131,1.211,291,1.888,307,4.148,308,3.549,309,3.549,365,5.461,371,2.863,498,4.415,516,4.695,520,4.067,523,3.469,1921,4.232,1997,8.878,1998,7.445,1999,7.445]],["title/classes/DataPart.html",[0,0.239,2000,4.31]],["body/classes/DataPart.html",[0,0.32,2,0.969,3,0.128,4,0.101,5,0.107,7,0.4,8,0.958,11,1.026,18,0.552,21,0.005,23,0.42,29,0.173,37,0.178,40,0.743,55,0.663,58,0.004,59,0.004,65,1.073,116,1.738,125,3.496,126,1.926,131,1.384,132,3.976,135,4.299,136,1.976,138,1.695,182,1.491,285,1.978,299,2.879,302,2.94,305,3.122,306,3.309,343,2.879,2000,7.067,2001,6.941,2002,6.941,2003,9.203,2004,6.941,2005,6.231,2006,6.941]],["title/classes/DeleteIdentitiesDto.html",[0,0.239,1289,4.31]],["body/classes/DeleteIdentitiesDto.html",[0,0.412,2,1.054,3,0.139,4,0.109,5,0.117,7,0.435,8,1.007,18,0.49,21,0.005,23,0.371,29,0.182,32,1.441,37,0.146,40,0.649,55,0.631,58,0.004,59,0.004,131,1.227,288,2.451,291,1.915,301,5.153,529,4.768,1125,5.493,1289,7.433,2007,8.951,2008,6.777,2009,6.777,2010,6.777]],["title/injectables/DtoValidationPipe.html",[140,1.35,745,4.049]],["body/injectables/DtoValidationPipe.html",[0,0.241,3,0.096,4,0.076,5,0.081,7,0.301,9,1.472,10,1.783,11,0.97,15,1.397,18,0.522,20,1.802,21,0.005,22,1.292,23,0.333,29,0.164,30,2.08,36,0.851,37,0.102,38,1.434,39,1.638,40,0.626,53,1.572,55,0.639,56,1.729,58,0.003,59,0.003,65,1.097,76,1.217,79,1.589,80,1.78,98,1.494,127,4.384,140,1.845,141,2.268,143,4.625,158,1.863,182,1.511,200,2.604,213,1.822,256,1.491,259,1.328,285,1.649,297,4.914,299,1.638,343,2.219,355,2.906,403,3.604,436,2.151,476,2.151,490,2.818,667,3.975,745,6.276,774,3.7,790,3.015,807,4.631,858,2.951,1027,2.151,1154,4.085,1511,3.7,1632,3.302,1918,5.454,2011,7.742,2012,4.348,2013,7.223,2014,7.716,2015,5.236,2016,5.236,2017,5.891,2018,7.161,2019,5.236,2020,6.369,2021,6.669,2022,5.236,2023,5.534,2024,4.701,2025,4.701,2026,4.701,2027,4.701,2028,4.701,2029,4.701,2030,5.012,2031,4.701,2032,2.789,2033,4.701,2034,4.085,2035,4.701,2036,4.701,2037,4.348,2038,4.701,2039,4.348,2040,4.701,2041,4.701,2042,4.701,2043,4.701,2044,4.701,2045,4.348,2046,6.369,2047,4.348,2048,4.701,2049,4.348,2050,4.701,2051,4.348,2052,4.701,2053,6.369,2054,4.701,2055,4.701,2056,4.701]],["title/classes/EmployeeNumber1700395200.html",[0,0.239,2057,4.659]],["body/classes/EmployeeNumber1700395200.html",[0,0.269,2,0.814,3,0.107,4,0.084,5,0.09,7,0.336,8,0.858,10,3.065,11,0.703,15,2.034,18,0.584,20,1.306,21,0.005,22,0.937,23,0.242,29,0.173,36,0.948,37,0.113,40,0.423,41,1.661,53,2.289,55,0.618,58,0.003,59,0.003,72,2.743,76,1.973,79,1.707,80,2.119,98,1.605,120,4.795,126,2.114,136,1.661,138,1.424,182,1.487,209,2.671,213,2.312,251,3.357,259,2.153,269,4.653,281,3.676,299,2.384,858,2.139,960,3.807,1054,5.677,1446,3.185,1587,3.106,2057,6.842,2058,9.34,2059,8.385,2060,5.832,2061,9.002,2062,6.912,2063,4.843,2064,7.621,2065,5.945,2066,7.621,2067,5.832,2068,5.832,2069,5.945,2070,5.832,2071,5.832,2072,5.236,2073,6.255,2074,8.489,2075,5.166,2076,6.842,2077,6.842,2078,6.329,2079,5.832,2080,5.832,2081,7.621,2082,5.236,2083,5.236,2084,4.12]],["title/injectables/EnsureIdentitiesIndexMiddleware.html",[140,1.35,2085,4.31]],["body/injectables/EnsureIdentitiesIndexMiddleware.html",[0,0.296,3,0.118,4,0.093,5,0.099,7,0.467,11,0.978,15,2.164,18,0.526,20,1.816,21,0.005,22,1.302,23,0.336,29,0.196,36,1.045,37,0.125,55,0.588,58,0.004,59,0.004,67,3.194,72,1.805,76,1.493,79,1.816,80,1.966,98,1.353,136,1.829,138,1.569,140,2.11,141,2.782,143,4.543,158,2.286,162,4.754,209,4.276,251,3.698,257,2.47,259,1.629,262,2.357,346,4.276,408,3.834,413,3.919,1027,2.639,1028,3.062,1240,6.001,1251,3.599,1351,5.73,1446,3.901,1517,2.685,1555,4.754,2085,6.734,2086,8.887,2087,6.424,2088,6.424,2089,6.424,2090,8.109,2091,8.109,2092,4.544,2093,6.424,2094,6.424,2095,6.424,2096,8.109,2097,5.012,2098,6.424,2099,6.424,2100,6.424,2101,6.424,2102,6.424,2103,4.754]],["title/classes/ErrorSchemaDto.html",[0,0.239,2104,4.659]],["body/classes/ErrorSchemaDto.html",[0,0.307,2,0.93,3,0.123,4,0.096,5,0.103,7,0.383,8,0.934,11,1.141,18,0.614,21,0.005,23,0.411,29,0.169,32,1.272,36,1.083,37,0.129,39,2.595,40,0.706,42,2.443,43,2.335,44,2.603,55,0.69,58,0.004,59,0.004,131,1.538,232,1.824,288,2.784,297,4.593,343,2.826,346,3.051,371,3.19,436,3.711,476,3.711,888,2.521,1632,4.2,2104,7.448,2105,9.728,2106,6.661,2107,9.035,2108,6.661,2109,6.661,2110,5.531,2111,6.661,2112,6.661]],["title/classes/ExecuteJobDto.html",[0,0.239,1297,4.31]],["body/classes/ExecuteJobDto.html",[0,0.38,2,0.923,3,0.122,4,0.096,5,0.102,7,0.381,8,0.93,11,0.996,18,0.585,21,0.005,23,0.416,29,0.184,32,1.263,37,0.128,40,0.718,55,0.678,58,0.004,59,0.004,131,1.465,163,3.859,218,3.514,276,3.856,280,2.48,288,2.583,291,1.678,292,2.627,298,5.043,519,3.937,522,4.199,523,3.519,995,6.444,1125,5.185,1297,6.859,1338,6.665,1339,5.938,1340,3.918,1889,3.09,1921,3.937,2113,9.432,2114,6.614,2115,6.363,2116,6.614,2117,6.614,2118,6.614,2119,6.614,2120,5.493,2121,6.614,2122,6.614]],["title/interfaces/ExecuteJobOptions.html",[38,1.421,2123,4.659]],["body/interfaces/ExecuteJobOptions.html",[3,0.117,4,0.092,5,0.098,7,0.367,8,0.908,11,1.284,21,0.005,23,0.427,29,0.164,37,0.124,38,1.744,40,0.642,41,2.521,58,0.004,59,0.004,60,2.617,80,2.058,101,4.714,128,3.198,137,2.337,138,1.556,283,4.383,871,5.687,1301,8.354,1371,7.26,1373,7.26,1375,7.26,1621,7.728,2123,7.242,2124,6.37,2125,6.37,2126,5.868,2127,9.305,2128,8.354,2129,6.886,2130,9.305]],["title/classes/FileUploadDto.html",[0,0.239,2131,3.388]],["body/classes/FileUploadDto.html",[0,0.422,2,0.766,3,0.101,4,0.079,5,0.136,7,0.316,8,0.824,18,0.356,21,0.005,23,0.423,29,0.187,32,1.047,37,0.17,39,2.29,40,0.763,42,2.012,43,1.923,44,2.144,55,0.679,58,0.003,59,0.003,65,1.274,116,2.408,126,1.522,131,0.892,283,3.059,285,1.914,288,2.795,289,4.101,290,2.825,291,1.391,299,2.29,302,3.375,307,3.42,308,2.615,309,2.615,343,1.716,469,3.35,498,3.64,518,2.376,519,4.189,522,4.188,523,3.817,527,2.854,528,2.854,664,4.214,698,3.46,888,2.076,966,3.46,1147,4.009,1340,3.25,1889,2.563,1921,3.927,1939,3.719,2131,4.779,2132,4.28,2133,4.925,2134,5.416,2135,5.486,2136,5.71,2137,4.779,2138,5.416,2139,3.719,2140,4.779,2141,4.28,2142,3.876,2143,3.582,2144,4.28,2145,3.582,2146,4.28,2147,4.06,2148,3.582,2149,5.71,2150,4.06,2151,3.582,2152,3.876,2153,3.876]],["title/classes/Filestorage.html",[0,0.239,2154,3.388]],["body/classes/Filestorage.html",[0,0.219,2,0.663,3,0.087,4,0.069,5,0.103,7,0.274,8,0.747,11,1.172,18,0.631,21,0.005,23,0.438,29,0.156,37,0.129,39,2.392,40,0.759,42,2.805,43,2.68,44,2.987,55,0.697,56,0.953,58,0.003,59,0.003,65,0.735,116,2.46,123,3.623,131,1.58,132,3.1,135,4.588,136,1.353,176,2.735,182,0.832,218,3.36,270,2.434,283,3.459,285,2.229,299,2.076,302,3.262,305,2.434,306,2.265,346,2.176,365,4.401,371,2.94,374,3.357,386,2.815,390,2.901,469,4.668,888,2.511,966,4.821,1147,4.237,1253,3.357,1340,2.815,1936,3.357,2137,4.992,2138,5.658,2139,3.221,2143,5.403,2145,4.992,2147,5.658,2148,4.992,2150,5.658,2154,5.403,2155,4.751,2156,8.478,2157,4.751,2158,4.751,2159,4.751,2160,4.751,2161,4.751,2162,4.751,2163,4.751,2164,4.751,2165,4.751,2166,4.751,2167,4.265,2168,4.751,2169,4.751,2170,4.751]],["title/controllers/FilestorageController.html",[399,1.478,2171,4.31]],["body/controllers/FilestorageController.html",[0,0.139,1,2.215,3,0.056,4,0.044,5,0.118,7,0.174,9,0.849,11,0.997,15,0.807,18,0.537,20,1.851,21,0.005,22,1.486,23,0.404,25,1.384,29,0.194,32,0.577,36,0.491,37,0.059,40,0.731,55,0.658,56,1.531,58,0.002,59,0.002,65,0.733,72,1.332,76,1.36,79,1.062,80,2.191,98,1.741,116,1.803,126,2.64,128,3.256,131,1.344,137,1.109,138,0.738,158,1.687,182,1.524,199,2.58,200,2.357,206,2.974,213,2.424,229,2.796,235,1.441,246,1.693,256,0.861,259,2.206,270,2.43,285,0.702,299,1.483,302,2.289,399,0.861,401,0.945,403,1.263,404,4.325,405,4.133,406,3.689,407,2.236,408,4.085,409,3.84,413,4.469,414,2.135,415,4.681,416,5.605,417,5.605,418,4.133,421,2.236,422,3.508,425,1.906,426,4.986,427,4.325,428,5.177,429,4.325,430,2.135,433,3.699,436,1.241,437,1.471,438,2.358,439,2.308,440,4.879,441,1.358,442,1.572,443,1.79,444,1.503,446,4.699,448,2.358,449,2.049,450,3.214,451,2.135,452,2.135,453,2.049,454,2.358,455,2.358,456,2.135,457,2.135,458,2.135,459,4.539,462,2.895,463,1.906,464,1.906,468,1.471,469,4.045,471,1.471,475,2.236,476,3.137,477,2.135,482,2.656,483,2.135,484,3.503,485,3.503,486,4.133,488,4.681,489,2.135,492,2.358,494,2.236,573,1.906,674,4.858,858,1.739,1147,4.138,1574,1.973,2131,1.973,2140,4.986,2143,5.398,2148,5.68,2151,4.699,2152,4.681,2154,1.973,2171,3.937,2172,3.022,2173,5.85,2174,5.85,2175,5.85,2176,4.858,2177,3.022,2178,3.022,2179,3.022,2180,3.022,2181,3.022,2182,3.022,2183,3.022,2184,3.022,2185,3.022,2186,3.022,2187,3.022,2188,3.022,2189,3.022,2190,3.022,2191,3.022,2192,3.022,2193,5.85,2194,3.022,2195,3.022,2196,3.022,2197,3.937,2198,2.51,2199,2.51,2200,2.51,2201,2.358,2202,2.51,2203,2.51,2204,3.022,2205,3.095,2206,3.022,2207,3.508,2208,3.35,2209,3.022,2210,3.022,2211,2.358,2212,2.51,2213,2.51,2214,2.51,2215,2.51,2216,3.022,2217,3.022,2218,4.741,2219,3.022,2220,3.022,2221,4.741,2222,3.022,2223,5.948,2224,3.022,2225,4.741,2226,4.741,2227,3.022,2228,3.022,2229,4.256,2230,5.502,2231,5.948,2232,3.022,2233,4.256,2234,3.022,2235,3.022,2236,3.022,2237,3.022]],["title/classes/FilestorageCreateDto.html",[0,0.239,2140,3.388]],["body/classes/FilestorageCreateDto.html",[0,0.388,2,0.609,3,0.08,4,0.063,5,0.097,7,0.251,8,0.703,11,1.211,18,0.627,21,0.005,23,0.432,29,0.172,32,0.833,37,0.154,39,1.954,40,0.763,42,1.601,43,1.53,44,1.705,55,0.696,58,0.003,59,0.003,65,1.232,89,1.792,116,2.484,126,1.21,131,1.571,232,1.195,283,3.33,285,2.039,288,2.695,289,3.5,290,2.602,291,1.107,299,2.492,302,3.469,307,2.919,308,2.08,309,2.08,343,1.954,365,3.597,371,2.806,469,4.456,498,3.962,516,2.752,517,2.849,518,1.889,519,3.798,522,3.71,523,3.61,527,2.27,528,2.27,664,2.512,698,3.94,888,1.651,966,4.602,1147,4.397,1340,2.585,1889,2.038,1921,3.479,1939,2.958,2120,5.188,2131,2.849,2132,3.404,2134,3.229,2136,4.874,2137,4.764,2138,5.4,2139,2.958,2140,4.764,2141,3.404,2142,3.083,2143,4.764,2144,4.874,2145,4.764,2146,5.693,2147,5.4,2148,4.764,2149,6.216,2150,5.4,2151,2.849,2152,3.083,2153,3.083,2238,4.363,2239,5.609,2240,4.363,2241,4.363,2242,3.917,2243,4.363,2244,3.917,2245,4.363,2246,3.917,2247,4.363,2248,5.609,2249,4.363,2250,4.363,2251,4.363,2252,3.917,2253,4.363]],["title/classes/FilestorageDto.html",[0,0.239,2151,3.388]],["body/classes/FilestorageDto.html",[0,0.383,2,0.587,3,0.077,4,0.061,5,0.094,7,0.242,8,0.685,11,1.204,18,0.629,21,0.005,23,0.431,29,0.169,32,0.803,37,0.152,39,1.903,40,0.763,42,1.542,43,1.474,44,1.643,55,0.696,58,0.003,59,0.003,65,1.211,89,3.938,116,2.469,126,1.982,131,1.576,232,1.151,283,3.273,285,2.013,288,2.678,289,3.408,290,2.564,291,1.066,299,2.45,302,3.45,307,2.841,308,2.004,309,2.004,343,1.903,365,3.501,371,2.748,469,4.363,498,3.554,516,2.651,517,2.745,518,1.82,519,3.733,522,3.633,523,3.574,527,2.187,528,2.187,533,3.111,664,2.42,698,3.835,888,1.591,966,4.507,1147,4.348,1340,2.49,1889,1.964,1921,3.407,1939,2.85,2120,5.051,2131,2.745,2132,3.28,2134,3.111,2136,4.745,2137,4.666,2138,5.288,2139,2.85,2140,6.384,2141,3.28,2142,2.97,2143,4.666,2144,4.745,2145,4.666,2146,5.575,2147,5.288,2148,4.666,2149,6.11,2150,5.288,2151,3.971,2152,2.97,2153,2.97,2239,5.46,2242,3.774,2244,3.774,2246,3.774,2248,5.46,2252,3.774,2254,4.204,2255,4.204,2256,4.204,2257,4.204,2258,4.204,2259,4.204,2260,4.204,2261,4.204,2262,4.204,2263,4.204,2264,4.204]],["title/modules/FilestorageModule.html",[178,1.601,1980,3.667]],["body/modules/FilestorageModule.html",[0,0.308,3,0.123,4,0.097,5,0.103,21,0.005,22,1.073,29,0.202,36,1.087,37,0.13,58,0.004,59,0.004,136,1.903,178,2.792,401,2.601,545,2.895,546,3.004,547,3.123,548,3.123,549,2.843,550,4.145,551,4.228,555,3.884,556,2.843,557,3.062,559,3.848,563,3.324,564,4.215,566,3.848,1980,7.297,2154,4.364,2167,7.464,2171,7.515,2205,6.812,2207,6.152,2208,7.372,2265,6.001,2266,6.001,2267,6.001,2268,6.684,2269,6.684,2270,6.684,2271,5.215,2272,6.684]],["title/classes/FilestorageUpdateDto.html",[0,0.239,2152,3.667]],["body/classes/FilestorageUpdateDto.html",[0,0.425,2,0.784,3,0.103,4,0.081,5,0.115,21,0.005,23,0.422,29,0.188,32,1.072,37,0.172,39,2.326,40,0.761,42,2.06,43,1.969,44,2.194,55,0.674,58,0.003,59,0.003,65,1.372,116,2.422,126,1.558,283,3.107,285,1.937,288,2.804,289,4.165,290,2.847,291,1.424,299,2.326,302,3.392,307,3.473,308,2.677,309,2.677,343,1.757,469,3.429,498,3.697,518,2.432,519,4.229,522,4.237,523,3.837,527,2.921,528,2.921,664,3.233,698,3.542,888,2.125,966,3.542,1147,4.056,1340,3.327,1889,2.624,1921,3.973,1939,3.807,2131,3.667,2132,4.381,2134,4.156,2136,5.8,2137,4.854,2138,5.501,2139,3.807,2140,4.854,2141,4.381,2142,3.968,2143,3.667,2144,4.381,2145,3.667,2146,4.381,2147,4.156,2148,3.667,2149,5.8,2150,4.156,2151,3.667,2152,5.253,2153,5.253]],["title/classes/ForcePasswordDto.html",[0,0.239,2273,4.31]],["body/classes/ForcePasswordDto.html",[0,0.391,2,0.964,3,0.127,4,0.1,5,0.107,7,0.397,8,0.955,18,0.551,21,0.005,23,0.414,29,0.173,32,1.318,37,0.134,40,0.742,53,2.547,55,0.662,58,0.004,59,0.004,131,1.379,163,3.962,218,3.16,275,6.197,276,3.904,278,4.883,279,6.616,280,2.876,282,6.197,287,6.197,288,2.514,290,2.833,291,1.751,292,3.369,324,4.181,1421,6.487,1423,7.043,2273,7.043,2274,9.18]],["title/classes/Form.html",[0,0.239,2275,3.518]],["body/classes/Form.html",[0,0.271,2,0.82,3,0.108,4,0.085,5,0.091,7,0.338,8,0.862,18,0.644,21,0.005,23,0.43,29,0.191,37,0.149,39,1.838,40,0.739,41,2.181,58,0.003,59,0.003,65,0.909,116,1.472,123,4.182,131,1.612,132,3.981,135,4.835,136,1.673,182,1.03,195,5.777,218,2.853,232,2.097,280,2.559,299,2.824,305,2.81,306,2.802,307,3.578,308,2.802,309,2.802,371,2.26,386,3.481,390,3.588,888,2.899,1253,4.152,2275,5.193,2276,5.877,2277,6.021,2278,4.906,2279,5.563,2280,5.373,2281,4.432,2282,5.877,2283,5.877,2284,5.877,2285,6.681,2286,7.65,2287,5.877,2288,5.877,2289,5.877,2290,5.877,2291,5.547,2292,5.877,2293,3.706,2294,4.88,2295,5.877,2296,4.88,2297,5.276,2298,5.276,2299,5.877]],["title/controllers/FormController.html",[399,1.478,2300,4.31]],["body/controllers/FormController.html",[0,0.187,1,2.775,3,0.075,4,0.059,5,0.063,7,0.234,9,1.143,11,0.989,18,0.532,20,1.837,21,0.005,22,1.456,23,0.403,29,0.201,32,0.777,36,0.662,37,0.079,40,0.509,55,0.653,56,1.645,58,0.003,59,0.003,65,0.918,76,1.38,79,1.33,80,2.184,98,1.727,126,2.671,128,3.34,131,1.334,137,1.492,138,0.994,158,1.448,182,1.437,199,2.619,200,2.023,206,3.566,213,1.526,229,2.784,235,1.94,246,2.28,256,1.159,259,2.08,270,3.009,280,1.222,399,1.159,401,1.273,403,1.7,404,4.579,405,4.196,406,4.423,407,3.011,408,4.082,409,4.068,413,4.43,414,2.875,415,4.196,416,5.806,417,5.806,418,4.956,421,3.011,422,4.395,425,2.566,426,5.591,427,5.035,428,5.806,429,5.035,430,2.875,433,4.633,436,1.671,437,1.98,438,3.174,439,2.891,440,5.228,441,1.828,442,2.116,443,2.41,444,2.023,445,3.011,446,5.355,447,3.011,448,3.174,449,2.758,450,4.026,451,2.875,452,2.875,453,2.758,454,3.174,455,3.174,456,2.875,457,2.875,458,2.875,459,4.863,462,3.626,463,2.566,464,2.566,468,1.98,470,2.023,471,1.98,473,3.379,474,3.174,475,3.011,476,3.369,477,2.875,482,3.328,483,2.875,484,3.754,485,3.754,486,4.956,488,2.875,489,2.875,492,3.174,494,3.011,603,4.709,675,3.745,2275,2.758,2278,2.342,2280,2.566,2281,2.116,2300,4.932,2301,4.069,2302,6.842,2303,4.069,2304,4.069,2305,4.069,2306,4.069,2307,4.069,2308,4.069,2309,4.069,2310,4.069,2311,5.707,2312,4.069,2313,4.069,2314,4.069,2315,4.395,2316,3.653,2317,4.069,2318,4.069,2319,4.069,2320,4.069,2321,5.939,2322,4.069,2323,4.069,2324,4.069,2325,4.069,2326,4.069]],["title/classes/FormCreateDto.html",[0,0.239,2327,4.049]],["body/classes/FormCreateDto.html",[0,0.419,2,0.751,3,0.099,4,0.078,5,0.083,7,0.31,8,0.813,11,1.129,18,0.639,21,0.005,23,0.429,29,0.195,32,1.027,37,0.158,39,2.259,40,0.734,55,0.478,58,0.003,59,0.003,65,1.348,89,2.209,116,2.345,127,3.672,131,1.602,195,5.528,280,2.449,285,1.678,288,2.697,290,2.806,291,1.364,302,2.817,307,3.374,308,2.563,309,2.563,371,2.777,518,2.329,520,3.308,523,3.406,524,2.329,529,2.864,530,2.329,888,2.035,1889,2.512,1921,3.887,1962,4.195,1964,4.465,2277,5.762,2278,4.695,2279,5.324,2280,5.143,2281,4.242,2291,4.831,2293,3.391,2302,3.979,2311,3.979,2327,6.362,2328,4.465,2329,5.497,2330,6.484,2331,5.377,2332,4.465,2333,5.377,2334,5.377,2335,5.377,2336,5.762,2337,5.377,2338,5.377,2339,5.377,2340,4.828,2341,6.772,2342,5.377,2343,5.344,2344,4.465,2345,4.828,2346,3.645,2347,6.451,2348,4.465,2349,4.465,2350,4.465]],["title/classes/FormDto.html",[0,0.239,2302,3.84]],["body/classes/FormDto.html",[0,0.416,2,0.734,3,0.097,4,0.076,5,0.081,7,0.303,8,0.801,11,1.122,18,0.636,21,0.005,23,0.428,29,0.194,32,1.004,37,0.156,39,2.225,40,0.731,55,0.471,58,0.003,59,0.003,65,1.336,89,4.028,116,2.33,127,3.616,131,1.594,195,5.466,280,2.421,285,1.653,288,2.685,290,2.785,291,1.334,302,2.785,307,3.323,308,2.507,309,2.507,371,2.735,518,2.277,520,3.259,523,3.375,524,2.277,529,2.801,530,2.277,888,1.99,1889,2.456,1921,3.843,1962,4.102,1964,4.366,2277,5.697,2278,4.642,2279,5.264,2280,5.084,2281,4.194,2291,4.776,2293,3.316,2302,5.264,2311,3.891,2327,7.803,2328,4.366,2329,5.084,2330,6.387,2332,4.366,2336,5.697,2340,4.721,2341,6.695,2343,5.264,2344,4.366,2345,4.721,2346,3.565,2347,6.392,2348,4.366,2349,4.366,2350,4.366,2351,5.258,2352,5.258,2353,5.258,2354,5.258,2355,5.258,2356,5.258,2357,5.258,2358,5.258]],["title/classes/FormFieldDto.html",[0,0.239,2359,4.31]],["body/classes/FormFieldDto.html",[0,0.349,2,0.808,3,0.106,4,0.084,5,0.089,7,0.333,8,0.853,18,0.655,21,0.005,23,0.43,29,0.172,32,1.105,37,0.112,40,0.737,41,2.556,58,0.003,59,0.003,131,1.64,209,3.874,288,2.783,290,2.769,291,1.468,307,4.466,308,2.759,309,2.759,371,3.583,520,4.379,858,3.102,1920,4.505,2336,5.976,2359,6.297,2360,5.787,2361,5.976,2362,5.976,2363,5.976,2364,5.976,2365,5.976,2366,5.976,2367,5.734,2368,5.334,2369,5.976,2370,9.317,2371,5.787,2372,5.787,2373,5.787,2374,5.787,2375,5.787,2376,6.297,2377,5.787,2378,5.787,2379,5.787,2380,5.787,2381,5.787,2382,6.895]],["title/classes/FormFieldPart.html",[0,0.239,2383,4.31]],["body/classes/FormFieldPart.html",[0,0.248,2,0.751,3,0.099,4,0.078,5,0.083,7,0.31,8,0.813,18,0.646,21,0.005,23,0.433,29,0.147,37,0.14,40,0.728,41,2.482,58,0.003,59,0.003,131,1.619,132,4.249,135,4.821,136,1.531,182,0.942,209,3.736,218,3.892,232,2.49,299,3.114,305,2.649,306,2.563,307,4.375,308,2.563,309,2.563,371,3.497,858,2.991,2361,5.762,2362,5.762,2363,5.762,2364,5.762,2365,5.762,2366,5.762,2367,5.528,2368,5.143,2369,5.762,2382,6.73,2383,5.998,2384,5.377,2385,5.377,2386,5.377,2387,5.377,2388,5.377,2389,5.377,2390,5.377,2391,5.377,2392,5.377,2393,5.377,2394,5.377,2395,5.377,2396,5.377]],["title/modules/FormModule.html",[178,1.601,2397,4.049]],["body/modules/FormModule.html",[0,0.327,3,0.131,4,0.103,5,0.11,21,0.005,22,1.14,29,0.202,36,1.154,37,0.138,58,0.004,59,0.004,136,2.021,178,2.867,401,2.698,545,3.073,546,3.189,547,3.315,548,3.315,549,3.019,550,4.257,551,3.315,555,4.03,556,3.019,557,3.251,559,4.086,563,3.529,564,4.475,566,4.086,2275,4.811,2298,7.744,2300,7.717,2315,7.453,2316,6.371,2397,7.858,2398,6.371,2399,6.371,2400,7.097,2401,6.371,2402,7.097,2403,7.097]],["title/classes/FormSectionDto.html",[0,0.239,2347,3.84]],["body/classes/FormSectionDto.html",[0,0.393,2,0.824,3,0.109,4,0.086,5,0.091,7,0.34,8,0.865,11,1.159,18,0.624,21,0.005,23,0.432,29,0.191,32,1.127,37,0.114,40,0.72,58,0.003,59,0.003,116,2.408,131,1.563,280,2.565,285,1.785,288,2.68,290,2.791,291,1.498,302,3.125,371,2.954,520,3.912,523,3.534,524,2.557,530,3.327,1889,2.758,1921,4.071,2278,4.917,2291,5.059,2293,3.723,2332,6.38,2336,4.172,2347,7.113,2359,7.787,2368,5.386,2404,5.904,2405,5.386,2406,7.092,2407,5.904,2408,7.683,2409,5.904,2410,5.904,2411,5.904,2412,5.904,2413,5.904,2414,5.904,2415,5.904,2416,5.904,2417,5.904,2418,5.904,2419,4.606,2420,4.606]],["title/classes/FormSectionPart.html",[0,0.239,2294,4.31]],["body/classes/FormSectionPart.html",[0,0.286,2,0.867,3,0.114,4,0.09,5,0.096,7,0.358,8,0.894,11,1.175,18,0.633,21,0.005,23,0.433,29,0.178,37,0.154,40,0.749,41,2.261,58,0.004,59,0.004,116,1.556,126,1.724,131,1.585,132,4.552,135,4.628,136,1.769,182,1.089,232,1.702,280,2.628,299,2.484,305,2.913,306,2.962,888,3.005,2278,5.037,2285,7.422,2286,5.578,2291,5.644,2293,3.918,2294,6.594,2297,5.578,2368,5.518,2383,5.16,2405,5.518,2406,7.266,2421,6.214,2422,6.214,2423,6.214,2424,6.214,2425,6.214,2426,6.214,2427,6.214,2428,6.214,2429,6.214]],["title/injectables/FormService.html",[140,1.35,2315,3.84]],["body/injectables/FormService.html",[0,0.165,3,0.066,4,0.052,5,0.056,7,0.207,8,0.609,9,2.562,10,2.219,11,1.166,12,3.56,15,1.445,18,0.64,20,2.242,21,0.005,22,1.487,23,0.423,25,4.566,29,0.167,30,1.426,36,0.584,37,0.07,40,0.393,49,2.956,55,0.659,58,0.002,59,0.002,65,0.837,66,3.823,72,2.3,74,2.884,75,2.884,76,1.514,77,2.884,78,2.884,79,1.212,80,2.205,89,4.028,90,2.012,91,2.012,92,2.012,93,1.913,94,2.012,95,2.012,96,2.012,98,1.92,126,1.808,128,2.956,136,1.023,138,0.877,140,1.408,141,1.555,174,3.498,192,6.043,194,4.575,198,2.884,199,2.388,200,2.692,201,3.207,202,3.306,203,3.306,204,3.117,205,3.535,206,4.16,207,3.306,208,2.345,209,3.566,211,2.345,213,2.341,220,2.265,221,5.566,222,3.601,223,2.345,224,5.107,225,4.362,226,2.265,227,3.414,228,2.537,229,1.064,230,2.265,231,5.947,232,2.753,233,2.345,234,2.265,235,4.264,236,5.566,237,2.345,238,2.265,239,2.345,240,2.345,241,2.345,242,2.265,243,2.345,244,2.345,245,2.345,246,2.012,247,4.575,248,2.435,249,2.345,250,2.345,251,2.067,252,2.265,256,1.023,2275,2.435,2315,4.006,2401,3.224,2430,3.591,2431,3.591,2432,3.591]],["title/classes/FormUpdateDto.html",[0,0.239,2311,3.84]],["body/classes/FormUpdateDto.html",[0,0.442,2,0.891,3,0.117,4,0.092,5,0.099,21,0.005,23,0.386,29,0.203,32,1.218,37,0.172,39,2.526,40,0.723,58,0.004,59,0.004,65,1.44,116,2.219,195,4.326,280,1.916,285,1.877,288,2.787,290,2.964,291,1.618,302,3.06,307,3.772,308,3.042,309,3.042,518,2.763,520,3.699,523,3.638,524,2.763,529,3.399,530,2.763,888,2.415,1889,2.981,1921,4.223,2277,4.508,2278,3.673,2279,4.166,2280,4.024,2281,3.319,2291,4.784,2293,4.024,2302,4.722,2311,5.975,2327,6.3,2328,5.299,2329,5.092,2341,6.706,2346,4.326,2347,6.89,2348,5.299,2349,5.299,2350,6.706]],["title/classes/FusionDto.html",[0,0.239,2433,4.31]],["body/classes/FusionDto.html",[0,0.392,2,0.971,3,0.128,4,0.101,5,0.107,7,0.4,8,0.959,18,0.553,21,0.005,23,0.415,29,0.174,32,1.328,37,0.135,40,0.743,55,0.663,58,0.004,59,0.004,131,1.385,276,3.813,278,4.905,279,7.489,280,2.883,281,4.157,288,2.522,290,2.842,291,1.764,292,3.384,2433,7.075,2434,6.954,2435,9.21,2436,9.21,2437,7.648,2438,6.954,2439,7.648,2440,6.954]],["title/interfaces/GithubAsset.html",[38,1.421,932,3.84]],["body/interfaces/GithubAsset.html",[0,0.165,3,0.066,4,0.052,5,0.056,9,1.831,12,2.79,15,0.958,18,0.233,21,0.005,22,1.314,23,0.149,29,0.186,30,1.426,36,0.584,37,0.151,38,1.784,39,1.694,40,0.749,41,1.542,53,1.626,55,0.515,56,1.794,58,0.002,59,0.002,60,1.475,61,2.435,65,0.555,66,2.529,67,1.786,72,1.522,76,0.835,80,1.441,98,1.789,110,2.388,137,1.317,140,1.408,174,2.506,182,1.142,213,2.341,229,1.931,256,1.023,257,1.381,259,1.653,262,1.317,270,1.317,276,2.15,283,2.723,285,0.835,355,2.354,409,1.555,437,2.635,490,1.426,530,2.344,549,3.311,619,3.106,628,2.657,631,1.913,637,5.782,639,3.306,640,3.535,642,7.516,643,5.5,650,2.537,651,2.537,654,5.277,655,4.737,657,4.254,658,6.469,660,6.001,667,2.012,679,4.918,760,2.435,762,2.345,775,3.558,790,3.117,791,4.575,826,2.956,845,2.657,846,2.435,847,4.224,849,2.802,850,4.418,851,5.084,853,2.802,854,5.66,856,5.66,857,6.979,859,6.626,860,4.604,862,4.006,863,3.86,864,4.006,865,2.802,867,5.369,868,4.224,870,4.006,871,4.612,872,5.66,873,2.802,874,5.084,875,4.006,876,3.414,877,3.414,878,2.657,879,4.006,880,2.802,881,2.537,882,2.802,883,2.537,885,2.537,886,2.127,887,4.006,888,2.049,889,2.802,890,4.224,891,2.435,892,4.224,893,4.918,894,2.802,896,2.802,897,2.193,898,2.345,899,2.435,900,2.265,901,2.537,902,1.868,903,2.657,904,4.822,905,2.802,906,4.224,907,2.537,908,2.657,909,2.657,910,3.979,911,2.657,912,2.657,913,2.345,914,2.657,915,4.006,916,2.802,917,4.224,918,2.802,919,2.802,920,4.224,921,2.802,922,2.802,923,2.802,924,2.802,925,2.802,926,2.802,927,2.802,928,2.802,929,2.802,930,2.802,931,2.802,932,4.822,933,2.802,934,2.802,935,2.657,936,2.802,937,2.802,938,2.802,939,2.802,940,2.802,941,2.802,942,2.657,943,2.802,944,2.802,945,2.802,946,2.802,947,2.265,948,2.193,949,2.802,950,2.802,951,4.224,952,3.414,953,4.224,954,4.224,955,5.084,956,2.802,957,3.825,958,2.802,959,4.224,960,2.345,961,2.802,962,2.802,963,2.657,964,4.224,965,5.084,966,4.109,967,4.224,968,2.802,969,2.802,970,2.802,971,2.802,972,2.435,973,2.802,974,3.86,975,2.802,976,2.345,977,2.802,978,2.435,979,2.802,980,2.657,981,2.657,982,2.435,983,2.802,984,2.435,2441,3.591]],["title/interfaces/GithubAuthor.html",[38,1.421,915,3.84]],["body/interfaces/GithubAuthor.html",[0,0.147,3,0.059,4,0.046,5,0.049,7,0.184,8,0.557,9,1.704,12,2.625,15,0.853,21,0.005,22,1.255,23,0.412,29,0.18,30,1.269,36,0.52,37,0.143,38,1.66,39,0.999,40,0.769,41,1.944,53,1.487,55,0.489,56,1.734,58,0.002,59,0.002,60,1.312,65,0.494,66,2.313,67,1.589,72,1.392,76,0.743,80,1.341,98,1.717,110,2.184,137,1.172,140,1.288,174,2.359,182,1.062,213,2.27,229,1.796,256,0.91,257,1.229,259,1.538,262,1.172,270,1.172,276,2.934,283,3.087,285,0.743,355,2.19,409,1.384,437,2.41,490,1.269,530,2.144,549,3.142,619,2.89,628,2.364,631,1.702,637,5.522,639,3.023,640,3.233,642,7.412,643,5.22,650,2.258,651,2.258,654,5.008,655,4.458,657,3.958,658,6.234,660,5.76,667,1.79,679,4.629,760,2.166,762,2.086,775,3.31,790,2.85,791,4.306,826,4.034,845,2.364,846,2.166,847,3.863,849,2.493,850,4.109,851,4.729,853,2.493,854,5.327,856,5.327,857,6.747,859,6.359,860,4.283,862,3.664,863,3.591,864,3.664,865,2.493,867,5.052,868,3.863,870,3.664,871,4.376,872,5.327,873,2.493,874,4.729,875,3.664,876,3.122,877,3.122,878,2.364,879,3.664,880,2.493,881,2.258,882,2.493,883,2.258,885,2.258,886,1.893,887,3.664,888,1.874,889,2.493,890,3.863,891,2.166,892,3.863,893,4.629,894,2.493,896,2.493,897,1.951,898,2.086,899,2.166,900,2.015,901,2.258,902,1.662,903,2.364,904,4.486,905,2.493,906,3.863,907,2.258,908,2.364,909,2.364,910,3.701,911,2.364,912,2.364,913,2.086,914,2.364,915,4.486,916,5.327,917,5.763,918,5.327,919,5.327,920,5.763,921,5.327,922,5.327,923,5.327,924,5.327,925,5.327,926,5.327,927,5.327,928,5.327,929,5.327,930,5.327,931,5.327,932,3.664,933,2.493,934,2.493,935,2.364,936,2.493,937,2.493,938,2.493,939,2.493,940,2.493,941,2.493,942,2.364,943,2.493,944,2.493,945,2.493,946,2.493,947,2.015,948,1.951,949,2.493,950,2.493,951,3.863,952,3.122,953,3.863,954,3.863,955,4.729,956,2.493,957,3.498,958,2.493,959,3.863,960,2.086,961,2.493,962,2.493,963,2.364,964,3.863,965,4.729,966,3.823,967,3.863,968,2.493,969,2.493,970,2.493,971,2.493,972,2.166,973,2.493,974,3.591,975,2.493,976,2.086,977,2.493,978,2.166,979,2.493,980,2.364,981,2.364,982,2.166,983,2.493,984,2.166]],["title/interfaces/GithubUpdate.html",[38,1.421,867,3.84]],["body/interfaces/GithubUpdate.html",[0,0.148,3,0.059,4,0.047,5,0.05,7,0.185,8,0.56,9,1.71,12,2.633,15,0.858,21,0.005,22,1.391,23,0.404,29,0.18,30,1.277,36,0.523,37,0.144,38,1.666,39,1.005,40,0.765,41,1.95,53,1.494,55,0.49,56,1.737,58,0.002,59,0.002,60,1.32,65,0.497,66,2.324,67,1.598,72,1.398,76,0.747,80,1.346,98,1.72,110,2.194,137,1.179,140,1.294,174,2.366,182,1.066,213,2.274,229,1.803,256,0.915,257,1.236,259,1.543,262,1.179,270,1.179,276,2.942,283,3.414,285,0.747,355,2.198,409,2.966,437,2.421,490,1.277,530,2.154,549,3.151,619,2.901,628,2.378,631,1.712,637,5.535,639,3.037,640,3.247,642,7.417,643,5.234,650,2.271,651,2.271,654,5.022,655,4.472,657,3.972,658,6.246,660,5.772,667,1.801,679,4.643,760,2.179,762,2.098,775,3.322,790,2.864,791,4.319,826,4.045,845,2.378,846,2.179,847,3.88,849,2.507,850,4.125,851,4.747,853,2.507,854,5.343,856,5.343,857,6.759,859,6.373,860,4.299,862,3.681,863,3.604,864,3.681,865,2.507,867,5.482,868,3.88,870,3.681,871,4.388,872,5.343,873,2.507,874,4.747,875,3.681,876,3.137,877,3.137,878,2.378,879,3.681,880,2.507,881,2.271,882,2.507,883,2.271,885,2.271,886,1.904,887,3.681,888,1.882,889,2.507,890,3.88,891,2.179,892,3.88,893,4.643,894,2.507,896,2.507,897,1.962,898,2.098,899,2.179,900,2.027,901,2.271,902,1.672,903,2.378,904,4.503,905,2.507,906,3.88,907,2.271,908,2.378,909,2.378,910,3.715,911,2.378,912,2.378,913,2.098,914,2.378,915,5.068,916,2.507,917,5.779,918,2.507,919,2.507,920,5.779,921,2.507,922,2.507,923,2.507,924,2.507,925,2.507,926,2.507,927,2.507,928,2.507,929,2.507,930,2.507,931,2.507,932,5.068,933,5.343,934,5.343,935,5.068,936,5.343,937,5.343,938,5.343,939,5.343,940,5.343,941,5.343,942,5.068,943,5.343,944,5.343,945,2.507,946,2.507,947,2.027,948,1.962,949,2.507,950,2.507,951,3.88,952,3.137,953,3.88,954,3.88,955,4.747,956,2.507,957,3.514,958,2.507,959,3.88,960,2.098,961,2.507,962,2.507,963,2.378,964,3.88,965,4.747,966,3.837,967,3.88,968,2.507,969,2.507,970,2.507,971,2.507,972,2.179,973,2.507,974,3.604,975,2.507,976,2.098,977,2.507,978,2.179,979,2.507,980,2.378,981,2.378,982,2.179,983,2.507,984,2.179]],["title/classes/Identities.html",[0,0.239,1446,2.169]],["body/classes/Identities.html",[0,0.169,2,0.514,3,0.068,4,0.053,5,0.057,7,0.317,8,0.62,11,0.886,18,0.635,21,0.005,23,0.431,29,0.194,37,0.128,39,1.151,40,0.675,41,2.351,55,0.698,56,0.738,58,0.002,59,0.002,65,0.569,116,2.411,123,3.01,125,2.264,128,2.983,131,1.59,132,4.568,135,4.598,136,1.047,137,1.349,138,0.898,174,2.284,182,0.644,218,2.054,232,2.55,270,2.694,277,1.593,283,3.68,285,1.536,293,4.671,299,3.154,301,2.118,302,3.168,305,2.022,306,1.753,307,2.575,308,1.753,309,1.753,310,3.055,311,5.935,365,3.806,368,2.583,371,1.414,374,2.599,386,2.179,389,2.401,390,2.246,605,2.87,888,3.332,1028,2.628,1229,2.722,1232,2.401,1233,3.055,1235,2.494,1236,3.055,1292,1.959,1312,3.287,1446,2.763,1457,4.528,1465,5.135,1466,2.494,1467,2.401,1468,4.96,1469,2.401,1553,2.802,1573,2.599,1622,3.737,1718,4.316,1724,2.494,1746,3.68,1750,3.055,1758,3.916,1896,2.494,1901,4.407,1904,3.218,1946,3.055,2078,4.578,2145,4.316,2442,3.302,2443,3.806,2444,4.671,2445,6.611,2446,6.611,2447,5.49,2448,4.398,2449,6.611,2450,6.611,2451,6.611,2452,6.611,2453,6.611,2454,3.678,2455,3.678,2456,3.678,2457,3.678,2458,3.678,2459,3.678,2460,3.678,2461,5.935,2462,3.678,2463,5.49,2464,5.935,2465,3.678,2466,3.678,2467,3.678,2468,3.678,2469,3.678,2470,3.678,2471,3.678,2472,3.678,2473,2.722,2474,3.678,2475,2.494,2476,3.678,2477,3.678,2478,3.678,2479,3.302,2480,4.949,2481,3.302,2482,3.302,2483,3.302,2484,3.302,2485,3.678,2486,3.678,2487,3.678,2488,2.401,2489,3.678,2490,3.302,2491,3.678,2492,3.055,2493,3.678,2494,3.055,2495,3.678,2496,3.678,2497,3.678,2498,3.302]],["title/controllers/IdentitiesActivationController.html",[399,1.478,2499,4.31]],["body/controllers/IdentitiesActivationController.html",[0,0.289,1,3.737,3,0.116,4,0.091,5,0.097,7,0.362,11,0.758,18,0.408,20,1.408,21,0.005,22,1.009,23,0.26,29,0.202,32,1.2,36,1.022,37,0.122,55,0.613,56,1.604,58,0.004,59,0.004,65,1.237,76,1.461,79,1.791,80,1.946,98,1.324,131,1.022,158,2.237,182,1.101,213,2.055,229,2.37,232,1.721,256,1.79,257,2.417,259,1.594,262,2.306,273,7.224,277,3.464,285,1.461,343,1.966,355,2.271,362,3.348,399,1.79,401,1.966,403,2.627,408,3.804,409,4.141,413,3.88,436,2.582,437,3.893,439,3.059,441,2.825,444,3.126,471,3.059,476,3.286,484,3.059,485,3.893,673,4.367,675,5.044,681,3.348,974,3.724,1446,2.627,1468,3.964,1469,4.104,1509,5.22,1556,5.044,1595,6.642,1632,3.964,1724,4.261,2499,6.642,2500,5.651,2501,6.286,2502,6.286,2503,6.286,2504,7.998,2505,6.286,2506,6.286,2507,6.642,2508,3.964,2509,5.22,2510,5.643,2511,5.643,2512,4.441,2513,4.441,2514,6.286,2515,6.286,2516,6.286,2517,6.286,2518,6.286,2519,4.651]],["title/classes/IdentitiesCommand.html",[0,0.239,1773,4.049]],["body/classes/IdentitiesCommand.html",[0,0.346,2,0.797,3,0.105,4,0.083,5,0.088,7,0.329,9,1.604,10,2.559,11,0.906,12,3.789,15,2.006,18,0.488,20,1.683,21,0.005,22,1.434,23,0.311,29,0.189,30,2.268,36,0.928,37,0.146,40,0.648,42,2.757,43,2.635,44,2.937,45,3.737,46,3.909,53,1.714,55,0.556,58,0.003,59,0.003,65,1.162,72,2.112,76,1.747,79,1.683,80,1.975,98,1.202,182,1.564,213,2.158,222,3.225,256,2.14,259,2.353,281,3.866,329,4.589,330,5.13,334,4.589,335,3.382,336,3.382,346,3.443,347,4.589,348,4.589,349,5.13,359,3.382,360,3.486,362,3.041,394,4.739,395,3.486,398,3.727,482,4.211,603,3.486,1054,5.63,1164,3.6,1426,4.741,1446,3.981,1746,2.386,1773,5.863,2062,4.225,2097,4.454,2145,6.339,2508,3.6,2520,5.125,2521,5.709,2522,5.709,2523,6.217,2524,4.454,2525,6.241,2526,5.125,2527,5.125,2528,5.125,2529,5.125,2530,5.125,2531,5.125,2532,4.741,2533,6.747,2534,5.125,2535,5.125,2536,5.125]],["title/classes/IdentitiesCreateDto.html",[0,0.239,2537,3.667]],["body/classes/IdentitiesCreateDto.html",[0,0.417,2,0.67,3,0.088,4,0.07,5,0.074,7,0.276,8,0.752,11,0.806,18,0.587,21,0.005,23,0.414,29,0.201,32,0.916,37,0.161,40,0.603,55,0.681,58,0.003,59,0.003,65,1.351,116,1.674,131,1.471,232,1.314,268,3.391,277,2.078,280,2.007,288,2.542,290,2.062,291,1.217,292,2.654,295,4.425,296,4.425,302,1.658,368,3.004,498,2.386,518,2.078,520,2.198,523,3.627,524,2.078,527,2.496,528,2.496,619,2.288,888,3.145,1014,3.185,1021,3.883,1027,3.414,1314,3.252,1457,4.785,1465,5.705,1466,3.254,1467,3.133,1468,5.51,1469,3.133,1517,2.792,1653,3.559,1758,4.554,1889,2.242,1901,4.307,1902,3.027,1904,3.741,1920,4.427,1921,3.185,2329,4.847,2346,3.254,2443,4.425,2444,5.431,2448,4.094,2473,3.551,2475,3.254,2488,4.362,2537,5.431,2538,3.744,2539,5.213,2540,6.134,2541,4.309,2542,4.785,2543,5.213,2544,4.721,2545,4.721,2546,5.873,2547,5.427,2548,5.427,2549,4.53,2550,4.721,2551,5.213,2552,5.213,2553,4.721,2554,4.799,2555,4.309,2556,4.799,2557,5.706,2558,4.309,2559,4.799,2560,4.309,2561,4.799,2562,4.309,2563,4.799,2564,4.309,2565,4.309,2566,4.799,2567,3.744,2568,3.744,2569,3.744,2570,3.744,2571,3.744,2572,3.744,2573,4.53,2574,3.744,2575,3.744,2576,3.744,2577,3.744,2578,2.93,2579,4.53,2580,3.744,2581,3.391,2582,3.744]],["title/controllers/IdentitiesCrudController.html",[399,1.478,2583,4.31]],["body/controllers/IdentitiesCrudController.html",[0,0.111,1,1.845,3,0.044,4,0.035,5,0.037,7,0.139,9,1.633,11,0.977,15,0.642,18,0.526,20,1.815,21,0.005,22,1.407,23,0.389,29,0.192,32,0.46,36,0.391,37,0.047,39,1.235,40,0.552,41,1.125,53,1.186,55,0.652,56,1.757,58,0.002,59,0.002,65,0.611,72,0.676,76,1.491,79,0.884,80,2.173,98,1.706,110,1.742,125,0.989,126,2.464,127,1.224,128,3.116,131,1.28,137,0.883,138,0.588,158,0.856,174,0.831,182,1.511,198,2.675,199,2.215,200,1.197,206,2.553,213,2.396,229,2.743,235,1.147,246,1.349,256,0.685,257,1.518,259,2.106,262,1.449,270,2.671,276,0.956,277,1.042,281,2.516,297,3.865,298,1.47,307,2.715,308,1.147,309,1.147,343,2.378,353,1.349,355,2.099,368,1.962,371,2.234,389,1.571,399,0.685,401,0.753,403,1.006,404,3.794,405,3.548,406,3.167,407,1.781,408,4.05,409,4.145,413,4.4,414,1.701,415,2.79,416,4.937,417,4.937,418,2.79,421,1.781,422,1.781,425,1.518,426,5.29,427,5.14,428,6.371,429,5.632,430,1.701,433,4.533,436,0.989,437,1.171,438,1.878,439,1.922,440,4.349,441,1.082,442,1.252,443,1.426,444,1.197,445,1.781,446,3.794,447,1.781,450,1.632,451,1.701,452,1.701,453,1.632,454,1.878,455,1.878,456,1.701,457,1.701,458,1.701,459,4.046,460,1.781,461,1.701,462,2.411,463,1.518,464,1.518,468,1.171,471,1.171,474,1.878,476,3.599,477,1.701,482,4.26,483,1.701,484,3.832,485,3.832,486,3.548,488,4.106,489,2.79,492,1.878,494,1.781,667,2.213,673,3.173,681,2.675,858,0.883,974,2.339,1014,2.77,1021,1.845,1027,2.063,1029,3.428,1294,5.217,1443,2.677,1445,1.701,1446,1.65,1457,2.891,1489,3.066,1492,1.47,1496,1.426,1507,4.533,1517,2.681,1587,1.282,1622,2.677,1624,1.701,1632,2.49,1717,2.79,1758,1.426,1904,1.171,2032,1.282,2034,3.081,2084,1.701,2128,2.161,2154,1.571,2205,2.578,2207,1.781,2208,2.79,2211,1.878,2271,1.878,2405,1.518,2443,1.386,2444,1.701,2448,1.282,2475,1.632,2500,5.865,2508,1.518,2512,1.701,2513,1.701,2519,2.922,2537,4.106,2542,1.386,2578,4.447,2579,4.937,2583,3.279,2584,2.407,2585,5.022,2586,5.022,2587,5.022,2588,5.022,2589,2.407,2590,2.407,2591,4.533,2592,5.217,2593,4.3,2594,4.826,2595,2.407,2596,2.407,2597,3.949,2598,2.407,2599,2.922,2600,3.545,2601,2.407,2602,2.407,2603,2.407,2604,2.407,2605,2.407,2606,2.407,2607,2.407,2608,2.407,2609,2.407,2610,2.407,2611,3.949,2612,2.407,2613,2.407,2614,2.407,2615,2.407,2616,2.407,2617,2.407,2618,2.922,2619,3.545,2620,2.79,2621,3.949,2622,2.407,2623,1.781,2624,1.878,2625,2.339,2626,1.878,2627,1.999,2628,1.999,2629,2.407,2630,3.949,2631,3.949,2632,3.949,2633,3.949,2634,3.081,2635,3.949,2636,1.999,2637,1.282,2638,1.999,2639,1.878,2640,1.999,2641,1.999,2642,2.407,2643,1.999,2644,2.161,2645,2.161,2646,1.999,2647,1.999,2648,1.701,2649,1.571,2650,1.999,2651,1.999,2652,2.407,2653,2.407,2654,3.949,2655,5.022,2656,2.407,2657,2.407,2658,2.407,2659,2.407,2660,3.545,2661,1.701,2662,2.407,2663,2.407,2664,2.407,2665,1.878,2666,2.407,2667,2.407,2668,2.407,2669,2.161,2670,2.407,2671,3.949,2672,2.407,2673,2.407,2674,1.701,2675,2.407,2676,2.161,2677,2.407,2678,2.407,2679,2.407,2680,2.407,2681,2.407,2682,2.407,2683,2.407,2684,2.161,2685,2.407,2686,2.407]],["title/controllers/IdentitiesDoublonController.html",[399,1.478,2687,4.31]],["body/controllers/IdentitiesDoublonController.html",[0,0.255,1,3.443,3,0.102,4,0.08,5,0.086,7,0.319,9,1.558,11,0.889,18,0.478,20,1.65,21,0.005,22,1.183,23,0.305,29,0.2,32,1.058,36,0.901,37,0.107,55,0.638,56,1.478,58,0.003,59,0.003,65,1.14,76,1.713,79,1.65,80,2.089,98,1.552,127,2.817,131,1.198,158,1.972,182,1.45,213,2.267,229,2.184,232,1.518,235,2.642,256,1.578,259,1.869,270,3.37,277,2.4,362,2.952,368,2.166,399,1.578,401,1.734,403,2.316,408,3.96,409,3.821,413,4.251,436,2.277,439,2.697,441,2.491,444,2.756,462,4.5,463,3.495,464,3.495,468,2.697,471,2.697,476,3.027,482,4.129,484,3.587,485,4.03,673,4.52,675,4.647,681,3.925,1028,3.513,1293,5.453,1312,3.664,1446,2.316,1517,3.08,1718,3.618,1758,3.283,2433,7.328,2443,3.191,2448,2.952,2488,4.811,2490,7.433,2500,5.85,2508,3.495,2512,3.916,2513,3.916,2578,3.384,2623,4.101,2687,6.12,2688,5.542,2689,7.369,2690,5.542,2691,5.542,2692,7.369,2693,5.542,2694,5.542,2695,5.542,2696,5.542,2697,6.12,2698,7.369,2699,7.369,2700,5.542,2701,5.542,2702,6.616,2703,4.976,2704,5.542,2705,5.542,2706,5.542,2707,4.976,2708,5.542,2709,7.369,2710,5.542,2711,5.542]],["title/classes/IdentitiesDto.html",[0,0.239,2578,3.169]],["body/classes/IdentitiesDto.html",[0,0.415,2,0.661,3,0.087,4,0.069,5,0.073,7,0.272,8,0.745,11,0.798,18,0.585,21,0.005,23,0.413,29,0.2,32,0.904,37,0.16,40,0.599,55,0.68,58,0.003,59,0.003,65,1.345,89,3.7,116,1.657,131,1.465,232,1.296,268,3.344,277,2.05,280,1.987,288,2.532,290,2.042,291,1.201,292,2.629,295,4.393,296,4.393,302,1.635,368,2.981,498,2.354,518,2.05,520,2.168,523,3.613,524,2.05,527,2.462,528,2.462,619,2.256,888,3.127,1014,3.155,1021,3.86,1027,3.394,1314,3.221,1457,4.756,1465,5.676,1466,3.209,1467,3.09,1468,5.483,1469,3.09,1517,2.766,1653,3.525,1758,4.52,1889,2.211,1901,4.275,1902,2.985,1904,3.714,1920,4.401,1921,3.155,2329,4.173,2346,3.209,2443,4.393,2444,5.391,2448,4.064,2473,3.503,2475,3.209,2488,4.321,2537,6.773,2538,3.693,2539,3.693,2540,6.107,2541,4.249,2542,4.756,2543,5.163,2544,4.676,2545,4.676,2546,5.838,2547,5.394,2548,5.394,2549,4.486,2550,4.676,2551,5.163,2552,5.163,2553,4.676,2555,4.249,2557,5.681,2558,4.249,2560,4.249,2562,4.249,2564,4.249,2565,4.249,2567,3.693,2568,3.693,2569,3.693,2570,3.693,2571,3.693,2572,3.693,2573,4.486,2574,3.693,2575,3.693,2576,3.693,2577,3.693,2578,4.041,2579,4.486,2580,3.693,2581,3.344,2582,3.693,2712,4.733,2713,4.733,2714,4.733,2715,4.733,2716,4.733,2717,4.733]],["title/classes/IdentitiesFingerprintCommand.html",[0,0.239,2525,4.31]],["body/classes/IdentitiesFingerprintCommand.html",[0,0.34,2,0.775,3,0.102,4,0.08,5,0.086,7,0.32,8,0.83,9,1.56,10,3.006,11,0.89,12,3.766,15,1.969,18,0.538,20,1.652,21,0.005,22,1.418,23,0.305,29,0.187,30,2.205,36,0.903,37,0.143,40,0.64,42,2.706,43,2.586,44,2.882,45,3.668,46,3.837,53,2.215,55,0.548,58,0.003,59,0.003,65,1.141,72,2.481,76,2.052,79,1.652,80,1.953,98,1.169,182,1.547,213,2.128,222,3.19,256,2.101,259,2.331,281,3.823,299,1.736,329,4.504,330,5.059,334,4.504,335,3.288,336,3.288,346,3.379,347,4.504,348,4.504,349,5.059,359,3.288,360,3.389,362,2.956,394,4.652,395,3.389,398,3.624,482,4.133,603,3.389,858,2.036,1054,5.568,1164,3.5,1426,4.609,1446,3.949,1746,2.32,1773,4.33,2062,4.107,2097,4.33,2145,6.296,2508,3.5,2520,4.983,2523,7.136,2524,4.33,2525,6.88,2526,6.622,2527,4.983,2528,4.983,2529,4.983,2530,4.983,2531,4.983,2532,4.609,2533,6.622,2534,4.983,2535,4.983,2536,4.983,2718,7.376,2719,5.55]],["title/controllers/IdentitiesForcePasswordController.html",[399,1.478,2720,4.31]],["body/controllers/IdentitiesForcePasswordController.html",[0,0.246,1,3.355,3,0.098,4,0.077,5,0.082,7,0.307,11,0.866,18,0.466,20,1.608,21,0.005,22,1.153,23,0.297,29,0.2,32,1.018,36,0.867,37,0.103,55,0.632,56,1.742,58,0.003,59,0.003,65,1.111,76,1.239,79,1.608,80,2.066,98,1.512,131,1.168,158,1.897,177,3.481,182,1.258,213,2.232,229,2.574,232,1.966,256,1.518,257,2.761,259,1.821,262,2.634,273,4.16,277,3.11,324,2.268,343,2.246,355,2.594,362,2.84,399,1.518,401,1.668,403,2.228,408,3.921,409,4.258,413,3.999,436,2.19,439,2.595,441,2.396,444,2.651,471,2.595,476,3.569,484,3.495,485,4.228,673,4.433,675,5.121,681,3.825,974,4.254,1014,3.423,1027,3.837,1440,4.16,1446,2.228,1486,6.429,1487,5.505,1556,4.529,1632,4.529,2273,7.215,2500,5.737,2507,4.428,2508,4.529,2509,4.428,2510,4.787,2511,6.447,2512,3.767,2513,3.767,2519,5.314,2720,5.963,2721,5.332,2722,7.181,2723,7.181,2724,5.332,2725,5.332,2726,7.215,2727,5.332,2728,5.332,2729,5.332,2730,7.215,2731,5.332,2732,7.181,2733,7.181,2734,6.447,2735,4.787,2736,5.332,2737,5.332,2738,5.963,2739,4.787,2740,5.332,2741,5.332,2742,4.787,2743,5.332,2744,5.332,2745,5.332,2746,5.332,2747,5.332,2748,5.332]],["title/controllers/IdentitiesJsonFormsController.html",[399,1.478,2749,4.31]],["body/controllers/IdentitiesJsonFormsController.html",[0,0.213,1,3.041,3,0.085,4,0.067,5,0.101,7,0.266,11,0.986,18,0.531,20,1.831,21,0.005,22,1.313,23,0.339,29,0.176,32,0.883,36,0.752,37,0.09,40,0.546,55,0.658,56,1.64,58,0.003,59,0.003,65,1.007,76,1.075,79,1.458,80,2.181,98,1.722,131,1.33,158,1.645,174,2.978,182,1.433,199,3.323,206,3.83,213,2.409,229,2.423,256,1.317,259,2.074,299,1.446,305,3.37,399,1.317,401,1.446,403,1.932,406,4.751,408,4.083,409,3.732,413,4.262,425,2.916,436,1.899,437,2.25,439,2.25,441,2.078,444,2.299,470,2.299,471,2.25,476,3.359,484,3.98,485,3.98,573,2.916,619,3.592,630,3.84,673,4.706,681,4.356,858,1.696,897,5.727,952,5.157,1020,5.079,1021,3.82,1027,2.674,1147,2.25,1258,4.6,1276,4.878,1293,4.817,1312,4.066,2296,7.789,2547,4.25,2749,5.406,2750,4.624,2751,4.624,2752,5.844,2753,5.844,2754,4.624,2755,4.624,2756,7.341,2757,6.38,2758,6.051,2759,6.791,2760,4.624,2761,4.624,2762,4.624,2763,6.51,2764,5.844,2765,6.38,2766,7.341,2767,4.624,2768,4.624,2769,4.624,2770,4.151,2771,4.624,2772,4.6,2773,4.151,2774,4.624,2775,4.624,2776,4.624,2777,4.624,2778,4.624,2779,4.624,2780,4.624,2781,4.624,2782,4.624,2783,4.151,2784,4.151,2785,4.151,2786,4.151,2787,4.624,2788,4.151,2789,4.624,2790,5.406,2791,4.151,2792,2.916,2793,4.624]],["title/modules/IdentitiesJsonformsModule.html",[178,1.601,2794,3.84]],["body/modules/IdentitiesJsonformsModule.html",[0,0.335,3,0.134,4,0.105,5,0.112,21,0.005,29,0.191,36,1.183,37,0.141,58,0.004,59,0.004,178,2.898,401,2.739,545,3.15,546,3.269,547,3.398,548,3.398,549,3.094,550,4.303,551,4.388,555,4.09,556,3.094,557,3.332,2749,7.8,2772,7.45,2773,6.53,2794,7.581,2795,6.53,2796,6.53,2797,6.53,2798,7.274,2799,7.274]],["title/injectables/IdentitiesJsonformsService.html",[140,1.35,2772,3.667]],["body/injectables/IdentitiesJsonformsService.html",[0,0.138,3,0.055,4,0.043,5,0.141,7,0.335,8,0.529,9,2.137,10,1.979,11,0.959,12,2.234,15,1.551,18,0.592,20,1.301,21,0.005,22,0.933,23,0.382,25,1.37,29,0.155,36,0.486,37,0.058,39,2.24,40,0.652,53,1.978,55,0.628,56,1.773,58,0.002,59,0.002,65,0.727,66,3.959,67,1.487,68,2.213,70,3.955,72,2.485,74,2.505,75,2.505,76,1.093,77,2.505,78,2.505,79,1.053,80,1.989,89,3.123,90,1.676,91,1.676,92,1.676,93,1.593,94,1.676,95,1.676,96,1.676,98,1.601,110,2.074,116,0.749,140,1.223,141,1.295,174,2.474,182,1.752,199,1.319,204,3.346,213,2.116,222,2.747,229,1.393,256,0.852,257,2.924,262,2.789,285,0.695,299,1.471,302,1.625,305,3.386,343,1.818,355,2.747,371,1.808,644,3.188,775,2.568,850,5.155,886,1.772,898,1.953,899,2.028,900,1.886,947,4.154,948,4.022,952,2.966,972,2.028,974,4.504,976,1.953,1147,3.701,1148,2.484,1149,2.334,1165,2.213,1258,4.106,1276,2.446,1446,1.965,1567,2.213,1805,2.213,2023,3.669,2092,2.635,2368,3.665,2669,2.685,2674,4.106,2752,5.914,2772,3.323,2783,2.685,2790,6.842,2792,2.966,2800,2.991,2801,5.914,2802,4.703,2803,2.991,2804,2.991,2805,2.685,2806,2.991,2807,2.991,2808,2.991,2809,2.991,2810,2.991,2811,4.703,2812,2.991,2813,2.991,2814,2.028,2815,2.484,2816,2.991,2817,5.587,2818,4.106,2819,2.484,2820,2.685,2821,2.685,2822,6.352,2823,4.826,2824,2.685,2825,7.162,2826,2.991,2827,2.991,2828,5.587,2829,3.905,2830,2.484,2831,3.905,2832,2.991,2833,2.991,2834,2.484,2835,7.603,2836,2.334,2837,2.685,2838,2.213,2839,5.811,2840,3.905,2841,6.826,2842,2.991,2843,6.826,2844,2.991,2845,2.685,2846,2.685,2847,2.991,2848,2.991,2849,4.703,2850,2.685,2851,2.991,2852,4.222,2853,2.991,2854,5.811,2855,2.991,2856,4.222,2857,4.703,2858,4.703,2859,4.703,2860,6.43,2861,2.991,2862,2.991,2863,2.991,2864,2.991,2865,2.991,2866,2.484,2867,4.703,2868,4.703,2869,2.991,2870,2.991,2871,2.484,2872,2.991,2873,2.685,2874,2.991,2875,2.991,2876,2.991,2877,1.953,2878,2.991,2879,4.703,2880,2.991,2881,4.703,2882,2.991,2883,2.991,2884,2.991,2885,2.991,2886,2.991,2887,2.685,2888,2.685,2889,7.141,2890,4.222,2891,6.588,2892,4.222,2893,6.826,2894,4.222,2895,4.222,2896,2.991,2897,2.334,2898,2.991,2899,2.991,2900,2.991,2901,2.991,2902,2.991,2903,4.222,2904,2.991,2905,2.685,2906,2.685,2907,2.991,2908,2.685,2909,2.991,2910,2.991,2911,2.991,2912,2.991,2913,2.991,2914,4.703,2915,2.991,2916,5.914,2917,2.991,2918,2.991,2919,2.991]],["title/modules/IdentitiesModule.html",[178,1.601,1407,3.169]],["body/modules/IdentitiesModule.html",[0,0.226,3,0.09,4,0.071,5,0.076,11,0.593,18,0.319,20,1.101,21,0.005,22,1.091,23,0.204,29,0.214,30,1.953,36,0.8,37,0.095,55,0.45,58,0.003,59,0.003,67,2.445,79,1.101,98,1.036,136,1.4,178,2.403,401,2.126,544,5.749,545,2.129,546,2.21,547,2.297,548,2.297,549,2.092,550,3.567,551,3.638,555,3.175,556,2.092,557,2.253,559,2.831,563,3.872,564,3.101,566,2.831,723,6.18,737,6.101,744,4.415,747,4.084,774,3.474,842,3.836,843,4.415,1086,4.084,1402,4.437,1407,6.282,1443,6.456,1445,3.474,1446,2.84,1771,4.084,1980,6.441,2085,4.084,2092,2.755,2494,5.643,2499,6.466,2507,5.643,2508,6.233,2509,4.084,2523,7.047,2524,3.836,2583,6.466,2624,3.836,2625,5.536,2626,3.836,2687,6.466,2702,6.101,2703,4.415,2720,6.466,2738,7.571,2739,4.415,2772,6.602,2794,5.028,2920,4.415,2921,4.917,2922,4.415,2923,4.415,2924,4.917,2925,6.466,2926,6.466,2927,4.415,2928,6.795,2929,8.399,2930,4.917,2931,4.415,2932,6.795,2933,6.795,2934,4.801,2935,4.917,2936,4.917,2937,4.917,2938,5.643,2939,4.917,2940,4.917,2941,4.917,2942,4.917,2943,4.917,2944,4.917,2945,4.917,2946,4.917,2947,4.917,2948,4.917,2949,4.917,2950,4.917]],["title/controllers/IdentitiesPhotoController.html",[399,1.478,2926,4.31]],["body/controllers/IdentitiesPhotoController.html",[0,0.184,1,2.743,3,0.074,4,0.058,5,0.136,7,0.231,9,2.151,11,0.708,15,1.069,18,0.381,20,1.315,21,0.005,22,1.229,23,0.353,25,1.834,29,0.209,32,0.765,34,3.325,36,0.651,37,0.078,39,2.549,40,0.668,53,2.087,55,0.609,56,0.803,58,0.003,59,0.003,65,0.908,72,1.65,76,1.894,79,1.315,80,1.884,98,1.236,110,3.065,116,1.741,127,2.036,131,0.955,158,2.089,163,2.743,179,2.829,182,1.492,213,1.966,218,2.187,225,3.289,229,2.268,232,1.608,235,1.909,256,1.14,259,2.16,270,2.989,276,3.04,280,1.763,281,2.542,285,1.364,299,1.253,302,1.383,305,2.153,339,4.117,340,2.963,358,2.305,368,1.565,399,1.14,401,1.253,403,1.673,404,2.614,408,3.615,409,3.529,413,3.98,426,6.012,427,5.745,436,1.645,439,1.949,441,1.799,442,2.083,443,2.372,444,1.991,446,3.833,450,2.715,453,2.715,462,3.584,463,2.525,464,2.525,468,1.949,471,1.949,476,1.645,484,1.949,485,1.949,518,1.734,560,3.124,573,2.525,575,3.124,619,3.313,636,4.875,671,3.124,674,4.875,858,1.469,902,2.083,1027,3.498,1028,2.798,1041,2.829,1042,2.829,1061,3.325,1062,3.325,1139,5.664,1147,3.383,1340,2.372,1384,3.595,1385,3.595,1386,3.595,1443,3.98,1445,2.829,1446,3.199,1553,2.984,1590,4.875,1758,2.372,2131,2.614,2137,2.614,2139,2.715,2140,2.614,2142,2.829,2143,4.538,2148,4.538,2151,4.538,2153,2.829,2154,2.614,2176,5.772,2197,4.875,2198,3.325,2199,3.325,2200,3.325,2201,3.124,2202,3.325,2203,3.325,2205,3.833,2207,2.963,2208,4.148,2211,3.124,2212,3.325,2213,3.325,2214,3.325,2215,3.325,2223,3.595,2229,3.595,2230,4.875,2231,5.27,2233,3.595,2271,3.124,2443,2.305,2448,2.133,2500,4.911,2508,2.525,2512,2.829,2513,2.829,2578,2.445,2593,4.344,2623,2.963,2624,3.124,2625,3.478,2626,3.124,2627,3.325,2628,3.325,2634,5.422,2665,4.58,2926,4.875,2951,4.004,2952,6.95,2953,6.239,2954,4.004,2955,4.004,2956,5.87,2957,5.87,2958,5.87,2959,4.875,2960,3.584,2961,4.148,2962,4.344,2963,4.58,2964,4.004,2965,3.595,2966,3.595,2967,4.004,2968,4.004,2969,3.595,2970,3.595,2971,3.325,2972,4.004,2973,3.595,2974,5.27,2975,5.27,2976,5.87,2977,5.27,2978,3.595,2979,3.595,2980,4.004,2981,4.004,2982,4.004]],["title/classes/IdentitiesUpdateDto.html",[0,0.239,2579,3.518]],["body/classes/IdentitiesUpdateDto.html",[0,0.437,2,0.786,3,0.104,4,0.082,5,0.087,21,0.005,23,0.393,29,0.206,32,1.075,37,0.172,40,0.54,55,0.64,58,0.003,59,0.003,65,1.428,116,1.411,268,3.98,277,2.439,280,1.692,288,2.65,290,2.298,291,1.429,292,2.237,295,4.288,296,4.288,302,1.946,368,2.201,498,2.801,518,2.439,520,2.58,523,3.782,524,2.439,527,2.93,528,2.93,619,2.685,888,3.361,1014,2.685,1021,3.48,1027,3.06,1314,2.742,1457,4.805,1465,5.449,1466,3.819,1467,3.677,1468,5.263,1469,3.677,1517,2.354,1653,3,1758,3.337,1889,2.631,1901,4.174,1902,3.552,1904,2.742,1920,4.73,1921,3.551,2329,4.697,2346,3.819,2443,3.243,2444,3.98,2448,3,2473,4.168,2475,3.819,2488,3.677,2537,5.263,2538,4.394,2539,4.394,2540,6.02,2542,4.288,2543,4.394,2544,3.98,2545,3.98,2546,5.263,2547,4.863,2548,4.863,2549,3.819,2550,3.98,2551,4.394,2552,4.394,2553,3.98,2557,5.6,2567,4.394,2568,4.394,2569,4.394,2570,4.394,2571,4.394,2572,4.394,2573,5.05,2574,4.394,2575,4.394,2576,4.394,2577,4.394,2578,3.439,2579,5.658,2580,5.811,2581,3.98,2582,4.394]],["title/controllers/IdentitiesUpsertController.html",[399,1.478,2925,4.31]],["body/controllers/IdentitiesUpsertController.html",[0,0.175,1,2.635,3,0.07,4,0.055,5,0.134,7,0.218,9,2.095,11,0.68,15,1.012,18,0.366,20,1.263,21,0.005,22,0.906,23,0.346,25,1.737,29,0.206,32,0.724,36,0.617,37,0.074,39,1.764,40,0.688,53,1.693,55,0.572,56,1.495,58,0.003,59,0.003,65,0.872,72,1.066,76,1.852,79,1.263,80,1.847,98,1.188,110,1.672,116,1.686,125,1.558,127,1.928,131,0.917,137,1.391,138,0.926,158,2.007,176,2.183,182,1.515,207,5.28,213,1.915,225,4.177,229,2.474,232,1.544,235,1.808,256,1.08,259,1.708,270,2.923,277,1.642,281,2.442,285,1.311,297,1.928,299,1.186,301,2.183,307,2.635,308,1.808,309,1.808,343,2.106,353,2.125,368,2.631,371,2.168,399,1.08,401,1.186,403,1.585,408,3.552,409,4.06,413,3.814,426,5.202,427,4.867,436,1.558,439,1.846,441,1.704,442,1.972,443,2.246,444,1.886,445,2.806,446,3.682,447,2.806,462,3.443,463,2.391,464,2.391,468,1.846,471,1.846,476,2.765,484,1.846,485,2.745,490,1.506,518,1.642,573,2.391,603,2.315,619,3.209,667,2.125,681,2.02,698,2.391,858,1.391,902,1.972,952,2.391,1029,1.886,1042,2.679,1147,2.745,1156,2.958,1292,2.02,1340,2.246,1360,3.404,1446,2.814,1457,2.183,1489,3.443,1492,4.552,1517,2.357,1587,3.586,1622,2.571,1705,2.679,1758,2.246,1936,2.679,2084,4.757,2131,2.476,2137,2.476,2139,2.571,2140,2.476,2142,2.679,2143,3.682,2151,4.395,2153,2.679,2154,2.476,2176,5.591,2197,4.683,2198,3.149,2199,3.149,2200,3.149,2201,2.958,2202,3.149,2203,3.149,2205,3.682,2207,2.806,2208,3.984,2211,2.958,2212,3.149,2213,3.149,2214,3.149,2215,3.149,2271,2.958,2405,2.391,2443,2.183,2448,2.02,2475,2.571,2500,4.757,2508,2.391,2512,2.679,2513,2.679,2523,4.173,2524,2.958,2542,2.183,2578,4.111,2581,5.267,2593,2.806,2594,3.149,2618,4.173,2623,2.806,2624,2.958,2625,3.341,2626,2.958,2627,3.149,2628,3.149,2634,4.399,2636,3.149,2637,2.02,2638,3.149,2639,2.958,2640,3.149,2641,3.149,2643,3.149,2644,3.404,2645,6.044,2646,4.683,2647,3.149,2648,2.679,2649,2.476,2650,3.149,2651,3.149,2665,5.816,2726,6.191,2925,4.683,2953,6.044,2965,3.404,2966,3.404,2969,3.404,2970,3.404,2973,3.404,2974,3.404,2975,3.404,2977,3.404,2978,3.404,2979,3.404,2983,3.792,2984,3.792,2985,6.732,2986,6.732,2987,7.455,2988,3.792,2989,5.639,2990,3.792,2991,3.792,2992,3.792,2993,3.792,2994,3.792,2995,3.792,2996,2.958,2997,3.792,2998,3.792,2999,3.792,3000,3.792,3001,3.792,3002,3.792,3003,3.792,3004,3.792,3005,3.792,3006,3.792,3007,3.792,3008,3.792,3009,3.404,3010,3.792,3011,3.792,3012,3.792,3013,3.792,3014,3.792,3015,3.792]],["title/classes/IdentitiesUpsertDto.html",[0,0.239,2581,3.667]],["body/classes/IdentitiesUpsertDto.html",[0,0.434,2,0.767,3,0.101,4,0.08,5,0.085,7,0.316,8,0.825,11,0.884,18,0.357,21,0.005,23,0.398,29,0.205,32,1.049,37,0.17,40,0.531,55,0.655,58,0.003,59,0.003,65,1.417,116,1.376,131,0.893,268,5.824,277,2.379,280,1.65,288,2.634,290,2.261,291,1.394,292,2.182,295,4.218,296,4.218,302,1.898,368,2.147,498,2.732,518,2.379,520,2.517,523,3.758,524,2.379,527,2.858,528,2.858,619,3.493,888,3.328,1014,2.619,1021,3.423,1027,3.01,1314,2.674,1457,4.746,1465,5.382,1466,3.725,1467,3.587,1468,5.198,1469,3.587,1517,2.296,1653,2.926,1758,3.255,1889,2.567,1901,4.105,1902,3.465,1904,2.674,1920,4.684,1921,3.493,2329,4.62,2346,3.725,2443,3.163,2444,3.882,2448,2.926,2473,4.066,2475,3.725,2488,3.587,2537,5.177,2538,4.286,2539,4.286,2540,5.961,2542,4.218,2543,4.286,2544,3.882,2545,3.882,2546,5.177,2547,4.783,2548,4.783,2549,3.725,2550,3.882,2551,4.286,2552,4.286,2553,3.882,2557,5.545,2567,4.286,2568,4.286,2569,4.286,2570,4.286,2571,4.286,2572,4.286,2573,4.967,2574,4.286,2575,4.286,2576,4.286,2577,4.286,2578,3.355,2579,4.967,2580,4.286,2581,5.177,2582,5.716,3016,5.494,3017,5.494]],["title/controllers/IdentitiesValidationController.html",[399,1.478,3018,4.31]],["body/controllers/IdentitiesValidationController.html",[0,0.242,1,3.32,3,0.097,4,0.076,5,0.081,7,0.302,11,0.972,18,0.523,20,1.804,21,0.005,22,1.294,23,0.334,29,0.194,32,1.003,36,0.854,37,0.102,55,0.571,56,1.731,58,0.003,59,0.003,65,1.099,76,1.22,79,1.592,80,2.168,98,1.697,131,1.31,158,1.869,182,1.411,213,2.389,229,2.558,256,1.495,257,2.019,259,2.043,262,1.926,293,6.1,297,2.669,305,2.955,307,2.453,308,2.503,309,2.503,343,1.643,355,1.897,362,2.797,399,1.495,401,1.643,403,2.194,406,4.482,408,4.071,409,3.906,413,4.266,425,3.311,436,2.157,437,2.556,439,3.459,441,2.36,444,2.611,471,2.556,475,3.886,476,3.546,477,3.71,484,3.459,485,3.459,630,4.36,673,4.714,681,4.291,695,5.26,974,3.111,1020,5.545,1021,3.32,1028,3.388,1276,4.491,1293,5.259,1312,3.534,1517,2.97,1632,3.311,2032,3.786,2519,3.886,2625,4.21,2660,4.714,2753,6.381,2758,5.259,2759,5.902,2765,6.735,2766,7.751,2770,4.714,2784,4.714,2785,4.714,2786,4.714,2788,4.714,2791,4.714,3018,5.902,3019,5.251,3020,5.251,3021,5.251,3022,7.254,3023,5.251,3024,5.251,3025,5.251,3026,5.251,3027,7.107,3028,5.251,3029,4.714,3030,4.714,3031,5.251,3032,5.251,3033,5.251,3034,4.714]],["title/classes/IdentitiesValidationFilter.html",[0,0.239,2938,4.31]],["body/classes/IdentitiesValidationFilter.html",[0,0.323,2,0.978,3,0.129,4,0.101,5,0.108,7,0.403,10,2.385,11,0.845,18,0.455,20,1.569,21,0.005,22,1.125,23,0.29,29,0.188,36,1.139,37,0.136,56,1.405,58,0.004,59,0.004,67,4.255,79,1.916,98,1.475,158,2.493,182,1.619,262,3.39,277,3.706,297,3.561,343,2.191,408,3.515,476,2.878,597,7.673,598,7.107,599,5.827,600,7.992,602,4.749,604,5.817,605,5.465,606,5.817,607,5.817,609,6.289,2819,5.817,2938,7.673,3035,8.557,3036,6.289,3037,7.122,3038,7.005,3039,7.005,3040,7.005,3041,7.005,3042,7.005]],["title/modules/IdentitiesValidationModule.html",[178,1.601,2934,3.667]],["body/modules/IdentitiesValidationModule.html",[0,0.335,3,0.134,4,0.105,5,0.112,21,0.005,29,0.191,36,1.183,37,0.141,58,0.004,59,0.004,178,2.898,401,2.739,545,3.15,546,3.269,547,3.398,548,3.398,549,3.094,550,4.303,551,4.388,555,4.09,556,3.094,557,3.332,2625,6.246,2934,7.239,3018,7.8,3030,6.53,3043,6.53,3044,7.274,3045,6.53,3046,7.274,3047,7.274]],["title/injectables/IdentitiesValidationService.html",[140,1.35,2625,3.074]],["body/injectables/IdentitiesValidationService.html",[0,0.08,2,0.417,3,0.032,4,0.077,5,0.111,7,0.27,8,0.336,10,1.976,11,0.891,15,0.797,18,0.534,20,1.655,21,0.005,22,1.22,23,0.296,29,0.162,36,0.281,37,0.033,39,2.902,40,0.641,41,1.772,52,1.278,53,2.432,55,0.603,56,1.524,58,0.001,59,0.001,67,0.859,70,2.759,72,2.484,79,0.669,80,2.063,85,2.868,98,1.674,107,0.995,110,3.259,116,0.988,140,0.777,141,0.748,174,2.689,182,1.743,200,0.859,204,1.719,213,2.042,218,1.976,229,2.662,232,1.452,257,1.806,259,1.669,262,1.723,266,2.024,270,1.095,280,1.184,283,1.648,285,1.447,293,3.318,295,3.583,296,3.054,297,2.696,299,1.947,301,3.054,302,1.832,305,2.855,343,1.947,355,2.097,357,1.128,359,1.023,362,0.92,437,3.203,490,1.865,530,1.293,603,1.055,608,1.551,619,1.88,625,1.551,663,3.9,667,0.968,695,4.672,705,1.348,775,2.896,825,2.024,850,3.935,858,2.527,860,3.318,898,1.128,899,1.171,902,0.899,947,2.487,948,2.868,972,2.673,974,2.782,1014,1.423,1027,2.384,1028,1.88,1029,0.859,1147,3.353,1148,1.435,1149,1.348,1165,4.295,1245,1.128,1276,1.553,1292,0.92,1312,3.095,1314,0.841,1322,1.348,1351,1.221,1446,2.426,1473,1.435,1485,1.673,1496,1.023,1497,1.435,1503,2.21,1504,2.786,1517,0.722,1553,1.518,1560,2.11,1567,1.278,1574,1.128,1577,2.024,1579,1.128,1586,1.023,1608,1.435,1649,3.9,1653,2.825,1705,1.221,1805,1.278,1876,1.348,1893,1.823,1897,3.184,1918,3.935,1936,4.101,2021,2.918,2030,2.786,2032,4.146,2075,4.851,2092,1.673,2285,1.278,2405,2.962,2448,0.92,2540,3.184,2542,1.719,2548,1.128,2549,1.171,2625,1.769,2634,1.348,2637,2.502,2638,3.9,2639,2.329,2648,1.221,2649,1.949,2661,1.221,2674,2.786,2790,4.405,2801,4.216,2805,2.681,2814,1.171,2815,1.435,2817,6.072,2818,2.786,2819,1.435,2820,2.681,2821,3.54,2822,5.056,2823,3.275,2824,1.551,2828,3.076,2829,2.48,2830,1.435,2831,2.48,2834,1.435,2836,1.348,2837,1.551,2838,1.278,2841,4.216,2843,4.216,2845,1.551,2846,1.551,2850,2.681,2852,2.681,2871,2.48,2887,1.551,2888,1.551,2889,4.216,2890,1.551,2892,1.551,2893,4.216,2894,1.551,2895,1.551,2897,1.348,2903,1.551,2905,1.551,2906,1.551,2908,1.551,2959,1.435,3029,1.551,3048,1.728,3049,2.48,3050,2.681,3051,2.986,3052,2.986,3053,2.986,3054,2.986,3055,2.986,3056,2.986,3057,2.681,3058,1.728,3059,2.986,3060,2.986,3061,1.728,3062,2.681,3063,2.986,3064,1.728,3065,1.728,3066,1.728,3067,1.728,3068,2.986,3069,1.728,3070,2.986,3071,1.728,3072,2.986,3073,7.604,3074,1.728,3075,2.681,3076,2.986,3077,1.728,3078,2.986,3079,1.728,3080,1.551,3081,2.681,3082,4.696,3083,1.728,3084,2.986,3085,2.986,3086,2.681,3087,1.728,3088,2.681,3089,2.48,3090,1.728,3091,1.728,3092,1.551,3093,1.728,3094,1.728,3095,1.551,3096,1.728,3097,1.551,3098,1.728,3099,1.728,3100,1.728,3101,2.21,3102,1.728,3103,1.728,3104,1.728,3105,1.728,3106,1.728,3107,1.728,3108,1.728,3109,1.728,3110,1.728,3111,1.728,3112,1.728,3113,1.728,3114,1.728,3115,1.728,3116,1.278,3117,1.728,3118,1.728,3119,1.728,3120,5.805,3121,6.224,3122,2.986,3123,6.224,3124,3.943,3125,2.21,3126,1.435,3127,1.728,3128,1.728,3129,1.728,3130,2.986,3131,1.435,3132,1.728,3133,1.728,3134,1.728,3135,1.551,3136,2.986,3137,1.728,3138,1.728,3139,1.728,3140,4.696,3141,3.943,3142,3.943,3143,4.696,3144,1.435,3145,1.728,3146,5.805,3147,3.943,3148,5.211,3149,3.943,3150,6.94,3151,4.696,3152,6.94,3153,2.986,3154,1.728,3155,2.986,3156,9.052,3157,1.728,3158,1.278,3159,1.551,3160,1.728,3161,3.943,3162,2.986,3163,1.728,3164,1.728,3165,1.551,3166,1.551,3167,1.728,3168,1.728,3169,1.728,3170,2.986,3171,1.728,3172,1.728,3173,4.405,3174,1.728,3175,1.728,3176,1.348,3177,1.728,3178,1.728,3179,3.54,3180,1.728,3181,1.221,3182,1.551,3183,1.551,3184,1.221,3185,1.728,3186,1.551,3187,1.728,3188,1.728,3189,3.076,3190,1.728,3191,3.943,3192,1.278,3193,4.696,3194,1.728,3195,3.943,3196,1.551,3197,1.728,3198,2.681,3199,1.728,3200,1.728,3201,1.728,3202,1.728,3203,1.728,3204,1.728,3205,2.986,3206,2.986,3207,1.728,3208,1.551,3209,1.728,3210,1.551,3211,1.728,3212,1.551,3213,1.551,3214,1.551,3215,1.728,3216,2.986,3217,2.986,3218,1.551,3219,1.728,3220,1.728,3221,1.551,3222,1.728,3223,1.728,3224,1.728,3225,2.986,3226,1.728,3227,1.728,3228,2.986,3229,1.728,3230,1.728,3231,1.728,3232,1.728,3233,1.728,3234,1.728,3235,1.728,3236,1.435,3237,1.278,3238,1.728,3239,1.728,3240,1.728,3241,2.986,3242,1.728,3243,1.728,3244,1.728,3245,1.728,3246,1.728,3247,1.728,3248,1.728,3249,2.986,3250,1.728,3251,1.728,3252,1.728,3253,1.728,3254,1.728]],["title/classes/InitAccountDto.html",[0,0.239,1449,3.84]],["body/classes/InitAccountDto.html",[0,0.41,2,1.046,3,0.138,4,0.108,5,0.116,7,0.431,8,1.003,18,0.486,21,0.005,23,0.31,29,0.182,32,1.43,37,0.145,40,0.646,55,0.629,58,0.004,59,0.004,131,1.218,280,2.675,288,2.44,290,2.749,291,1.9,292,2.975,989,5.633,990,5.542,1449,6.593,3255,7.398,3256,7.489,3257,7.489,3258,7.489,3259,7.489]],["title/classes/InitInfoPart.html",[0,0.239,2463,4.31]],["body/classes/InitInfoPart.html",[0,0.324,2,0.983,3,0.13,4,0.102,5,0.109,7,0.406,8,0.966,11,1.163,18,0.557,21,0.005,23,0.399,29,0.175,37,0.166,55,0.665,58,0.004,59,0.004,65,1.089,116,1.764,125,3.527,126,1.954,131,1.396,132,4.011,135,4.327,136,2.006,138,1.721,182,1.234,305,3.15,306,3.358,1746,4.294,2463,7.131,2464,6.324,3260,9.263,3261,7.044,3262,9.263,3263,9.263,3264,7.044,3265,7.044,3266,7.044]],["title/classes/InitManyDto.html",[0,0.239,1463,3.84]],["body/classes/InitManyDto.html",[0,0.4,2,1.004,3,0.132,4,0.104,5,0.111,7,0.414,8,0.979,18,0.467,21,0.005,23,0.298,29,0.191,32,1.373,37,0.139,55,0.618,58,0.004,59,0.004,128,3.141,131,1.169,137,2.638,138,1.756,276,3.454,280,2.159,288,2.381,291,1.824,529,4.631,1028,4.145,1323,7.806,1446,3.005,1463,6.434,1488,7.22,1517,3.634,1586,5.151,1593,6.783,1716,6.783,1717,6.143,2684,8.391,3255,7.22,3267,7.191,3268,5.972,3269,7.191,3270,7.191]],["title/classes/InitResetDto.html",[0,0.239,1459,3.84]],["body/classes/InitResetDto.html",[0,0.391,2,0.964,3,0.127,4,0.1,5,0.107,7,0.397,8,0.955,18,0.551,21,0.005,23,0.407,29,0.173,32,1.318,37,0.134,40,0.615,41,2.415,55,0.662,58,0.004,59,0.004,131,1.379,163,3.962,270,3.111,276,3.369,278,3.974,280,2.876,288,2.514,290,2.617,291,1.751,292,3.369,490,3.803,988,4.631,989,5.144,995,6.616,1350,8.596,1459,6.276,1491,5.348,1920,4.518,3255,7.624,3271,6.903,3272,5.733,3273,6.903,3274,6.903]],["title/interfaces/InternalLogOptions.html",[38,1.421,3275,4.049]],["body/interfaces/InternalLogOptions.html",[0,0.186,3,0.074,4,0.058,5,0.062,7,0.232,8,0.664,9,1.134,11,0.926,21,0.005,23,0.289,24,4.816,29,0.157,36,0.656,37,0.149,38,1.616,40,0.728,53,1.211,55,0.391,56,1.712,58,0.003,59,0.003,60,1.657,65,0.624,72,1.134,80,0.892,112,4.262,120,4.091,127,3.001,136,1.149,138,1.705,140,1.535,143,4.49,158,1.436,163,1.885,174,2.95,176,3.398,182,1.727,218,3.286,222,3.656,229,1.749,256,1.149,257,2.269,259,1.023,262,2.165,263,4.55,270,3.132,343,2.829,355,1.457,470,2.006,732,4.001,807,2.634,822,2.634,876,3.722,886,2.39,888,1.527,982,2.735,1125,2.322,1746,1.686,1808,4.932,1897,5.207,1969,5.165,2075,5.789,2092,2.26,2661,6.232,2877,2.634,3275,5.445,3276,3.147,3277,6.048,3278,5.992,3279,4.901,3280,4.605,3281,4.605,3282,4.605,3283,3.147,3284,3.35,3285,3.35,3286,3.35,3287,5.796,3288,3.35,3289,3.35,3290,3.35,3291,3.35,3292,3.35,3293,3.35,3294,3.35,3295,3.35,3296,8.37,3297,4.901,3298,3.147,3299,8.331,3300,7.091,3301,7.091,3302,7.091,3303,7.091,3304,7.055,3305,7.091,3306,3.35,3307,3.35,3308,3.35,3309,3.35,3310,3.35,3311,4.605,3312,3.35,3313,3.35,3314,3.35,3315,3.35,3316,3.35,3317,3.35,3318,3.35,3319,3.35,3320,3.35,3321,3.35,3322,4.932,3323,2.85,3324,4.901,3325,5.796,3326,3.35,3327,3.35,3328,3.35,3329,3.35,3330,3.35,3331,3.35,3332,3.35,3333,3.35,3334,3.35]],["title/injectables/InternalLogger.html",[140,1.35,3283,4.049]],["body/injectables/InternalLogger.html",[0,0.161,3,0.064,4,0.051,5,0.054,7,0.201,8,0.597,9,1.802,11,1.046,15,0.933,18,0.588,20,1.941,21,0.005,22,1.392,23,0.381,24,4.595,25,1.601,29,0.146,36,0.568,37,0.139,38,1.452,40,0.703,53,1.05,55,0.509,56,1.624,58,0.002,59,0.002,65,0.82,72,1.802,79,1.188,80,1.418,98,1.826,112,3.914,120,4.482,127,2.697,136,0.995,138,1.566,140,1.38,141,1.514,143,3.483,158,1.244,163,1.633,174,2.798,176,3.054,182,1.685,218,3.135,222,3.619,229,1.572,256,0.995,257,2.039,259,0.887,262,1.946,263,4.239,270,2.971,343,2.982,355,2.316,371,2.039,470,1.738,732,3.596,807,4.185,822,2.282,876,3.345,886,4.239,888,1.323,982,2.37,1125,3.054,1746,1.461,1808,4.529,1897,2.37,1969,4.743,2075,5.49,2092,4.857,2661,5.946,2877,2.282,3275,5.583,3276,2.727,3277,3.925,3278,4.138,3279,5.323,3280,4.138,3281,5.583,3282,4.138,3283,4.138,3284,4.405,3285,2.903,3286,2.903,3287,5.323,3288,2.903,3289,2.903,3290,2.903,3291,2.903,3292,2.903,3293,2.903,3294,2.903,3295,4.405,3296,8.539,3297,4.405,3298,2.727,3299,8.158,3300,6.725,3301,6.725,3302,6.725,3303,6.725,3304,6.763,3305,6.725,3306,2.903,3307,4.405,3308,5.323,3309,2.903,3310,4.405,3311,5.583,3312,2.903,3313,4.405,3314,2.903,3315,4.405,3316,5.323,3317,2.903,3318,4.405,3319,5.323,3320,2.903,3321,5.323,3322,4.529,3323,2.47,3324,4.405,3325,5.323,3326,2.903,3327,2.903,3328,2.903,3329,2.903,3330,2.903,3331,2.903,3332,2.903,3333,2.903,3334,2.903,3335,3.495,3336,5.304,3337,3.495,3338,3.495,3339,3.495,3340,3.495,3341,3.495,3342,3.495,3343,3.495,3344,3.495,3345,3.495]],["title/interfaces/InternalLoggerOptions.html",[38,1.421,3281,4.049]],["body/interfaces/InternalLoggerOptions.html",[0,0.188,3,0.075,4,0.059,5,0.063,7,0.234,8,0.669,9,1.145,21,0.005,23,0.32,24,4.83,29,0.157,36,0.662,37,0.15,38,1.628,40,0.721,53,1.223,55,0.393,56,1.718,58,0.003,59,0.003,60,1.673,65,0.63,72,1.145,80,0.901,112,4.285,120,4.11,127,3.022,136,1.16,138,2.093,140,1.546,143,3.756,158,1.449,163,1.903,174,2.96,176,3.422,182,1.73,218,3.296,222,3.661,229,1.761,256,1.16,257,2.285,259,1.033,262,2.18,263,4.571,270,3.143,343,2.837,355,1.471,371,2.285,470,2.025,732,4.03,807,2.659,822,2.659,876,3.748,886,2.413,888,1.541,982,2.761,1125,2.345,1746,1.702,1808,6.407,1897,2.761,1969,5.194,2075,5.808,2092,2.282,2661,6.251,2877,2.659,3275,4.637,3276,3.178,3277,4.398,3278,4.637,3279,4.936,3280,4.637,3281,5.475,3282,4.637,3283,3.178,3284,3.382,3285,3.382,3286,3.382,3287,5.828,3288,3.382,3289,3.382,3290,3.382,3291,3.382,3292,3.382,3293,3.382,3294,3.382,3295,3.382,3296,8.38,3297,4.936,3298,3.178,3299,8.342,3300,7.115,3301,7.115,3302,7.115,3303,7.115,3304,7.074,3305,7.115,3306,3.382,3307,3.382,3308,3.382,3309,3.382,3310,3.382,3311,4.637,3312,3.382,3313,3.382,3314,3.382,3315,3.382,3316,3.382,3317,3.382,3318,3.382,3319,3.382,3320,3.382,3321,3.382,3322,4.959,3323,2.878,3324,4.936,3325,5.828,3326,3.382,3327,3.382,3328,3.382,3329,3.382,3330,3.382,3331,3.382,3332,3.382,3333,3.382,3334,3.382]],["title/classes/Jobs.html",[0,0.239,1313,3.273]],["body/classes/Jobs.html",[0,0.232,2,0.705,3,0.093,4,0.073,5,0.078,7,0.291,8,0.779,11,1.223,18,0.638,21,0.005,23,0.431,29,0.181,37,0.153,40,0.726,41,1.97,55,0.697,58,0.003,59,0.003,65,0.781,116,1.264,123,3.778,125,2.842,128,2.852,131,1.599,132,4.595,135,4.639,136,1.438,137,1.852,138,1.233,182,0.884,218,3.57,232,2.326,285,1.974,299,2.875,302,2.934,305,2.538,306,2.407,368,3.085,386,2.991,390,3.082,776,4.978,888,2.618,1276,4.106,1313,4.978,1746,4.005,1778,6.556,1784,7.088,2115,5.578,2126,4.978,2129,5.842,3346,4.532,3347,5.842,3348,7.895,3349,5.352,3350,7.895,3351,5.048,3352,5.048,3353,5.048,3354,5.048,3355,5.048,3356,5.048,3357,5.048,3358,5.048,3359,6.584,3360,5.048,3361,5.048,3362,5.048,3363,3.938,3364,5.048,3365,4.532,3366,5.048,3367,4.532,3368,5.048]],["title/controllers/JobsController.html",[399,1.478,3369,4.31]],["body/controllers/JobsController.html",[0,0.235,1,3.256,3,0.094,4,0.074,5,0.079,7,0.294,9,1.434,11,0.841,18,0.452,20,1.561,21,0.005,22,1.275,23,0.353,29,0.206,32,0.974,36,0.83,37,0.099,40,0.37,55,0.624,56,1.398,58,0.003,59,0.003,65,1.078,76,1.62,79,1.561,80,2.039,98,1.468,126,2.367,127,2.594,128,2.868,131,1.133,137,1.872,138,1.246,143,4.152,158,1.816,162,6.609,176,2.938,182,1.221,213,2.191,229,2.528,235,2.432,256,1.453,259,1.768,270,3.462,276,2.027,285,1.186,324,2.17,368,1.994,399,1.453,401,1.596,403,2.132,404,5.57,406,5.38,408,3.877,413,4.237,414,3.605,415,4.925,416,4.725,417,4.725,418,3.605,425,3.218,426,6.019,427,5.57,428,6.25,429,5.57,430,3.605,436,2.096,437,2.483,440,4.725,441,2.293,442,2.654,443,3.023,444,2.537,446,4.551,450,3.459,451,3.605,452,3.605,453,3.459,456,3.605,457,3.605,458,3.605,459,4.395,460,3.776,461,3.605,462,4.256,463,3.218,464,3.218,468,2.483,470,2.537,471,2.483,476,2.863,480,4.237,481,4.237,482,3.905,483,3.605,484,3.392,485,3.392,486,3.605,488,3.605,489,3.605,490,2.027,776,3.218,1276,2.654,1313,3.218,2115,3.605,3347,3.776,3349,3.459,3369,5.788,3370,5.102,3371,5.102,3372,5.102,3373,5.102,3374,3.776,3375,5.102,3376,5.158,3377,4.581,3378,5.102,3379,5.102,3380,5.102,3381,6.97,3382,5.102,3383,5.102,3384,5.102,3385,5.102]],["title/classes/JobsCreateDto.html",[0,0.239,3386,4.049]],["body/classes/JobsCreateDto.html",[0,0.421,2,0.762,3,0.1,4,0.079,5,0.084,7,0.314,8,0.821,11,0.879,18,0.641,21,0.005,23,0.424,29,0.196,32,1.041,37,0.159,40,0.708,41,2.076,55,0.701,58,0.003,59,0.003,65,1.356,89,2.241,126,1.513,128,2.634,131,1.606,137,2.001,138,1.332,218,3.266,288,2.733,290,2.705,291,1.383,365,4.198,368,3.209,371,2.097,498,4.36,512,4.255,516,3.44,517,3.561,518,2.362,519,3.476,520,3.34,522,4.176,524,2.362,527,2.837,528,2.837,776,5.18,1276,4.272,1786,6.958,1790,4.53,1920,3.884,1921,3.915,2115,5.803,2126,5.18,2129,6.078,2336,5.803,2376,4.53,3347,6.078,3349,5.568,3359,4.036,3363,4.255,3374,4.036,3386,6.408,3387,4.53,3388,5.454,3389,5.454,3390,5.454,3391,5.454,3392,6.546,3393,5.454,3394,5.454,3395,5.454,3396,5.454,3397,4.53,3398,4.53,3399,4.255,3400,4.53]],["title/classes/JobsDto.html",[0,0.239,3374,3.84]],["body/classes/JobsDto.html",[0,0.415,2,0.731,3,0.096,4,0.076,5,0.081,7,0.301,8,0.798,11,0.856,18,0.643,21,0.005,23,0.424,29,0.194,32,1,37,0.156,40,0.718,41,2.02,55,0.701,58,0.003,59,0.003,65,1.334,89,4.024,126,2.232,128,2.563,131,1.611,137,1.921,138,1.279,218,3.213,288,2.712,290,2.661,291,1.328,365,4.084,368,3.144,371,2.013,498,4.001,512,4.085,516,3.302,517,3.419,518,2.268,519,3.382,520,3.25,522,4.09,524,2.268,527,2.724,528,2.724,533,3.875,776,5.073,1276,4.185,1786,6.875,1790,4.348,1920,3.779,1921,3.835,2115,5.684,2126,5.073,2129,5.953,2336,5.684,2376,4.348,3347,5.953,3349,5.454,3359,3.875,3363,4.085,3374,5.249,3386,7.797,3387,4.348,3392,6.369,3397,4.348,3398,4.348,3399,4.085,3400,4.348,3401,5.236,3402,5.236,3403,5.236,3404,5.236,3405,5.236,3406,5.236,3407,5.236,3408,5.236,3409,5.236]],["title/modules/JobsModule.html",[178,1.601,1408,3.667]],["body/modules/JobsModule.html",[0,0.32,3,0.128,4,0.101,5,0.107,21,0.005,22,1.117,29,0.201,36,1.131,37,0.135,58,0.004,59,0.004,136,1.98,178,2.842,401,2.665,545,3.011,546,3.125,547,3.249,548,3.249,549,2.958,550,4.219,551,4.303,555,3.98,556,2.958,557,3.185,559,4.003,563,3.458,564,4.385,566,4.003,1313,4.385,1408,7.173,3367,7.648,3369,7.649,3376,7.76,3377,6.243,3410,6.243,3411,6.243,3412,6.243,3413,6.954,3414,6.243,3415,6.954,3416,6.954]],["title/injectables/JobsService.html",[140,1.35,3376,3.84]],["body/injectables/JobsService.html",[0,0.168,3,0.067,4,0.053,5,0.056,7,0.21,8,0.616,9,2.524,10,2.238,11,1.169,12,2.527,15,0.972,18,0.642,20,2.246,21,0.005,22,1.492,23,0.424,25,4.575,29,0.16,36,0.592,37,0.071,40,0.397,49,2.988,55,0.666,58,0.002,59,0.002,65,0.846,66,3.844,72,2.312,74,2.915,75,2.915,76,1.272,77,2.915,78,2.915,79,1.226,80,2.209,89,4.037,90,2.041,91,2.041,92,2.041,93,1.94,94,2.041,95,2.041,96,2.041,98,1.927,126,1.823,128,2.972,136,1.037,138,0.89,140,1.424,141,1.578,174,3.503,192,6.06,194,4.608,198,2.915,199,2.414,200,2.721,201,3.242,202,3.341,203,3.341,204,3.151,205,3.573,206,4.182,207,3.341,208,2.378,209,3.588,211,2.378,213,2.35,220,2.297,221,5.586,222,3.608,223,2.378,224,5.126,225,4.389,226,2.297,227,3.451,228,2.574,229,1.079,230,2.297,231,5.961,232,2.758,233,2.378,234,2.297,235,4.281,236,5.586,237,2.378,238,2.297,239,2.378,240,2.378,241,2.378,242,2.297,243,2.378,244,2.378,245,2.378,246,2.041,247,4.608,248,2.47,249,2.378,250,2.378,251,2.097,252,2.297,256,1.037,1313,2.297,3376,4.05,3414,3.27,3417,3.643,3418,3.643,3419,3.643]],["title/classes/JobsUpdateDto.html",[0,0.239,3399,4.049]],["body/classes/JobsUpdateDto.html",[0,0.446,2,0.915,3,0.121,4,0.095,5,0.101,21,0.005,23,0.389,29,0.204,32,1.252,37,0.174,40,0.702,41,1.867,55,0.677,58,0.004,59,0.004,65,1.454,126,1.819,128,2.369,137,2.405,138,1.602,218,3.06,288,2.82,290,2.901,291,1.663,368,2.562,498,4.085,518,2.84,519,3.916,520,3.763,522,4.56,524,2.84,527,3.411,528,3.411,776,4.135,1276,3.411,1786,6.958,1920,4.376,1921,4.276,2115,4.633,2126,4.135,2129,4.852,3347,4.852,3349,4.445,3359,4.852,3363,5.116,3374,4.852,3386,6.409,3387,5.445,3397,5.445,3398,5.445,3399,6.409,3400,6.822]],["title/injectables/JwtStrategy.html",[140,1.35,1079,4.049]],["body/injectables/JwtStrategy.html",[0,0.269,3,0.108,4,0.085,5,0.09,7,0.337,8,0.859,9,2.389,10,3.265,11,0.921,15,2.038,18,0.552,20,1.71,21,0.005,22,1.226,23,0.352,29,0.202,36,0.951,37,0.113,53,2.293,55,0.563,56,1.705,58,0.003,59,0.003,65,1.181,70,4.422,72,1.644,76,1.359,79,1.71,80,1.881,85,5.503,98,1.232,107,3.368,116,2.129,140,1.987,141,2.533,143,4.387,158,2.082,163,3.568,182,1.025,213,1.962,256,1.666,259,1.484,281,2.533,285,1.359,299,1.83,695,5.551,785,5.177,800,5.957,858,2.146,1004,5.651,1011,5.764,1034,5.503,1036,3.966,1040,4.564,1079,5.957,1083,5.252,1125,4.895,1138,6.341,1139,5.651,1144,6.856,1145,5.252,1223,5.252,1799,4.329,2037,4.858,3420,5.85,3421,6.856,3422,5.252,3423,7.636,3424,5.252,3425,7.06,3426,9.012,3427,5.85,3428,7.636,3429,5.252,3430,5.85,3431,5.252,3432,5.85,3433,5.85,3434,5.85,3435,5.85,3436,5.85,3437,5.252,3438,5.85,3439,5.85,3440,5.252,3441,7.636,3442,6.856,3443,5.85,3444,5.252]],["title/classes/Keyrings.html",[0,0.239,3445,3.388]],["body/classes/Keyrings.html",[0,0.291,2,0.883,3,0.116,4,0.092,5,0.098,7,0.364,8,0.904,11,1.12,18,0.603,21,0.005,22,1.417,23,0.421,29,0.18,37,0.171,40,0.747,55,0.685,58,0.004,59,0.004,65,0.979,116,1.585,123,4.386,125,3.299,131,1.509,132,4.337,135,4.476,136,1.802,138,1.546,182,1.109,232,2.2,285,2.157,299,2.513,305,2.946,306,3.016,374,6.559,386,3.748,390,3.864,617,4.59,1746,3.879,3445,5.761,3446,5.681,3447,6.235,3448,6.235,3449,6.328,3450,6.328,3451,6.328,3452,6.328,3453,5.681,3454,6.328,3455,5.681,3456,6.328]],["title/classes/KeyringsCommand.html",[0,0.239,1766,3.84]],["body/classes/KeyringsCommand.html",[0,0.371,2,0.734,3,0.097,4,0.076,5,0.081,7,0.303,9,1.478,11,0.858,12,3.72,15,1.899,18,0.462,20,1.593,21,0.005,22,1.554,23,0.295,29,0.194,30,2.089,37,0.156,39,1.645,40,0.655,42,2.61,43,2.494,44,2.78,45,3.537,46,3.7,53,1.579,55,0.533,56,1.054,58,0.003,59,0.003,65,1.1,72,2.266,76,1.874,79,1.593,80,1.911,98,1.107,116,1.317,126,1.459,182,1.513,199,3.556,213,2.071,222,3.361,232,1.44,256,2.026,257,2.022,259,2.045,262,1.929,322,3.565,327,2.735,329,4.344,330,4.923,331,5.026,332,5.026,333,5.026,334,4.344,335,3.115,336,3.115,342,5.026,343,1.645,345,3.715,346,3.259,347,4.344,348,4.344,349,4.923,353,3.986,354,5.026,355,2.57,356,3.715,357,3.433,359,3.115,360,3.211,362,2.801,366,2.559,394,4.486,395,3.211,398,3.433,614,5.026,617,2.735,631,2.801,1002,3.565,1034,4.923,1035,3.891,1109,5.084,1128,5.55,1153,4.102,1172,4.102,1766,5.264,1767,3.891,3445,5.64,3457,4.366,3458,5.258,3459,5.258,3460,3.433,3461,4.102,3462,3.891,3463,4.102,3464,4.366,3465,5.55,3466,5.908,3467,4.366,3468,4.366,3469,5.908,3470,4.366,3471,4.366,3472,5.908,3473,4.366,3474,4.102,3475,4.366,3476,4.366,3477,4.366,3478,5.908,3479,4.366]],["title/controllers/KeyringsController.html",[399,1.478,3480,4.31]],["body/controllers/KeyringsController.html",[0,0.203,1,2.938,3,0.081,4,0.064,5,0.068,7,0.254,9,1.238,11,0.965,18,0.519,20,1.792,21,0.005,22,1.413,23,0.384,29,0.204,32,0.841,36,0.716,37,0.085,40,0.456,55,0.652,56,1.604,58,0.003,59,0.003,65,0.973,76,1.461,79,1.408,80,2.162,98,1.685,126,2.569,128,3.179,131,1.301,137,1.615,138,1.076,158,1.567,176,2.535,182,1.402,199,2.774,200,2.19,213,2.379,229,2.744,235,2.099,256,1.254,259,2.029,270,2.307,276,1.749,399,1.254,401,1.378,403,1.84,404,5.224,405,5.183,406,5.045,407,3.259,408,4.05,409,3.664,413,4.381,414,3.112,415,4.443,416,5.424,417,5.424,418,4.443,421,3.259,422,4.654,425,2.777,426,5.745,427,5.224,428,5.965,429,5.224,430,3.112,436,1.809,437,2.143,439,3.061,440,4.973,441,1.979,442,2.291,443,2.609,444,2.19,445,3.259,446,5.224,447,3.259,448,3.436,449,2.985,450,4.263,451,3.112,452,3.112,453,2.985,456,3.112,457,3.112,458,3.112,459,4.626,460,3.259,461,3.112,462,3.84,463,2.777,464,2.777,468,2.143,470,2.19,471,2.143,473,3.657,474,3.436,475,3.259,476,3.287,477,3.112,480,3.657,481,3.657,482,3.524,483,3.112,484,3.57,485,3.57,486,4.443,488,4.443,489,3.112,490,2.498,494,3.259,617,3.271,1109,3.966,3445,2.875,3447,3.112,3448,3.112,3460,5.224,3461,3.436,3463,3.436,3480,5.222,3481,4.404,3482,4.404,3483,5.722,3484,4.404,3485,4.404,3486,4.404,3487,4.404,3488,4.404,3489,4.404,3490,4.404,3491,4.404,3492,4.404,3493,4.404,3494,6.289,3495,4.404,3496,4.404]],["title/classes/KeyringsCreateCommand.html",[0,0.239,3465,4.049]],["body/classes/KeyringsCreateCommand.html",[0,0.368,2,0.722,3,0.095,4,0.075,5,0.08,7,0.298,9,1.454,11,0.849,12,3.706,15,1.877,18,0.457,20,1.575,21,0.005,22,1.548,23,0.291,29,0.193,30,2.054,37,0.155,39,1.618,40,0.651,42,2.581,43,2.466,44,2.749,45,3.498,46,3.659,53,1.553,55,0.529,56,1.037,58,0.003,59,0.003,65,1.088,72,2.247,76,1.858,79,1.575,80,1.898,98,1.089,116,1.295,126,1.435,182,1.503,199,3.526,213,2.054,222,3.344,232,1.416,256,2.003,257,1.989,259,2.028,262,1.897,322,3.506,327,2.69,329,4.295,330,4.881,331,6.062,332,4.97,333,4.97,334,4.295,335,3.064,336,3.064,342,4.97,343,1.618,345,5.649,346,3.222,347,4.295,348,4.295,349,4.881,353,3.942,354,4.97,355,2.541,356,3.654,357,3.377,359,3.064,360,3.158,362,2.755,366,2.517,394,4.436,395,3.158,398,3.377,614,4.97,617,2.69,631,2.755,1002,3.506,1034,5.783,1035,3.827,1109,5.973,1128,5.488,1153,4.035,1172,4.035,1766,3.827,1767,3.827,3445,5.601,3457,4.295,3460,3.377,3461,4.035,3462,3.827,3463,4.035,3464,4.295,3465,6.237,3466,5.842,3467,4.295,3468,4.295,3469,5.842,3470,4.295,3471,4.295,3472,5.842,3473,4.295,3474,4.035,3475,4.295,3476,4.295,3477,4.295,3478,5.842,3479,4.295,3497,5.172,3498,5.172]],["title/classes/KeyringsCreateDto.html",[0,0.239,3460,3.388]],["body/classes/KeyringsCreateDto.html",[0,0.404,2,0.87,3,0.115,4,0.09,5,0.096,7,0.359,8,0.895,11,1.176,18,0.619,21,0.005,22,1.407,23,0.411,29,0.179,32,1.19,37,0.154,40,0.728,55,0.692,58,0.004,59,0.004,65,1.355,89,2.561,126,1.729,131,1.551,285,2.037,288,2.528,290,2.849,291,1.581,365,4.581,371,2.397,498,4.591,506,5.888,516,3.931,517,4.07,519,4.178,522,4.045,527,3.243,528,3.243,530,3.795,617,4.558,1746,3.325,3447,6.192,3448,6.192,3460,5.722,3483,4.864,3499,5.597,3500,5.597,3501,5.597,3502,6.234,3503,6.234,3504,6.485,3505,6.234,3506,6.234,3507,5.597,3508,5.597]],["title/classes/KeyringsCreateQuestions.html",[0,0.239,1767,3.84]],["body/classes/KeyringsCreateQuestions.html",[0,0.374,2,0.744,3,0.098,4,0.077,5,0.082,7,0.307,9,1.499,11,0.643,12,3.487,15,1.423,18,0.346,20,1.194,21,0.005,22,1.596,23,0.221,29,0.195,30,2.118,37,0.157,39,1.668,40,0.678,42,2.634,43,2.518,44,2.806,45,3.571,46,3.735,53,1.601,55,0.475,56,1.069,58,0.003,59,0.003,65,1.111,72,2.282,76,1.887,79,1.608,80,1.588,98,1.123,116,1.335,126,1.479,131,0.867,182,1.522,199,3.581,213,1.845,222,3.139,232,1.46,256,2.045,257,2.05,259,2.06,262,1.956,319,4.787,322,4.868,327,2.773,329,4.385,330,4.958,331,5.074,332,5.074,333,5.074,334,4.385,335,3.159,336,3.159,342,5.074,343,1.668,345,3.767,346,3.29,347,4.385,348,4.385,349,4.385,353,4.024,354,5.074,355,2.594,356,3.767,357,3.481,359,3.159,360,3.256,362,2.84,366,2.595,614,5.074,617,2.773,631,2.84,1002,3.615,1034,4.958,1035,3.946,1109,5.121,1128,5.602,1153,4.16,1172,4.16,1766,3.946,1767,5.314,3445,5.672,3457,4.428,3460,3.481,3461,4.16,3462,3.946,3463,4.16,3464,5.963,3465,5.602,3466,5.963,3467,4.428,3468,4.428,3469,5.963,3470,4.428,3471,4.428,3472,5.963,3473,4.428,3474,4.16,3475,4.428,3476,4.428,3477,4.428,3478,5.963,3479,4.428,3509,7.181,3510,5.332]],["title/classes/KeyringsDto.html",[0,0.239,3483,4.049]],["body/classes/KeyringsDto.html",[0,0.397,2,0.841,3,0.111,4,0.087,5,0.093,7,0.347,8,0.876,11,1.166,18,0.627,21,0.005,22,1.385,23,0.413,29,0.176,32,1.151,37,0.151,40,0.737,55,0.694,58,0.004,59,0.004,65,1.334,89,3.877,126,2.392,131,1.572,285,2.004,288,2.496,290,2.813,291,1.528,365,4.482,371,2.317,498,4.288,506,5.761,516,3.8,517,3.934,519,4.111,522,3.958,527,3.135,528,3.135,530,3.735,533,4.459,617,4.486,1746,3.254,3447,6.094,3448,6.094,3460,6.422,3483,6.074,3499,5.41,3500,5.41,3501,5.41,3504,6.382,3507,5.41,3508,5.41,3511,6.026,3512,6.026,3513,6.026,3514,6.026,3515,6.026]],["title/modules/KeyringsModule.html",[178,1.601,1078,3.518]],["body/modules/KeyringsModule.html",[0,0.32,3,0.128,4,0.101,5,0.107,21,0.005,22,1.117,29,0.201,36,1.131,37,0.135,58,0.004,59,0.004,136,1.98,178,2.842,401,2.665,545,3.011,546,3.125,547,3.249,548,3.249,549,2.958,550,4.219,551,4.303,555,3.98,556,2.958,557,3.185,559,4.003,563,3.458,564,4.385,566,4.003,1078,6.882,1109,6.613,3445,4.54,3455,7.648,3462,5.146,3480,7.649,3516,6.243,3517,6.243,3518,6.243,3519,6.954,3520,6.954,3521,6.954,3522,6.954]],["title/injectables/KeyringsService.html",[140,1.35,1109,3.273]],["body/injectables/KeyringsService.html",[0,0.161,3,0.064,4,0.051,5,0.054,7,0.202,8,0.598,9,2.497,10,2.186,11,1.161,12,2.469,15,0.935,18,0.638,20,2.235,21,0.005,22,1.478,23,0.422,25,4.55,29,0.177,36,0.57,37,0.068,40,0.386,49,2.902,55,0.66,56,0.703,58,0.002,59,0.002,65,0.822,66,3.787,72,2.278,74,2.831,75,2.831,76,1.235,77,2.831,78,2.831,79,1.19,80,2.207,89,4.012,90,1.964,91,1.964,92,1.964,93,1.867,94,1.964,95,1.964,96,1.964,98,1.908,123,1.914,125,1.44,126,1.781,128,2.929,136,0.998,138,0.856,140,1.383,141,1.518,174,3.488,182,0.614,192,6.015,194,4.519,198,2.831,199,2.832,200,2.643,201,3.149,202,3.246,203,3.246,204,3.06,205,3.47,206,4.121,207,3.246,208,2.288,209,3.528,211,2.288,213,2.365,220,2.21,221,5.531,222,3.62,223,2.288,224,5.075,225,4.316,226,2.21,227,4.519,229,1.903,230,2.21,231,5.922,232,2.744,233,2.288,234,2.21,235,4.235,236,5.531,237,2.288,238,2.21,239,2.288,240,2.288,241,2.288,242,2.21,243,2.288,244,2.288,245,2.288,246,1.964,247,4.519,248,2.376,249,2.288,250,2.288,251,2.018,252,2.21,256,0.998,259,0.889,386,2.076,577,2.911,578,3.147,617,2.765,1109,3.352,3445,2.288,3460,4.679,3462,2.594,3523,3.505,3524,3.505,3525,3.505,3526,3.505,3527,3.505,3528,3.505,3529,3.505]],["title/classes/LifeCycle1752765731.html",[0,0.239,3530,4.659]],["body/classes/LifeCycle1752765731.html",[0,0.25,2,0.757,3,0.1,4,0.079,5,0.084,7,0.312,8,0.818,10,2.978,11,0.654,15,1.447,18,0.568,20,1.215,21,0.005,22,0.871,23,0.225,29,0.178,36,0.882,37,0.105,40,0.393,41,1.544,53,2.181,55,0.603,58,0.003,59,0.003,72,2.694,76,1.903,79,1.627,80,2.076,98,1.53,116,1.358,120,4.66,126,1.505,136,1.544,138,1.325,182,1.273,209,2.484,213,2.247,251,3.122,259,2.077,269,3.311,270,2.664,281,3.547,299,2.736,449,3.677,490,2.154,858,2.664,902,2.821,960,3.541,976,3.541,1054,5.165,1446,3.036,1586,3.213,1587,2.889,1707,6.06,1848,3.541,1904,4.803,1920,2.889,2062,6.749,2063,4.504,2065,5.667,2069,4.231,2072,4.869,2075,4.924,2076,4.869,2077,4.869,2082,4.869,2083,4.869,2084,3.832,2447,4.504,3148,4.869,3150,7.795,3152,7.962,3530,6.521,3531,9.12,3532,5.423,3533,8.748,3534,7.264,3535,7.264,3536,5.423,3537,5.423,3538,4.869,3539,5.423,3540,5.423,3541,9.868,3542,5.423,3543,5.423,3544,4.869,3545,4.869,3546,5.132,3547,4.504,3548,4.504,3549,4.504,3550,4.869,3551,4.869,3552,5.423,3553,5.423]],["title/classes/Lifecycle.html",[0,0.239,1904,2.526]],["body/classes/Lifecycle.html",[0,0.293,2,0.888,3,0.117,4,0.092,5,0.098,7,0.366,8,0.907,18,0.574,21,0.005,23,0.412,29,0.19,37,0.18,40,0.584,55,0.673,58,0.004,59,0.004,65,0.983,116,2.018,123,4.4,125,3.31,128,3.196,131,1.438,132,4.132,135,4.345,136,1.811,137,2.333,138,1.553,179,5.693,182,1.412,232,2.207,285,2.161,299,2.521,302,3.213,305,2.956,306,3.032,310,5.281,386,3.767,390,3.883,888,3.049,1446,3.368,1746,4.161,1901,5.376,1904,4.771,1925,4.311,3474,4.961,3554,5.709,3555,6.882,3556,6.359,3557,6.359,3558,6.359,3559,5.709,3560,5.709,3561,5.709,3562,6.359]],["title/controllers/LifecycleController.html",[399,1.478,3563,4.31]],["body/controllers/LifecycleController.html",[0,0.211,1,3.026,3,0.084,4,0.066,5,0.071,7,0.264,9,1.29,11,0.905,15,1.225,18,0.487,20,1.681,21,0.005,22,1.309,23,0.311,29,0.194,32,0.876,36,0.746,37,0.089,55,0.638,56,1.505,58,0.003,59,0.003,65,1.002,76,1.067,79,1.45,80,2.105,98,1.879,128,2.711,131,1.22,137,1.684,138,1.121,158,1.633,182,1.135,213,2.291,229,2.547,256,1.307,259,1.903,276,3.414,280,2.254,281,4.122,341,6.706,399,1.307,401,1.436,403,1.918,408,4.154,413,4.344,428,6.453,429,5.985,436,1.886,437,3.652,440,4.391,441,2.063,442,2.388,443,2.719,444,2.283,459,4.084,460,3.397,461,3.243,471,2.234,476,3.083,482,4.567,484,3.652,485,3.652,655,5.322,673,4.451,681,3.997,1209,7.717,1904,5.045,3236,6.232,3563,5.378,3564,4.59,3565,6.737,3566,6.737,3567,7.504,3568,4.59,3569,7.504,3570,8.914,3571,4.59,3572,4.59,3573,4.59,3574,7.407,3575,4.59,3576,8.008,3577,4.59,3578,4.59,3579,7.717,3580,4.59,3581,4.59,3582,4.59,3583,3.812,3584,5.053,3585,4.121,3586,4.59,3587,4.59,3588,4.59,3589,4.59,3590,4.59,3591,4.59,3592,4.121,3593,4.59,3594,4.59,3595,4.59,3596,4.59]],["title/classes/LifecycleCreateDto.html",[0,0.239,3597,4.049]],["body/classes/LifecycleCreateDto.html",[0,0.427,2,0.883,3,0.116,4,0.092,5,0.098,7,0.364,8,0.904,18,0.573,21,0.005,23,0.417,29,0.189,32,1.208,37,0.171,40,0.64,55,0.677,58,0.004,59,0.004,65,1.242,126,1.755,128,2.902,131,1.435,137,2.321,138,1.546,280,2.65,281,3.478,288,2.624,291,1.605,368,3.139,518,2.74,519,4.207,522,4.083,888,3.04,1309,5.675,1746,4.207,1889,2.956,1901,5.201,1902,3.99,1904,4.841,1925,4.29,3268,7.328,3504,5.944,3555,6.53,3597,6.885,3598,5.255,3599,5.681,3600,6.328,3601,5.681,3602,6.328,3603,6.67,3604,5.681,3605,6.328,3606,4.937,3607,4.937,3608,5.255]],["title/classes/LifecycleDto.html",[0,0.239,3606,4.049]],["body/classes/LifecycleDto.html",[0,0.422,2,0.854,3,0.112,4,0.089,5,0.094,7,0.352,8,0.884,18,0.595,21,0.005,23,0.418,29,0.187,32,1.167,37,0.168,40,0.688,55,0.682,58,0.004,59,0.004,65,1.343,89,3.567,126,2.409,128,2.839,131,1.49,137,2.243,138,1.493,280,2.608,281,3.403,288,2.596,291,1.551,368,3.07,518,2.647,519,4.139,522,3.995,533,4.524,888,2.974,1309,5.552,1746,4.178,1889,2.856,1901,5.135,1902,3.855,1904,4.803,1925,4.145,3268,7.211,3504,5.815,3555,6.426,3597,7.57,3598,5.077,3599,5.489,3601,5.489,3603,6.525,3604,5.489,3606,6.13,3607,4.769,3608,5.077,3609,6.114,3610,6.114,3611,6.114,3612,6.114]],["title/modules/LifecycleModule.html",[178,1.601,3613,3.84]],["body/modules/LifecycleModule.html",[0,0.312,3,0.125,4,0.098,5,0.105,21,0.005,22,1.089,29,0.203,36,1.102,37,0.131,58,0.004,59,0.004,136,1.931,178,2.81,305,2.487,401,2.624,545,2.936,546,3.047,547,3.167,548,3.167,549,2.884,550,4.172,551,4.255,555,3.918,556,2.884,557,3.106,559,3.903,563,4.171,1407,6.083,1904,3.3,3561,7.53,3563,7.563,3583,5.63,3584,8.155,3585,6.087,3613,7.61,3614,6.087,3615,6.087,3616,6.087,3617,6.78,3618,6.78,3619,6.78,3620,5.63,3621,6.78,3622,6.78]],["title/interfaces/LifecycleSource.html",[38,1.421,3623,4.659]],["body/interfaces/LifecycleSource.html",[0,0.218,3,0.032,4,0.125,5,0.143,7,0.174,9,1.332,11,0.211,15,0.467,18,0.347,20,0.392,21,0.005,22,0.281,23,0.196,24,2.176,29,0.171,36,0.285,37,0.034,38,0.48,40,0.59,41,1.135,53,2.348,55,0.438,56,1.568,58,0.001,59,0.002,60,0.719,61,1.187,65,0.271,67,0.871,68,2.949,70,1.572,72,1.503,76,0.407,80,1.533,98,1.46,110,0.772,116,0.757,125,1.241,126,1.315,128,0.633,136,0.499,137,0.642,138,0.428,140,0.786,159,1.296,160,1.296,174,1.848,178,0.54,182,1.653,192,1.905,194,1.105,198,2.123,199,1.333,201,1.79,206,2.719,207,2.894,209,1.384,213,2.009,218,0.652,222,1.713,229,2.053,232,1.091,251,1.008,252,1.105,256,0.499,257,2.249,259,2.063,262,2.146,269,1.845,270,2.146,276,1.583,281,4.006,283,1.263,285,1.243,291,0.766,297,0.89,299,1.246,301,3.814,305,2.146,343,1.483,353,1.693,355,2.684,413,1.333,429,2.602,437,3.373,442,0.911,443,1.038,482,2.656,490,2.323,524,0.758,530,2.869,549,0.745,573,1.105,619,1.44,638,1.572,653,3.577,654,2.048,655,1.143,663,1.454,664,2.729,668,1.454,678,2.509,679,5.177,698,3.373,699,4.256,760,1.187,765,1.454,802,1.454,850,2.701,860,3.349,863,2.361,870,4.328,871,3.924,875,1.296,876,3.689,881,1.238,883,2.815,885,2.815,886,1.038,887,4.328,893,2.701,898,1.143,902,0.911,908,2.236,947,1.905,948,1.845,972,2.701,974,3.169,980,2.236,984,4.25,1021,0.818,1042,2.135,1054,1.905,1133,2.713,1147,0.852,1149,1.366,1164,1.105,1165,1.296,1235,4.698,1240,3.958,1245,1.143,1259,1.296,1276,2.782,1292,0.933,1309,6.414,1351,2.135,1400,1.238,1443,2.048,1444,1.454,1445,1.238,1446,3.191,1447,1.454,1560,1.238,1567,2.236,1569,2.357,1574,1.973,1722,1.454,1727,4.639,1746,2.768,1748,2.949,1805,1.296,1811,2.815,1893,2.433,1894,1.366,1896,4.25,1898,4.442,1904,4.976,1910,1.366,1932,1.454,1936,2.815,1937,1.454,1938,1.366,1993,2.357,2021,3.508,2030,4.133,2032,3.116,2045,2.509,2047,5.206,2049,1.454,2051,1.454,2092,0.981,2285,3.508,2439,1.572,2447,2.509,2532,2.509,2600,1.572,2639,2.357,2674,3.779,2814,2.701,2815,1.454,2822,5.641,2823,3.309,2828,3.698,2829,4.442,2830,1.454,2831,2.509,2834,1.454,2836,2.357,2838,2.236,2840,2.509,2860,1.572,2866,3.309,2877,1.143,3049,1.454,3050,1.572,3089,1.454,3092,1.572,3116,1.296,3144,3.309,3189,4.173,3196,1.572,3236,1.454,3237,2.236,3323,2.135,3546,1.238,3555,4.902,3560,2.713,3565,1.572,3566,1.572,3570,2.713,3574,3.937,3576,2.713,3579,4.256,3583,1.454,3584,4.89,3592,2.713,3623,3.577,3624,1.572,3625,1.751,3626,1.751,3627,1.751,3628,1.366,3629,1.751,3630,3.985,3631,1.751,3632,2.713,3633,1.751,3634,1.751,3635,1.572,3636,3.022,3637,3.022,3638,1.572,3639,1.751,3640,1.751,3641,1.751,3642,3.022,3643,3.022,3644,3.022,3645,1.751,3646,1.751,3647,1.751,3648,3.022,3649,1.572,3650,1.751,3651,3.095,3652,4.74,3653,3.022,3654,3.985,3655,4.256,3656,1.751,3657,1.572,3658,1.751,3659,5.349,3660,1.751,3661,1.751,3662,3.577,3663,1.751,3664,1.751,3665,1.751,3666,1.751,3667,1.751,3668,1.751,3669,1.751,3670,1.572,3671,1.572,3672,1.751,3673,1.751,3674,1.751,3675,1.751,3676,3.022,3677,3.022,3678,1.751,3679,3.985,3680,1.751,3681,1.751,3682,1.751,3683,1.751,3684,1.751,3685,1.751,3686,1.751,3687,1.751,3688,1.454,3689,1.751,3690,1.751,3691,1.751,3692,1.751,3693,1.751,3694,1.751,3695,1.751,3696,1.751,3697,1.751,3698,1.751,3699,1.751,3700,1.751,3701,3.022,3702,3.022,3703,3.985,3704,1.751,3705,1.751,3706,1.751,3707,1.751,3708,1.572,3709,1.751,3710,3.022,3711,1.454,3712,1.751,3713,1.751,3714,1.751,3715,3.022,3716,3.022,3717,1.751,3718,1.751,3719,1.751,3720,1.751,3721,1.454,3722,1.572,3723,4.74,3724,3.985,3725,1.751,3726,3.022,3727,3.022,3728,3.022,3729,3.022,3730,1.751,3731,1.751,3732,1.751,3733,1.751,3734,1.751,3735,3.022,3736,1.751,3737,1.751,3738,1.751,3739,1.751,3740,1.751,3741,1.751,3742,1.751,3743,1.751,3744,1.751,3745,1.751,3746,1.751,3747,1.751,3748,1.751,3749,1.751,3750,1.751,3751,1.751,3752,1.751,3753,1.751,3754,1.751,3755,1.751,3756,1.751,3757,1.751,3758,1.751,3759,3.022,3760,1.751,3761,1.751,3762,1.751,3763,3.022,3764,1.751,3765,1.751,3766,3.022,3767,3.022,3768,1.751,3769,4.74,3770,3.022,3771,5.349,3772,1.751,3773,3.022,3774,1.751,3775,1.751,3776,3.022,3777,1.751,3778,1.751,3779,1.572,3780,1.751,3781,1.751,3782,3.022,3783,1.751,3784,1.751,3785,3.022,3786,1.751,3787,1.751,3788,1.751,3789,1.751,3790,1.751,3791,3.022,3792,1.751,3793,1.751,3794,1.751,3795,1.751,3796,1.751,3797,1.751,3798,1.751,3799,1.751,3800,5.849,3801,3.022,3802,3.022,3803,3.985,3804,4.74,3805,4.442,3806,3.022,3807,2.713,3808,3.022,3809,3.022,3810,1.751,3811,1.751,3812,1.751,3813,3.022,3814,3.022,3815,1.751,3816,3.022,3817,3.022,3818,1.751,3819,1.751,3820,1.751,3821,1.751,3822,3.022,3823,1.751,3824,1.751,3825,1.572,3826,1.572,3827,1.572,3828,1.751,3829,1.751,3830,1.751,3831,3.985,3832,3.985,3833,1.751,3834,1.751,3835,1.572,3836,3.022,3837,1.751,3838,1.751,3839,1.751,3840,1.751,3841,1.751,3842,3.022,3843,1.751,3844,1.751,3845,3.022,3846,3.022,3847,2.713,3848,3.022,3849,3.022,3850,3.022,3851,3.577,3852,3.022,3853,3.022,3854,2.713,3855,3.022,3856,1.751,3857,3.022,3858,1.572,3859,1.751,3860,3.022,3861,1.751,3862,1.751,3863,1.751,3864,3.022,3865,1.572,3866,1.751,3867,1.751,3868,1.572]],["title/classes/LifecycleUpdateDto.html",[0,0.239,3607,4.049]],["body/classes/LifecycleUpdateDto.html",[0,0.441,2,0.964,3,0.127,4,0.1,5,0.107,21,0.005,23,0.38,29,0.195,32,1.318,37,0.178,40,0.666,55,0.634,58,0.004,59,0.004,65,1.42,126,1.915,128,2.494,137,2.532,138,1.686,280,2.757,281,2.989,288,2.692,291,1.751,368,2.697,518,2.989,519,4.376,522,4.312,888,2.612,1309,4.878,1746,4.002,1889,3.225,1901,5.144,1902,4.353,1904,4.468,1925,4.68,3504,6.276,3555,5.108,3597,6.616,3598,5.733,3603,5.733,3606,5.385,3607,6.616,3608,7.043]],["title/injectables/LocalStrategy.html",[140,1.35,1080,4.049]],["body/injectables/LocalStrategy.html",[0,0.275,3,0.11,4,0.086,5,0.092,7,0.344,10,2.032,11,0.933,15,1.593,18,0.502,20,1.733,21,0.005,22,1.243,23,0.32,29,0.2,36,0.971,37,0.116,40,0.699,42,2.19,43,2.093,44,2.333,55,0.623,58,0.003,59,0.003,65,1.197,76,1.387,79,1.733,80,1.899,98,1.257,116,2.15,140,2.013,141,2.585,143,4.421,158,2.124,163,4.243,164,6.426,176,3.437,177,3.897,182,1.046,213,1.988,222,2.795,256,1.7,259,1.514,285,1.387,324,3.863,327,4.724,346,2.734,355,2.795,389,3.897,470,2.968,695,5.605,785,5.245,800,6.036,902,3.105,1004,5.726,1034,5.546,1035,4.417,1036,4.047,1040,4.657,1042,4.218,1080,6.036,1138,4.957,1139,5.726,1251,3.345,1799,4.417,2092,4.335,3421,6.946,3422,5.359,3424,5.359,3425,7.129,3429,5.359,3431,5.359,3437,5.359,3440,5.359,3442,6.946,3444,5.359,3869,5.969,3870,5.969,3871,5.969,3872,8.585,3873,5.969,3874,7.737,3875,5.969,3876,5.969,3877,5.969,3878,5.969,3879,5.969,3880,5.969,3881,5.969]],["title/classes/Logger.html",[0,0.239,10,1.767]],["body/classes/Logger.html",[0,0.265,2,0.804,3,0.106,4,0.083,5,0.089,7,0.332,8,0.851,10,3.05,11,1.081,18,0.582,21,0.005,23,0.414,24,4.892,29,0.183,37,0.174,40,0.741,55,0.676,58,0.003,59,0.003,65,0.891,116,1.443,123,4.128,125,3.466,131,1.457,132,4.186,135,4.347,136,1.64,138,1.407,174,1.99,182,1.324,229,2.5,232,1.578,280,2.27,281,2.495,285,2.082,292,3.559,299,2.64,302,3.095,305,2.773,306,2.746,343,2.365,346,3.463,386,3.413,390,3.518,1251,3.228,1253,4.07,2000,7.008,2005,7.576,2092,4.236,3304,6.583,3311,5.898,3882,5.172,3883,8.959,3884,5.761,3885,5.761,3886,5.761,3887,5.761,3888,5.761,3889,7.56,3890,5.172,3891,5.761,3892,5.172,3893,5.761,3894,5.172,3895,5.761,3896,5.761,3897,5.761,3898,5.761]],["title/controllers/LoggerController.html",[399,1.478,3899,4.31]],["body/controllers/LoggerController.html",[0,0.354,1,4.227,3,0.141,4,0.111,5,0.119,10,2.617,21,0.005,29,0.196,36,1.25,37,0.149,58,0.004,59,0.004,65,1.399,76,1.786,256,2.189,399,2.189,401,2.404,403,3.212,444,3.822,470,3.822,471,3.741,3899,7.513,3900,7.686,3901,6.695,3902,6.9,3903,7.686]],["title/modules/LoggerModule.html",[178,1.601,1981,3.84]],["body/modules/LoggerModule.html",[0,0.327,3,0.131,4,0.103,5,0.11,10,2.416,21,0.005,22,1.14,29,0.202,36,1.154,37,0.138,58,0.004,59,0.004,136,2.021,178,2.867,401,2.698,545,3.073,546,3.189,547,3.315,548,3.315,549,3.019,550,4.257,551,3.315,555,4.03,556,3.019,557,3.251,559,4.086,563,3.529,564,4.475,566,4.086,1981,7.453,3892,7.744,3899,7.717,3901,7.453,3902,6.371,3904,6.371,3905,6.371,3906,7.097,3907,6.371,3908,7.097,3909,7.097]],["title/injectables/LoggerService.html",[140,1.35,3901,3.84]],["body/injectables/LoggerService.html",[0,0.168,3,0.067,4,0.053,5,0.056,7,0.21,8,0.617,9,2.525,10,2.49,11,1.169,12,2.53,15,0.974,18,0.642,20,2.247,21,0.005,22,1.493,23,0.424,25,4.576,29,0.16,36,0.594,37,0.071,40,0.398,49,2.992,55,0.661,58,0.002,59,0.002,65,0.848,66,3.846,72,2.314,74,2.919,75,2.919,76,1.274,77,2.919,78,2.919,79,1.227,80,2.21,89,4.038,90,2.045,91,2.045,92,2.045,93,1.944,94,2.045,95,2.045,96,2.045,98,1.927,126,1.825,128,2.974,136,1.039,138,0.892,140,1.426,141,1.581,174,3.504,192,6.062,194,4.613,198,2.919,199,2.417,200,2.725,201,3.247,202,3.346,203,3.346,204,3.155,205,3.578,206,4.185,207,3.346,208,2.383,209,3.591,211,2.383,213,2.351,220,2.302,221,5.588,222,3.609,223,2.383,224,5.128,225,4.392,226,2.302,227,3.456,228,2.579,229,1.081,230,2.302,231,5.963,232,2.758,233,2.383,234,2.302,235,4.283,236,5.588,237,2.383,238,2.302,239,2.383,240,2.383,241,2.383,242,2.302,243,2.383,244,2.383,245,2.383,246,2.045,247,4.613,248,2.474,249,2.383,250,2.383,251,2.101,252,2.302,256,1.039,3901,4.055,3907,3.277,3910,3.65,3911,3.65,3912,3.65]],["title/classes/MailSettingsDto.html",[0,0.239,3913,4.31]],["body/classes/MailSettingsDto.html",[0,0.363,2,0.856,3,0.113,4,0.089,5,0.095,7,0.353,8,0.886,18,0.596,21,0.005,23,0.427,29,0.161,32,1.171,37,0.119,40,0.76,55,0.682,58,0.004,59,0.004,116,1.536,131,1.492,232,1.68,278,4.533,280,3.004,285,1.83,288,2.599,290,2.683,291,1.556,292,3.645,299,1.919,324,4.036,327,4.936,521,5.338,599,5.484,796,5.506,858,2.25,1554,5.338,1817,7.222,3913,6.539,3914,6.133,3915,7.874,3916,6.133,3917,7.874,3918,7.874,3919,6.133,3920,7.874,3921,8.697,3922,6.133,3923,7.874,3924,6.133,3925,6.133,3926,7.874,3927,7.069,3928,6.133,3929,7.874,3930,6.133,3931,7.874,3932,5.506]],["title/controllers/MailadmController.html",[399,1.478,3933,4.31]],["body/controllers/MailadmController.html",[0,0.276,3,0.11,4,0.087,5,0.093,7,0.345,10,2.042,11,0.936,18,0.504,20,1.738,21,0.005,22,1.246,23,0.321,29,0.192,32,1.145,36,0.975,37,0.116,55,0.65,56,1.556,58,0.004,59,0.004,79,1.738,80,2.135,98,1.634,131,1.262,158,2.134,182,1.36,213,2.337,229,2.696,232,2.125,259,1.969,269,4.739,277,3.361,399,1.708,401,1.876,403,2.507,408,4.036,409,3.726,413,4.333,436,2.464,439,2.919,441,2.695,470,2.982,484,3.778,485,3.778,673,4.698,675,5.426,681,4.134,752,6.08,753,4.438,988,3.275,1312,4.525,1499,5.484,1518,6.713,1539,4.981,1553,3.946,1556,4.894,1652,5.743,3913,7.556,3933,6.445,3934,5.998,3935,5.998,3936,5.384,3937,5.384,3938,5.743,3939,5.998,3940,5.998,3941,5.384,3942,5.384,3943,5.384,3944,5.998,3945,5.998,3946,5.998,3947,4.679,3948,5.384,3949,5.384,3950,5.384,3951,5.384,3952,5.998]],["title/controllers/ManagementController.html",[399,1.478,3953,4.31]],["body/controllers/ManagementController.html",[0,0.356,3,0.142,4,0.112,5,0.12,21,0.005,29,0.196,32,1.477,36,1.258,37,0.15,55,0.512,58,0.004,59,0.004,76,1.797,399,2.202,401,2.419,403,3.232,441,3.475,470,3.845,471,3.764,3953,7.54,3954,7.733,3955,6.943,3956,6.719,3957,6.943,3958,7.733,3959,7.733]],["title/modules/ManagementModule.html",[178,1.601,721,3.84]],["body/modules/ManagementModule.html",[0,0.296,3,0.118,4,0.093,5,0.099,18,0.418,21,0.005,29,0.204,30,2.556,36,1.046,37,0.125,55,0.426,56,1.29,58,0.004,59,0.004,79,1.441,98,1.355,178,2.882,401,2.54,468,3.951,545,2.787,546,2.892,547,3.006,548,3.006,549,2.737,550,4.074,551,3.006,555,3.793,556,2.737,557,2.948,563,4.422,721,7.682,1147,3.132,1407,6.004,1983,6.938,1985,6.938,1986,5.344,1992,5.344,1993,5.02,1994,5.344,3613,7.276,3620,5.344,3953,7.386,3955,5.777,3956,7.276,3957,5.777,3960,5.777,3961,5.777,3962,5.777,3963,7.276,3964,6.435,3965,6.435,3966,6.435,3967,6.435,3968,6.435]],["title/injectables/ManagementService.html",[140,1.35,3956,3.84]],["body/injectables/ManagementService.html",[0,0.364,3,0.146,4,0.115,5,0.122,15,2.597,18,0.513,21,0.005,29,0.161,36,1.286,37,0.153,55,0.609,58,0.004,59,0.004,140,2.394,141,3.426,3956,6.808,3969,7.91,3970,7.91]],["title/classes/MetadataDto.html",[0,0.239,2329,3.273]],["body/classes/MetadataDto.html",[0,0.433,2,1.017,3,0.134,4,0.106,5,0.113,7,0.42,8,0.986,11,1.057,18,0.473,21,0.005,23,0.404,29,0.199,32,1.391,37,0.141,55,0.622,58,0.004,59,0.004,127,4.779,131,1.185,288,2.4,291,1.848,520,4.015,523,3.425,524,3.156,1921,4.178,2329,5.527,2343,7.5,2344,6.052,3971,7.288,3972,7.288,3973,7.288]],["title/classes/MetadataPart.html",[0,0.239,130,4.31]],["body/classes/MetadataPart.html",[0,0.306,2,0.927,3,0.122,4,0.096,5,0.103,7,0.382,8,0.932,18,0.613,21,0.005,23,0.421,29,0.169,37,0.16,40,0.737,55,0.69,58,0.004,59,0.004,65,1.026,116,1.662,125,3.4,126,1.841,130,6.874,131,1.536,132,4.412,133,5.959,135,4.54,136,1.89,138,1.621,182,1.163,305,3.036,306,3.164,1746,4.246,3277,6.675,3323,6.374,3974,6.637,3975,8.098,3976,8.098,3977,6.637,3978,6.637,3979,6.637,3980,6.637,3981,6.637]],["title/classes/MetadataPartDto.html",[0,0.239,2343,3.84]],["body/classes/MetadataPartDto.html",[0,0.385,2,0.943,3,0.124,4,0.098,5,0.104,7,0.389,8,0.942,11,1.23,18,0.617,21,0.005,23,0.394,29,0.171,32,1.29,37,0.131,40,0.689,55,0.691,58,0.004,59,0.004,131,1.545,288,2.675,290,2.806,291,1.714,499,5.913,523,3.817,1746,3.972,2343,6.193,3277,6.728,3323,6.424,3975,8.163,3976,8.163,3982,6.756,3983,7.513,3984,6.756,3985,6.756,3986,6.756,3987,6.756,3988,8.163]],["title/modules/MigrationsModule.html",[178,1.601,722,3.84]],["body/modules/MigrationsModule.html",[0,0.332,3,0.133,4,0.104,5,0.111,18,0.468,21,0.005,29,0.177,36,1.172,37,0.14,55,0.477,56,1.445,58,0.004,59,0.004,79,1.613,80,1.925,98,1.517,178,2.998,213,2.236,468,4.237,545,3.12,546,3.238,547,3.366,548,3.366,549,3.064,550,4.285,551,3.366,555,4.067,556,3.064,557,3.3,722,7.48,1983,7.298,1985,5.621,3989,6.468,3990,6.468,3991,7.886,3992,7.205,3993,7.205,3994,7.205]],["title/injectables/MigrationsService.html",[140,1.35,3991,4.049]],["body/injectables/MigrationsService.html",[0,0.161,3,0.064,4,0.051,5,0.146,7,0.202,8,0.598,9,2.278,10,2.44,11,0.774,12,3.239,15,1.419,18,0.577,20,1.438,21,0.005,22,1.031,23,0.297,29,0.185,30,1.392,36,0.57,37,0.103,39,1.096,40,0.629,41,1.514,53,2.313,55,0.51,56,1.782,58,0.002,59,0.002,67,1.743,68,5.999,70,3.34,72,2.762,76,1.884,79,1.19,80,2.129,85,4.376,98,1.622,107,2.018,110,1.546,116,0.878,120,3.817,136,0.998,138,0.856,140,1.383,141,1.518,182,1.654,257,2.962,259,2.419,262,2.825,263,3.149,270,1.286,285,0.815,299,2.242,353,2.978,355,2.32,357,4.192,368,1.37,490,3.22,603,2.14,644,2.376,669,3.147,679,2.376,775,1.914,811,4.772,858,2.355,947,2.21,948,2.14,1029,1.743,1030,3.147,1147,1.706,1164,2.21,1251,1.964,1303,4.147,1727,2.594,1746,1.465,1748,2.594,1848,2.288,1852,2.911,2062,3.933,2063,2.911,2065,4.147,2069,4.147,2075,2.376,2126,3.352,2285,3.933,2674,3.756,2822,5.728,2838,2.594,3152,2.911,3425,4.414,3991,4.147,3995,3.505,3996,6.421,3997,8.676,3998,7.166,3999,7.166,4000,5.315,4001,5.315,4002,5.315,4003,3.505,4004,3.505,4005,5.315,4006,3.505,4007,8.676,4008,5.315,4009,8.107,4010,3.505,4011,5.315,4012,3.505,4013,3.505,4014,5.315,4015,3.505,4016,4.772,4017,5.315,4018,3.505,4019,3.505,4020,9.766,4021,3.505,4022,3.505,4023,3.505,4024,3.505,4025,3.505,4026,5.315,4027,3.505,4028,3.505,4029,3.505,4030,3.505,4031,3.505,4032,3.505,4033,3.505,4034,3.505,4035,3.505,4036,3.505,4037,3.505,4038,3.505,4039,3.505,4040,3.505,4041,3.505,4042,5.315,4043,9.206,4044,3.505,4045,6.421,4046,3.505,4047,7.702,4048,3.505,4049,3.147,4050,6.421,4051,3.505,4052,5.315,4053,5.315,4054,3.505,4055,3.505,4056,5.315,4057,3.505,4058,3.505,4059,3.505,4060,3.505,4061,3.505,4062,5.315,4063,3.505,4064,3.505,4065,8.107,4066,3.505,4067,3.505,4068,5.315,4069,3.505,4070,3.147,4071,3.505,4072,3.505,4073,3.505,4074,3.505,4075,3.505,4076,3.505,4077,3.505,4078,3.505,4079,5.315,4080,3.505,4081,5.315,4082,3.505,4083,3.505,4084,3.505,4085,3.505,4086,3.505,4087,2.911,4088,3.505,4089,5.315,4090,3.505,4091,5.315,4092,3.147,4093,3.505,4094,3.505,4095,3.505,4096,3.505,4097,3.505,4098,5.315,4099,3.505,4100,3.505]],["title/classes/MongoDbTestInstance.html",[0,0.239,4101,4.31]],["body/classes/MongoDbTestInstance.html",[0,0.286,2,0.867,3,0.114,4,0.09,5,0.096,7,0.358,8,0.894,11,0.749,18,0.633,20,1.778,21,0.005,22,1.275,23,0.382,29,0.162,37,0.12,39,1.944,40,0.635,56,1.246,58,0.004,59,0.004,79,1.778,80,2.285,98,1.942,120,4.661,138,1.518,182,1.533,224,3.482,259,2.512,305,3.382,603,3.794,613,4.39,657,4.057,822,4.057,877,5.815,2134,4.598,3280,4.848,4101,6.594,4102,6.214,4103,7.856,4104,7.856,4105,8.278,4106,7.128,4107,8.278,4108,6.214,4109,7.856,4110,6.214,4111,6.214,4112,7.94,4113,6.214,4114,6.214,4115,6.214,4116,4.598,4117,5.578,4118,7.94,4119,6.214,4120,6.214,4121,6.214,4122,6.214,4123,6.214,4124,6.214,4125,6.214,4126,6.214,4127,7.94,4128,6.214,4129,6.214,4130,6.214]],["title/interfaces/MongoosePlugin.html",[38,1.421,731,3.84]],["body/interfaces/MongoosePlugin.html",[3,0.111,4,0.06,5,0.064,7,0.239,8,0.677,11,0.938,21,0.005,23,0.294,29,0.192,32,0.791,37,0.137,38,1.648,39,2.217,40,0.746,41,1.18,42,1.52,43,1.453,44,1.619,45,2.061,46,2.156,47,2.928,58,0.003,59,0.003,60,1.702,70,3.687,106,4.199,116,1.038,136,1.18,138,1.47,163,1.936,174,1.432,222,3.638,283,3.251,285,1.647,298,4.328,299,1.883,324,2.56,389,5.079,442,3.131,599,4.906,631,3.206,639,4.75,676,3.233,680,5.53,731,5.245,732,4.081,734,4.696,755,4.454,762,2.706,770,3.233,787,4.696,822,5.079,826,3.287,846,2.809,863,3.566,910,2.53,1002,2.809,1011,4.805,1029,2.061,1036,2.809,1084,4.999,1088,4.999,1089,3.067,1126,3.067,1147,3.45,1156,6.724,1245,2.706,1446,1.732,1483,4.696,1491,3.796,1568,4.696,1793,4.999,1794,3.72,1795,4.999,1796,5.404,1797,5.404,1798,5.887,1799,4.454,1800,5.404,1801,5.404,1802,5.404,1803,5.404,1804,4.999,1805,3.067,1806,5.404,1807,5.404,1808,4.253,1809,4.999,1810,4.999,1811,4.253,1812,5.404,1813,5.404,1814,5.404,1815,5.404,1816,6.364,1817,4.999,1818,4.999,1819,4.999,1820,4.999,1821,5.404,1822,3.72,1823,3.72,1824,3.72,1825,3.72,1826,3.72,1827,3.72,1828,3.72,1829,3.72,1830,3.441,1831,3.72,1832,7.985,1833,3.72,1834,3.72,1835,3.72,1836,3.72,1837,3.72,1838,3.72,1839,3.72,1840,3.72,1841,3.72,1842,3.72,1843,3.72,1844,3.72,1845,3.72,1846,3.72,1847,3.72,1848,3.93,1849,3.72,1850,3.72,1851,3.72,1852,4.999,1853,5.404,1854,3.72,1855,3.72,1856,3.72,1857,3.72,1858,3.72,1859,3.72,1860,3.72,1861,3.72,1862,3.72,1863,3.72,1864,3.72,1865,3.72,1866,3.72,1867,3.72,1868,3.72,1869,3.72,1870,3.72,1871,3.72,1872,3.72,1873,3.72,1874,3.72,1875,3.72,1876,3.233]],["title/classes/MongooseValidationFilter.html",[0,0.239,742,4.31]],["body/classes/MongooseValidationFilter.html",[0,0.342,2,0.782,3,0.103,4,0.081,5,0.087,7,0.322,9,2.339,10,1.906,11,0.895,18,0.482,20,1.662,21,0.005,22,1.192,23,0.307,29,0.181,36,0.911,37,0.109,39,1.752,42,2.054,43,1.963,44,2.188,55,0.551,56,1.123,58,0.003,59,0.003,67,3.69,79,1.662,98,1.563,138,1.368,143,3.611,158,1.993,182,1.693,262,3.053,291,1.42,297,4.23,298,4.53,343,1.752,346,2.565,355,2.681,408,3.048,436,2.3,476,2.3,597,6.911,598,6.162,599,5.248,600,7.358,602,5.03,604,4.65,605,4.368,606,4.65,607,4.65,610,5.027,742,6.911,790,3.224,807,4.844,1154,4.368,1245,3.656,1351,5.88,1370,6.661,1431,3.956,2021,7.261,2039,4.65,2092,3.137,2661,5.243,3036,5.027,3179,5.027,3189,4.368,4131,8.322,4132,7.42,4133,9.664,4134,9.812,4135,5.599,4136,7.42,4137,5.599,4138,5.599,4139,5.599,4140,5.599,4141,5.599,4142,5.599,4143,5.599,4144,5.599,4145,5.599,4146,5.599,4147,5.599,4148,5.599,4149,5.599,4150,5.599,4151,5.599,4152,5.599,4153,5.599,4154,5.599,4155,5.599]],["title/classes/NeedChangePasswordDto.html",[0,0.239,2730,4.31]],["body/classes/NeedChangePasswordDto.html",[0,0.406,2,1.025,3,0.135,4,0.106,5,0.113,7,0.423,8,0.991,18,0.477,21,0.005,23,0.391,29,0.179,32,1.402,37,0.142,40,0.709,55,0.624,58,0.004,59,0.004,131,1.194,163,4.114,177,5.749,218,3.281,276,3.972,278,4.228,279,6.87,280,2.644,288,2.411,290,2.717,291,1.863,292,2.917,1420,6.099,1428,6.593,2730,7.313,4156,8.806]],["title/classes/NotFoundDto.html",[0,0.239,4157,4.659]],["body/classes/NotFoundDto.html",[0,0.338,2,1.023,3,0.135,4,0.106,5,0.113,7,0.422,8,0.99,18,0.571,21,0.005,23,0.364,29,0.179,32,1.4,36,1.192,37,0.142,40,0.638,55,0.671,58,0.004,59,0.004,131,1.43,232,2.007,288,2.676,343,2.948,436,3.871,476,3.871,888,2.774,2110,6.087,4157,7.896,4158,9.424,4159,7.33,4160,7.33,4161,7.33,4162,7.33]],["title/injectables/ObjectIdValidationPipe.html",[140,1.35,459,3.273]],["body/injectables/ObjectIdValidationPipe.html",[0,0.321,3,0.128,4,0.101,5,0.108,7,0.402,11,0.842,18,0.453,20,1.563,21,0.005,22,1.121,23,0.289,29,0.174,36,1.135,37,0.135,40,0.669,42,3.132,43,2.447,53,2.564,55,0.61,56,1.4,58,0.004,59,0.004,67,3.471,79,1.912,98,1.47,110,3.078,128,3.562,137,2.56,138,1.705,140,2.221,141,3.022,276,3.391,286,4.731,459,5.384,667,3.911,858,2.56,963,5.165,1918,5.788,2012,5.796,2017,7.091,2018,7.982,4163,8.538,4164,9.225,4165,6.979,4166,8.538,4167,6.979,4168,6.979,4169,6.979]],["title/classes/PaginatedFilterDto.html",[0,0.239,2971,4.31]],["body/classes/PaginatedFilterDto.html",[0,0.364,2,1.104,3,0.146,4,0.115,5,0.122,18,0.513,21,0.005,37,0.153,39,2.878,40,0.667,42,2.902,43,2.773,44,3.091,58,0.004,59,0.004,61,5.363,346,3.624,2971,7.641,4170,8.26,4171,7.91,4172,7.91]],["title/classes/PaginatedResponseDto.html",[0,0.239,33,4.049]],["body/classes/PaginatedResponseDto.html",[0,0.327,2,0.991,3,0.131,4,0.103,5,0.11,7,0.409,8,0.971,18,0.603,21,0.005,23,0.385,29,0.176,32,1.355,33,6.729,36,1.154,37,0.138,41,2.456,55,0.686,58,0.004,59,0.004,131,1.511,229,2.754,232,1.943,288,2.758,436,3.817,476,3.817,482,5.207,485,3.454,888,2.686,2110,5.893,4170,8.679,4173,7.097,4174,8.626,4175,7.097,4176,7.097,4177,7.097]],["title/controllers/PasswdController.html",[399,1.478,4178,4.31]],["body/controllers/PasswdController.html",[0,0.133,3,0.053,4,0.042,5,0.044,7,0.166,10,1.553,11,0.98,15,0.768,18,0.528,20,1.82,21,0.005,22,1.305,23,0.337,29,0.184,32,0.549,36,0.468,37,0.056,53,0.864,55,0.654,56,1.72,58,0.002,59,0.002,72,1.593,76,0.669,79,1.021,80,2.176,98,1.712,125,1.182,131,1.322,138,0.703,158,1.024,177,3.7,182,1.621,213,2.401,224,2.556,229,2.638,232,2.146,257,1.106,259,2.062,262,1.056,263,1.705,266,3.092,277,3.52,280,1.37,320,2.373,324,2.41,343,2.543,399,0.819,401,0.9,403,1.203,406,2.877,408,4.058,409,3.912,413,4.419,425,1.815,436,1.182,439,1.401,441,1.293,476,1.182,482,2.556,484,3.956,485,3.956,490,1.143,556,2.41,617,1.497,673,4.57,675,5.126,681,4.33,785,3.842,790,3.262,791,3.573,807,5.812,871,3.82,988,4.57,1014,3.99,1015,5.354,1021,3.797,1027,4.003,1028,2.174,1276,1.497,1280,4.371,1303,5.03,1310,4.095,1312,2.268,1314,2.22,1418,4.771,1439,2.39,1440,3.559,1441,4.771,1442,2.39,1446,1.203,1449,4.771,1450,4.706,1451,2.39,1452,4.771,1453,2.39,1454,2.39,1455,4.004,1456,2.245,1459,4.771,1460,2.39,1463,4.771,1464,2.39,1474,4.193,1486,6.346,1487,5.813,1490,3.82,1492,3.937,1499,5.284,1507,5.03,1511,3.223,1514,3.788,1515,2.39,1519,2.245,1536,2.39,1548,3.223,1552,3.788,1553,2.319,1554,3.092,1556,4.066,1577,3.092,1580,3.788,1586,2.702,1587,2.43,1593,3.559,1604,3.559,1613,3.788,1624,3.223,1653,2.43,1716,5.03,1717,3.223,1718,3.7,2097,2.245,2519,2.129,2707,2.584,3034,2.584,3805,4.706,3938,3.375,4178,3.788,4179,2.878,4180,4.561,4181,4.095,4182,4.561,4183,4.095,4184,4.561,4185,2.878,4186,2.878,4187,5.534,4188,7.478,4189,4.561,4190,4.561,4191,2.878,4192,2.584,4193,2.584,4194,2.878,4195,2.878,4196,2.878,4197,2.878,4198,5.789,4199,4.561,4200,2.878,4201,2.878,4202,2.878,4203,2.878,4204,2.878,4205,2.878,4206,2.878,4207,2.878,4208,2.878,4209,2.878,4210,2.878,4211,2.878,4212,2.878,4213,4.561,4214,2.878,4215,2.878,4216,2.878,4217,4.561,4218,4.561,4219,4.561,4220,2.878,4221,2.584,4222,2.878,4223,2.878,4224,2.878,4225,2.878,4226,2.878,4227,2.878,4228,2.878,4229,2.878,4230,5.667,4231,2.878,4232,2.878,4233,2.878,4234,2.878,4235,2.878,4236,2.878,4237,2.878,4238,2.878,4239,2.878,4240,2.584,4241,2.878,4242,2.584,4243,2.878,4244,2.878,4245,2.878,4246,2.878,4247,4.561,4248,4.561,4249,4.095,4250,4.561,4251,4.561,4252,2.878,4253,2.878,4254,2.878,4255,2.878,4256,2.878,4257,2.878,4258,2.878,4259,2.878,4260,2.878,4261,2.878,4262,2.878]],["title/modules/PasswdModule.html",[178,1.601,3963,3.84]],["body/modules/PasswdModule.html",[0,0.316,3,0.126,4,0.099,5,0.106,21,0.005,29,0.204,36,1.116,37,0.133,58,0.004,59,0.004,178,2.826,401,2.644,545,2.973,546,3.085,547,3.208,548,3.208,549,2.92,550,4.195,551,3.208,555,3.949,556,2.92,557,3.145,563,4.203,723,6.774,747,5.702,1402,6.524,1407,6.101,1474,7.394,1771,5.702,3620,5.702,3963,7.747,4178,7.605,4221,6.164,4263,6.164,4264,6.164,4265,6.866,4266,6.866,4267,6.866]],["title/controllers/PasswdadmController.html",[399,1.478,4268,4.31]],["body/controllers/PasswdadmController.html",[0,0.273,3,0.109,4,0.086,5,0.092,7,0.341,10,2.02,11,0.929,18,0.5,20,1.726,21,0.005,22,1.238,23,0.319,29,0.191,32,1.133,36,0.965,37,0.115,55,0.648,56,1.545,58,0.003,59,0.003,79,1.726,80,2.129,98,1.623,131,1.253,158,2.111,182,1.35,213,2.327,229,2.685,232,2.11,259,1.955,277,3.337,399,1.689,401,1.856,403,2.479,408,4.025,409,3.707,413,4.322,436,2.437,439,2.887,441,2.666,470,2.95,484,3.751,485,3.751,673,4.673,675,5.398,681,4.105,1027,3.954,1028,4.319,1455,6.048,1486,5.702,1487,4.021,1519,4.628,1609,7.525,1610,4.926,1652,5.702,2735,5.326,3938,5.702,3947,4.628,4181,6.918,4192,5.326,4193,5.326,4240,5.326,4242,5.326,4268,6.399,4269,5.932,4270,5.932,4271,7.706,4272,5.932,4273,5.932,4274,7.525,4275,5.932,4276,5.932,4277,5.932,4278,5.932,4279,5.932,4280,5.932,4281,5.932,4282,5.932,4283,5.932,4284,5.932]],["title/classes/PasswordPoliciesDto.html",[0,0.239,4274,4.31]],["body/classes/PasswordPoliciesDto.html",[0,0.237,2,0.468,3,0.062,4,0.049,5,0.052,7,0.193,8,0.578,18,0.614,21,0.005,23,0.432,29,0.105,32,0.64,37,0.065,40,0.649,41,2.969,55,0.69,58,0.002,59,0.002,116,1.287,131,1.538,270,3.53,278,2.959,280,3.053,283,3.576,284,4.614,285,1.852,288,2.614,289,3.501,290,1.928,291,0.851,292,3.756,299,2.958,320,3.643,324,3.64,343,2.191,556,2.979,858,3.468,891,4.748,948,3.138,990,2.481,1014,2.45,1015,4.268,1021,2.401,1027,3.515,1029,3.483,1485,3.924,1487,3.484,1489,3.138,1490,3.044,1491,3.241,1492,3.138,1499,4.949,1553,3.561,1556,4.417,1604,4.009,1686,4.268,1848,3.355,1920,4.769,1927,4.268,2277,4.415,3176,5.464,3213,4.614,3272,7.285,4274,4.268,4285,9.544,4286,3.353,4287,6.248,4288,6.248,4289,6.248,4290,6.248,4291,6.248,4292,6.248,4293,6.248,4294,6.248,4295,6.248,4296,6.248,4297,6.248,4298,6.248,4299,6.248,4300,5.139,4301,5.139,4302,5.139,4303,3.353,4304,5.139,4305,7.004,4306,3.353,4307,7.004,4308,7.004,4309,7.004,4310,6.288,4311,5.139,4312,4.614,4313,3.353,4314,9.239,4315,8.557,4316,7.004,4317,4.614,4318,3.353,4319,3.353,4320,4.614,4321,5.139,4322,3.353,4323,4.614,4324,3.353,4325,7.004,4326,7.004,4327,3.353,4328,3.353,4329,6.288,4330,4.614,4331,5.139,4332,4.614,4333,3.353,4334,5.139,4335,3.353,4336,5.139,4337,4.614,4338,5.139,4339,5.139,4340,4.268,4341,5.139,4342,3.353,4343,5.139,4344,4.268,4345,5.139,4346,5.139,4347,3.353,4348,7.004,4349,3.353]],["title/interfaces/RawBodyBufferOptions.html",[38,1.421,4350,4.659]],["body/interfaces/RawBodyBufferOptions.html",[3,0.133,4,0.105,5,0.112,7,0.416,8,0.981,11,1.22,21,0.005,23,0.388,29,0.147,37,0.169,38,1.977,40,0.754,56,1.447,58,0.004,59,0.004,60,2.965,285,1.678,409,3.774,1251,4.044,1810,5.994,1811,7.145,4350,8.405,4351,7.218,4352,7.218,4353,9.722,4354,9.722,4355,6.48,4356,7.218,4357,7.218,4358,8.715,4359,6.48,4360,7.218]],["title/classes/ResetByCodeDto.html",[0,0.239,1452,3.84]],["body/classes/ResetByCodeDto.html",[0,0.381,2,0.927,3,0.122,4,0.096,5,0.103,7,0.382,8,0.932,18,0.586,21,0.005,23,0.374,29,0.169,32,1.267,37,0.129,40,0.685,41,2.357,53,2.486,55,0.678,58,0.004,59,0.004,131,1.467,278,4.765,280,2.976,288,2.586,290,2.783,291,1.684,292,3.583,320,4.306,324,3.521,617,5.055,1421,6.374,1452,6.125,1491,5.22,1492,5.934,1920,4.409,3272,5.512,4183,7.431,4361,8.479,4362,6.637,4363,7.431,4364,7.843,4365,6.637,4366,8.277,4367,6.637,4368,8.277,4369,6.637]],["title/classes/ResetPasswordDto.html",[0,0.239,1441,3.84]],["body/classes/ResetPasswordDto.html",[0,0.397,2,0.991,3,0.131,4,0.103,5,0.11,7,0.409,8,0.971,18,0.56,21,0.005,23,0.357,29,0.176,32,1.355,37,0.138,40,0.701,53,2.59,55,0.666,58,0.004,59,0.004,131,1.403,278,4.086,280,2.903,288,2.545,290,2.867,291,1.8,292,3.426,324,3.019,617,5.153,990,5.252,1420,5.893,1421,6.566,1423,7.163,1441,6.383,4361,8.343,4370,7.097,4371,7.097,4372,7.744,4373,7.097]],["title/classes/SecurityPart.html",[0,0.239,377,4.31]],["body/classes/SecurityPart.html",[0,0.278,2,0.844,3,0.111,4,0.088,5,0.093,7,0.348,8,0.878,11,1.203,18,0.628,21,0.005,23,0.426,29,0.159,37,0.151,40,0.761,55,0.696,58,0.004,59,0.004,65,0.935,116,2.163,125,3.205,126,1.677,131,1.573,132,4.52,135,4.598,136,1.721,138,1.477,182,1.059,232,2.499,283,3.814,299,2.855,305,2.862,306,2.882,377,6.478,378,5.427,3447,6.103,4374,6.045,4375,7.754,4376,7.754,4377,7.754,4378,7.754,4379,7.754,4380,6.045,4381,6.045,4382,6.045,4383,6.045,4384,6.045,4385,6.045,4386,6.045]],["title/classes/SecurityPartDTO.html",[0,0.239,508,3.667]],["body/classes/SecurityPartDTO.html",[0,0.36,2,0.845,3,0.111,4,0.088,5,0.094,7,0.349,8,0.879,11,1.226,18,0.628,21,0.005,23,0.417,29,0.159,32,1.156,37,0.117,40,0.75,55,0.696,58,0.004,59,0.004,131,1.574,232,2.367,283,3.264,285,2.009,288,2.696,289,4.375,290,2.986,291,1.536,499,5.518,504,5.028,508,5.518,523,3.782,529,4.864,530,3.743,1903,5.436,3447,6.107,4375,7.76,4376,7.76,4377,7.76,4378,7.76,4379,7.76,4387,6.055,4388,8.644,4389,7.809,4390,6.055,4391,6.055,4392,6.055,4393,6.055,4394,6.055,4395,6.055]],["title/interfaces/ServiceSchemaInterface.html",[38,1.421,4396,4.659]],["body/interfaces/ServiceSchemaInterface.html",[3,0.075,4,0.059,5,0.063,7,0.234,11,1.093,18,0.588,20,2.225,21,0.005,22,1.455,23,0.411,25,4.576,29,0.143,37,0.079,38,1.112,41,1.156,42,2.175,43,1.423,58,0.003,59,0.003,60,1.668,79,1.328,98,1.908,123,2.217,125,1.668,126,1.943,128,3.338,137,1.489,138,0.992,174,3.626,198,3.159,199,2.615,200,2.949,201,4.15,202,4.278,203,4.278,204,4.033,206,4.351,213,2.552,220,3.74,221,5.933,222,3.708,224,5.261,225,4.952,226,3.74,227,4.859,229,1.203,230,3.74,231,6.159,232,2.862,234,2.56,235,4.588,236,5.933,238,2.56,242,2.56,246,2.275,247,4.859,276,2.355,286,2.752,572,3.645,573,2.56,4116,4.388,4396,5.324,4397,4.06,4398,4.06,4399,4.06,4400,4.06,4401,4.06,4402,4.06,4403,4.06,4404,4.06,4405,4.06,4406,4.06,4407,5.93,4408,4.06,4409,4.06]],["title/classes/Settings.html",[0,0.239,253,3.667]],["body/classes/Settings.html",[0,0.32,2,0.969,3,0.128,4,0.101,5,0.107,7,0.4,8,0.958,18,0.552,20,2.061,21,0.005,22,1.478,23,0.408,29,0.173,37,0.178,40,0.696,58,0.004,59,0.004,65,1.073,116,1.738,123,4.646,125,2.851,131,1.384,132,3.976,135,4.299,136,1.976,182,1.216,218,3.574,232,1.901,253,6.013,272,5.764,285,2.23,299,3.001,302,2.94,305,3.122,306,3.309,374,6.013,386,4.112,390,4.238,4410,6.231,4411,6.941,4412,6.941,4413,6.231,4414,6.941]],["title/controllers/SettingsController.html",[399,1.478,4415,4.31]],["body/controllers/SettingsController.html",[0,0.356,3,0.142,4,0.112,5,0.12,21,0.005,29,0.196,32,1.477,36,1.258,37,0.15,55,0.512,58,0.004,59,0.004,76,1.797,253,5.464,399,2.202,401,2.419,403,3.232,441,3.475,470,3.845,471,3.764,3947,6.033,4415,7.54,4416,7.733,4417,6.719,4418,6.943,4419,7.733]],["title/modules/SettingsModule.html",[178,1.601,723,3.518]],["body/modules/SettingsModule.html",[0,0.265,3,0.106,4,0.083,5,0.089,18,0.374,21,0.005,22,0.925,29,0.208,30,2.288,36,0.937,37,0.112,55,0.381,56,1.155,58,0.003,59,0.003,79,1.29,98,1.213,136,1.64,178,2.764,253,5.342,254,4.784,272,6.278,401,2.365,468,3.68,545,2.495,546,2.589,547,2.691,548,2.691,549,2.45,550,3.866,551,3.942,555,3.532,556,2.45,557,2.639,559,3.317,563,3.759,564,3.633,566,3.317,723,7.028,752,7.221,753,4.263,1147,2.804,1455,7.221,1456,4.494,1461,7.563,1462,4.494,1983,6.583,1985,6.583,1986,4.784,1992,4.784,1993,4.494,1994,4.784,3933,7.008,4268,7.008,4415,7.008,4417,7.066,4418,5.172,4420,5.172,4421,5.172,4422,5.172,4423,5.761,4424,7.008,4425,5.761,4426,5.761,4427,5.761,4428,5.761,4429,5.761,4430,5.761]],["title/injectables/SettingsService.html",[140,1.35,4417,3.84]],["body/injectables/SettingsService.html",[0,0.364,3,0.146,4,0.115,5,0.122,15,2.597,18,0.513,21,0.005,29,0.161,36,1.286,37,0.153,55,0.609,58,0.004,59,0.004,140,2.394,141,3.426,4417,6.808,4431,7.91,4432,7.91]],["title/injectables/ShutdownObserver.html",[140,1.35,724,4.049]],["body/injectables/ShutdownObserver.html",[0,0.307,3,0.123,4,0.097,5,0.103,7,0.384,8,0.935,11,0.805,18,0.587,20,1.494,21,0.005,22,1.072,23,0.344,29,0.169,36,1.085,37,0.129,53,2.004,55,0.657,58,0.004,59,0.004,67,3.318,72,2.541,79,1.86,80,2,98,1.749,140,2.16,141,2.889,213,2.133,259,1.692,299,2.087,355,2.411,613,5.868,724,6.479,858,2.448,1728,5.541,2092,4.653,3173,5.541,4433,6.672,4434,9.042,4435,8.305,4436,9.923,4437,8.305,4438,9.733,4439,6.672,4440,6.672,4441,6.672,4442,7.456,4443,6.672,4444,6.672,4445,5.99,4446,6.672,4447,6.672,4448,6.672]],["title/classes/SmsSettingsDto.html",[0,0.239,4449,4.31]],["body/classes/SmsSettingsDto.html",[0,0.345,2,0.795,3,0.105,4,0.082,5,0.088,7,0.328,8,0.844,18,0.602,21,0.005,23,0.429,29,0.153,32,1.087,37,0.11,40,0.762,55,0.685,58,0.003,59,0.003,131,1.507,278,5.335,280,3.02,288,2.606,290,2.936,291,1.444,292,3.681,299,1.78,324,3.942,599,5.29,858,2.088,1490,5.283,1491,4.73,1492,4.58,1548,6.301,1554,5.085,1818,7.696,1819,6.967,1820,6.967,1876,6.957,3927,6.734,4449,6.229,4450,5.692,4451,7.5,4452,7.5,4453,6.734,4454,5.692,4455,7.5,4456,8.006,4457,8.917,4458,5.692,4459,7.5,4460,5.692,4461,7.5,4462,6.734,4463,8.006,4464,7.5,4465,6.734,4466,6.734,4467,5.692,4468,7.5,4469,5.692]],["title/controllers/SmsadmController.html",[399,1.478,4424,4.31]],["body/controllers/SmsadmController.html",[0,0.276,3,0.11,4,0.087,5,0.093,7,0.345,10,2.042,11,0.936,18,0.504,20,1.738,21,0.005,22,1.246,23,0.321,29,0.192,32,1.145,36,0.975,37,0.116,55,0.65,56,1.556,58,0.004,59,0.004,79,1.738,80,2.135,98,1.634,131,1.262,158,2.134,182,1.36,213,2.337,229,2.696,232,2.125,259,1.969,269,4.739,277,3.361,399,1.708,401,1.876,403,2.507,408,4.036,409,3.726,413,4.333,436,2.464,439,2.919,441,2.695,470,2.982,484,3.778,485,3.778,673,4.698,675,5.426,681,4.134,1312,4.525,1461,6.367,1462,4.679,1491,3.782,1499,5.484,1518,6.713,1553,3.946,1556,4.894,1652,5.743,3936,5.384,3937,5.384,3938,5.743,3941,5.384,3942,5.384,3943,5.384,3947,4.679,3948,5.384,3949,5.384,3950,5.384,3951,5.384,4424,6.445,4449,7.556,4470,5.998,4471,5.998,4472,5.998,4473,5.998,4474,5.998,4475,5.998,4476,5.998,4477,5.998,4478,5.998]],["title/classes/StatePart.html",[0,0.239,380,4.31]],["body/classes/StatePart.html",[0,0.28,2,0.849,3,0.112,4,0.088,5,0.094,7,0.35,8,0.882,11,1.205,18,0.614,21,0.005,23,0.424,29,0.177,37,0.152,40,0.664,41,2.605,53,1.827,55,0.69,58,0.004,59,0.004,65,0.941,116,1.524,125,3.218,126,1.688,131,1.539,132,4.274,135,4.527,136,1.733,138,1.486,182,1.066,232,2.145,285,1.82,299,2.862,302,2.102,305,2.873,306,2.9,380,6.505,381,5.462,644,5.873,888,2.964,1467,3.972,1746,4.326,2156,5.462,3448,6.121,4479,6.084,4480,7.778,4481,7.778,4482,7.778,4483,8.663,4484,6.084,4485,6.084,4486,6.084,4487,6.084,4488,6.084,4489,5.462,4490,6.084,4491,6.084,4492,6.084]],["title/classes/StatePartDTO.html",[0,0.239,511,3.84]],["body/classes/StatePartDTO.html",[0,0.377,2,0.911,3,0.12,4,0.094,5,0.101,7,0.376,8,0.922,11,1.221,18,0.628,21,0.005,23,0.4,29,0.167,32,1.246,37,0.126,40,0.594,41,2.332,55,0.696,58,0.004,59,0.004,131,1.572,288,2.702,290,2.527,291,1.655,499,4.609,511,6.059,519,3.903,523,3.778,644,6.067,1746,4.124,1920,4.362,3448,6.323,3983,8.035,3988,8.426,4480,8.035,4481,8.035,4482,8.035,4493,6.523,4494,6.523,4495,6.523,4496,6.523,4497,6.523,4498,6.523,4499,6.523]],["title/classes/SyncIdentitiesDto.html",[0,0.239,1327,4.31]],["body/classes/SyncIdentitiesDto.html",[0,0.412,2,1.054,3,0.139,4,0.109,5,0.117,7,0.435,8,1.007,18,0.49,21,0.005,23,0.371,29,0.182,32,1.441,37,0.146,40,0.649,55,0.631,58,0.004,59,0.004,131,1.227,288,2.451,291,1.915,301,5.153,529,4.768,1125,5.493,1327,7.433,2008,6.777,2009,6.777,2010,6.777,4500,8.951]],["title/classes/Tasks.html",[0,0.239,4501,3.84]],["body/classes/Tasks.html",[0,0.332,2,1.006,3,0.133,4,0.104,5,0.111,7,0.415,8,0.98,11,1.05,18,0.468,21,0.005,23,0.387,29,0.191,37,0.181,55,0.619,58,0.004,59,0.004,65,1.114,116,1.804,123,4.753,125,3.576,128,3.379,131,1.172,132,3.366,135,4.067,136,2.052,137,2.643,138,1.76,182,1.262,232,1.973,305,3.193,306,3.435,386,4.268,390,4.399,1313,5.899,4501,6.922,4502,6.468,4503,7.205,4504,6.468,4505,6.468,4506,7.205]],["title/controllers/TasksController.html",[399,1.478,4507,4.31]],["body/controllers/TasksController.html",[0,0.354,1,4.227,3,0.141,4,0.111,5,0.119,21,0.005,29,0.196,36,1.25,37,0.149,58,0.004,59,0.004,65,1.399,76,1.786,256,2.189,399,2.189,401,2.404,403,3.212,444,3.822,470,3.822,471,3.741,4501,5.688,4507,7.513,4508,7.686,4509,6.695,4510,6.9,4511,7.686]],["title/modules/TasksModule.html",[178,1.601,1409,3.667]],["body/modules/TasksModule.html",[0,0.32,3,0.128,4,0.101,5,0.107,21,0.005,22,1.117,29,0.201,36,1.131,37,0.135,58,0.004,59,0.004,136,1.98,178,2.842,401,2.665,545,3.011,546,3.125,547,3.249,548,3.249,549,2.958,550,4.219,551,4.303,555,3.98,556,2.958,557,3.185,559,4.003,563,3.458,564,4.385,566,4.003,1409,7.173,4501,5.146,4505,7.648,4507,7.649,4509,7.76,4510,6.243,4512,6.243,4513,6.243,4514,6.243,4515,6.954,4516,6.243,4517,6.954,4518,6.954]],["title/injectables/TasksService.html",[140,1.35,4509,3.84]],["body/injectables/TasksService.html",[0,0.168,3,0.067,4,0.053,5,0.056,7,0.21,8,0.616,9,2.524,10,2.238,11,1.169,12,2.527,15,0.972,18,0.642,20,2.246,21,0.005,22,1.492,23,0.424,25,4.575,29,0.16,36,0.592,37,0.071,40,0.397,49,2.988,55,0.666,58,0.002,59,0.002,65,0.846,66,3.844,72,2.312,74,2.915,75,2.915,76,1.272,77,2.915,78,2.915,79,1.226,80,2.209,89,4.037,90,2.041,91,2.041,92,2.041,93,1.94,94,2.041,95,2.041,96,2.041,98,1.927,126,1.823,128,2.972,136,1.037,138,0.89,140,1.424,141,1.578,174,3.503,192,6.06,194,4.608,198,2.915,199,2.414,200,2.721,201,3.242,202,3.341,203,3.341,204,3.151,205,3.573,206,4.182,207,3.341,208,2.378,209,3.588,211,2.378,213,2.35,220,2.297,221,5.586,222,3.608,223,2.378,224,5.126,225,4.389,226,2.297,227,3.451,228,2.574,229,1.079,230,2.297,231,5.961,232,2.758,233,2.378,234,2.297,235,4.281,236,5.586,237,2.378,238,2.297,239,2.378,240,2.378,241,2.378,242,2.297,243,2.378,244,2.378,245,2.378,246,2.041,247,4.608,248,2.47,249,2.378,250,2.378,251,2.097,252,2.297,256,1.037,4501,2.696,4509,4.05,4516,3.27,4519,3.643,4520,3.643,4521,3.643]],["title/interfaces/TicketForm.html",[38,1.421,4522,4.049]],["body/interfaces/TicketForm.html",[3,0.114,4,0.09,5,0.096,7,0.357,8,0.893,21,0.005,23,0.43,29,0.162,38,2.394,40,0.773,41,2.259,42,2.91,43,2.175,58,0.004,59,0.004,60,2.548,209,2.842,280,2.767,286,4.206,307,4.551,308,2.957,309,2.957,371,3.05,858,2.276,2278,5.483,2279,6.016,2280,5.811,2281,4.793,2291,5.641,2293,3.912,2361,4.383,2362,4.383,2363,4.383,2364,4.383,2365,4.383,2366,4.383,2367,4.206,2368,5.002,2369,4.383,2382,7.047,2405,3.912,2419,6.188,2420,4.84,4522,6.188,4523,5.152,4524,5.869,4525,6.47]],["title/interfaces/TicketFormField.html",[38,1.421,4524,3.84]],["body/interfaces/TicketFormField.html",[3,0.107,4,0.084,5,0.09,7,0.336,8,0.858,21,0.005,23,0.438,29,0.155,38,2.325,40,0.767,41,2.728,42,2.796,43,2.045,58,0.003,59,0.003,60,2.396,209,4.124,280,1.751,286,3.953,307,4.476,308,2.78,309,2.78,371,3.883,858,3.302,2278,4.387,2279,3.807,2280,3.678,2281,3.033,2291,5.029,2293,3.678,2361,6.36,2362,6.36,2363,6.36,2364,6.36,2365,6.36,2366,6.36,2367,6.103,2368,5.89,2369,6.36,2382,6.912,2405,3.678,2419,5.945,2420,4.55,4522,4.55,4523,4.843,4524,6.282,4525,6.282]],["title/interfaces/TicketFormSection.html",[38,1.421,4525,3.84]],["body/interfaces/TicketFormSection.html",[3,0.116,4,0.091,5,0.097,7,0.363,8,0.902,11,0.967,21,0.005,23,0.431,29,0.163,38,2.413,40,0.766,41,2.282,42,2.94,43,2.211,58,0.004,59,0.004,60,2.591,209,2.889,280,1.894,286,4.275,307,4.57,308,3.006,309,3.006,371,3.565,858,2.313,2278,5.51,2279,4.117,2280,3.977,2281,3.28,2291,5.67,2293,3.977,2361,4.456,2362,4.456,2363,4.456,2364,4.456,2365,4.456,2366,4.456,2367,4.275,2368,6.036,2369,4.456,2382,7.083,2405,5.847,2419,6.253,2420,4.92,4522,4.92,4523,5.237,4524,5.931,4525,6.861]],["title/interfaces/TokenData.html",[38,1.421,1470,4.31]],["body/interfaces/TokenData.html",[0,0.078,3,0.031,4,0.024,5,0.026,7,0.097,8,0.329,9,1.299,15,0.45,18,0.109,21,0.005,23,0.16,24,1.597,29,0.186,36,0.274,37,0.033,38,0.801,39,0.528,40,0.56,41,0.833,53,2.615,55,0.522,56,1.728,58,0.001,59,0.001,60,0.693,65,0.261,66,1.366,70,0.877,72,1.61,73,3.132,76,1.331,80,1.778,85,1.786,104,1.521,105,1.101,106,0.999,107,0.971,110,3.711,116,2.108,126,0.468,140,0.761,143,2.544,174,0.583,182,1.72,213,1.935,232,1.782,256,0.48,257,2.502,259,2.458,262,2.5,263,4.672,266,2.625,277,0.73,281,2.263,285,1.331,320,0.877,324,3.013,343,1.792,355,2.462,366,1.424,368,2.238,408,1.898,436,0.693,468,1.885,476,2.147,490,2.707,556,1.965,617,4.717,667,4.102,705,2.282,749,1.316,752,2.736,753,1.248,776,2.442,785,3.132,790,0.971,791,1.064,809,2.282,826,0.921,871,2.294,886,0.999,891,3.543,900,1.064,902,0.877,985,2.282,988,4.841,989,4.419,1008,1.192,1014,3.759,1021,3.04,1027,3.969,1028,2.203,1029,0.839,1041,2.736,1054,2.442,1140,2.164,1174,2.429,1203,2.164,1206,1.401,1266,1.91,1272,1.983,1273,1.316,1276,2.403,1280,1.144,1292,3.63,1312,1.454,1313,1.064,1314,1.424,1316,1.316,1338,1.248,1340,0.999,1371,3.021,1373,3.021,1375,3.021,1418,2.164,1421,2.736,1422,1.401,1429,1.401,1430,1.514,1431,1.192,1432,1.514,1433,1.514,1434,1.514,1435,1.514,1436,1.514,1437,1.514,1438,1.514,1439,1.401,1440,2.282,1441,2.164,1442,1.401,1443,1.983,1444,1.401,1445,1.192,1446,3.06,1447,1.401,1448,2.626,1449,2.164,1450,3.216,1451,1.401,1452,2.164,1453,1.401,1454,1.401,1455,2.736,1456,1.316,1457,0.971,1458,1.401,1459,2.164,1460,1.401,1461,2.865,1462,1.316,1463,2.164,1464,1.401,1465,1.91,1466,1.144,1467,1.101,1468,1.064,1469,1.101,1470,5.106,1471,7.339,1472,5.519,1473,4.34,1474,1.248,1475,1.514,1476,1.401,1477,1.514,1478,1.401,1479,1.514,1480,1.514,1481,1.514,1482,1.514,1483,1.316,1484,3.476,1485,4.651,1486,5.573,1487,5.232,1488,2.429,1489,1.786,1490,2.294,1491,2.442,1492,4.815,1493,1.401,1494,1.983,1495,1.514,1496,4.761,1497,1.401,1498,1.514,1499,4.816,1500,5.142,1501,4.756,1502,6.119,1503,2.164,1504,3.265,1505,2.626,1506,2.626,1507,5.317,1508,5.841,1509,3.216,1510,3.476,1511,5.453,1512,6.573,1513,4.692,1514,4.34,1515,5.106,1516,1.401,1517,1.618,1518,1.316,1519,3.605,1520,1.514,1521,1.514,1522,1.401,1523,1.514,1524,4.148,1525,2.626,1526,5.519,1527,2.626,1528,3.476,1529,3.476,1530,1.514,1531,1.514,1532,1.514,1533,1.514,1534,2.626,1535,1.514,1536,3.216,1537,2.626,1538,2.626,1539,2.429,1540,1.514,1541,1.514,1542,2.626,1543,2.626,1544,1.514,1545,1.514,1546,2.626,1547,2.626,1548,2.736,1549,1.514,1550,2.626,1551,2.626,1552,2.429,1553,3.308,1554,2.625,1555,2.865,1556,4.103,1557,4.692,1558,3.868,1559,1.401,1560,1.192,1561,1.514,1562,1.514,1563,3.476,1564,1.514,1565,1.514,1566,1.514,1567,5.418,1568,3.021,1569,2.282,1570,4.148,1571,2.626,1572,1.514,1573,2.736,1574,3.017,1575,1.514,1576,1.514,1577,3.883,1578,1.514,1579,1.101,1580,2.429,1581,1.514,1582,2.626,1583,2.626,1584,1.514,1585,1.514,1586,1.733,1587,0.899,1588,1.514,1589,1.514,1590,1.401,1591,1.514,1592,1.514,1593,1.316,1594,2.626,1595,1.401,1596,4.148,1597,1.514,1598,1.514,1599,1.514,1600,2.626,1601,3.476,1602,1.514,1603,1.514,1604,1.316,1605,1.514,1606,2.626,1607,2.626,1608,2.429,1609,1.401,1610,1.401,1611,1.514,1612,2.626,1613,2.429,1614,1.401,1615,1.248,1616,3.476,1617,1.514,1618,1.514,1619,1.514,1620,3.476,1621,3.216,1622,2.625,1623,3.476,1624,2.736,1625,1.514,1626,1.514,1627,3.476,1628,3.476,1629,1.401,1630,1.514,1631,1.514,1632,1.064,1633,1.514,1634,1.514,1635,1.514,1636,1.514,1637,1.514,1638,2.626,1639,1.248,1640,1.514,1641,1.514,1642,2.626,1643,1.514,1644,1.514,1645,1.514,1646,3.476,1647,1.514,1648,1.514,1649,1.401,1650,4.692,1651,1.514,1652,1.248,1653,1.558,1654,1.514,1655,1.514,1656,1.514,1657,1.514,1658,1.514,1659,1.514,1660,1.316,1661,2.626,1662,1.514,1663,1.514,1664,2.626,1665,2.626,1666,3.476,1667,2.626,1668,1.514,1669,2.626,1670,2.626,1671,2.626,1672,2.626,1673,1.514,1674,1.514,1675,2.626,1676,2.626,1677,2.626,1678,2.626,1679,2.626,1680,2.626,1681,2.626,1682,2.626,1683,2.626,1684,2.626,1685,1.514,1686,1.401,1687,1.514,1688,1.514,1689,1.514,1690,1.514,1691,1.514,1692,1.514,1693,2.626,1694,1.514,1695,1.514,1696,1.514,1697,1.514,1698,1.514,1699,3.476,1700,2.626,1701,2.626,1702,2.626,1703,1.514,1704,2.626,1705,1.192,1706,1.514,1707,1.248,1708,2.626,1709,2.626,1710,2.626,1711,2.626,1712,1.401,1713,1.514,1714,1.514,1715,2.626,1716,2.282,1717,1.192,1718,1.101,1719,1.514,1720,2.626,1721,1.514,1722,1.401,1723,1.514,1724,1.144,1725,1.514,1726,1.514,1727,2.164,1728,1.401,1729,1.514,1730,1.514,1731,2.626,1732,1.514,1733,1.514,1734,1.514,1735,1.316,1736,1.514,1737,1.514,1738,1.514,1739,1.514,1740,1.514,1741,1.514,1742,1.514,1743,1.514,1744,1.514,1745,1.514,1746,2.394,1747,2.626,1748,1.248,1749,1.514,1750,1.401,1751,1.514,1752,1.514,1753,1.401,1754,1.514,1755,1.514,1756,1.514,1757,1.514,1758,0.999,1759,1.514,1760,1.514]],["title/injectables/TransformersFilestorageService.html",[140,1.35,2205,3.388]],["body/injectables/TransformersFilestorageService.html",[0,0.167,3,0.067,4,0.053,5,0.056,7,0.209,8,0.614,9,2.308,10,2.231,11,1.102,12,2.52,15,1.749,18,0.623,20,1.839,21,0.005,22,1.319,23,0.407,25,1.661,29,0.149,36,0.59,37,0.07,40,0.712,42,2.867,43,2.74,44,3.054,53,1.089,55,0.605,56,1.647,58,0.002,59,0.002,65,0.843,66,4.19,72,2.521,74,2.904,75,2.904,76,1.817,77,2.904,78,2.904,79,1.221,80,2.185,89,3.373,90,2.031,91,2.031,92,2.031,93,1.931,94,2.031,95,2.031,96,2.031,98,1.729,140,1.419,141,1.57,158,1.29,182,1.148,213,2.415,218,1.351,229,2.927,256,1.032,259,1.662,299,1.134,346,3.581,408,4.007,413,4.331,468,4.808,785,5.567,858,1.33,900,2.286,1351,2.562,1918,4.443,2148,5.362,2154,6.484,2205,3.56,2230,8.248,3173,3.011,4445,3.255,4526,8.969,4527,3.625,4528,6.554,4529,5.453,4530,6.554,4531,6.554,4532,6.554,4533,6.554,4534,3.625,4535,5.453,4536,9.878,4537,3.625,4538,3.625,4539,6.554,4540,3.625,4541,3.625,4542,3.625,4543,3.625,4544,3.625,4545,3.625,4546,3.625,4547,3.625,4548,3.625,4549,6.554,4550,5.453,4551,6.554,4552,5.453,4553,6.554,4554,5.453,4555,6.554,4556,5.453,4557,3.625,4558,3.625,4559,5.453,4560,3.625,4561,3.625,4562,6.554,4563,5.453,4564,5.453,4565,3.625,4566,9.137,4567,7.018,4568,3.625,4569,7.817,4570,7.817,4571,7.29,4572,3.625,4573,7.29,4574,3.625,4575,3.625,4576,3.625,4577,3.625,4578,3.625,4579,3.625,4580,3.625,4581,3.625,4582,3.625,4583,3.625,4584,3.625,4585,3.625]],["title/injectables/UniquenessMailValidator.html",[140,1.35,4586,4.659]],["body/injectables/UniquenessMailValidator.html",[0,0.338,3,0.102,4,0.08,5,0.085,7,0.318,11,0.996,15,1.473,18,0.536,20,1.85,21,0.005,22,1.473,23,0.365,25,3.366,29,0.187,36,0.897,37,0.16,39,1.726,40,0.698,55,0.607,56,1.839,58,0.003,59,0.003,67,2.744,72,1.551,79,1.646,80,1.948,98,1.547,116,1.382,120,5.025,136,1.571,138,1.348,140,1.912,141,2.389,182,1.607,198,4.4,213,1.887,218,2.056,222,2.655,259,1.4,285,1.708,291,1.864,322,5.6,343,1.726,490,2.192,695,5.394,858,2.695,902,2.87,1164,3.48,1165,4.083,1232,5.394,1251,4.117,1253,3.899,1574,5.394,1897,3.741,1922,6.102,1923,7.315,1924,8.122,2069,4.305,3538,4.954,4586,7.908,4587,7.908,4588,4.954,4589,7.348,4590,5.518,4591,5.518,4592,7.348,4593,5.518,4594,5.518,4595,7.417,4596,5.518,4597,7.348,4598,7.348,4599,5.518,4600,5.518,4601,5.518,4602,8.261,4603,5.518,4604,8.261,4605,5.518,4606,5.518,4607,5.518,4608,5.518,4609,5.518,4610,6.597,4611,5.518,4612,5.518,4613,8.261,4614,5.518,4615,5.518,4616,5.518]],["title/classes/ValidationConfigException.html",[0,0.239,2818,3.667]],["body/classes/ValidationConfigException.html",[0,0.396,2,0.837,3,0.11,4,0.087,5,0.093,7,0.345,8,0.874,11,0.723,15,1.601,18,0.591,20,1.343,21,0.005,22,0.963,23,0.321,29,0.158,36,0.975,37,0.167,56,1.556,58,0.004,59,0.004,65,1.407,70,3.12,72,2.418,76,2,79,1.738,89,3.535,98,1.634,112,3.662,182,1.594,297,4.908,298,5.754,305,2.2,343,2.428,476,3.535,602,4.066,1125,4.468,1400,4.238,1431,5.484,1558,4.438,2032,4.583,2818,5.484,3037,7.27,3101,4.438,3322,6.429,4617,4.981,4618,7.556,4619,7.556,4620,7.556,4621,7.768,4622,5.998,4623,5.384,4624,5.384,4625,5.384,4626,4.981,4627,4.981,4628,6.445,4629,6.445,4630,6.445,4631,4.981,4632,4.981,4633,7.146,4634,4.981,4635,4.981,4636,6.445,4637,6.445]],["title/classes/ValidationException.html",[0,0.239,3037,3.84]],["body/classes/ValidationException.html",[0,0.398,2,0.845,3,0.111,4,0.088,5,0.094,7,0.349,8,0.879,11,0.73,15,1.616,18,0.593,20,1.356,21,0.005,22,0.972,23,0.323,29,0.159,36,0.985,37,0.168,56,1.566,58,0.004,59,0.004,65,1.412,70,3.15,72,2.429,76,2.009,79,1.749,98,1.645,112,3.697,182,1.6,297,4.92,298,5.771,305,2.221,343,2.443,476,3.551,602,4.105,1125,4.496,1400,4.278,1431,6.107,1558,4.481,2032,4.604,2818,4.278,3037,6.757,3101,4.481,3322,6.452,4617,5.028,4618,7.583,4619,7.583,4620,7.583,4621,7.783,4626,5.028,4627,5.028,4628,6.485,4629,6.485,4630,6.485,4631,5.028,4632,5.028,4633,7.178,4634,5.028,4635,5.028,4636,6.485,4637,6.485,4638,7.809,4639,6.055,4640,6.055]],["title/interfaces/ValidationRecursive.html",[38,1.421,2014,4.31]],["body/interfaces/ValidationRecursive.html",[0,0.263,3,0.105,4,0.083,5,0.088,9,1.607,10,1.947,18,0.371,21,0.005,29,0.171,30,2.271,36,0.93,37,0.111,38,1.566,39,2.353,40,0.648,53,1.717,55,0.556,56,1.791,58,0.003,59,0.003,60,2.349,61,3.876,65,0.884,76,1.329,80,1.265,127,3.824,140,1.957,143,4.348,158,2.035,182,1.565,200,2.843,213,1.469,256,1.628,259,1.45,285,1.748,297,5.011,343,2.353,355,2.718,403,3.144,436,2.349,476,2.349,490,2.988,667,4.215,745,5.869,774,4.04,790,3.292,807,4.911,858,2.097,1027,2.349,1154,4.461,1511,4.04,1632,3.606,1918,3.876,2011,6.754,2012,4.748,2013,6.754,2014,7.418,2017,4.748,2018,6.247,2020,5.133,2021,6.222,2023,5.869,2024,5.133,2025,5.133,2026,5.133,2027,5.133,2028,5.133,2029,5.133,2030,5.315,2031,5.133,2032,3.045,2033,5.133,2034,4.461,2035,5.133,2036,5.133,2037,4.748,2038,5.133,2039,4.748,2040,5.133,2041,5.133,2042,5.133,2043,5.133,2044,5.133,2045,4.748,2046,6.754,2047,4.748,2048,5.133,2049,4.748,2050,5.133,2051,4.748,2052,5.133,2053,6.754,2054,5.133,2055,5.133,2056,5.133,4641,5.717]],["title/classes/ValidationSchemaException.html",[0,0.239,3101,3.84]],["body/classes/ValidationSchemaException.html",[0,0.396,2,0.837,3,0.11,4,0.087,5,0.093,7,0.345,8,0.874,11,0.723,15,1.601,18,0.591,20,1.343,21,0.005,22,0.963,23,0.321,29,0.158,36,0.975,37,0.167,56,1.556,58,0.004,59,0.004,65,1.407,70,3.12,72,2.418,76,2,79,1.738,89,3.535,98,1.634,112,3.662,182,1.594,297,4.908,298,5.754,305,2.2,343,2.428,476,3.535,602,4.066,1125,4.468,1400,4.238,1431,5.484,1558,4.438,2032,4.583,2818,4.238,3037,7.27,3101,5.743,3322,6.429,4617,4.981,4618,7.556,4619,7.556,4620,7.556,4621,7.768,4623,5.384,4624,5.384,4625,5.384,4626,4.981,4627,4.981,4628,6.445,4629,6.445,4630,6.445,4631,4.981,4632,4.981,4633,7.146,4634,4.981,4635,4.981,4636,6.445,4637,6.445,4642,5.998]],["title/classes/VerifyTokenDto.html",[0,0.239,4643,4.659]],["body/classes/VerifyTokenDto.html",[0,0.408,2,1.037,3,0.137,4,0.108,5,0.115,7,0.428,8,0.998,18,0.482,21,0.005,23,0.308,29,0.181,32,1.419,37,0.144,40,0.643,55,0.627,58,0.004,59,0.004,131,1.208,280,2.663,288,2.428,290,2.736,291,1.885,292,2.951,617,5.218,987,6.671,990,5.498,4364,7.364,4372,7.961,4643,7.961,4644,8.867,4645,7.43,4646,7.43,4647,7.43]],["title/interfaces/WorkerResultInfoInterface.html",[38,1.421,4648,4.31]],["body/interfaces/WorkerResultInfoInterface.html",[3,0.139,4,0.109,5,0.117,18,0.49,21,0.005,29,0.154,37,0.174,38,2.451,39,2.361,40,0.731,41,2.549,58,0.004,59,0.004,60,3.101,61,5.117,222,2.727,229,2.237,277,3.269,619,4.267,1264,5.889,1265,5.586,1266,4.928,3349,5.117,4648,7.924,4649,8.036,4650,8.036,4651,7.548,4652,6.777,4653,6.269,4654,6.777]],["title/interfaces/WorkerResultInterface.html",[38,1.421,4653,4.31]],["body/interfaces/WorkerResultInterface.html",[3,0.129,4,0.102,5,0.109,7,0.405,8,0.965,11,1.162,21,0.005,23,0.421,29,0.143,37,0.166,38,2.349,39,2.199,40,0.745,41,2.744,58,0.004,59,0.004,60,2.888,222,3.481,229,2.855,277,4.173,371,3.298,619,3.352,1264,5.485,1265,5.203,1266,4.59,3349,6.533,4648,8.002,4649,6.312,4650,6.312,4652,6.312,4653,7.123,4654,8.651]],["title/classes/additionalFieldsPartDto.html",[0,0.239,2540,3.518]],["body/classes/additionalFieldsPartDto.html",[0,0.377,2,0.909,3,0.12,4,0.094,5,0.101,7,0.375,8,0.921,11,0.987,18,0.58,21,0.005,22,1.506,23,0.423,29,0.167,32,1.243,37,0.126,39,2.797,40,0.726,55,0.676,58,0.004,59,0.004,131,1.454,218,3.495,232,1.783,288,2.569,291,1.652,295,5.4,296,5.148,297,4.913,299,2.559,301,4.709,371,3.145,523,3.196,858,3,2133,8.028,2540,5.545,2544,5.779,4655,6.512,4656,6.512,4657,6.512,4658,6.512,4659,6.512]],["title/dependencies.html",[546,2.801,639,2.656]],["body/dependencies.html",[0,0.346,21,0.005,24,3.112,30,2.264,32,1.088,36,0.927,58,0.003,59,0.003,101,4.218,104,4.367,105,3.722,106,3.377,107,3.282,127,2.898,136,1.623,137,2.091,138,1.392,143,3.654,158,2.029,159,4.218,160,4.218,291,1.446,305,2.091,324,2.425,335,4.448,336,3.377,389,3.722,442,4.367,443,3.377,524,2.468,546,2.562,576,4.734,639,3.481,680,4.447,727,4.734,749,4.447,755,5.556,760,3.864,762,3.722,792,5.118,897,3.481,902,2.965,903,4.218,904,4.218,907,4.028,1011,3.864,1036,3.864,1089,4.218,1795,4.734,1798,4.734,1799,6.212,1804,4.734,1808,4.028,2030,4.028,2201,4.447,2814,3.864,2817,6.961,3095,5.118,3097,5.118,4016,5.118,4116,4.218,4310,5.118,4355,5.118,4453,5.118,4660,7.508,4661,7.508,4662,5.7,4663,5.7,4664,7.508,4665,7.508,4666,7.508,4667,5.7,4668,5.7,4669,5.7,4670,7.508,4671,5.7,4672,5.7,4673,5.7,4674,5.7,4675,5.7,4676,7.508,4677,5.7,4678,5.7,4679,5.7,4680,5.7,4681,5.7,4682,7.508,4683,5.7,4684,5.7,4685,5.7,4686,5.7,4687,5.7,4688,5.7,4689,5.7,4690,5.7,4691,5.7,4692,5.7,4693,5.7,4694,5.7,4695,5.7,4696,5.7,4697,5.7,4698,5.7,4699,5.7,4700,5.7,4701,5.7,4702,5.7,4703,8.922,4704,5.7,4705,5.7,4706,5.7,4707,5.7,4708,5.7,4709,5.7,4710,5.7,4711,5.7,4712,5.7,4713,5.7,4714,5.7,4715,6.74,4716,5.7,4717,5.7,4718,5.7,4719,5.7,4720,5.7,4721,5.7,4722,5.7,4723,5.7,4724,5.7,4725,5.7]],["title/miscellaneous/enumerations.html",[4726,3.393,4727,5.596]],["body/miscellaneous/enumerations.html",[5,0.085,7,0.315,21,0.005,40,0.397,41,1.558,58,0.003,59,0.003,266,3.708,270,3.452,353,3.065,449,4.953,603,3.34,643,5.162,650,3.865,651,3.865,782,4.911,845,4.048,858,3.923,909,4.048,910,5.022,911,4.048,912,4.048,913,3.571,914,4.048,957,3.865,1263,4.543,1308,4.911,1338,5.406,1400,3.865,1457,4.206,1465,4.77,1468,4.607,1556,3.45,1586,4.328,1707,6.087,1746,2.286,1885,5.699,1901,4.093,1969,5.406,2137,4.77,2291,4.328,2636,4.543,2640,4.543,2838,4.048,3237,4.048,3276,4.268,3278,5.699,3282,5.699,3359,5.406,3544,4.911,3545,4.911,3546,5.812,3547,4.543,3548,4.543,3549,4.543,3550,4.911,3551,6.559,3662,4.911,4489,6.559,4726,4.268,4727,4.911,4728,5.47,4729,8.778,4730,5.47,4731,8.778,4732,8.225,4733,5.47,4734,7.305,4735,5.47,4736,5.47,4737,7.305,4738,5.47,4739,5.47,4740,5.47,4741,5.47,4742,5.47,4743,5.47,4744,5.47,4745,5.47,4746,5.47,4747,7.305,4748,7.305,4749,7.305,4750,7.305,4751,7.305,4752,7.305,4753,7.305,4754,7.305,4755,7.305,4756,7.305,4757,5.47,4758,5.47,4759,5.47,4760,5.47,4761,5.47,4762,5.47,4763,5.47,4764,5.47,4765,5.47,4766,5.47,4767,5.47,4768,5.47,4769,5.47,4770,5.47,4771,3.708,4772,4.543,4773,4.911,4774,5.47,4775,4.911,4776,5.47,4777,5.47,4778,5.47,4779,5.47,4780,5.47,4781,5.47,4782,5.47,4783,5.47,4784,5.47,4785,5.47,4786,5.47,4787,5.47,4788,5.47,4789,5.47]],["title/index.html",[7,0.25,960,2.84,4790,3.905]],["body/index.html",[4,0.104,21,0.004,58,0.004,59,0.004,280,2.159,545,3.114,631,3.83,863,4.26,910,5.309,1014,4.145,1027,3.839,1028,4.145,1292,3.83,1314,4.232,1485,4.872,1489,4.391,1496,4.26,1517,4.058,1553,3.656,1707,5.321,1896,5.894,2488,4.695,2960,5.309,3022,6.783,3126,5.972,3237,6.434,4791,7.806,4792,7.191,4793,7.22,4794,6.456,4795,5.972,4796,5.972,4797,5.972,4798,5.972,4799,5.972,4800,6.143,4801,6.456,4802,6.456,4803,6.456,4804,6.456,4805,5.321,4806,6.456,4807,7.191,4808,7.191,4809,6.456,4810,8.391,4811,5.321,4812,6.456,4813,6.456,4814,6.456,4815,7.191,4816,6.456,4817,7.191,4818,7.191,4819,7.191]],["title/classes/inetOrgPerson.html",[0,0.239,2448,2.764]],["body/classes/inetOrgPerson.html",[0,0.173,2,0.524,3,0.069,4,0.054,5,0.058,7,0.216,8,0.63,11,1.227,18,0.645,21,0.005,23,0.433,29,0.151,37,0.108,40,0.778,55,0.703,56,1.122,58,0.003,59,0.003,65,0.58,116,1.401,125,2.298,126,1.041,131,1.615,132,4.639,135,4.704,136,1.068,138,0.916,174,3.338,182,0.657,232,2.646,285,2.141,291,0.951,299,3.217,301,4.269,302,3.183,305,2.052,306,1.788,343,1.173,366,3.256,695,3.652,780,3.115,781,3.367,988,3.652,989,3.748,1229,2.776,2073,4.841,2281,3.479,2448,2.979,2461,3.367,2479,3.367,2480,5.022,2481,3.367,2482,3.367,2792,4.218,3198,3.367,4820,3.751,4821,4.534,4822,5.218,4823,4.534,4824,4.534,4825,5.218,4826,4.534,4827,4.534,4828,4.534,4829,4.534,4830,4.534,4831,4.534,4832,4.534,4833,3.751,4834,3.751,4835,3.751,4836,3.751,4837,3.751,4838,3.751,4839,3.751,4840,3.751,4841,3.751,4842,3.751,4843,3.751,4844,3.751,4845,3.751,4846,3.751,4847,3.751,4848,3.751,4849,3.751,4850,3.751,4851,3.751,4852,3.751,4853,3.751,4854,3.751,4855,3.751,4856,2.926,4857,2.543,4858,3.751]],["title/classes/inetOrgPersonCreateDto.html",[0,0.239,4859,4.049]],["body/classes/inetOrgPersonCreateDto.html",[0,0.357,2,0.496,3,0.065,4,0.051,5,0.055,7,0.204,8,0.604,11,1.231,18,0.643,20,0.795,21,0.005,22,0.57,23,0.414,29,0.132,32,0.678,37,0.125,40,0.757,55,0.702,56,1.076,58,0.002,59,0.002,65,0.83,79,1.202,98,0.748,110,1.566,116,2.395,131,1.601,174,3.358,257,1.365,262,1.303,285,1.248,288,2.737,290,3.07,291,0.901,302,3.303,355,2.338,366,3.511,468,3.15,490,1.41,518,1.538,521,3.639,523,3.922,524,1.538,529,3.447,530,2.325,619,3.693,988,3.939,989,4.042,2073,4.71,2281,3.752,2557,2.239,2792,4.549,3628,2.77,4821,4.89,4822,5.628,4823,4.89,4824,4.89,4825,5.628,4826,4.89,4827,4.89,4828,4.89,4829,4.89,4830,4.89,4831,4.89,4832,4.89,4856,2.77,4857,2.407,4859,5.049,4860,2.949,4861,4.819,4862,6.476,4863,3.551,4864,3.188,4865,3.188,4866,3.551,4867,8.16,4868,8.402,4869,3.551,4870,3.188,4871,3.188,4872,3.551,4873,3.551,4874,3.551,4875,3.551,4876,3.551,4877,3.551,4878,4.458,4879,3.188,4880,3.551,4881,3.188,4882,3.551,4883,3.551,4884,3.551,4885,3.551,4886,3.551,4887,3.551,4888,3.551,4889,3.551,4890,4.458,4891,3.551,4892,2.949,4893,2.949,4894,2.949,4895,2.949,4896,2.949,4897,2.949,4898,2.949,4899,2.949,4900,2.949,4901,2.949,4902,2.949,4903,2.949,4904,2.949,4905,2.949,4906,2.949,4907,2.949,4908,2.949,4909,2.949,4910,2.949,4911,2.949,4912,2.949,4913,2.949,4914,2.949,4915,2.77,4916,2.949]],["title/classes/inetOrgPersonDto.html",[0,0.239,2557,3.273]],["body/classes/inetOrgPersonDto.html",[0,0.351,2,0.478,3,0.063,4,0.05,5,0.053,7,0.197,8,0.588,11,1.226,18,0.639,20,0.766,21,0.005,22,0.55,23,0.412,29,0.129,32,0.654,37,0.123,40,0.755,55,0.7,56,1.047,58,0.002,59,0.002,65,0.979,79,1.169,89,4.045,98,0.721,110,1.51,116,2.378,131,1.592,174,3.337,257,1.316,262,1.256,285,1.213,288,2.724,290,3.054,291,0.868,302,3.28,355,2.286,366,3.446,468,3.08,490,1.36,518,1.482,521,3.539,523,3.903,524,1.482,529,3.371,530,2.261,619,3.633,988,3.865,989,3.966,2073,4.622,2281,3.682,2557,3.292,2792,4.464,3628,2.67,4821,4.799,4822,5.523,4823,4.799,4824,4.799,4825,5.523,4826,4.799,4827,4.799,4828,4.799,4829,4.799,4830,4.799,4831,4.799,4832,4.799,4856,2.67,4857,2.32,4859,7.793,4860,2.842,4861,4.687,4862,6.355,4864,3.073,4865,3.073,4867,8.082,4868,8.334,4870,3.073,4871,3.073,4878,4.335,4879,3.073,4881,3.073,4890,4.335,4892,2.842,4893,2.842,4894,2.842,4895,2.842,4896,2.842,4897,2.842,4898,2.842,4899,2.842,4900,2.842,4901,2.842,4902,2.842,4903,2.842,4904,2.842,4905,2.842,4906,2.842,4907,2.842,4908,2.842,4909,2.842,4910,2.842,4911,2.842,4912,2.842,4913,2.842,4914,2.842,4915,2.67,4916,2.842,4917,3.423,4918,3.423,4919,3.423,4920,3.423,4921,3.423,4922,3.423,4923,3.423,4924,3.423,4925,3.423,4926,3.423,4927,3.423,4928,3.423,4929,3.423,4930,3.423,4931,3.423,4932,3.423,4933,3.423,4934,3.423,4935,3.423]],["title/classes/inetOrgPersonUpdateDto.html",[0,0.239,4915,4.049]],["body/classes/inetOrgPersonUpdateDto.html",[0,0.402,2,0.67,3,0.088,4,0.07,5,0.074,21,0.005,23,0.277,29,0.157,32,0.916,37,0.149,40,0.751,55,0.685,56,1.34,58,0.003,59,0.003,65,1.189,110,2.117,116,2.521,174,3.515,257,1.845,262,1.761,285,1.553,288,2.836,290,3.187,291,1.217,302,3.477,355,2.777,366,3.252,468,2.336,490,1.906,518,2.078,521,4.53,523,4.058,524,2.078,529,4.094,530,2.893,619,3.185,988,3.648,989,3.744,2073,4.362,2281,3.475,2557,3.027,2792,4.214,3628,3.744,4821,4.53,4822,5.213,4823,4.53,4824,4.53,4825,5.213,4826,4.53,4827,4.53,4828,4.53,4829,4.53,4830,4.53,4831,4.53,4832,4.53,4856,3.744,4857,3.254,4859,5.213,4860,3.985,4878,3.985,4890,3.985,4892,3.985,4893,3.985,4894,3.985,4895,3.985,4896,3.985,4897,3.985,4898,3.985,4899,3.985,4900,3.985,4901,3.985,4902,3.985,4903,3.985,4904,3.985,4905,3.985,4906,3.985,4907,3.985,4908,3.985,4909,3.985,4910,3.985,4911,3.985,4912,3.985,4913,3.985,4914,3.985,4915,5.213,4916,5.549]],["title/license.html",[960,2.84,4790,3.905,4936,3.612]],["body/license.html",[0,0.051,4,0.131,5,0.031,18,0.071,21,0.002,23,0.083,24,0.601,29,0.022,38,1.319,39,0.345,41,0.57,44,0.43,53,1.446,55,0.535,56,0.221,58,0.001,59,0.001,60,1.131,72,0.31,79,0.247,120,1.804,125,1.131,158,0.712,163,3.212,177,2.567,201,1.186,209,0.505,218,2.869,222,0.398,229,0.816,263,1.186,270,1.442,277,0.477,286,0.747,292,2.66,302,1.17,324,0.468,346,0.505,368,0.43,389,1.307,394,3.266,404,0.719,405,1.415,409,0.477,442,4.291,530,2.508,557,0.505,613,2.778,637,3.659,654,0.747,655,1.307,657,5.28,659,4.94,661,3.529,662,5.072,664,0.634,668,3.265,676,2.147,678,2.286,698,2.136,775,1.093,791,0.695,802,0.915,825,1.357,842,3.067,846,0.747,862,0.815,864,5.698,877,0.695,878,0.815,879,2.037,881,2.393,885,1.945,893,0.747,935,1.482,942,0.815,952,1.263,976,2.567,981,2.037,988,0.601,1126,0.815,1135,2.471,1164,0.695,1203,0.815,1217,1.797,1228,1.797,1235,0.747,1240,5.92,1245,0.719,1254,2.286,1258,0.778,1259,4.653,1267,2.286,1276,0.573,1303,0.859,1309,0.778,1391,2.471,1476,1.663,1492,5.31,1522,0.915,1559,4.301,1560,0.778,1586,1.631,1622,0.747,1629,0.915,1735,2.147,1746,0.46,1811,1.415,1848,1.797,1910,2.643,1912,1.663,2023,0.859,2092,0.617,2275,4.103,2278,1.585,2296,0.915,2367,2.665,2437,1.797,2637,3.567,2674,0.778,2726,0.915,2822,2.393,2828,0.859,2836,2.643,2856,3.953,2866,3.656,2871,2.813,2873,7.098,2916,0.989,2931,3.041,2962,0.815,3049,0.915,3062,0.989,3075,2.471,3088,0.989,3089,3.656,3116,4.072,3135,1.797,3150,1.663,3189,1.562,3208,4.323,3218,1.797,3221,0.989,3298,3.067,3546,2.778,3548,0.915,3549,1.663,3574,0.915,3638,6.012,3649,0.989,3655,0.989,3657,2.471,3670,0.989,3671,3.953,3688,0.915,3708,4.65,3711,0.915,3721,1.663,3805,0.915,3807,4.65,3825,2.471,3826,1.797,3827,1.797,3835,3.529,3847,1.797,3858,1.797,3865,3.041,3868,1.797,3932,0.989,4049,3.953,4070,3.953,4092,2.471,4249,0.989,4312,0.989,4320,3.041,4329,0.989,4330,0.989,4359,0.989,4364,4.301,4463,1.797,4772,0.915,4775,0.989,4805,0.815,4936,8.391,4937,7.465,4938,7.906,4939,1.101,4940,1.101,4941,2.753,4942,8.461,4943,7.587,4944,4.403,4945,1.101,4946,1.101,4947,2.002,4948,3.931,4949,8.088,4950,3.931,4951,2.753,4952,2.753,4953,1.101,4954,1.101,4955,2.002,4956,6.287,4957,4.403,4958,1.101,4959,4.403,4960,1.101,4961,1.101,4962,5.179,4963,2.002,4964,1.101,4965,1.101,4966,1.101,4967,6.012,4968,9.261,4969,6.697,4970,2.753,4971,2.753,4972,5.502,4973,2.002,4974,10.044,4975,2.002,4976,4.815,4977,4.815,4978,6.697,4979,4.403,4980,1.101,4981,1.101,4982,3.387,4983,4.65,4984,2.002,4985,5.179,4986,2.753,4987,1.101,4988,2.002,4989,1.101,4990,2.753,4991,7.465,4992,3.387,4993,1.101,4994,2.002,4995,3.387,4996,3.387,4997,2.002,4998,6.287,4999,2.002,5000,2.002,5001,3.387,5002,4.815,5003,1.101,5004,4.403,5005,8.584,5006,2.753,5007,4.815,5008,1.101,5009,1.101,5010,5.179,5011,2.002,5012,6.052,5013,5.792,5014,3.931,5015,2.002,5016,1.101,5017,1.101,5018,6.876,5019,2.002,5020,1.101,5021,1.101,5022,6.502,5023,2.002,5024,2.753,5025,1.101,5026,1.101,5027,2.002,5028,1.101,5029,3.387,5030,1.101,5031,1.101,5032,1.101,5033,1.101,5034,1.101,5035,1.101,5036,2.002,5037,1.101,5038,1.101,5039,2.002,5040,1.101,5041,2.753,5042,2.002,5043,1.101,5044,1.101,5045,2.002,5046,2.002,5047,6.697,5048,1.101,5049,2.002,5050,2.002,5051,1.101,5052,1.101,5053,2.002,5054,2.753,5055,2.002,5056,1.101,5057,1.101,5058,4.403,5059,1.101,5060,1.101,5061,3.931,5062,1.101,5063,1.101,5064,1.101,5065,1.101,5066,2.002,5067,2.753,5068,1.101,5069,1.101,5070,1.101,5071,6.012,5072,3.931,5073,3.656,5074,2.753,5075,1.101,5076,2.753,5077,7.334,5078,2.002,5079,1.101,5080,1.101,5081,1.101,5082,2.753,5083,9.13,5084,1.101,5085,1.101,5086,2.002,5087,2.002,5088,1.101,5089,5.792,5090,1.101,5091,3.387,5092,5.179,5093,1.101,5094,2.753,5095,2.002,5096,9.018,5097,2.753,5098,5.502,5099,3.387,5100,2.002,5101,1.101,5102,2.002,5103,2.753,5104,5.502,5105,5.792,5106,3.387,5107,1.101,5108,2.002,5109,2.002,5110,3.387,5111,3.387,5112,1.101,5113,2.753,5114,1.101,5115,8.171,5116,2.002,5117,1.101,5118,5.179,5119,1.101,5120,2.753,5121,5.179,5122,1.101,5123,6.876,5124,3.387,5125,2.002,5126,6.052,5127,4.403,5128,1.101,5129,1.101,5130,1.101,5131,1.101,5132,5.179,5133,1.101,5134,2.002,5135,1.101,5136,1.101,5137,2.002,5138,2.753,5139,1.101,5140,2.753,5141,1.101,5142,1.101,5143,1.101,5144,1.101,5145,2.471,5146,2.753,5147,1.101,5148,0.989,5149,5.792,5150,1.101,5151,2.002,5152,1.101,5153,1.101,5154,2.753,5155,2.753,5156,4.403,5157,2.753,5158,2.753,5159,1.101,5160,1.101,5161,3.931,5162,1.101,5163,1.101,5164,2.002,5165,2.753,5166,1.101,5167,1.101,5168,1.101,5169,1.101,5170,0.989,5171,2.002,5172,1.101,5173,0.989,5174,2.002,5175,1.101,5176,1.101,5177,2.002,5178,2.002,5179,1.101,5180,1.101,5181,1.101,5182,2.002,5183,2.753,5184,3.931,5185,1.101,5186,1.663,5187,1.101,5188,1.101,5189,4.403,5190,1.101,5191,3.387,5192,5.792,5193,4.815,5194,3.387,5195,1.101,5196,3.931,5197,2.002,5198,1.101,5199,1.101,5200,0.989,5201,1.101,5202,1.101,5203,1.101,5204,2.753,5205,2.753,5206,1.101,5207,2.002,5208,2.002,5209,2.002,5210,1.101,5211,6.502,5212,2.002,5213,1.101,5214,1.101,5215,1.101,5216,1.101,5217,1.101,5218,1.101,5219,2.753,5220,1.101,5221,6.173,5222,1.101,5223,1.101,5224,1.101,5225,3.931,5226,3.931,5227,1.101,5228,1.101,5229,2.753,5230,1.101,5231,1.101,5232,3.387,5233,0.989,5234,1.101,5235,1.101,5236,1.101,5237,0.915,5238,1.101,5239,1.101,5240,2.002,5241,2.002,5242,1.101,5243,2.753,5244,1.101,5245,1.101,5246,2.002,5247,1.101,5248,1.101,5249,1.101,5250,1.101,5251,2.002,5252,2.002,5253,2.002,5254,5.502,5255,2.002,5256,4.403,5257,1.101,5258,1.101,5259,2.002,5260,2.753,5261,3.387,5262,3.387,5263,3.387,5264,1.101,5265,3.931,5266,3.931,5267,2.471,5268,1.101,5269,2.002,5270,2.002,5271,3.931,5272,2.002,5273,3.387,5274,3.387,5275,2.002,5276,2.753,5277,3.931,5278,1.101,5279,1.101,5280,1.101,5281,2.753,5282,2.002,5283,2.002,5284,1.101,5285,1.101,5286,1.101,5287,1.101,5288,2.002,5289,1.101,5290,1.101,5291,2.753,5292,1.101,5293,1.101,5294,2.002,5295,2.753,5296,1.101,5297,2.002,5298,1.101,5299,1.101,5300,2.002,5301,2.002,5302,4.403,5303,7.7,5304,2.753,5305,2.002,5306,2.002,5307,2.002,5308,2.002,5309,3.387,5310,2.002,5311,1.101,5312,1.101,5313,1.101,5314,1.101,5315,4.815,5316,4.403,5317,2.002,5318,1.101,5319,1.101,5320,1.101,5321,2.002,5322,1.101,5323,2.002,5324,1.101,5325,3.529,5326,5.179,5327,3.387,5328,1.101,5329,6.052,5330,1.101,5331,1.101,5332,1.101,5333,1.101,5334,1.101,5335,1.101,5336,1.101,5337,1.101,5338,2.753,5339,3.931,5340,3.387,5341,2.002,5342,1.101,5343,1.101,5344,2.002,5345,1.101,5346,1.101,5347,1.101,5348,2.002,5349,1.101,5350,1.101,5351,2.753,5352,1.101,5353,2.002,5354,2.002,5355,1.101,5356,1.101,5357,1.101,5358,1.101,5359,1.101,5360,1.101,5361,1.101,5362,2.002,5363,1.101,5364,2.002,5365,1.101,5366,1.101,5367,1.101,5368,1.101,5369,1.101,5370,1.101,5371,1.101,5372,1.101,5373,3.931,5374,1.101,5375,1.101,5376,3.387,5377,1.101,5378,1.101,5379,1.101,5380,1.101,5381,1.101,5382,1.101,5383,1.101,5384,4.815,5385,2.753,5386,1.101,5387,3.387,5388,1.101,5389,1.101,5390,2.753,5391,1.101,5392,1.101,5393,2.753,5394,1.101,5395,1.101,5396,1.101,5397,1.101,5398,1.101,5399,1.101,5400,1.101,5401,2.002,5402,1.101,5403,1.101,5404,2.002,5405,1.797,5406,1.101,5407,1.101,5408,2.753,5409,1.101,5410,2.753,5411,1.101,5412,2.002,5413,1.101,5414,2.002,5415,1.101,5416,2.753,5417,4.815,5418,1.101,5419,1.797,5420,1.101,5421,1.101,5422,1.101,5423,1.101,5424,1.101,5425,2.002,5426,1.101,5427,2.002,5428,3.387,5429,1.101,5430,3.931,5431,1.101,5432,1.101,5433,1.101,5434,1.101,5435,1.101,5436,2.002,5437,2.002,5438,2.002,5439,2.753,5440,2.002,5441,2.002,5442,1.101,5443,2.753,5444,1.101,5445,2.002,5446,1.101,5447,2.002,5448,1.101,5449,2.753,5450,2.002,5451,1.101,5452,1.101,5453,2.002,5454,7.906,5455,2.002,5456,1.101,5457,3.931,5458,5.792,5459,2.753,5460,1.101,5461,1.101,5462,1.101,5463,3.387,5464,1.101,5465,2.753,5466,1.101,5467,1.101,5468,1.101,5469,1.101,5470,1.101,5471,1.101,5472,1.101,5473,3.387,5474,2.002,5475,1.101,5476,1.101,5477,2.753,5478,1.101,5479,2.002,5480,2.753,5481,0.915,5482,2.002,5483,1.101,5484,1.101,5485,1.101,5486,1.101,5487,2.002,5488,2.753,5489,1.101,5490,1.101,5491,2.002,5492,1.101,5493,1.101,5494,1.101,5495,1.101,5496,2.753,5497,2.002,5498,1.101,5499,3.387,5500,1.101,5501,2.753,5502,1.101,5503,1.101,5504,1.101,5505,2.002,5506,1.101,5507,1.101,5508,1.101,5509,2.753,5510,2.002,5511,2.002,5512,1.101,5513,4.815,5514,2.002,5515,2.753,5516,3.387,5517,1.101,5518,1.101,5519,2.002,5520,1.101,5521,2.753,5522,1.101,5523,2.002,5524,1.101,5525,1.101,5526,1.101,5527,1.101,5528,1.101,5529,2.753,5530,2.002,5531,1.101,5532,2.002,5533,1.101,5534,1.101,5535,2.002,5536,2.002,5537,1.101,5538,0.989,5539,2.002,5540,1.101,5541,1.101,5542,1.101,5543,1.101,5544,1.101,5545,2.753,5546,1.101,5547,1.101,5548,1.101,5549,1.101,5550,1.101,5551,2.753,5552,1.101,5553,1.101,5554,1.101,5555,1.101,5556,2.002,5557,1.101,5558,1.101,5559,1.101,5560,1.101,5561,1.101,5562,1.101,5563,1.101,5564,1.101,5565,1.101,5566,1.101,5567,1.101,5568,1.101,5569,1.101,5570,1.101,5571,3.387,5572,1.101,5573,2.002,5574,1.101,5575,1.101,5576,1.101,5577,1.101,5578,1.101,5579,1.101,5580,1.101,5581,1.101,5582,1.101,5583,1.101,5584,2.753,5585,1.101,5586,1.101,5587,1.101,5588,1.101,5589,1.101,5590,2.002,5591,1.101,5592,1.101,5593,1.101,5594,1.101,5595,1.101,5596,1.101,5597,1.101,5598,2.002,5599,2.002,5600,3.931,5601,2.753,5602,1.101,5603,2.002,5604,1.101,5605,1.101,5606,1.101,5607,1.101,5608,2.753,5609,2.002,5610,1.101,5611,2.002,5612,2.002,5613,2.002,5614,1.101,5615,1.101,5616,1.101,5617,1.101,5618,1.101,5619,1.101,5620,1.101,5621,1.101,5622,1.101,5623,2.753,5624,1.101,5625,1.101,5626,1.101,5627,1.101,5628,1.101,5629,1.101,5630,1.101,5631,1.101,5632,1.101,5633,1.101,5634,1.101,5635,2.002,5636,1.101,5637,1.101,5638,1.101,5639,1.101,5640,1.101,5641,1.101,5642,1.101,5643,1.101,5644,1.101,5645,1.101,5646,1.101,5647,1.101,5648,1.101,5649,1.101,5650,1.101,5651,1.101,5652,1.101,5653,1.101,5654,2.753,5655,2.002,5656,1.101,5657,1.101,5658,1.101,5659,1.101,5660,1.101,5661,1.101,5662,2.002,5663,1.101,5664,1.101,5665,1.101,5666,1.101,5667,1.101,5668,1.101,5669,1.101,5670,1.101,5671,1.101,5672,1.101,5673,1.101,5674,1.101,5675,1.101,5676,1.101,5677,1.101,5678,1.101,5679,1.101,5680,1.101,5681,1.101,5682,1.101,5683,1.101,5684,1.101,5685,1.101,5686,1.101,5687,1.101,5688,1.101]],["title/modules.html",[545,3.053]],["body/modules.html",[21,0.004,58,0.004,59,0.004,544,4.306,545,2.957,716,5.327,720,5.053,721,5.053,722,5.053,723,4.629,1073,4.825,1078,4.629,1402,4.458,1407,4.17,1408,4.825,1409,4.825,1761,5.327,1980,4.825,1981,5.053,2397,5.327,2794,5.053,2934,4.825,3613,5.053,3963,5.053,5267,9.578,5689,10.668,5690,10.668,5691,10.668]],["title/overview.html",[5692,6.33]],["body/overview.html",[2,0.55,21,0.005,58,0.003,59,0.003,60,1.618,141,1.705,178,1.215,339,5.185,401,1.232,544,5.879,545,1.705,546,1.77,547,1.84,548,1.84,549,1.675,550,1.804,551,1.84,552,3.535,553,3.535,554,3.535,555,2.709,556,1.675,557,1.804,640,4.494,716,7.604,717,3.535,718,3.535,719,3.535,720,7.496,721,6.996,722,5.989,723,6.702,724,5.37,752,6.185,770,3.072,1034,5.345,1073,6.939,1074,3.535,1075,3.535,1076,3.535,1077,3.535,1078,6.089,1079,5.37,1080,5.37,1109,5.52,1272,5.934,1402,6.455,1403,3.535,1404,3.535,1405,3.535,1406,3.535,1407,6.185,1408,6.185,1409,6.185,1443,5.147,1455,6.185,1461,6.477,1474,5.093,1761,7.463,1762,3.535,1973,5.093,1977,3.535,1978,3.535,1979,3.535,1980,6.587,1981,5.989,2205,5.715,2208,6.185,2265,3.535,2266,3.535,2267,3.535,2315,5.093,2397,5.923,2398,3.535,2399,3.535,2523,5.618,2625,5.321,2738,5.716,2772,6.346,2794,5.989,2795,3.535,2796,3.535,2797,3.535,2920,3.535,2922,3.535,2923,3.535,2934,5.718,3043,3.535,3045,3.535,3376,6.477,3410,3.535,3411,3.535,3412,3.535,3516,3.535,3517,3.535,3518,3.535,3584,6.829,3613,6.647,3614,3.535,3615,3.535,3616,3.535,3901,5.093,3904,3.535,3905,3.535,3956,5.093,3960,3.535,3961,3.535,3962,3.535,3963,6.996,3989,3.535,3990,3.535,3991,5.37,4263,3.535,4264,3.535,4417,5.093,4420,3.535,4421,3.535,4422,3.535,4509,6.477,4512,3.535,4513,3.535,4514,3.535,5237,3.27,5692,3.535,5693,3.938,5694,3.938,5695,3.938]],["title/properties.html",[8,0.701,639,2.656]],["body/properties.html",[4,0.117,8,0.911,21,0.005,58,0.004,59,0.004,280,2.431,657,5.286,1896,5.489,3022,6.316,4793,6.723,4794,7.268,4795,6.723,4936,6.723,5696,8.096]],["title/miscellaneous/typealiases.html",[4726,3.393,5697,6.233]],["body/miscellaneous/typealiases.html",[7,0.387,21,0.005,22,1.079,23,0.393,40,0.487,41,1.914,58,0.004,59,0.004,125,2.76,128,2.428,174,2.321,218,2.503,224,3.765,283,2.808,301,3.869,307,3.897,371,3.488,462,5.093,602,5.655,619,3.203,1004,6.172,1230,5.58,1231,6.927,1232,4.387,1239,5.58,1242,6.927,1244,5.58,1251,4.674,1258,4.748,1259,4.973,1260,5.58,1746,2.808,2442,6.033,2483,7.489,3346,6.033,3365,7.489,3446,6.033,3453,7.489,3554,6.033,3559,7.489,3624,6.033,3632,7.489,3882,6.033,3890,7.489,4410,6.033,4413,7.489,4502,6.033,4504,7.489,4587,6.033,4588,7.489,4610,7.489,4621,6.507,4726,5.242,5698,6.72,5699,6.72,5700,6.72,5701,6.72,5702,6.72,5703,6.72,5704,6.72,5705,6.72,5706,6.72,5707,8.341,5708,6.72,5709,6.72,5710,8.341,5711,6.72,5712,6.72,5713,6.72,5714,6.72,5715,8.341,5716,8.341,5717,6.72,5718,6.72,5719,6.72,5720,6.72,5721,6.72,5722,6.72]],["title/additional-documentation/cahier-des-charges.html",[1517,1.373,2637,1.75,5723,1.946,5724,2.95,5725,2.95]],["body/additional-documentation/cahier-des-charges.html",[4,0.11,21,0.005,58,0.003,59,0.003,60,2.397,73,3.955,101,4.317,104,2.065,545,1.719,631,2.115,660,2.806,863,2.352,876,2.504,913,4.515,1006,3.565,1008,4.122,1011,3.955,1014,4.292,1021,2.726,1027,4.305,1028,4.515,1029,3.791,1048,5.238,1266,2.592,1280,3.955,1292,4.061,1312,4.812,1314,4.935,1322,3.098,1324,3.565,1485,5.045,1487,2.692,1490,2.352,1492,4.655,1517,4.184,1553,4.962,1554,2.692,1560,2.806,1579,2.592,1587,4.326,1614,3.297,1615,4.317,1653,4.523,1705,2.806,1718,4.515,1753,3.297,1896,4.689,2126,2.504,2488,2.592,2542,3.359,2547,2.592,2573,2.692,2591,3.098,2594,3.297,2599,2.938,2620,2.806,2648,4.122,2758,2.938,2765,6.624,2897,3.098,2960,4.223,2961,4.122,3022,5.396,3237,2.938,3651,5.302,3711,3.297,4116,5.118,4340,3.297,4771,3.955,4791,5.238,4793,7.051,4795,3.297,4797,3.297,4798,3.297,4799,3.297,4800,6.201,4802,3.565,4803,3.565,4804,3.565,4805,2.938,4806,3.565,4809,3.565,4810,7.291,4811,2.938,4812,3.565,4813,3.565,4814,6.844,4816,6.209,4967,3.565,5148,5.238,5173,6.209,5186,4.845,5325,3.565,5538,3.565,5724,3.565,5725,3.565,5726,3.971,5727,3.971,5728,3.971,5729,3.565,5730,4.552,5731,6.494,5732,3.971,5733,3.971,5734,5.834,5735,5.834,5736,3.297,5737,3.971,5738,6.283,5739,5.834,5740,3.971,5741,3.565,5742,3.971,5743,3.971,5744,5.834,5745,3.297,5746,3.297,5747,3.971,5748,4.317,5749,5.743,5750,3.971,5751,3.971,5752,3.297,5753,3.971,5754,3.971,5755,3.971,5756,3.565,5757,3.971,5758,3.565,5759,3.971,5760,3.971,5761,3.565,5762,3.971,5763,3.565,5764,3.971,5765,3.971,5766,3.971,5767,3.565,5768,3.971,5769,3.971,5770,3.971,5771,3.971,5772,3.971,5773,3.971,5774,3.971,5775,2.938,5776,3.971,5777,3.971,5778,3.971,5779,5.238,5780,3.971,5781,3.971,5782,3.971,5783,3.971,5784,3.971,5785,3.565,5786,3.971,5787,3.971,5788,3.971,5789,3.971,5790,3.971,5791,3.971,5792,6.33,5793,7.288,5794,3.971,5795,3.971,5796,3.971,5797,3.971,5798,3.565,5799,3.971,5800,3.971,5801,3.971,5802,3.971,5803,3.971,5804,7.051,5805,3.565,5806,3.565,5807,3.971,5808,5.834,5809,3.971,5810,3.971,5811,3.971,5812,3.971,5813,3.565,5814,5.834,5815,5.834,5816,5.238,5817,3.565,5818,3.297,5819,3.971,5820,6.33,5821,7.623,5822,3.971,5823,3.971,5824,3.971,5825,3.565,5826,3.971,5827,3.971,5828,3.971,5829,3.971,5830,3.971,5831,3.971,5832,3.971,5833,3.971,5834,3.971,5835,3.971,5836,3.971,5837,3.971,5838,3.971,5839,3.297,5840,3.971,5841,3.297,5842,3.971,5843,3.098,5844,3.971,5845,3.971,5846,3.971,5847,3.565,5848,3.971,5849,3.971,5850,3.971,5851,3.971,5852,3.971,5853,3.971,5854,3.971,5855,3.971,5856,3.565,5857,3.971,5858,3.971,5859,3.971,5860,3.971,5861,3.971,5862,3.971,5863,3.971,5864,3.971]],["title/additional-documentation/filtres-api.html",[631,1.994,2593,2.77,2637,1.994,5723,2.217]],["body/additional-documentation/filtres-api.html",[21,0.005,41,2.797,58,0.004,59,0.004,143,3.624,225,4.171,270,2.731,280,2.236,292,3.526,631,3.966,778,5.509,826,4.065,1203,5.509,1232,4.861,1938,5.808,2593,5.509,2665,5.808,3009,9.011,5865,7.445,5866,7.445,5867,7.445,5868,7.445,5869,7.445,5870,7.445,5871,7.445,5872,6.684,5873,7.445,5874,7.445,5875,7.445,5876,7.445,5877,7.445,5878,7.445,5879,7.445]],["title/additional-documentation/documentation-technique.html",[2637,1.994,2960,2.286,5723,2.217,5843,2.92]],["body/additional-documentation/documentation-technique.html",[21,0.004,58,0.004,59,0.004,913,5.343,1517,3.42,5820,6.796,5880,6.796,5881,6.796,5882,8.183,5883,7.347,5884,6.796,5885,7.347]],["title/additional-documentation/documentation-technique/demon.html",[2637,2.317,5723,2.576,5886,4.349]],["body/additional-documentation/documentation-technique/demon.html",[21,0.004,58,0.004,59,0.004,910,5.736,913,6.133,1587,4.368,2959,6.81,5186,6.81,5887,8.201]],["title/additional-documentation/documentation-technique/queue-processor-service.html",[81,2.728,775,1.794,2637,1.75,5723,1.946,5888,3.285]],["body/additional-documentation/documentation-technique/queue-processor-service.html",[0,0.229,2,0.694,5,0.145,9,2.371,15,1.827,21,0.005,29,0.18,36,0.808,37,0.096,53,2.055,55,0.329,56,0.996,58,0.003,59,0.003,63,5.684,65,0.768,70,3.56,71,7.944,73,6.896,76,1.961,80,1.099,81,7.348,85,5.584,101,5.794,104,3.56,106,4.055,107,3.94,117,6.145,120,3.646,121,4.461,140,1.781,182,0.87,259,1.736,280,1.492,292,2.719,775,4.275,776,3.133,863,2.944,871,2.944,1014,3.263,1021,2.321,1027,4.29,1028,4.467,1029,3.893,1140,5.065,1292,4.713,1312,4.4,1314,4.307,1485,2.784,1494,3.369,1496,4.055,1517,3.272,1553,4.925,1554,4.64,1573,3.511,1577,3.369,1587,2.647,1653,4.494,1809,4.126,2030,3.511,2547,4.469,2764,4.461,2822,3.511,3181,5.532,3651,5.777,4087,6.502,4198,4.461,4771,3.369,4796,4.126,4811,3.677,5730,3.876,5736,4.126,5738,3.677,5748,3.677,5775,5.065,5779,4.461,5792,4.126,5883,6.145,5889,3.876,5890,4.126,5891,6.844,5892,4.461,5893,5.684,5894,8.436,5895,9.547,5896,4.461,5897,4.461,5898,4.969,5899,6.844,5900,6.844,5901,6.844,5902,4.969,5903,6.145,5904,4.461,5905,4.969,5906,4.461,5907,4.969,5908,4.126,5909,4.969,5910,4.969,5911,4.969,5912,4.461,5913,4.969,5914,4.969,5915,4.969,5916,4.461,5917,3.876,5918,4.461,5919,4.461,5920,5.34,5921,4.969,5922,4.969,5923,4.969,5924,4.969,5925,6.145,5926,3.876,5927,4.969,5928,3.511,5929,4.969,5930,4.969,5931,4.969,5932,4.461,5933,4.969,5934,4.969,5935,4.969,5936,4.969,5937,4.969,5938,4.969,5939,4.969,5940,4.969,5941,4.969,5942,4.969]],["title/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[1314,1.074,1503,1.633,1517,1.536,2637,1.175,5723,1.307,5748,1.633,5943,2.206,5944,2.206]],["body/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[21,0.005,29,0.134,37,0.083,45,0.963,53,1.706,56,1.502,58,0.001,59,0.002,80,1.706,104,3.763,110,3.304,120,1.031,125,1.353,126,2.286,128,0.7,138,1.387,178,1.906,182,1.468,198,1.031,199,2.725,200,2.52,202,3.468,203,2.623,204,2.473,206,2.576,209,3.624,221,1.182,222,2.921,224,2.407,225,2.84,231,2.623,235,3.142,236,1.182,259,1.835,270,1.859,276,0.769,281,2.46,285,1.178,292,3.273,298,1.182,301,1.896,355,2.787,366,1.603,368,2.22,399,0.938,401,0.606,449,1.313,490,1.308,550,0.887,563,0.963,613,3.035,775,4.708,825,2.232,842,1.511,858,1.208,877,1.221,988,1.798,989,1.845,1013,1.511,1014,4.206,1021,3.499,1027,4.073,1028,4.386,1029,2.825,1232,3.309,1251,1.085,1292,3.853,1293,1.433,1312,4.853,1314,4.247,1322,1.511,1446,1.376,1457,1.115,1458,1.608,1485,4.197,1489,2.011,1490,1.951,1494,2.232,1496,4.437,1503,5.983,1511,1.368,1517,4.066,1553,4.737,1569,1.511,1573,3.035,1574,1.264,1579,3.309,1587,3.291,1639,2.437,1653,4.531,1660,1.511,1712,1.608,1727,3.179,1748,1.433,1811,1.368,1830,1.608,1848,1.264,1901,1.085,1904,1.603,1925,1.313,2065,1.511,2073,2.15,2084,1.368,2103,2.437,2126,1.221,2281,1.713,2443,2.473,2448,2.699,2484,2.956,2494,2.735,2557,2.077,2578,2.011,2579,2.232,2591,1.511,2592,5.1,2618,1.433,2623,1.433,2625,1.147,2643,1.608,2649,4.033,2676,1.738,2757,4.431,2758,1.433,2792,2.077,2934,1.368,2960,3.468,2962,1.433,2996,5.141,3125,2.437,3126,1.608,3158,4.877,3159,1.738,3181,3.581,3184,3.035,3210,3.857,3547,1.608,3635,5.1,3651,2.805,3851,1.738,3938,1.433,4087,4.209,4101,6.008,4103,1.738,4104,1.738,4105,1.738,4106,1.738,4107,1.738,4109,1.738,4116,5.353,4117,3.857,4187,3.179,4340,1.608,4456,2.956,4595,1.738,4771,2.232,4796,1.608,4797,1.608,4800,4.656,4801,1.738,4805,1.433,4811,1.433,4821,2.912,4823,2.232,4824,2.232,4826,2.232,4827,2.232,4828,2.232,4829,2.232,4830,2.232,4831,2.232,4832,2.232,4857,2.232,5071,1.738,5233,1.738,5405,2.956,5729,2.956,5730,1.511,5738,1.433,5748,2.437,5752,3.568,5767,1.738,5775,3.75,5793,1.511,5806,1.738,5817,1.738,5818,2.735,5820,7.065,5841,1.608,5847,4.55,5856,2.956,5880,2.735,5881,2.735,5889,2.569,5890,2.735,5893,5.473,5896,1.738,5906,2.956,5908,1.608,5912,2.956,5916,1.738,5918,3.857,5919,1.738,5920,5.644,5928,3.035,5945,6.938,5946,2.956,5947,3.293,5948,6.178,5949,7.269,5950,5.68,5951,7.234,5952,3.352,5953,3.857,5954,3.293,5955,4.296,5956,8.241,5957,2.956,5958,3.568,5959,4.55,5960,5.68,5961,3.293,5962,3.293,5963,2.569,5964,1.936,5965,1.936,5966,2.956,5967,1.936,5968,1.936,5969,4.55,5970,1.936,5971,3.293,5972,3.293,5973,1.936,5974,2.956,5975,6.59,5976,1.936,5977,3.857,5978,1.936,5979,1.936,5980,1.936,5981,4.296,5982,1.936,5983,5.68,5984,1.936,5985,5.68,5986,3.293,5987,3.293,5988,1.936,5989,1.608,5990,1.936,5991,1.738,5992,1.936,5993,1.936,5994,1.511,5995,1.936,5996,1.738,5997,1.936,5998,1.608,5999,5.68,6000,1.936,6001,1.738,6002,1.936,6003,5.068,6004,7.49,6005,5.068,6006,1.936,6007,1.936,6008,6.178,6009,1.936,6010,1.936,6011,1.738,6012,1.608,6013,3.293,6014,3.293,6015,3.293,6016,3.293,6017,3.293,6018,3.293,6019,3.293,6020,1.511,6021,1.936,6022,3.293,6023,1.936,6024,1.936,6025,3.293,6026,3.293,6027,3.293,6028,1.936,6029,1.936,6030,1.936,6031,1.936,6032,1.936,6033,1.936,6034,1.936,6035,1.608,6036,1.936,6037,1.936,6038,1.936,6039,3.568,6040,1.936,6041,1.936,6042,1.936,6043,3.293,6044,5.13,6045,1.936,6046,7.714,6047,1.936,6048,1.936,6049,1.936,6050,1.936,6051,1.936,6052,1.738,6053,1.936,6054,1.936,6055,1.738,6056,1.936,6057,1.936,6058,1.936,6059,5.068,6060,1.936,6061,1.936,6062,1.936,6063,1.936,6064,1.936,6065,1.936,6066,1.936,6067,1.936,6068,5.068,6069,5.068,6070,5.068,6071,1.936,6072,1.936,6073,1.936,6074,1.936,6075,1.936,6076,1.936,6077,1.608,6078,1.936,6079,1.936,6080,1.936,6081,1.738,6082,1.936,6083,1.936,6084,1.936,6085,1.936,6086,1.936,6087,1.936,6088,1.936,6089,1.936,6090,1.738,6091,1.738,6092,1.936,6093,1.936,6094,1.936,6095,2.735,6096,1.936,6097,1.936,6098,6.228,6099,1.936,6100,1.738,6101,1.936,6102,1.936,6103,1.936,6104,1.936,6105,3.293,6106,1.936,6107,1.936,6108,1.608,6109,1.936,6110,1.738,6111,1.936,6112,2.956,6113,3.293,6114,1.608,6115,3.293,6116,1.936,6117,1.936,6118,3.293,6119,1.936,6120,1.936,6121,4.296,6122,3.293,6123,1.738,6124,1.936,6125,1.936,6126,1.936,6127,3.293,6128,1.511,6129,1.608,6130,1.936,6131,1.608,6132,1.936,6133,1.936,6134,3.293,6135,1.936,6136,3.293,6137,1.936,6138,1.738,6139,1.936,6140,1.936,6141,1.936,6142,1.936,6143,1.936,6144,1.936,6145,1.936,6146,1.936,6147,1.936,6148,1.936,6149,1.936,6150,1.511,6151,1.936,6152,1.936,6153,1.738,6154,1.936,6155,3.293,6156,4.296,6157,3.293,6158,1.936,6159,1.936,6160,1.936,6161,1.936,6162,1.936,6163,1.936,6164,1.936,6165,3.293,6166,1.936,6167,1.738,6168,1.738,6169,1.936,6170,1.936,6171,1.936,6172,1.936,6173,1.936,6174,1.936,6175,1.936,6176,1.608]],["title/additional-documentation/documentation-technique/validation-des-identités.html",[1517,1.373,1718,2.145,2032,1.75,2637,1.75,5723,1.946]],["body/additional-documentation/documentation-technique/validation-des-identités.html",[0,0.22,21,0.005,23,0.276,40,0.483,45,3.311,58,0.003,59,0.003,72,1.871,80,1.473,104,2.484,138,2.026,140,1.242,174,1.65,178,1.473,213,2.13,280,1.434,292,1.897,293,5.417,297,2.428,343,1.494,695,3.118,775,4.528,863,2.829,897,4.065,1008,3.374,1014,3.654,1021,3.111,1022,3.965,1027,4.24,1028,4.764,1029,3.812,1292,4.418,1312,4.888,1314,4.675,1407,2.916,1485,2.675,1489,2.916,1490,2.829,1494,3.237,1496,3.944,1504,3.374,1517,4.204,1553,4.883,1587,4.418,1653,4.083,1660,3.725,1705,4.704,1718,4.347,1724,3.237,1893,2.916,2032,5.358,2542,2.749,2546,3.374,2599,3.534,2618,4.927,2620,3.374,2625,4.541,2649,5.415,2697,5.529,2734,4.287,2757,3.725,2758,3.534,2765,7.493,2814,5.197,2817,5.981,2840,5.529,2927,4.287,2960,4.065,2961,4.704,2963,3.725,3057,4.287,3073,5.978,3080,4.287,3081,5.978,3086,5.978,3176,5.194,3181,4.704,3182,5.978,3183,5.978,3184,3.374,3192,3.534,3651,5.415,3894,4.287,4715,7.83,4800,5.417,5145,4.287,5170,4.287,5730,3.725,5738,4.927,5745,3.965,5746,3.965,5748,5.673,5752,3.965,5761,5.978,5775,3.534,5843,3.725,5892,4.287,5893,3.965,5897,4.287,5920,3.725,5925,4.287,5926,3.725,5928,3.374,5953,4.287,5958,3.965,5963,3.725,5969,4.287,5974,4.287,5994,6.47,6012,3.965,6020,5.194,6035,3.965,6039,3.965,6044,3.965,6052,4.287,6095,3.965,6108,3.965,6112,6.882,6129,3.965,6150,5.194,6177,4.287,6178,6.658,6179,6.658,6180,3.965,6181,6.658,6182,4.775,6183,5.978,6184,4.775,6185,4.287,6186,4.775,6187,4.775,6188,4.775,6189,4.775,6190,4.775,6191,6.658,6192,4.775,6193,4.775,6194,4.775,6195,4.775,6196,4.775,6197,4.775,6198,4.775,6199,4.775,6200,4.775,6201,6.658,6202,4.775,6203,6.658,6204,4.775,6205,4.775,6206,4.775,6207,4.287,6208,4.775,6209,4.775,6210,4.775,6211,4.775,6212,4.775,6213,6.658]],["title/additional-documentation/documentation-technique/formulaires-customs.html",[2637,1.994,5723,2.217,5884,3.109,5885,3.361]],["body/additional-documentation/documentation-technique/formulaires-customs.html",[21,0.005,22,1.217,23,0.396,40,0.285,41,0.68,43,2.657,58,0.002,59,0.002,104,2.04,116,0.982,126,1.088,137,2.78,138,0.583,178,0.737,195,3.92,209,2.926,218,1.461,270,2.879,276,1.558,280,2.662,285,2.108,292,1.983,320,2.04,490,2.297,556,1.015,826,2.142,858,2.519,897,4.431,976,1.559,978,3.385,1014,4.225,1021,3.541,1022,3.257,1027,4.264,1028,4.531,1029,4.018,1232,1.559,1292,3.403,1312,4.726,1314,4.314,1485,5.177,1489,1.458,1490,3.784,1494,1.618,1496,4.489,1516,1.982,1517,3.862,1553,4.908,1555,1.766,1573,1.687,1579,1.559,1587,3.658,1615,1.766,1622,1.618,1639,5.37,1653,4.037,1717,1.687,1735,3.895,2275,5.138,2277,1.687,2278,4.867,2279,1.559,2280,1.505,2281,3.008,2291,2.324,2361,4.085,2362,4.513,2363,4.085,2364,4.085,2365,4.085,2366,4.085,2367,4.33,2368,4.779,2369,4.513,2405,4.576,2406,4.146,2492,4.146,2542,5.32,2548,4.738,2550,1.687,2553,6.472,2599,1.766,2618,2.903,2620,1.687,2649,1.559,2756,2.143,2757,3.06,2759,3.257,2877,5.708,2960,4.193,2961,3.528,2996,3.895,3125,1.766,3144,4.802,3158,1.766,3181,1.687,3184,1.687,3192,1.766,3546,2.772,3651,3.26,3779,5.191,4187,4.727,4337,2.143,4524,2.903,4525,2.903,4567,5.191,4771,5.321,4772,1.982,4773,5.191,4798,3.257,4799,3.257,4800,4.513,4805,1.766,4983,5.191,5221,6.515,5481,1.982,5731,1.766,5736,6.71,5741,3.522,5756,2.143,5775,2.903,5798,3.522,5805,2.143,5813,2.143,5818,1.982,5841,3.257,5884,4.146,5889,1.862,5903,3.522,5904,2.143,5908,1.982,5917,1.862,5920,1.862,5928,1.687,5946,3.522,5949,6.595,5952,5.358,5957,3.522,5959,4.483,5989,1.982,5996,2.143,6001,2.143,6011,3.522,6012,1.982,6020,1.862,6035,3.257,6077,4.802,6081,7.254,6090,2.143,6095,5.305,6098,2.143,6100,6.165,6110,2.143,6123,4.483,6128,1.862,6153,3.522,6177,2.143,6180,4.146,6207,2.143,6214,8.28,6215,9.967,6216,3.522,6217,3.923,6218,6.867,6219,6.388,6220,3.923,6221,4.993,6222,3.923,6223,7.578,6224,3.923,6225,6.867,6226,3.923,6227,3.923,6228,4.993,6229,6.388,6230,2.387,6231,2.387,6232,2.387,6233,2.143,6234,2.387,6235,3.923,6236,2.143,6237,5.782,6238,5.782,6239,4.802,6240,2.387,6241,2.387,6242,5.782,6243,2.143,6244,2.387,6245,3.923,6246,2.387,6247,2.387,6248,2.387,6249,2.387,6250,2.387,6251,3.923,6252,5.782,6253,3.923,6254,6.867,6255,2.387,6256,2.387,6257,2.387,6258,2.387,6259,4.993,6260,3.923,6261,5.191,6262,2.143,6263,2.387,6264,3.923,6265,2.387,6266,2.143,6267,2.387,6268,2.387,6269,2.387,6270,2.387,6271,3.923,6272,3.923,6273,3.923,6274,5.782,6275,5.782,6276,2.387,6277,2.387,6278,4.993,6279,2.387,6280,2.387,6281,2.387,6282,2.143,6283,2.143,6284,2.387,6285,2.143,6286,2.387,6287,4.993,6288,4.993,6289,4.993,6290,4.993,6291,4.993,6292,6.388,6293,3.923,6294,2.387,6295,2.387,6296,2.387,6297,2.387,6298,2.387,6299,2.387,6300,2.387,6301,2.387,6302,3.923,6303,3.923,6304,2.387,6305,4.993,6306,2.387,6307,3.923,6308,2.387,6309,2.387,6310,2.387,6311,2.387,6312,2.387,6313,2.387,6314,2.387,6315,2.143,6316,2.387,6317,2.387,6318,3.923,6319,2.387,6320,4.993,6321,2.387,6322,2.387,6323,2.387,6324,2.387,6325,2.387,6326,3.923,6327,2.387,6328,2.387,6329,2.387,6330,3.923,6331,2.387,6332,2.387,6333,6.388,6334,2.387,6335,2.387,6336,2.387,6337,2.387,6338,3.923,6339,2.387,6340,2.387,6341,2.387,6342,3.923,6343,2.387,6344,2.387,6345,2.387,6346,2.387,6347,2.387,6348,2.387,6349,2.387,6350,2.387,6351,2.387,6352,2.387,6353,2.387,6354,2.387,6355,2.387,6356,3.522]],["title/additional-documentation/documentation-utilisateur.html",[1008,2.645,2637,1.994,2960,2.286,5723,2.217]],["body/additional-documentation/documentation-utilisateur.html",[21,0.004,58,0.004,59,0.004,1027,3.369,1485,4.595,1517,3.427,2032,4.368,2960,5.008,5731,6.069,5880,6.81,5881,6.81]],["title/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[1314,1.285,1724,1.79,2103,1.953,2620,1.865,2637,1.406,5073,2.192,5723,1.564]],["body/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[21,0.005,23,0.332,58,0.002,59,0.002,270,2.834,292,2.742,295,4.237,296,4.447,297,1.411,343,1.386,353,2.483,366,1.35,368,3.019,374,4.878,409,2.735,439,3.074,636,5.245,664,2.551,698,2.794,826,2.419,897,2.706,988,1.515,989,4.124,1014,4.534,1021,4.046,1027,4.264,1028,4.619,1029,3.99,1292,4.274,1312,4.512,1314,3.905,1317,2.304,1457,2.551,1478,5.245,1485,3.099,1489,3.378,1490,4.09,1494,3.75,1496,4.09,1501,2.304,1504,4.463,1517,3.545,1548,1.96,1553,4.76,1555,3.279,1577,1.881,1579,5.537,1586,2.625,1587,4.115,1615,3.279,1624,5.844,1653,4.115,1724,5.607,1904,2.692,1931,5.245,2032,2.36,2073,4.805,2078,2.304,2084,3.908,2103,6.865,2126,1.75,2281,1.443,2443,3.975,2448,4.518,2492,3.68,2498,2.491,2542,5.076,2545,3.131,2547,1.811,2548,2.893,2549,3.75,2550,3.908,2553,3.131,2573,6.07,2599,4.093,2619,2.491,2620,3.908,2641,3.68,2646,3.68,2647,2.304,2648,5.2,2649,5.757,2650,3.68,2651,3.68,2697,3.68,2742,5.671,2792,4.641,2814,3.75,2877,1.811,2960,1.694,2961,3.131,2962,2.053,2963,3.457,2996,2.165,3116,3.279,3125,3.279,3131,4.594,3158,3.279,3166,2.491,3184,1.96,3192,3.279,3651,3.612,4187,2.053,4332,3.978,4344,3.68,4363,5.671,4442,4.966,4462,3.978,4771,4.282,4800,1.96,4811,2.053,4821,4.282,4823,1.881,4824,1.881,4826,1.881,4827,1.881,4828,1.881,4829,1.881,4830,4.282,4831,1.881,4832,1.881,4857,1.881,5073,5.733,5200,5.671,5419,5.671,5481,2.304,5731,5.937,5738,3.279,5745,2.304,5746,2.304,5749,7.193,5763,2.491,5792,2.304,5793,4.928,5804,4.594,5816,2.491,5825,2.491,5839,2.304,5843,2.165,5872,5.671,5917,6.027,5926,3.457,5928,1.96,5949,6.259,5952,4.316,5958,3.68,5963,3.457,5966,2.491,5989,2.304,5991,2.491,5994,4.316,5998,3.68,6020,3.457,6039,5.245,6044,3.68,6077,3.68,6091,2.491,6108,2.304,6114,4.594,6128,3.457,6131,2.304,6150,4.316,6167,3.978,6168,2.491,6176,6.415,6216,3.978,6233,2.491,6236,3.978,6239,2.304,6262,3.978,6283,3.978,6357,7.776,6358,7.916,6359,7.426,6360,3.978,6361,3.978,6362,4.431,6363,4.431,6364,6.316,6365,6.316,6366,2.775,6367,2.775,6368,2.775,6369,2.775,6370,2.775,6371,2.775,6372,2.775,6373,2.775,6374,4.431,6375,4.431,6376,4.431,6377,4.431,6378,6.316,6379,4.431,6380,6.316,6381,4.431,6382,4.431,6383,5.671,6384,4.431,6385,4.966,6386,5.532,6387,5.532,6388,5.532,6389,8.481,6390,3.978,6391,3.978,6392,4.431,6393,2.775,6394,2.775,6395,4.431,6396,4.431,6397,2.491,6398,2.775,6399,2.775,6400,2.775,6401,2.775,6402,2.775,6403,2.775,6404,2.491,6405,2.775,6406,5.532,6407,4.431,6408,4.431,6409,5.671,6410,5.671,6411,5.671,6412,6.316,6413,5.671,6414,6.316,6415,4.431,6416,2.775,6417,4.431,6418,2.775,6419,2.775,6420,2.775,6421,2.775,6422,2.775,6423,2.775,6424,6.316,6425,4.431,6426,4.431,6427,2.775,6428,2.775,6429,2.775,6430,2.775,6431,2.775,6432,2.775]],["title/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[1027,0.987,1517,1.005,1624,1.698,2032,1.28,2637,1.28,2897,1.875,5723,1.424,6433,2.404]],["body/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[8,0.76,21,0.005,22,0.502,23,0.428,40,0.676,41,2.501,58,0.002,59,0.002,137,1.786,218,2.886,222,2.16,270,2.476,276,1.242,280,2.326,283,2.035,285,2.141,292,3.322,295,2.803,296,2.803,301,4.459,302,2.331,305,2.476,320,3.11,366,1.522,368,1.902,664,4.21,778,2.314,780,2.596,809,2.439,826,3.265,883,2.209,897,2.973,988,1.707,989,1.752,1013,3.798,1014,4.265,1021,3.619,1027,4.236,1028,4.724,1029,3.852,1126,4.424,1292,3.896,1312,4.58,1314,3.936,1316,2.439,1317,2.596,1485,3.781,1490,2.884,1493,2.596,1496,2.884,1504,2.209,1517,3.591,1548,3.44,1553,4.549,1574,2.041,1577,3.301,1579,5.609,1587,1.665,1639,2.314,1653,3.595,1746,3.38,1848,2.041,1911,4.043,1939,2.12,2032,4.126,2034,3.798,2059,2.807,2073,2.041,2103,2.314,2281,2.532,2443,2.803,2448,3.896,2542,4.946,2544,3.44,2545,5.714,2546,2.209,2548,4.406,2549,4.575,2573,4.958,2591,4.665,2648,2.209,2649,3.904,2792,1.972,2814,5.67,2877,2.041,2961,4.225,2962,4.424,2963,4.665,3116,2.314,3125,2.314,3131,4.965,3158,2.314,3165,6.059,3176,2.439,3181,2.209,3184,2.209,3186,2.807,3192,6.189,3212,6.566,3214,4.371,3546,3.44,3651,3.904,3688,4.043,3721,4.043,3722,4.371,3854,2.807,4187,2.314,4317,4.371,4323,4.371,4344,4.043,4465,6.566,4466,4.371,4771,2.12,4821,2.12,4823,2.12,4824,2.12,4826,2.12,4827,2.12,4828,2.12,4829,2.12,4830,2.12,4831,2.12,4832,2.12,4857,2.12,5237,4.043,5731,2.314,5749,4.965,5758,4.371,5785,2.807,5793,6.525,5804,6.945,5839,2.596,5889,2.439,5890,2.596,5917,5.265,5926,2.439,5928,2.209,5932,2.807,5949,5.706,5952,2.439,5963,2.439,5977,2.807,5994,3.798,5998,2.596,6055,2.807,6114,2.596,6128,3.798,6129,6.073,6131,2.596,6138,4.371,6150,3.798,6176,5.604,6180,2.596,6183,4.371,6185,5.368,6239,2.596,6243,2.807,6261,2.807,6266,2.807,6282,2.807,6285,2.807,6315,2.807,6356,8.814,6357,2.807,6358,2.807,6359,2.807,6360,4.371,6361,2.807,6383,5.368,6385,6.059,6390,2.807,6391,2.807,6397,7.508,6404,4.371,6409,4.371,6410,4.371,6411,2.807,6413,2.807,6434,3.127,6435,3.127,6436,3.127,6437,3.127,6438,3.127,6439,3.127,6440,3.127,6441,3.127,6442,3.127,6443,3.127,6444,3.127,6445,3.127,6446,4.869,6447,4.869,6448,4.869,6449,7.313,6450,3.127,6451,3.127,6452,4.869,6453,3.127,6454,3.127,6455,3.127,6456,3.127,6457,4.869,6458,3.127,6459,4.869,6460,5.979,6461,4.869,6462,5.979,6463,3.127,6464,3.127,6465,4.869,6466,5.979,6467,3.127,6468,6.749,6469,4.869,6470,5.979,6471,3.127,6472,4.869,6473,3.127,6474,4.869,6475,3.127,6476,4.869,6477,3.127,6478,3.127,6479,3.127,6480,4.869,6481,3.127,6482,4.869,6483,4.869,6484,3.127,6485,4.869,6486,3.127,6487,4.869,6488,3.127,6489,4.869,6490,3.127,6491,3.127,6492,3.127,6493,8.363,6494,7.313,6495,4.869,6496,4.869,6497,5.979,6498,3.127,6499,3.127,6500,3.127,6501,3.127,6502,3.127,6503,3.127,6504,3.127,6505,3.127,6506,3.127,6507,3.127,6508,3.127,6509,3.127,6510,3.127,6511,3.127,6512,3.127,6513,3.127,6514,3.127]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["0",{"_index":490,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/CipherData.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["0.0.0",{"_index":708,"title":{},"body":{"controllers/AppController.html":{}}}],["0.0.0.0/0",{"_index":3454,"title":{},"body":{"classes/Keyrings.html":{}}}],["0.0.11",{"_index":4674,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":4685,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":4712,"title":{},"body":{"dependencies.html":{}}}],["0.41.1",{"_index":4678,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4684,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4717,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4708,"title":{},"body":{"dependencies.html":{}}}],["000000000000000000000000",{"_index":1968,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["01",{"_index":6468,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["07/schema",{"_index":6448,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1",{"_index":270,"title":{"classes/AbstractSettingsService-1.html":{},"classes/ConfigObjectSchemaDTO-1.html":{}},"body":{"controllers/AgentsController.html":{},"injectables/AppService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"classes/PasswordPoliciesDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1&sort%5bsubject%5d=1",{"_index":5874,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["1.0.0",{"_index":4709,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":4673,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4689,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":4672,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":4682,"title":{},"body":{"dependencies.html":{}}}],["1.12.18",{"_index":4716,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":4725,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":4720,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":4687,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":5696,"title":{},"body":{"properties.html":{}}}],["1.9.1",{"_index":4697,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1848,"title":{},"body":{"interfaces/ConfigInstance.html":{},"classes/LifeCycle1752765731.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["10.0.3",{"_index":4669,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":4668,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":4662,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":4667,"title":{},"body":{"dependencies.html":{}}}],["10.4.16",{"_index":4663,"title":{},"body":{"dependencies.html":{}}}],["10.4.8",{"_index":4665,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":3854,"title":{},"body":{"interfaces/LifecycleSource.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1000",{"_index":1756,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["10m",{"_index":1954,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["10y",{"_index":3475,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["11",{"_index":4463,"title":{},"body":{"classes/SmsSettingsDto.html":{},"license.html":{}}}],["11.0.0",{"_index":4690,"title":{},"body":{"dependencies.html":{}}}],["11.0.2",{"_index":4698,"title":{},"body":{"dependencies.html":{}}}],["111",{"_index":5695,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1478,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["12.1.0",{"_index":4710,"title":{},"body":{"dependencies.html":{}}}],["123456",{"_index":4363,"title":{},"body":{"classes/ResetByCodeDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["13",{"_index":5587,"title":{},"body":{"license.html":{}}}],["14.1.2",{"_index":4695,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":5419,"title":{},"body":{"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["16",{"_index":1476,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["1980",{"_index":6414,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["1996",{"_index":5239,"title":{},"body":{"license.html":{}}}],["1_000",{"_index":892,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["1y",{"_index":1171,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":3546,"title":{},"body":{"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2.0.2",{"_index":4660,"title":{},"body":{"dependencies.html":{}}}],["2.0.39",{"_index":4721,"title":{},"body":{"dependencies.html":{}}}],["2.6.1",{"_index":4724,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":5237,"title":{},"body":{"license.html":{},"overview.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["200",{"_index":633,"title":{},"body":{"controllers/AppController.html":{}}}],["2007",{"_index":4941,"title":{},"body":{"license.html":{}}}],["201",{"_index":2641,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["202",{"_index":6425,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["2020",{"_index":6471,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2024",{"_index":6467,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["24",{"_index":1134,"title":{},"body":{"injectables/AuthService.html":{}}}],["25",{"_index":770,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"overview.html":{}}}],["256",{"_index":1481,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["26",{"_index":5693,"title":{},"body":{"overview.html":{}}}],["28",{"_index":5567,"title":{},"body":{"license.html":{}}}],["29",{"_index":4939,"title":{},"body":{"license.html":{}}}],["3",{"_index":976,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/LifeCycle1752765731.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["3.0.0",{"_index":4676,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":4666,"title":{},"body":{"dependencies.html":{}}}],["3.13.0",{"_index":4702,"title":{},"body":{"dependencies.html":{}}}],["3.17.0",{"_index":4722,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":4664,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":4329,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"license.html":{}}}],["30000",{"_index":5942,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["34",{"_index":5694,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":1133,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LifecycleSource.html":{}}}],["3f4ac",{"_index":4368,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["4",{"_index":1735,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["4.0.1",{"_index":4661,"title":{},"body":{"dependencies.html":{}}}],["4.15.3",{"_index":4700,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":4677,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":4692,"title":{},"body":{"dependencies.html":{}}}],["4.9.0",{"_index":4723,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1558,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["404",{"_index":1726,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["45s",{"_index":1955,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["465",{"_index":797,"title":{},"body":{"modules/AppModule.html":{}}}],["5",{"_index":1126,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["5.0.22",{"_index":4120,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["5.4.1",{"_index":4696,"title":{},"body":{"dependencies.html":{}}}],["5.8.2",{"_index":4683,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":4781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["500",{"_index":608,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/IdentitiesValidationService.html":{}}}],["5000",{"_index":3294,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["500mb",{"_index":1825,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["53",{"_index":5870,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["587",{"_index":799,"title":{},"body":{"modules/AppModule.html":{}}}],["5_000",{"_index":1849,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["5f7b1b3b7f7b1b3b7f7b1b3b",{"_index":3891,"title":{},"body":{"classes/Logger.html":{}}}],["6",{"_index":874,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["6.0.0",{"_index":4670,"title":{},"body":{"dependencies.html":{}}}],["6.10.0",{"_index":4681,"title":{},"body":{"dependencies.html":{}}}],["6.9.16",{"_index":4705,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":893,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["604800",{"_index":4325,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["66d80ab41821baca9bf965b2",{"_index":279,"title":{},"body":{"classes/ActivationDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FusionDto.html":{},"classes/NeedChangePasswordDto.html":{}}}],["6b",{"_index":5322,"title":{},"body":{"license.html":{}}}],["6d",{"_index":5346,"title":{},"body":{"license.html":{}}}],["7",{"_index":1135,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["7.1.0",{"_index":4693,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":4714,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":4307,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["8",{"_index":948,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"classes/PasswordPoliciesDto.html":{}}}],["8.0.7",{"_index":4671,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":4707,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":4675,"title":{},"body":{"dependencies.html":{}}}],["8.9.5",{"_index":4701,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":782,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["90",{"_index":1952,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["900",{"_index":4348,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["90d",{"_index":1953,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["99",{"_index":4780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["999999",{"_index":1521,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["9]+/.test(current",{"_index":704,"title":{},"body":{"controllers/AppController.html":{}}}],["9]+\\.[0",{"_index":703,"title":{},"body":{"controllers/AppController.html":{}}}],["9_",{"_index":4854,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["9a",{"_index":416,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_",{"_index":785,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["__dirname",{"_index":811,"title":{},"body":{"modules/AppModule.html":{},"injectables/MigrationsService.html":{}}}],["__proto__",{"_index":3138,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_checkmigrationlockfile",{"_index":3998,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_common/abstracts/abstract.controller",{"_index":444,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{}}}],["_common/abstracts/abstract.queue.processor",{"_index":5934,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["_common/abstracts/abstract.service",{"_index":900,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["_common/abstracts/abstract.service.schema",{"_index":252,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["_common/abstracts/dto/custom",{"_index":527,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["_common/abstracts/dto/metadata.dto",{"_index":2346,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_common/abstracts/schemas/abstract.schema",{"_index":386,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Lifecycle.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["_common/abstracts/schemas/parts/metadata.part.schema",{"_index":139,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["_common/data/api",{"_index":1153,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["_common/data/console",{"_index":1151,"title":{},"body":{"injectables/AuthService.html":{}}}],["_common/decorators/api",{"_index":446,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/decorators/params/req",{"_index":1038,"title":{},"body":{"controllers/AuthController.html":{}}}],["_common/decorators/public.decorator",{"_index":671,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["_common/dto/paginated",{"_index":34,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["_common/errors/validationexception",{"_index":2819,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_common/filters/identities",{"_index":2939,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["_common/filters/mongoose",{"_index":743,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/guards/auth.guard",{"_index":741,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/helpers/pick",{"_index":457,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/observers/shutdown.observer",{"_index":758,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/pipes/dto",{"_index":746,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/pipes/object",{"_index":460,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{}}}],["_common/plugins/mongoose/auto",{"_index":2480,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["_common/types/agent.type",{"_index":1040,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["_common/types/mixed",{"_index":308,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_common/types/partial",{"_index":463,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/validation",{"_index":4626,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["_config/validschema",{"_index":3099,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_custommodulename",{"_index":74,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["_customservicename",{"_index":75,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["_debug",{"_index":1628,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["_dto/_parts/additionalfields.dto",{"_index":3102,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/agents.dto",{"_index":574,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/ask",{"_index":1437,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["_dto/change",{"_index":1439,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["_dto/config.dto",{"_index":3092,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["_dto/delete",{"_index":1341,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_dto/execute",{"_index":1333,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_dto/filestorage.dto",{"_index":2204,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["_dto/form.dto",{"_index":2314,"title":{},"body":{"controllers/FormController.html":{}}}],["_dto/identities.dto",{"_index":2623,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_dto/jobs.dto",{"_index":3375,"title":{},"body":{"controllers/JobsController.html":{}}}],["_dto/keyrings.dto",{"_index":3526,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["_dto/parts/security.part.dto",{"_index":579,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/reset",{"_index":1442,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["_dto/sync",{"_index":1336,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_enum/action",{"_index":1339,"title":{},"body":{"controllers/BackendsController.html":{},"classes/ExecuteJobDto.html":{}}}],["_enum/types",{"_index":2293,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_enums/config.object",{"_index":1890,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{}}}],["_enums/lifecycle.enum",{"_index":2473,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_enums/state.enum",{"_index":3362,"title":{},"body":{"classes/Jobs.html":{}}}],["_enums/states.enum",{"_index":2475,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_exception",{"_index":2107,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["_executemigrations",{"_index":3999,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_id",{"_index":126,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/FormController.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"classes/InitInfoPart.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["_id:identity._id},{datastatus",{"_index":1626,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["_loadmigrationsfiles",{"_index":4000,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_loadmigrationsfiles(currenttimestamp",{"_index":4005,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_metadata",{"_index":4164,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["_middlewares/ensure",{"_index":2947,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["_migrateemployeenumbertoarray",{"_index":2061,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["_migratelifecycletochar",{"_index":3533,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["_model",{"_index":194,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["_options",{"_index":3284,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["_parent",{"_index":4539,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["_parts",{"_index":5997,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/additionalfields.dto",{"_index":2569,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_parts/additionalfields.part.schema",{"_index":2476,"title":{},"body":{"classes/Identities.html":{}}}],["_parts/addtionalfields.dto.stub",{"_index":5982,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/concerned",{"_index":3363,"title":{},"body":{"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["_parts/data.part.schema",{"_index":3888,"title":{},"body":{"classes/Logger.html":{}}}],["_parts/inetorgperson.dto",{"_index":2568,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_parts/inetorgperson.dto.stub",{"_index":5984,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/inetorgperson.part",{"_index":2474,"title":{},"body":{"classes/Identities.html":{}}}],["_queue",{"_index":69,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["_req",{"_index":77,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["_schemas/_parts/additionalfields.part.schema",{"_index":3029,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_schemas/filestorage.schema",{"_index":2269,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["_schemas/form.schema",{"_index":2401,"title":{},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{}}}],["_schemas/identities.schema",{"_index":2624,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["_schemas/jobs.schema",{"_index":3414,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["_schemas/lifecycle.schema",{"_index":3583,"title":{},"body":{"controllers/LifecycleController.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{}}}],["_schemas/logger.schema",{"_index":3907,"title":{},"body":{"modules/LoggerModule.html":{},"injectables/LoggerService.html":{}}}],["_schemas/tasks.schema",{"_index":4516,"title":{},"body":{"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["_service",{"_index":471,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{}}}],["_services/transformers",{"_index":2206,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["_validation",{"_index":2628,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["_writemigrationlockfile",{"_index":4001,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_writemigrationlockfile(migrationkey",{"_index":4008,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["a.match(/\\d{10",{"_index":4072,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["ability",{"_index":5392,"title":{},"body":{"license.html":{}}}],["above",{"_index":5449,"title":{},"body":{"license.html":{}}}],["absence",{"_index":5264,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":5645,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":5668,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":49,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstract.service",{"_index":102,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["abstractcontroller",{"_index":1,"title":{"classes/AbstractController.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{}}}],["abstractcontrollercontext",{"_index":17,"title":{"interfaces/AbstractControllerContext.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["abstractqueueprocessor",{"_index":63,"title":{"classes/AbstractQueueProcessor.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["abstractschema",{"_index":123,"title":{"classes/AbstractSchema.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Lifecycle.html":{},"classes/Logger.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["abstractservice",{"_index":66,"title":{"injectables/AbstractService.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:19",{"_index":95,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:20",{"_index":96,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:21",{"_index":92,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:22",{"_index":94,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:24",{"_index":91,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:25",{"_index":90,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservicecontext",{"_index":82,"title":{"interfaces/AbstractServiceContext.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["abstractserviceschema",{"_index":192,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:118",{"_index":241,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:156",{"_index":243,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:16",{"_index":3525,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["abstractserviceschema:17",{"_index":570,"title":{},"body":{"injectables/AgentsService.html":{}}}],["abstractserviceschema:191",{"_index":228,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:233",{"_index":248,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:24",{"_index":211,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:27",{"_index":571,"title":{},"body":{"injectables/AgentsService.html":{}}}],["abstractserviceschema:296",{"_index":250,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:35",{"_index":237,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:358",{"_index":233,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:56",{"_index":223,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:72",{"_index":245,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:81",{"_index":239,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["abstractsettingsservice",{"_index":189,"title":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["abstraite",{"_index":5891,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["abuse",{"_index":5038,"title":{},"body":{"license.html":{}}}],["acc",{"_index":2669,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["acc[groupindex",{"_index":2867,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["acc[groupindex].elements.push",{"_index":2870,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["acc[key",{"_index":2667,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["accent",{"_index":6086,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["accept",{"_index":5474,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":5473,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":4332,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["access",{"_index":3671,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["access_token",{"_index":1128,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["access_token_expires_in",{"_index":1098,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token_prefix",{"_index":1099,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":5538,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["accessors",{"_index":13,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{}}}],["accompagnement",{"_index":5850,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accompagnés",{"_index":5823,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accompanied",{"_index":5304,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5649,"title":{},"body":{"license.html":{}}}],["accord",{"_index":5263,"title":{},"body":{"license.html":{}}}],["according",{"_index":5640,"title":{},"body":{"license.html":{}}}],["account.dto",{"_index":1451,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["account.dto.ts",{"_index":3256,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["account.dto.ts:7",{"_index":3258,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["accéder",{"_index":5899,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["achieve",{"_index":5653,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":5202,"title":{},"body":{"license.html":{}}}],["acls",{"_index":2150,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["acquired",{"_index":5519,"title":{},"body":{"license.html":{}}}],["actif",{"_index":1623,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["action",{"_index":2115,"title":{},"body":{"classes/ExecuteJobDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["actions",{"_index":5481,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["actiontype",{"_index":1338,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/ExecuteJobDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype.identity_create",{"_index":1393,"title":{},"body":{"controllers/BackendsController.html":{}}}],["actiontype.identity_delete].includes",{"_index":1394,"title":{},"body":{"controllers/BackendsController.html":{}}}],["actiontype.identity_password_change",{"_index":1617,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["actiontype.identity_password_reset",{"_index":1700,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["actiontype.identity_update",{"_index":1392,"title":{},"body":{"controllers/BackendsController.html":{}}}],["activated",{"_index":3760,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["activation",{"_index":1595,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesActivationController.html":{},"interfaces/TokenData.html":{}}}],["activation(@res",{"_index":2515,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation(res",{"_index":2502,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation.controller",{"_index":2944,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["activation.controller.ts",{"_index":2501,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation.controller.ts:19",{"_index":2506,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation.service",{"_index":2509,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{}}}],["activationdto",{"_index":273,"title":{"classes/ActivationDto.html":{}},"body":{"classes/ActivationDto.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{}}}],["active",{"_index":1707,"title":{},"body":{"interfaces/CipherData.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["active/desactive",{"_index":2504,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activities",{"_index":5113,"title":{},"body":{"license.html":{}}}],["activity",{"_index":5562,"title":{},"body":{"license.html":{}}}],["actual",{"_index":5543,"title":{},"body":{"license.html":{}}}],["actually",{"_index":5367,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":5088,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":813,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":2871,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["added",{"_index":1391,"title":{},"body":{"controllers/BackendsController.html":{},"license.html":{}}}],["added.name",{"_index":1395,"title":{},"body":{"controllers/BackendsController.html":{}}}],["addformats",{"_index":3094,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["addformats(this.ajv",{"_index":3103,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["addhttpserver",{"_index":4435,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["addhttpserver(server",{"_index":4437,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["additional",{"_index":2637,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["additionalfields",{"_index":2443,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["additionalfieldspart",{"_index":293,"title":{"classes/AdditionalFieldsPart.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["additionalfieldspartdto",{"_index":2540,"title":{"classes/additionalFieldsPartDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{}}}],["additionalfieldspartdtostub",{"_index":5981,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["additionalfieldspartschema",{"_index":311,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{}}}],["additionalfilters",{"_index":6300,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["additionnel",{"_index":6381,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["additionnels",{"_index":2648,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["address",{"_index":5595,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":5085,"title":{},"body":{"license.html":{}}}],["administrateurs",{"_index":5815,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["adopted",{"_index":5236,"title":{},"body":{"license.html":{}}}],["adresse",{"_index":4462,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["adversely",{"_index":5398,"title":{},"body":{"license.html":{}}}],["advised",{"_index":5636,"title":{},"body":{"license.html":{}}}],["aes",{"_index":1480,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["affects",{"_index":5399,"title":{},"body":{"license.html":{}}}],["affero",{"_index":5584,"title":{},"body":{"license.html":{}}}],["affichage",{"_index":5787,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["affichant",{"_index":6311,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["affiche",{"_index":1315,"title":{},"body":{"controllers/BackendsController.html":{}}}],["affirmed",{"_index":5500,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":6037,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["affirms",{"_index":5198,"title":{},"body":{"license.html":{}}}],["after._id",{"_index":3832,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["after.lifecycle",{"_index":3831,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["afterall(async",{"_index":6018,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["aftereach(async",{"_index":6016,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["against",{"_index":5253,"title":{},"body":{"license.html":{}}}],["agent",{"_index":341,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"controllers/LifecycleController.html":{}}}],["agentcreatequestions",{"_index":313,"title":{"classes/AgentCreateQuestions.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/CliModule.html":{}}}],["agentid",{"_index":3591,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["agents",{"_index":358,"title":{"classes/Agents.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["agents.command",{"_index":1765,"title":{},"body":{"modules/CliModule.html":{}}}],["agents.controller",{"_index":561,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.name",{"_index":565,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.security.secretkey",{"_index":1067,"title":{},"body":{"controllers/AuthController.html":{}}}],["agents.service",{"_index":465,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agents/_schemas/agents.schema",{"_index":1343,"title":{},"body":{"controllers/BackendsController.html":{}}}],["agents/agents.module",{"_index":1415,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["agents/agents.service",{"_index":1342,"title":{},"body":{"controllers/BackendsController.html":{}}}],["agentscommand",{"_index":361,"title":{"classes/AgentsCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscommand.registerwithsubcommands",{"_index":567,"title":{},"body":{"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscontroller",{"_index":400,"title":{"controllers/AgentsController.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agentscontroller.projection",{"_index":479,"title":{},"body":{"controllers/AgentsController.html":{}}}],["agentscreatecommand",{"_index":344,"title":{"classes/AgentsCreateCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentscreatedto",{"_index":337,"title":{"classes/AgentsCreateDto.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentscreatedto:17",{"_index":543,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:22",{"_index":536,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:27",{"_index":537,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:32",{"_index":539,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:37",{"_index":542,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:43",{"_index":541,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:48",{"_index":535,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:58",{"_index":540,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:63",{"_index":538,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentsdto",{"_index":411,"title":{"classes/AgentsDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentsmodule",{"_index":544,"title":{"modules/AgentsModule.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["agentsschema",{"_index":392,"title":{},"body":{"classes/Agents.html":{},"modules/AgentsModule.html":{}}}],["agentsservice",{"_index":339,"title":{"injectables/AgentsService.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{},"overview.html":{}}}],["agentstate",{"_index":4489,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/enumerations.html":{}}}],["agentstate.pending",{"_index":4491,"title":{},"body":{"classes/StatePart.html":{}}}],["agentstatelist",{"_index":4483,"title":{},"body":{"classes/StatePart.html":{}}}],["agentsupdatedto",{"_index":432,"title":{"classes/AgentsUpdateDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agenttype",{"_index":1004,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["aggregate",{"_index":5291,"title":{},"body":{"license.html":{}}}],["aggregates",{"_index":3856,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["agree",{"_index":5579,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":5622,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":5529,"title":{},"body":{"license.html":{}}}],["aide",{"_index":1662,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["aident",{"_index":6036,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["aim",{"_index":5035,"title":{},"body":{"license.html":{}}}],["ainsi",{"_index":6167,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["ais",{"_index":5810,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ajout",{"_index":6205,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajouterez",{"_index":6442,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ajoutée",{"_index":6284,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ajoutés",{"_index":6194,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajv",{"_index":2817,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajverrors",{"_index":3100,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ajverrors(this.ajv",{"_index":3104,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["alias",{"_index":2575,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["aliases",{"_index":5698,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all')@apioperation({summary",{"_index":2598,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["alleging",{"_index":5508,"title":{},"body":{"license.html":{}}}],["aller",{"_index":4819,"title":{},"body":{"index.html":{}}}],["allerrormessages",{"_index":3795,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["allerrormessages.map(msg",{"_index":3798,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["allerrormessages.push(...formaterror(error",{"_index":3797,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["allerrors",{"_index":2820,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["allexceptionfilter",{"_index":594,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{}}}],["allons",{"_index":5967,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["allow",{"_index":3670,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["allowed",{"_index":4952,"title":{},"body":{"license.html":{}}}],["allowednetworks",{"_index":3447,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["allows",{"_index":3863,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["along",{"_index":5266,"title":{},"body":{"license.html":{}}}],["already",{"_index":1164,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"injectables/UniquenessMailValidator.html":{},"license.html":{}}}],["alternatif",{"_index":4305,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["alternative",{"_index":4249,"title":{},"body":{"controllers/PasswdController.html":{},"license.html":{}}}],["although",{"_index":5031,"title":{},"body":{"license.html":{}}}],["always",{"_index":697,"title":{},"body":{"controllers/AppController.html":{}}}],["amazonwebservicess3storageconfig",{"_index":1803,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["amount",{"_index":4315,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["améliorant",{"_index":6187,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["amélioration",{"_index":6209,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliorations",{"_index":6178,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliore",{"_index":6094,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["améliorée",{"_index":6190,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ancillary",{"_index":5475,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":5014,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":6193,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annuaires",{"_index":4803,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["anti",{"_index":5224,"title":{},"body":{"license.html":{}}}],["any).filename",{"_index":4570,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["any).type",{"_index":3149,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["any)?.id",{"_index":3330,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["any,user",{"_index":3871,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["anyone",{"_index":5274,"title":{},"body":{"license.html":{}}}],["anything",{"_index":5099,"title":{},"body":{"license.html":{}}}],["aperçu",{"_index":6081,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["api",{"_index":631,"title":{"additional-documentation/filtres-api.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{}}}],["apibearerauth",{"_index":672,"title":{},"body":{"controllers/AppController.html":{}}}],["apicreatedecorator",{"_index":445,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/KeyringsController.html":{}}}],["apicreatedecorator(agentscreatedto",{"_index":472,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apicreatedecorator(formdto",{"_index":2319,"title":{},"body":{"controllers/FormController.html":{}}}],["apicreatedecorator(identitiescreatedto",{"_index":2629,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apicreatedecorator(identitiesupsertdto",{"_index":2994,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["apicreatedecorator(keyringscreatedto",{"_index":3492,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apideletedresponsedecorator",{"_index":448,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{}}}],["apideletedresponsedecorator(agentsdto",{"_index":493,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apideletedresponsedecorator(filestoragedto",{"_index":2237,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apideletedresponsedecorator(formdto",{"_index":2325,"title":{},"body":{"controllers/FormController.html":{}}}],["apideletedresponsedecorator(identitiesdto",{"_index":2686,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apideletedresponsedecorator(keyringsdto",{"_index":3496,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiextramodels",{"_index":31,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apiextramodels(paginatedresponsedto",{"_index":48,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apifileuploaddecorator",{"_index":2202,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["apifileuploaddecorator(fileuploaddto",{"_index":2213,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["apioperation",{"_index":673,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/LifecycleController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["apioperation({summary",{"_index":3569,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["apipaginateddecorator",{"_index":451,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(agentsdto",{"_index":478,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(filestoragedto",{"_index":2217,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(formdto",{"_index":2320,"title":{},"body":{"controllers/FormController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(identitiesdto",{"_index":2654,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(jobsdto",{"_index":3380,"title":{},"body":{"controllers/JobsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(keyringsdto",{"_index":3493,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiparam",{"_index":440,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{}}}],["apiproperty",{"_index":288,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["apiproperty()@isarray()@isstring({each",{"_index":4864,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["apiproperty({description",{"_index":3268,"title":{},"body":{"classes/InitManyDto.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{}}}],["apiproperty({enum",{"_index":2110,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["apiproperty({example",{"_index":990,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/InitAccountDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["apiproperty({type",{"_index":2133,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/additionalFieldsPartDto.html":{}}}],["apiquery",{"_index":674,"title":{},"body":{"controllers/AppController.html":{},"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["apiquery({name",{"_index":645,"title":{},"body":{"controllers/AppController.html":{}}}],["apireadresponsedecorator",{"_index":453,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apireadresponsedecorator(agentsdto",{"_index":487,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apireadresponsedecorator(filestoragedto",{"_index":2223,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["apireadresponsedecorator(formdto",{"_index":2322,"title":{},"body":{"controllers/FormController.html":{}}}],["apireadresponsedecorator(identitiesdto",{"_index":2657,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apireadresponsedecorator(jobsdto",{"_index":3385,"title":{},"body":{"controllers/JobsController.html":{}}}],["apireadresponsedecorator(keyringsdto",{"_index":3495,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiresponse",{"_index":675,"title":{},"body":{"controllers/AppController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["apisession",{"_index":614,"title":{"classes/ApiSession.html":{}},"body":{"classes/ApiSession.html":{},"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["apitags",{"_index":441,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{}}}],["apitags('core",{"_index":1975,"title":{},"body":{"controllers/CoreController.html":{}}}],["apitags('core/agents",{"_index":466,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apitags('core/auth",{"_index":1043,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('core/backends",{"_index":1353,"title":{},"body":{"controllers/BackendsController.html":{}}}],["apitags('core/filestorage",{"_index":2209,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apitags('core/jobs",{"_index":3378,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('core/keyrings",{"_index":3490,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apitags('forms",{"_index":2317,"title":{},"body":{"controllers/FormController.html":{}}}],["apitags('management",{"_index":3958,"title":{},"body":{"controllers/ManagementController.html":{}}}],["apitags('management/identities",{"_index":2512,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["apitags('management/identities/jsonforms",{"_index":2774,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["apitags('management/identities/validation",{"_index":3031,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["apitags('management/lifecycle",{"_index":3586,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["apitags('management/passwd",{"_index":4223,"title":{},"body":{"controllers/PasswdController.html":{}}}],["apitags('settings",{"_index":3947,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{}}}],["apiupdatedecorator",{"_index":454,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["apiupdatedecorator(agentsupdatedto",{"_index":491,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apiupdatedecorator(filestorageupdatedto",{"_index":2236,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apiupdatedecorator(formupdatedto",{"_index":2324,"title":{},"body":{"controllers/FormController.html":{}}}],["apiupdatedecorator(identitiesupdatedto",{"_index":2671,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apiurl",{"_index":6287,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["app",{"_index":650,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"miscellaneous/enumerations.html":{}}}],["app.controller",{"_index":735,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":670,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["app_guard",{"_index":738,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":739,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":626,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appel",{"_index":6166,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["appelant",{"_index":6272,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appeler",{"_index":6279,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appels",{"_index":6136,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["applicable",{"_index":5104,"title":{},"body":{"license.html":{}}}],["application",{"_index":863,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["application/json",{"_index":6378,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["application/octet",{"_index":4561,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["application/pdf",{"_index":4553,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["applications",{"_index":4805,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["applied",{"_index":5065,"title":{},"body":{"license.html":{}}}],["applies",{"_index":4973,"title":{},"body":{"license.html":{}}}],["appliquer",{"_index":4241,"title":{},"body":{"controllers/PasswdController.html":{}}}],["appliquer'})@apiresponse({status",{"_index":4194,"title":{},"body":{"controllers/PasswdController.html":{}}}],["apply",{"_index":4978,"title":{},"body":{"license.html":{}}}],["applying",{"_index":3553,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["appmodule",{"_index":716,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apportées",{"_index":6179,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["appropriate",{"_index":3708,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["appropriately",{"_index":5258,"title":{},"body":{"license.html":{}}}],["appropriés",{"_index":5801,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["approximates",{"_index":5644,"title":{},"body":{"license.html":{}}}],["appservice",{"_index":640,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"overview.html":{}}}],["après",{"_index":4337,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["arbitraire",{"_index":6097,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["architecture",{"_index":4817,"title":{},"body":{"index.html":{}}}],["area",{"_index":5040,"title":{},"body":{"license.html":{}}}],["argon2",{"_index":576,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["argon2verify",{"_index":1142,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2verify(user.password",{"_index":1177,"title":{},"body":{"injectables/AuthService.html":{}}}],["args",{"_index":4595,"title":{},"body":{"injectables/UniquenessMailValidator.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["args.constraints",{"_index":4600,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["argumentmetadata",{"_index":2018,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["arguments",{"_index":359,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["argumentshost",{"_index":600,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["arise",{"_index":5048,"title":{},"body":{"license.html":{}}}],["arising",{"_index":5626,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":5539,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":5551,"title":{},"body":{"license.html":{}}}],["array",{"_index":301,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"classes/SyncIdentitiesDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["array.from(filesmap.values",{"_index":3243,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["array.isarray(employeenumber",{"_index":2079,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["array.isarray(employeenumbers",{"_index":4852,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["array.isarray(error.value",{"_index":3792,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["array.isarray(schema.identities",{"_index":3748,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["arraynotempty",{"_index":1888,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{}}}],["arrondi",{"_index":6484,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["arrête",{"_index":6010,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["article",{"_index":5233,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asc",{"_index":6007,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ascii",{"_index":1681,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["ask",{"_index":1657,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asked",{"_index":1537,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asking",{"_index":1522,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["asktoken(asktoken",{"_index":1641,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asktoken.mail",{"_index":1648,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asktoken.uid",{"_index":1642,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asktokendto",{"_index":985,"title":{"classes/AskTokenDto.html":{}},"body":{"classes/AskTokenDto.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["assert",{"_index":5009,"title":{},"body":{"license.html":{}}}],["assertions",{"_index":5956,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["assets",{"_index":942,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["assets_url",{"_index":933,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["assigned",{"_index":6297,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assignés",{"_index":6298,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["associated",{"_index":3655,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["assume",{"_index":5618,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":5648,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":5438,"title":{},"body":{"license.html":{}}}],["assure",{"_index":6055,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["assures",{"_index":5068,"title":{},"body":{"license.html":{}}}],["assurez",{"_index":6391,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["async",{"_index":80,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["asynchrones",{"_index":6109,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asyncquery",{"_index":1290,"title":{},"body":{"controllers/BackendsController.html":{}}}],["atimestamp",{"_index":4071,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["attach",{"_index":5655,"title":{},"body":{"license.html":{}}}],["attachment",{"_index":4568,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["attempt",{"_index":5452,"title":{},"body":{"license.html":{}}}],["attendez",{"_index":6395,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attendue",{"_index":6365,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attentes",{"_index":6393,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attention",{"_index":6399,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attr",{"_index":2382,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["attribut",{"_index":3176,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attribute",{"_index":3073,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["attributed",{"_index":5025,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":295,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attributes'})@isoptional",{"_index":4656,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["attributes[key",{"_index":3130,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributeskeys",{"_index":3123,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributeskeys.includes(objectclass",{"_index":3132,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributions",{"_index":5421,"title":{},"body":{"license.html":{}}}],["attributs",{"_index":2548,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attrsoncreate",{"_index":2361,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondefault",{"_index":2362,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondelete",{"_index":2363,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonread",{"_index":2364,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonupdate",{"_index":2365,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["au",{"_index":1494,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["auparavant",{"_index":6210,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["auth",{"_index":800,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["auth.controller",{"_index":1082,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":1083,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":1987,"title":{},"body":{"modules/CoreModule.html":{}}}],["authcontroller",{"_index":997,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":3440,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["authenticatewithlocal",{"_index":999,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticatewithlocal(@res",{"_index":1047,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(res",{"_index":1003,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(username",{"_index":1112,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentification",{"_index":1006,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["authguard",{"_index":740,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["authguard('jwt",{"_index":844,"title":{},"body":{"modules/AppModule.html":{}}}],["authmodule",{"_index":1073,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":935,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["authorization",{"_index":5378,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":5413,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":5514,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":5555,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4977,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":1034,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["auto",{"_index":1260,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete",{"_index":6254,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["autoincrementplugin",{"_index":2479,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["autoincrementpluginoptions",{"_index":1229,"title":{"interfaces/AutoIncrementPluginOptions.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["autoincrementplugintrackerspec",{"_index":1261,"title":{"interfaces/AutoIncrementPluginTrackerSpec.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["automatic",{"_index":5485,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":5191,"title":{},"body":{"license.html":{}}}],["automatique",{"_index":6363,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatiquement",{"_index":6283,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatisés",{"_index":5821,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["autres",{"_index":1639,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["aux",{"_index":2547,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["available",{"_index":659,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["avatar_url",{"_index":918,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["avec",{"_index":1587,"title":{},"body":{"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/LifeCycle1752765731.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avoid",{"_index":5063,"title":{},"body":{"license.html":{}}}],["avoir",{"_index":6454,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avons",{"_index":5991,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["await",{"_index":259,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"controllers/MailadmController.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["away",{"_index":4961,"title":{},"body":{"license.html":{}}}],["awesome",{"_index":4679,"title":{},"body":{"dependencies.html":{}}}],["axios",{"_index":1795,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["ayant",{"_index":6368,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["b",{"_index":4070,"title":{},"body":{"injectables/MigrationsService.html":{},"license.html":{}}}],["b.match(/\\d{10",{"_index":4074,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["back",{"_index":3731,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["backend",{"_index":1266,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backendcodesenum",{"_index":4732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backendname",{"_index":4650,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backendresultinfointerface",{"_index":1262,"title":{"interfaces/BackendResultInfoInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{}}}],["backendresultinterface",{"_index":1265,"title":{"interfaces/BackendResultInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backends",{"_index":1280,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backends'})@apiresponse({status",{"_index":4189,"title":{},"body":{"controllers/PasswdController.html":{}}}],["backends.command",{"_index":1770,"title":{},"body":{"modules/CliModule.html":{}}}],["backends.controller",{"_index":1411,"title":{},"body":{"modules/BackendsModule.html":{}}}],["backends.service",{"_index":1335,"title":{},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backends/backends.module",{"_index":1988,"title":{},"body":{"modules/CoreModule.html":{}}}],["backendscommand",{"_index":1268,"title":{"classes/BackendsCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{}}}],["backendscommand.registerwithsubcommands",{"_index":1776,"title":{},"body":{"modules/CliModule.html":{}}}],["backendscontroller",{"_index":1281,"title":{"controllers/BackendsController.html":{}},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backendsmodule",{"_index":1402,"title":{"modules/BackendsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["backendsservice",{"_index":1272,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["backendssyncallcommand",{"_index":1275,"title":{"classes/BackendsSyncallCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["bad",{"_index":1557,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception",{"_index":667,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["badrequestexception(\"la",{"_index":2677,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["badrequestexception('identity",{"_index":2673,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["badrequestexception('impossible",{"_index":1659,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception('invalid",{"_index":705,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception('missing",{"_index":3004,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["badrequestexception('request",{"_index":3226,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["badrequestexception('schema",{"_index":3142,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["badrequestexception(`invalid",{"_index":963,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["barre",{"_index":6309,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["bas",{"_index":6330,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["base",{"_index":4771,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["base64",{"_index":1650,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["based",{"_index":2866,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["basepath",{"_index":3766,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["baser",{"_index":6440,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bases",{"_index":4802,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["baseurl",{"_index":364,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["bash",{"_index":5784,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["basic",{"_index":862,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["basée",{"_index":6341,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basées",{"_index":6340,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basés",{"_index":6110,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["before",{"_index":699,"title":{},"body":{"controllers/AppController.html":{},"interfaces/LifecycleSource.html":{}}}],["before.lifecycle",{"_index":3830,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["beforeall(async",{"_index":6013,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforeeach(async",{"_index":6026,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["behalf",{"_index":5213,"title":{},"body":{"license.html":{}}}],["being",{"_index":5344,"title":{},"body":{"license.html":{}}}],["believe",{"_index":5549,"title":{},"body":{"license.html":{}}}],["below",{"_index":4330,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"license.html":{}}}],["benefit",{"_index":5542,"title":{},"body":{"license.html":{}}}],["besoin",{"_index":6422,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["besoins",{"_index":6084,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["best",{"_index":5652,"title":{},"body":{"license.html":{}}}],["better",{"_index":3762,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["between",{"_index":5188,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":5293,"title":{},"body":{"license.html":{}}}],["bien",{"_index":5835,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["binary",{"_index":2134,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/MongoDbTestInstance.html":{}}}],["birth",{"_index":6452,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["blacklistedheaders",{"_index":4353,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["blockingconnection",{"_index":832,"title":{},"body":{"modules/AppModule.html":{}}}],["body",{"_index":409,"title":{},"body":{"controllers/AgentsController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/RawBodyBufferOptions.html":{},"controllers/SmsadmController.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["body('schema",{"_index":2781,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["body.action",{"_index":1378,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.code",{"_index":4235,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body.id",{"_index":1379,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.id2",{"_index":2711,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["body.inetorgperson.cn",{"_index":2631,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.displayname",{"_index":2635,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.employeetype",{"_index":2630,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.givenname",{"_index":2633,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.sn?.touppercase",{"_index":2632,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.newpassword",{"_index":2745,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["body.payload",{"_index":1381,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.state",{"_index":2681,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.status",{"_index":2516,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["body.token",{"_index":4234,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body.uid",{"_index":4229,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body?.employeetype",{"_index":2793,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["bodyparser",{"_index":1810,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.json",{"_index":4360,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.urlencoded",{"_index":4357,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["boite",{"_index":4248,"title":{},"body":{"controllers/PasswdController.html":{}}}],["bon",{"_index":3159,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["boolean",{"_index":283,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["booléen",{"_index":6463,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bootstrap",{"_index":549,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["bootstraped",{"_index":3694,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["both",{"_index":5019,"title":{},"body":{"license.html":{}}}],["bouton",{"_index":6277,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["boutons",{"_index":6316,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["box",{"_index":5674,"title":{},"body":{"license.html":{}}}],["break",{"_index":3152,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/LifeCycle1752765731.html":{},"injectables/MigrationsService.html":{}}}],["browse",{"_index":5691,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":5689,"title":{},"body":{"modules.html":{}}}],["btimestamp",{"_index":4073,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["buffer.middleware.ts",{"_index":4352,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["builder.vue",{"_index":6221,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["bullmodule",{"_index":726,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmodule.forrootasync",{"_index":829,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmq",{"_index":101,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"interfaces/ExecuteJobOptions.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["business",{"_index":5559,"title":{},"body":{"license.html":{}}}],["c",{"_index":1559,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["c'est",{"_index":3776,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["cache",{"_index":904,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"dependencies.html":{}}}],["cached",{"_index":968,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["cahier",{"_index":5724,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["calculer",{"_index":6141,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["calculées",{"_index":6334,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["called",{"_index":885,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["callexception",{"_index":3082,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["callhandler",{"_index":2094,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["camelcase",{"_index":6485,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["camelcase.example",{"_index":6486,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["capacités",{"_index":5930,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["car",{"_index":6161,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["caracteres",{"_index":4464,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["caractères",{"_index":6494,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["caractères.example",{"_index":6497,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["carry",{"_index":5269,"title":{},"body":{"license.html":{}}}],["cart",{"_index":5860,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["cas",{"_index":5958,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["case",{"_index":3150,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/LifeCycle1752765731.html":{},"license.html":{}}}],["cases",{"_index":5362,"title":{},"body":{"license.html":{}}}],["catch",{"_index":262,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["catch((e",{"_index":1602,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["catch(error.validationerror",{"_index":4138,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["catch(exception",{"_index":598,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["catch(validationexception",{"_index":3039,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["catcherror",{"_index":905,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["catcherror((error",{"_index":971,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["cause",{"_index":5297,"title":{},"body":{"license.html":{}}}],["ce",{"_index":3184,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cease",{"_index":5456,"title":{},"body":{"license.html":{}}}],["ceci",{"_index":5921,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cela",{"_index":6163,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["celle",{"_index":6091,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["celles",{"_index":6088,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cert",{"_index":1813,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["certain",{"_index":4996,"title":{},"body":{"license.html":{}}}],["certaine",{"_index":6369,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["certains",{"_index":6244,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ces",{"_index":6039,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cessation",{"_index":5466,"title":{},"body":{"license.html":{}}}],["cet",{"_index":6149,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cette",{"_index":5928,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["chacune",{"_index":6246,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chaine",{"_index":3166,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["chalk",{"_index":4017,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["chalk.bold",{"_index":4065,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["champ",{"_index":2553,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champs",{"_index":2542,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["change",{"_index":177,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AuthController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/LocalStrategy.html":{},"classes/NeedChangePasswordDto.html":{},"controllers/PasswdController.html":{},"license.html":{}}}],["change(@body",{"_index":4226,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(body",{"_index":4185,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(passwddto",{"_index":1605,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["changed",{"_index":3805,"title":{},"body":{"interfaces/LifecycleSource.html":{},"controllers/PasswdController.html":{},"license.html":{}}}],["changement",{"_index":1604,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["changepassworddto",{"_index":1418,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["changepwdatnextlogin",{"_index":4375,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["changer",{"_index":2733,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["changes",{"_index":3579,"title":{},"body":{"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{}}}],["changes'})@get('recent",{"_index":3577,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["changing",{"_index":1629,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["channel",{"_index":1345,"title":{},"body":{"controllers/BackendsController.html":{}}}],["chaque",{"_index":2961,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["characterized",{"_index":5389,"title":{},"body":{"license.html":{}}}],["characters",{"_index":4321,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["charactères",{"_index":6398,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["charge",{"_index":4983,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["charges",{"_index":5725,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["chargés",{"_index":6181,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["chaîne",{"_index":6493,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["check",{"_index":1936,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/Filestorage.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["checkandcreateobjectclasses",{"_index":3051,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["checkandcreateobjectclasses(data",{"_index":3060,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["checkbox",{"_index":6269,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["checked",{"_index":4301,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["checking",{"_index":6197,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["checkinitoutdated",{"_index":1754,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["checkpwned",{"_index":4287,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["checks",{"_index":653,"title":{},"body":{"controllers/AppController.html":{},"interfaces/LifecycleSource.html":{}}}],["chemin",{"_index":6256,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chiffrement",{"_index":5800,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["child",{"_index":3790,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["children",{"_index":1993,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/LifecycleSource.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["choose",{"_index":5603,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":5607,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":4580,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["chunks",{"_index":4578,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["chunks.push(buffer.from(chunk",{"_index":4581,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["ci",{"_index":6077,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cipher",{"_index":1644,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipher.final('base64",{"_index":1651,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipher.getauthtag().tostring('base64",{"_index":1654,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipher.update",{"_index":1647,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipherdata",{"_index":1429,"title":{"interfaces/CipherData.html":{}},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["ciphers",{"_index":805,"title":{},"body":{"modules/AppModule.html":{}}}],["ciphertext",{"_index":1646,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["circumstances",{"_index":5218,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":5225,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5647,"title":{},"body":{"license.html":{}}}],["cl",{"_index":1497,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["claim",{"_index":5505,"title":{},"body":{"license.html":{}}}],["claims",{"_index":5516,"title":{},"body":{"license.html":{}}}],["clarifier",{"_index":5990,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["classe",{"_index":3181,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"overview.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["clear",{"_index":5332,"title":{},"body":{"license.html":{}}}],["cleardatabase",{"_index":4105,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["clearly",{"_index":5016,"title":{},"body":{"license.html":{}}}],["clearsession",{"_index":1104,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearsession(jwt",{"_index":1114,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli/agents.command",{"_index":562,"title":{},"body":{"modules/AgentsModule.html":{}}}],["client",{"_index":5901,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["climodule",{"_index":1761,"title":{"modules/CliModule.html":{}},"body":{"modules/CliModule.html":{},"modules.html":{},"overview.html":{}}}],["close",{"_index":1388,"title":{},"body":{"controllers/BackendsController.html":{}}}],["closely",{"_index":5643,"title":{},"body":{"license.html":{}}}],["cluster_agentsmodule",{"_index":552,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_exports",{"_index":553,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_providers",{"_index":554,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":717,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":718,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":719,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":1074,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":1077,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":1076,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":1075,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_backendsmodule",{"_index":1403,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_exports",{"_index":1406,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_imports",{"_index":1405,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_providers",{"_index":1404,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_climodule",{"_index":1762,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["cluster_climodule_imports",{"_index":1763,"title":{},"body":{"modules/CliModule.html":{}}}],["cluster_coremodule",{"_index":1977,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1978,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":1979,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule",{"_index":2265,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule_exports",{"_index":2266,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule_providers",{"_index":2267,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":2398,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":2399,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule",{"_index":2795,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_exports",{"_index":2797,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_providers",{"_index":2796,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule",{"_index":2920,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_exports",{"_index":2922,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_imports",{"_index":2921,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["cluster_identitiesmodule_providers",{"_index":2923,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule",{"_index":3043,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_exports",{"_index":3045,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_providers",{"_index":3044,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["cluster_jobsmodule",{"_index":3410,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_exports",{"_index":3411,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":3412,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule",{"_index":3516,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_exports",{"_index":3518,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_providers",{"_index":3517,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_lifecyclemodule",{"_index":3614,"title":{},"body":{"modules/LifecycleModule.html":{},"overview.html":{}}}],["cluster_lifecyclemodule_exports",{"_index":3615,"title":{},"body":{"modules/LifecycleModule.html":{},"overview.html":{}}}],["cluster_lifecyclemodule_imports",{"_index":3617,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["cluster_lifecyclemodule_providers",{"_index":3616,"title":{},"body":{"modules/LifecycleModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":3904,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":3905,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":3960,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":3962,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_providers",{"_index":3961,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_migrationsmodule",{"_index":3989,"title":{},"body":{"modules/MigrationsModule.html":{},"overview.html":{}}}],["cluster_migrationsmodule_providers",{"_index":3990,"title":{},"body":{"modules/MigrationsModule.html":{},"overview.html":{}}}],["cluster_passwdmodule",{"_index":4263,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_passwdmodule_imports",{"_index":4265,"title":{},"body":{"modules/PasswdModule.html":{}}}],["cluster_passwdmodule_providers",{"_index":4264,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":4420,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_exports",{"_index":4422,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_providers",{"_index":4421,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":4512,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":4513,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":4514,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["clé/valeur",{"_index":2552,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["clés",{"_index":6129,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cn",{"_index":4821,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["codage",{"_index":5838,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["code",{"_index":1492,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["code.dto",{"_index":1454,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["code.dto.ts",{"_index":4362,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.dto.ts:11",{"_index":4365,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.dto.ts:15",{"_index":4367,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.dto.ts:7",{"_index":4369,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.tostring(16",{"_index":1673,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["codes.enum.ts",{"_index":4734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["col",{"_index":2366,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["collect",{"_index":5581,"title":{},"body":{"license.html":{}}}],["collection",{"_index":1253,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Logger.html":{},"injectables/UniquenessMailValidator.html":{}}}],["collections",{"_index":4127,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["collections[key].deletemany",{"_index":4129,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["combination",{"_index":5589,"title":{},"body":{"license.html":{}}}],["combine",{"_index":5586,"title":{},"body":{"license.html":{}}}],["combined",{"_index":5288,"title":{},"body":{"license.html":{}}}],["comes",{"_index":5275,"title":{},"body":{"license.html":{}}}],["command",{"_index":329,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["commander",{"_index":336,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["commandrunner",{"_index":330,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["commands",{"_index":5138,"title":{},"body":{"license.html":{}}}],["comme",{"_index":5752,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comment",{"_index":2126,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MigrationsService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["commentaires",{"_index":6192,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comments",{"_index":2147,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["commercial",{"_index":5371,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":5530,"title":{},"body":{"license.html":{}}}],["common",{"_index":5366,"title":{},"body":{"license.html":{}}}],["commonlogdb",{"_index":3321,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["commonlogdb(payload",{"_index":3337,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["commun",{"_index":6387,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["communication",{"_index":5186,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["communications",{"_index":5791,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["compact",{"_index":6457,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["compagny/nestjs_module_factorydrive",{"_index":755,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["compagny/nestjs_module_restools",{"_index":443,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"dependencies.html":{}}}],["compares",{"_index":656,"title":{},"body":{"controllers/AppController.html":{}}}],["comparison",{"_index":701,"title":{},"body":{"controllers/AppController.html":{}}}],["compilation",{"_index":5283,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":5292,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":5564,"title":{},"body":{"license.html":{}}}],["compile",{"_index":6033,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compiler",{"_index":5170,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["complet",{"_index":5957,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["complete",{"_index":889,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["completed",{"_index":957,"title":{},"body":{"injectables/AppService.html":{},"controllers/BackendsController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"miscellaneous/enumerations.html":{}}}],["completer",{"_index":1734,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["completion",{"_index":5786,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["complexity",{"_index":4309,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["compliance",{"_index":5489,"title":{},"body":{"license.html":{}}}],["comply",{"_index":5210,"title":{},"body":{"license.html":{}}}],["complémentaires",{"_index":6433,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["complétée",{"_index":2679,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["component",{"_index":2367,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comportement",{"_index":6134,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["comportements",{"_index":6098,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compos",{"_index":2543,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["composant",{"_index":6214,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["composants",{"_index":6219,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compose",{"_index":4812,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["composition",{"_index":6324,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comprendre",{"_index":5817,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compris",{"_index":4801,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compréhension",{"_index":6196,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["compte",{"_index":1507,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["comptes",{"_index":1753,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["computer",{"_index":5108,"title":{},"body":{"license.html":{}}}],["computers",{"_index":5062,"title":{},"body":{"license.html":{}}}],["concerned",{"_index":3883,"title":{},"body":{"classes/Logger.html":{}}}],["concernedto",{"_index":3347,"title":{},"body":{"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["concernedtopart",{"_index":1778,"title":{"classes/ConcernedToPart.html":{}},"body":{"classes/ConcernedToPart.html":{},"classes/Jobs.html":{}}}],["concernedtopartdto",{"_index":1786,"title":{"classes/ConcernedToPartDTO.html":{}},"body":{"classes/ConcernedToPartDTO.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["concernedtopartschema",{"_index":1784,"title":{},"body":{"classes/ConcernedToPart.html":{},"classes/Jobs.html":{}}}],["concerning",{"_index":5588,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":5596,"title":{},"body":{"license.html":{}}}],["concernées",{"_index":6394,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["concernés",{"_index":6295,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conditioned",{"_index":5558,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":5071,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["config",{"_index":70,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["config.get('axios.options",{"_index":836,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('factorydrive.options",{"_index":834,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('ioredis.options",{"_index":828,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('ioredis.uri",{"_index":827,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('jwt.options.secret",{"_index":3433,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mongoose.options",{"_index":821,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.plugins",{"_index":816,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.uri",{"_index":823,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configinstance",{"_index":1793,"title":{"interfaces/ConfigInstance.html":{}},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["configmodule",{"_index":728,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{}}}],["configmodule.forroot",{"_index":763,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configobjectattributedto",{"_index":1877,"title":{"classes/ConfigObjectAttributeDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{}}}],["configobjectidentitiesdto",{"_index":1894,"title":{"classes/ConfigObjectIdentitiesDTO.html":{}},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/LifecycleSource.html":{}}}],["configobjectidentitiesdtowithsource",{"_index":3632,"title":{},"body":{"interfaces/LifecycleSource.html":{},"miscellaneous/typealiases.html":{}}}],["configobjectobjectclassdto",{"_index":1892,"title":{"classes/ConfigObjectObjectClassDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{}}}],["configobjectschemadto",{"_index":1893,"title":{"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configobjecttype",{"_index":1885,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"miscellaneous/enumerations.html":{}}}],["configs/identities/jsonforms",{"_index":2783,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/jsonforms/${schema",{"_index":2844,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/validations",{"_index":2888,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["configs/identities/validations/${key}.yml",{"_index":3119,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["configs/lifecycle",{"_index":3637,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["configservice",{"_index":85,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["configservice.get('ioredis.host",{"_index":830,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('ioredis.port",{"_index":831,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('jwt.options",{"_index":1096,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('passport.options",{"_index":1094,"title":{},"body":{"modules/AuthModule.html":{}}}],["configur",{"_index":6514,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configuration",{"_index":3651,"title":{},"body":{"interfaces/LifecycleSource.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configurations",{"_index":6079,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["configure",{"_index":2927,"title":{},"body":{"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configure(consumer",{"_index":2928,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["configurer",{"_index":6096,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["conformes",{"_index":6392,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaissance",{"_index":6370,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaître",{"_index":6263,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["connect",{"_index":3280,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{}}}],["connect(this._options.mongoose.uri",{"_index":3288,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["connect(uri)).connection",{"_index":4123,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["connecter",{"_index":5913,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["connection",{"_index":120,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"classes/EmployeeNumber1700395200.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/LifeCycle1752765731.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"injectables/UniquenessMailValidator.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["connection_error",{"_index":4762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connexion",{"_index":5919,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["consequence",{"_index":5477,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":5625,"title":{},"body":{"license.html":{}}}],["consider",{"_index":5682,"title":{},"body":{"license.html":{}}}],["considered",{"_index":4312,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"license.html":{}}}],["consistent",{"_index":5523,"title":{},"body":{"license.html":{}}}],["console",{"_index":1969,"title":{},"body":{"classes/ConsoleSession.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["console.error('erreur",{"_index":2102,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["console.error('error",{"_index":356,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.error('inetorgpersoncreatedto.initforfingerprint",{"_index":4912,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["console.log('agent",{"_index":352,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["console.log('count",{"_index":4606,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["console.log('data",{"_index":1190,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('debug",{"_index":4607,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["console.log('dynamic",{"_index":2899,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('error",{"_index":2659,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["console.log('generating",{"_index":2896,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('hard",{"_index":2898,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('indexes",{"_index":2100,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["console.log('keyring",{"_index":3469,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.log('modifi",{"_index":1757,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["console.log('payload",{"_index":1179,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('req",{"_index":3383,"title":{},"body":{"controllers/JobsController.html":{}}}],["console.log('validations",{"_index":2043,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["console.log(`error",{"_index":2891,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`file",{"_index":2849,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`generating",{"_index":2847,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`writing",{"_index":2884,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(e",{"_index":1178,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(errors",{"_index":5940,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["console.log(identity",{"_index":1279,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["console.log(user",{"_index":3878,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["consolelogger",{"_index":3279,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["consolesession",{"_index":1150,"title":{"classes/ConsoleSession.html":{}},"body":{"injectables/AuthService.html":{},"classes/ConsoleSession.html":{}}}],["conspicuously",{"_index":5257,"title":{},"body":{"license.html":{}}}],["const",{"_index":182,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/MailadmController.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constant_case.example",{"_index":6488,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantcase",{"_index":6487,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantes",{"_index":5950,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constantly",{"_index":5057,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":5201,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":3785,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["constraintkey",{"_index":3788,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["constraints",{"_index":4616,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["construct",{"_index":3772,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["constructeur",{"_index":5908,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"injectables/SettingsService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["constructor(@inject(request",{"_index":2026,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["constructor(@injectconnection",{"_index":3538,"title":{},"body":{"classes/LifeCycle1752765731.html":{},"injectables/UniquenessMailValidator.html":{}}}],["constructor(@injectmodel(agents.name",{"_index":580,"title":{},"body":{"injectables/AgentsService.html":{}}}],["constructor(@injectmodel(jobs.name",{"_index":3419,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(@injectmodel(keyrings.name",{"_index":3527,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["constructor(@injectmodel(logger.name",{"_index":3912,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(@injectmodel(settings.name",{"_index":255,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["constructor(@injectmodel(tasks.name",{"_index":4521,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(_model",{"_index":208,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["constructor(_options",{"_index":3335,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["constructor(auth",{"_index":3422,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(config",{"_index":3058,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["constructor(connection",{"_index":4590,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["constructor(context",{"_index":16,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["constructor(data",{"_index":618,"title":{},"body":{"classes/ApiSession.html":{}}}],["constructor(identitymodel",{"_index":2088,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["constructor(moduleref",{"_index":395,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["constructor(mongo",{"_index":2063,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/LifeCycle1752765731.html":{},"injectables/MigrationsService.html":{}}}],["constructor(payload",{"_index":4620,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["constructor(private",{"_index":470,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{}}}],["constructor(protected",{"_index":362,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["constructor(request",{"_index":2015,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["construed",{"_index":5569,"title":{},"body":{"license.html":{}}}],["construire",{"_index":6232,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["construit",{"_index":6230,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["consultez",{"_index":6265,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["consumer",{"_index":2931,"title":{},"body":{"modules/IdentitiesModule.html":{},"license.html":{}}}],["consumer.apply(ensureidentitiesindexmiddleware).forroutes('/management/identities",{"_index":2950,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["contact",{"_index":5663,"title":{},"body":{"license.html":{}}}],["contain",{"_index":5565,"title":{},"body":{"license.html":{}}}],["containing",{"_index":3574,"title":{},"body":{"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["contains",{"_index":3858,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["contenant",{"_index":2550,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["conteneur",{"_index":6307,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenir",{"_index":6491,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["content",{"_index":5200,"title":{},"body":{"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["contents",{"_index":5527,"title":{},"body":{"license.html":{}}}],["contentsecuritypolicy",{"_index":1829,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["contenu",{"_index":6348,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["context",{"_index":24,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"interfaces/CipherData.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/LifecycleSource.html":{},"classes/Logger.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"license.html":{}}}],["context?.eventemitter",{"_index":169,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.modulename",{"_index":171,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.moduleref",{"_index":51,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.req",{"_index":166,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.servicename",{"_index":173,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["contexte",{"_index":3185,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["contient",{"_index":6315,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["continue",{"_index":3189,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"classes/MongooseValidationFilter.html":{},"license.html":{}}}],["continued",{"_index":5380,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":5437,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":5575,"title":{},"body":{"license.html":{}}}],["contraint",{"_index":4599,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["contraint.key",{"_index":4604,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["contraint.primarykey",{"_index":4602,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["contrast",{"_index":4964,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":5513,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":5515,"title":{},"body":{"license.html":{}}}],["control",{"_index":2856,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"license.html":{}}}],["controlled",{"_index":5518,"title":{},"body":{"license.html":{}}}],["controller",{"_index":399,"title":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["controller('agents",{"_index":467,"title":{},"body":{"controllers/AgentsController.html":{}}}],["controller('auth",{"_index":1044,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('backends",{"_index":1354,"title":{},"body":{"controllers/BackendsController.html":{}}}],["controller('core",{"_index":1976,"title":{},"body":{"controllers/CoreController.html":{}}}],["controller('filestorage",{"_index":2210,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["controller('form",{"_index":2318,"title":{},"body":{"controllers/FormController.html":{}}}],["controller('identities",{"_index":2513,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["controller('jobs",{"_index":3379,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('keyrings",{"_index":3491,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["controller('lifecycle",{"_index":3587,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["controller('logger",{"_index":3903,"title":{},"body":{"controllers/LoggerController.html":{}}}],["controller('management",{"_index":3959,"title":{},"body":{"controllers/ManagementController.html":{}}}],["controller('management/identities/jsonforms",{"_index":2775,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["controller('management/identities/validation",{"_index":3032,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["controller('passwd",{"_index":4222,"title":{},"body":{"controllers/PasswdController.html":{}}}],["controller('settings",{"_index":4419,"title":{},"body":{"controllers/SettingsController.html":{}}}],["controller('settings/mail",{"_index":3946,"title":{},"body":{"controllers/MailadmController.html":{}}}],["controller('settings/passwdadm",{"_index":4281,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["controller('settings/sms",{"_index":4476,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["controller('tasks",{"_index":4511,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllername",{"_index":14,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["controllers",{"_index":401,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"controllers/LifecycleController.html":{},"modules/LifecycleModule.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["convenient",{"_index":5128,"title":{},"body":{"license.html":{}}}],["convert",{"_index":3704,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["converted",{"_index":1914,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["convertis",{"_index":6182,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["convertit",{"_index":3165,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["converts",{"_index":3706,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["convertsecondstocron(seconds",{"_index":3720,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["convey",{"_index":5115,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":5553,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":5390,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":5123,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":5436,"title":{},"body":{"license.html":{}}}],["conçu",{"_index":5805,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conçue",{"_index":4796,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cookie",{"_index":4686,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":3638,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["copy",{"_index":4949,"title":{},"body":{"license.html":{}}}],["copying",{"_index":2836,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["copyleft",{"_index":4954,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4942,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":5081,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":5215,"title":{},"body":{"license.html":{}}}],["core",{"_index":1972,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core.controller",{"_index":1989,"title":{},"body":{"modules/CoreModule.html":{}}}],["core.service",{"_index":1974,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core/agents/_dto/agents.dto",{"_index":338,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{}}}],["core/agents/_enum/agent",{"_index":4490,"title":{},"body":{"classes/StatePart.html":{}}}],["core/agents/_schemas/_parts/security.part.schema",{"_index":388,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/_parts/state.part.schema",{"_index":387,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/agents.schema",{"_index":560,"title":{},"body":{"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["core/agents/agents.module",{"_index":1086,"title":{},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/IdentitiesModule.html":{}}}],["core/agents/agents.service",{"_index":340,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["core/auth/_strategies/jwt.strategy",{"_index":1090,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/_strategies/local.strategy",{"_index":1091,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/auth.module",{"_index":1772,"title":{},"body":{"modules/CliModule.html":{}}}],["core/auth/auth.service",{"_index":1035,"title":{},"body":{"controllers/AuthController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{}}}],["core/backends/_enum/action",{"_index":1435,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["core/backends/backends.module",{"_index":1771,"title":{},"body":{"modules/CliModule.html":{},"modules/IdentitiesModule.html":{},"modules/PasswdModule.html":{}}}],["core/backends/backends.service",{"_index":1273,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["core/core.module",{"_index":729,"title":{},"body":{"modules/AppModule.html":{}}}],["core/entities",{"_index":6288,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["core/filestorage/_dto/filestorage.dto",{"_index":2969,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/filestorage/_enum/fs",{"_index":2139,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/filestorage/_schemas/filestorage.schema",{"_index":4558,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["core/filestorage/_services/transformers",{"_index":2271,"title":{},"body":{"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/filestorage/filestorage.module",{"_index":2940,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["core/filestorage/filestorage.service",{"_index":2627,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/jobs/_enums/state.enum",{"_index":3398,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["core/jobs/_schemas/jobs.schema",{"_index":1436,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["core/keyrings/_dto/keyrings.dto",{"_index":3461,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["core/keyrings/_schemas/keyrings.schema",{"_index":3462,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["core/keyrings/keyrings.module",{"_index":1769,"title":{},"body":{"modules/CliModule.html":{}}}],["core/keyrings/keyrings.service",{"_index":3463,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["corecontroller",{"_index":1970,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["coremodule",{"_index":720,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.register",{"_index":838,"title":{},"body":{"modules/AppModule.html":{}}}],["coreservice",{"_index":1973,"title":{"injectables/CoreService.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"overview.html":{}}}],["corps",{"_index":6357,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correctement",{"_index":6513,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correction",{"_index":5621,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":6434,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspondant",{"_index":2546,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["corresponding",{"_index":2873,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"license.html":{}}}],["correspondra",{"_index":6162,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["corrupted",{"_index":1167,"title":{},"body":{"injectables/AuthService.html":{}}}],["cost",{"_index":5317,"title":{},"body":{"license.html":{}}}],["count",{"_index":198,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"injectables/UniquenessMailValidator.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["count(filter",{"_index":220,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["count(res",{"_index":2589,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["countall",{"_index":2585,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["countall(res",{"_index":2596,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["counter",{"_index":1256,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["counterclaim",{"_index":5506,"title":{},"body":{"license.html":{}}}],["countries",{"_index":5112,"title":{},"body":{"license.html":{}}}],["country",{"_index":5545,"title":{},"body":{"license.html":{}}}],["counts",{"_index":2600,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"interfaces/LifecycleSource.html":{}}}],["cours",{"_index":1030,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MigrationsService.html":{}}}],["course",{"_index":5672,"title":{},"body":{"license.html":{}}}],["court",{"_index":5574,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5642,"title":{},"body":{"license.html":{}}}],["couvre",{"_index":6171,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["covenant",{"_index":5533,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":5364,"title":{},"body":{"license.html":{}}}],["covered",{"_index":5096,"title":{},"body":{"license.html":{}}}],["create",{"_index":199,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["create(@res",{"_index":473,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{}}}],["create(data",{"_index":226,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["create(res",{"_index":407,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["create.decorator",{"_index":447,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/KeyringsController.html":{}}}],["createassertions",{"_index":6061,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createassertions(service",{"_index":6064,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createattributes",{"_index":3052,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["createattributes(key",{"_index":3063,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["created",{"_index":353,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["created_at",{"_index":940,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["createdat",{"_index":3323,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/LifecycleSource.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createdby",{"_index":3277,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createerrorassertions(service",{"_index":6065,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel",{"_index":5955,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(identitiesmodel",{"_index":6027,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(model",{"_index":6021,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice",{"_index":5960,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice(identitiesservice",{"_index":6144,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["creates",{"_index":3652,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["createtokens",{"_index":1105,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtokens(identity",{"_index":1116,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":357,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{}}}],["creation",{"_index":3144,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["criterion",{"_index":5143,"title":{},"body":{"license.html":{}}}],["cron",{"_index":870,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{}}}],["cron(cronexpression.every_6_hours",{"_index":868,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["cronexpression",{"_index":908,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{}}}],["cronexpression.every_6_hours",{"_index":882,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["cronjob",{"_index":3631,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["cronjob(cronexpression",{"_index":3689,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["cross",{"_index":5504,"title":{},"body":{"license.html":{}}}],["crucial",{"_index":6158,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["crud",{"_index":5959,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crud.controller",{"_index":2941,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["crud.controller.ts",{"_index":2584,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:110",{"_index":2606,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:135",{"_index":2610,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:166",{"_index":2608,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:191",{"_index":2595,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:205",{"_index":2601,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:233",{"_index":2612,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:248",{"_index":2615,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:269",{"_index":2622,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:288",{"_index":2609,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:63",{"_index":2603,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.service",{"_index":1445,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{}}}],["crudmode",{"_index":6227,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crypto",{"_index":1041,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/TokenData.html":{}}}],["crypto.createcipheriv(passwdservice.token_algorithm",{"_index":1645,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.createdecipheriv(passwdservice.token_algorithm",{"_index":1676,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(13).tostring('hex",{"_index":1741,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(passwdservice.random_bytes_iv).tostring('base64",{"_index":1643,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(passwdservice.random_bytes_k).tostring('hex",{"_index":1582,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cryptographiques",{"_index":5796,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["créant",{"_index":5914,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["création",{"_index":2103,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["crée",{"_index":6011,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["créer",{"_index":5952,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["créée",{"_index":2646,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["créés",{"_index":5976,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ctx",{"_index":605,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/Identities.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["ctx.getrequest",{"_index":4139,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ctx.getresponse",{"_index":607,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["ctx.inetorgperson.employeetype",{"_index":2497,"title":{},"body":{"classes/Identities.html":{}}}],["cure",{"_index":5469,"title":{},"body":{"license.html":{}}}],["curl",{"_index":5872,"title":{},"body":{"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["current",{"_index":644,"title":{},"body":{"controllers/AppController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/MigrationsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["currentmajor",{"_index":712,"title":{},"body":{"controllers/AppController.html":{}}}],["currentminor",{"_index":713,"title":{},"body":{"controllers/AppController.html":{}}}],["currentpatch",{"_index":714,"title":{},"body":{"controllers/AppController.html":{}}}],["currentpath",{"_index":3769,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["currentpath}.${error.property",{"_index":3781,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["currentpath}[${error.property",{"_index":3778,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["currenttimestamp",{"_index":4007,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["currenttimestamp.tostring",{"_index":4054,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["currentversion",{"_index":689,"title":{},"body":{"controllers/AppController.html":{}}}],["currentversion.split('.').map(number",{"_index":694,"title":{},"body":{"controllers/AppController.html":{}}}],["custom",{"_index":4608,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["customarily",{"_index":5307,"title":{},"body":{"license.html":{}}}],["customer",{"_index":5313,"title":{},"body":{"license.html":{}}}],["customfields",{"_index":365,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Identities.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto",{"_index":498,"title":{"classes/CustomFieldsDto.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto:8",{"_index":517,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customs",{"_index":5885,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{}}}],["cwd",{"_index":4060,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["cycle",{"_index":5745,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cypherdata",{"_index":1666,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata.iv",{"_index":1677,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata.k",{"_index":1688,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.iv",{"_index":1669,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.k",{"_index":1670,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.tag",{"_index":1671,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["d",{"_index":1586,"title":{},"body":{"interfaces/CipherData.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitManyDto.html":{},"classes/LifeCycle1752765731.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'abstractserviceschema",{"_index":5972,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'action",{"_index":6317,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'appel",{"_index":6099,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'appels",{"_index":6140,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'array",{"_index":3777,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["d'attente",{"_index":5895,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["d'attributs",{"_index":6185,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'authentification",{"_index":1016,"title":{},"body":{"controllers/AuthController.html":{}}}],["d'autres",{"_index":6151,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'ensemble",{"_index":5890,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'entrypoints",{"_index":5743,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'erreur",{"_index":6191,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'identit",{"_index":5749,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'identitées",{"_index":1294,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["d'identités",{"_index":3022,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["d'informations",{"_index":6173,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'initialisation",{"_index":1686,"title":{},"body":{"interfaces/CipherData.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["d'installation",{"_index":5845,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'objectclass",{"_index":6510,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'objet",{"_index":3182,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'objets",{"_index":3186,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'onglets",{"_index":6353,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'outils",{"_index":6310,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'un",{"_index":2757,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'une",{"_index":2620,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'utilisation",{"_index":5847,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'échec",{"_index":6200,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'éléments",{"_index":6461,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d=days",{"_index":1949,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["d\\'envoyer",{"_index":4253,"title":{},"body":{"controllers/PasswdController.html":{}}}],["daemon",{"_index":913,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["daemon|sesame",{"_index":649,"title":{},"body":{"controllers/AppController.html":{}}}],["damages",{"_index":5623,"title":{},"body":{"license.html":{}}}],["danger",{"_index":5064,"title":{},"body":{"license.html":{}}}],["dans",{"_index":1653,"title":{},"body":{"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["data",{"_index":229,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"license.html":{}}}],["data.access_token",{"_index":1162,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.attributes",{"_index":3121,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.attributes[key",{"_index":3145,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.attributes[key][index",{"_index":3151,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.code",{"_index":1693,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["data.identity?.security?.secretkey",{"_index":1194,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.length",{"_index":2707,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"controllers/PasswdController.html":{}}}],["data.mime",{"_index":4560,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["data.newpassword",{"_index":1701,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["data.objectclasses",{"_index":3120,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.password",{"_index":581,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.security",{"_index":583,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.security.secretkey",{"_index":584,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.tag_name.replace(/^v",{"_index":711,"title":{},"body":{"controllers/AppController.html":{}}}],["data.token",{"_index":1692,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["data.toobject().state",{"_index":2642,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["data.validations",{"_index":3122,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data[key",{"_index":625,"title":{},"body":{"classes/ApiSession.html":{},"injectables/IdentitiesValidationService.html":{}}}],["data[key][index",{"_index":3156,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data[key][index][elems",{"_index":3161,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["database",{"_index":3287,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["datapart",{"_index":2000,"title":{"classes/DataPart.html":{}},"body":{"classes/DataPart.html":{},"classes/Logger.html":{}}}],["datapartschema",{"_index":2005,"title":{},"body":{"classes/DataPart.html":{},"classes/Logger.html":{}}}],["datastate",{"_index":2127,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["datastatus",{"_index":2444,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["datastatusenum",{"_index":1468,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["datastatusenum.active",{"_index":1627,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["datastatusenum.deleted",{"_index":1510,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["datastatusenum.inactive",{"_index":1509,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesActivationController.html":{},"interfaces/TokenData.html":{}}}],["datastatusenum.notinitialized",{"_index":2485,"title":{},"body":{"classes/Identities.html":{}}}],["datax=omit(data.toobject,['_id",{"_index":4243,"title":{},"body":{"controllers/PasswdController.html":{}}}],["date",{"_index":1746,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/Lifecycle.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["date.now",{"_index":3474,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/Lifecycle.html":{}}}],["date.settime(date.gettime",{"_index":1755,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["date})@isdatestring",{"_index":3599,"title":{},"body":{"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{}}}],["day",{"_index":3717,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["dayofweek",{"_index":3719,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["days",{"_index":1912,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"license.html":{}}}],["db",{"_index":3282,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["dbmigration",{"_index":4045,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["dbmigration.timestamp.tostring",{"_index":4051,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["de",{"_index":1027,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["debug",{"_index":807,"title":{},"body":{"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug(message",{"_index":3313,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["debug['_debug",{"_index":4230,"title":{},"body":{"controllers/PasswdController.html":{}}}],["debug['_errors",{"_index":2040,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug['_exception",{"_index":4140,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["debugging",{"_index":3656,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["december",{"_index":5238,"title":{},"body":{"license.html":{}}}],["decide",{"_index":5605,"title":{},"body":{"license.html":{}}}],["decipher",{"_index":1675,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decipher.setauthtag(buffer.from(cypherdata.tag",{"_index":1678,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decipher.update(token",{"_index":1680,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["declarations",{"_index":548,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["declining",{"_index":5429,"title":{},"body":{"license.html":{}}}],["decodeuricomponent(token",{"_index":1664,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decorators",{"_index":131,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FusionDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["decrypte",{"_index":1661,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decrypting",{"_index":1683,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decrypttoken(token",{"_index":1687,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decrypttokenwithcode(token",{"_index":1663,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["deemed",{"_index":5227,"title":{},"body":{"license.html":{}}}],["deepobject",{"_index":2957,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["def",{"_index":3146,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["def['items",{"_index":3157,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["def['items']['type",{"_index":3162,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["default",{"_index":299,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"interfaces/LifecycleSource.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"injectables/TransformersFilestorageService.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{}}}],["default_context",{"_index":3889,"title":{},"body":{"classes/Logger.html":{}}}],["default_data_type",{"_index":2003,"title":{},"body":{"classes/DataPart.html":{}}}],["default_message",{"_index":4629,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["default_status_code",{"_index":4628,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["default_third_party_auth",{"_index":383,"title":{},"body":{"classes/Agents.html":{}}}],["default_validations",{"_index":4630,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["defaultfile",{"_index":2831,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["defaultfiles",{"_index":2823,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["defaultmessage",{"_index":4589,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["defaultmessage(_",{"_index":1944,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["defaultmessage(validationarguments",{"_index":4592,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["defaults",{"_index":808,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["defaults/lifecycle",{"_index":3639,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["defaultsrc",{"_index":1831,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultstrategy",{"_index":1855,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultvalues",{"_index":195,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["defective",{"_index":5617,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":5572,"title":{},"body":{"license.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"license.html":{}}}],["definition",{"_index":5178,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":5075,"title":{},"body":{"license.html":{}}}],["deja",{"_index":3114,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["delai",{"_index":1752,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["delete",{"_index":200,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["delete(':_id([0",{"_index":422,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["delete(_id",{"_index":230,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["deleteassertions",{"_index":6073,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteassertions(service",{"_index":6075,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleted",{"_index":449,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{},"classes/LifeCycle1752765731.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deletedflag",{"_index":2445,"title":{},"body":{"classes/Identities.html":{}}}],["deleteerrorassertions(service",{"_index":6076,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteidentities",{"_index":1283,"title":{},"body":{"controllers/BackendsController.html":{}}}],["deleteidentities(res",{"_index":1288,"title":{},"body":{"controllers/BackendsController.html":{}}}],["deleteidentitiesdto",{"_index":1289,"title":{"classes/DeleteIdentitiesDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/DeleteIdentitiesDto.html":{}}}],["delimiter",{"_index":768,"title":{},"body":{"modules/AppModule.html":{}}}],["delivered",{"_index":1057,"title":{},"body":{"controllers/AuthController.html":{}}}],["demande",{"_index":1593,"title":{},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["demi",{"_index":1737,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["demon",{"_index":5886,"title":{"additional-documentation/documentation-technique/demon.html":{}},"body":{}}],["denied",{"_index":5395,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":5531,"title":{},"body":{"license.html":{}}}],["dense",{"_index":6275,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["deny",{"_index":3221,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["denying",{"_index":4993,"title":{},"body":{"license.html":{}}}],["departmentnumber",{"_index":4822,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["dependencies",{"_index":546,"title":{"dependencies.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprive",{"_index":5540,"title":{},"body":{"license.html":{}}}],["des",{"_index":1517,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitManyDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["desc",{"_index":1879,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{}}}],["descending",{"_index":3846,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["describe('create",{"_index":6063,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('delete",{"_index":6074,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findandcount",{"_index":6045,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findbyid",{"_index":6050,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findone",{"_index":6057,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('identities",{"_index":6002,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('update",{"_index":6067,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["description",{"_index":280,"title":{},"body":{"classes/ActivationDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/NeedChangePasswordDto.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/VerifyTokenDto.html":{},"index.html":{},"properties.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["designated",{"_index":5324,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4959,"title":{},"body":{"license.html":{}}}],["dessous",{"_index":6239,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessus",{"_index":6078,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["destfusionid",{"_index":2446,"title":{},"body":{"classes/Identities.html":{}}}],["destination",{"_index":2491,"title":{},"body":{"classes/Identities.html":{}}}],["destinées",{"_index":6367,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["detail",{"_index":5594,"title":{},"body":{"license.html":{}}}],["details",{"_index":3868,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["details.the",{"_index":5670,"title":{},"body":{"license.html":{}}}],["determine",{"_index":2865,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["determining",{"_index":5360,"title":{},"body":{"license.html":{}}}],["deux",{"_index":2488,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["dev",{"_index":1130,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev_token_path",{"_index":1100,"title":{},"body":{"injectables/AuthService.html":{}}}],["develop",{"_index":5650,"title":{},"body":{"license.html":{}}}],["developers",{"_index":5006,"title":{},"body":{"license.html":{}}}],["development",{"_index":791,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["devez",{"_index":6396,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["devices",{"_index":5028,"title":{},"body":{"license.html":{}}}],["devtokenpath",{"_index":1157,"title":{},"body":{"injectables/AuthService.html":{}}}],["diff",{"_index":3093,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["diff(objectclasses",{"_index":3174,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["differ",{"_index":5593,"title":{},"body":{"license.html":{}}}],["different",{"_index":5327,"title":{},"body":{"license.html":{}}}],["differently",{"_index":5418,"title":{},"body":{"license.html":{}}}],["différentes",{"_index":4799,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["différents",{"_index":6261,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dir",{"_index":810,"title":{},"body":{"modules/AppModule.html":{}}}],["directconnection",{"_index":1845,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["direction",{"_index":5214,"title":{},"body":{"license.html":{}}}],["directions",{"_index":5333,"title":{},"body":{"license.html":{}}}],["directives",{"_index":1830,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["directly",{"_index":5100,"title":{},"body":{"license.html":{}}}],["directory",{"_index":3237,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["disable",{"_index":43,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/ActivationDto.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disabled",{"_index":4758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disablelogs",{"_index":1373,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["disablelogsquery",{"_index":1299,"title":{},"body":{"controllers/BackendsController.html":{}}}],["disclaim",{"_index":5249,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":5608,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":5415,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":5556,"title":{},"body":{"license.html":{}}}],["discut",{"_index":5863,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["disks",{"_index":1815,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["display",{"_index":5282,"title":{},"body":{"license.html":{}}}],["displayed",{"_index":5422,"title":{},"body":{"license.html":{}}}],["displayname",{"_index":366,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["displays",{"_index":5125,"title":{},"body":{"license.html":{}}}],["disponible",{"_index":6512,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponibles",{"_index":6264,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disposition",{"_index":4567,"title":{},"body":{"injectables/TransformersFilestorageService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dispositions",{"_index":6305,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["distinguishing",{"_index":5597,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4950,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5660,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":5560,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":5072,"title":{},"body":{"license.html":{}}}],["divers",{"_index":6117,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["diverses",{"_index":6038,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["divulguer",{"_index":1578,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["doc",{"_index":5887,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["document",{"_index":125,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Lifecycle.html":{},"interfaces/LifecycleSource.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"controllers/PasswdController.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["document.constructor.modelname",{"_index":1250,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["documentation",{"_index":2960,"title":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-utilisateur.html":{}},"body":{"controllers/IdentitiesPhotoController.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["documented",{"_index":5402,"title":{},"body":{"license.html":{}}}],["documents",{"_index":6052,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["doesn't",{"_index":2869,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["doit",{"_index":5804,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["doivent",{"_index":5792,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["domains",{"_index":5050,"title":{},"body":{"license.html":{}}}],["donc",{"_index":4217,"title":{},"body":{"controllers/PasswdController.html":{}}}],["done",{"_index":3425,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MigrationsService.html":{}}}],["done(new",{"_index":3442,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(null",{"_index":3444,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["données",{"_index":4800,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dont_sync",{"_index":4785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dossier",{"_index":5977,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dot",{"_index":3774,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["doublon.controller",{"_index":2945,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["doublon.controller.ts",{"_index":2688,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doublon.controller.ts:27",{"_index":2700,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doublon.controller.ts:40",{"_index":2694,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doublon.service",{"_index":2703,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"modules/IdentitiesModule.html":{}}}],["doublons",{"_index":2698,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doubtful",{"_index":5361,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":5487,"title":{},"body":{"license.html":{}}}],["draft",{"_index":938,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["driver",{"_index":1816,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["dto",{"_index":2511,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{}}}],["dto.ts",{"_index":275,"title":{},"body":{"classes/ActivationDto.html":{},"classes/ForcePasswordDto.html":{}}}],["dto.ts:11",{"_index":287,"title":{},"body":{"classes/ActivationDto.html":{},"classes/ForcePasswordDto.html":{}}}],["dto.ts:7",{"_index":282,"title":{},"body":{"classes/ActivationDto.html":{},"classes/ForcePasswordDto.html":{}}}],["dtos",{"_index":3733,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["dtovalidationpipe",{"_index":745,"title":{"injectables/DtoValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["du",{"_index":1485,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dump_package_config",{"_index":4748,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dupont",{"_index":6412,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dur",{"_index":6386,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["durable",{"_index":5306,"title":{},"body":{"license.html":{}}}],["duration",{"_index":3707,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["during",{"_index":3642,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["dwelling",{"_index":5359,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":2895,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamically",{"_index":5180,"title":{},"body":{"license.html":{}}}],["dynamicconfig",{"_index":3239,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles",{"_index":2893,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles].filter((file",{"_index":2900,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["dynamicconfigpath",{"_index":2843,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicmodule",{"_index":1985,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/SettingsModule.html":{}}}],["dynamique",{"_index":6100,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiquement",{"_index":6095,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiques",{"_index":6107,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d{1,3}(?:\\.\\d{1,3}){3}|\\[(?:[0",{"_index":783,"title":{},"body":{"modules/AppModule.html":{}}}],["début",{"_index":6506,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déclenchement",{"_index":5747,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["découp",{"_index":5852,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["décrit",{"_index":6177,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["défaut",{"_index":6243,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["défini",{"_index":6407,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définies",{"_index":5839,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définies.example",{"_index":6492,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définir",{"_index":6138,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définis",{"_index":6108,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définissant",{"_index":6260,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["définissent",{"_index":6403,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définit",{"_index":6356,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définition",{"_index":5756,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["déj",{"_index":2678,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["délais",{"_index":5857,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["démarre",{"_index":6009,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["démon",{"_index":4815,"title":{},"body":{"index.html":{}}}],["démontrant",{"_index":6152,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dépendances",{"_index":5898,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["déport",{"_index":5992,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dérivées",{"_index":5923,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["désirés",{"_index":6443,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["détaill",{"_index":6082,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détaillées",{"_index":6174,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détails",{"_index":2963,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déterminer",{"_index":6335,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["développements",{"_index":5822,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développer",{"_index":5728,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développeurs",{"_index":5814,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["e",{"_index":263,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["e.stack",{"_index":4094,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["e?.response?.error?.response",{"_index":1635,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["e?.response?.job?.status",{"_index":1634,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["e?.response?.status",{"_index":1631,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["each",{"_index":530,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AppService.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"interfaces/LifecycleSource.html":{},"classes/SecurityPartDTO.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{}}}],["earlier",{"_index":5095,"title":{},"body":{"license.html":{}}}],["ecriture",{"_index":5943,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["effect",{"_index":5639,"title":{},"body":{"license.html":{}}}],["effected",{"_index":5247,"title":{},"body":{"license.html":{}}}],["effective",{"_index":5228,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":5066,"title":{},"body":{"license.html":{}}}],["effectue",{"_index":3027,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["effectuées",{"_index":6420,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["efficacement",{"_index":5819,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["efforts",{"_index":5498,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":5664,"title":{},"body":{"license.html":{}}}],["element",{"_index":2872,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elements",{"_index":2854,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elems",{"_index":3160,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["elle",{"_index":5896,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["email",{"_index":320,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["email.example",{"_index":6501,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["emailattribute",{"_index":4288,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["embodied",{"_index":5301,"title":{},"body":{"license.html":{}}}],["emetteur",{"_index":3927,"title":{},"body":{"classes/MailSettingsDto.html":{},"classes/SmsSettingsDto.html":{}}}],["emitted",{"_index":3802,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["emitter",{"_index":160,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"interfaces/LifecycleSource.html":{},"dependencies.html":{}}}],["emplacements",{"_index":6318,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["employee",{"_index":2059,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employeenumber",{"_index":2073,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employeenumber.map(string",{"_index":2081,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["employeenumber1700395200",{"_index":2057,"title":{"classes/EmployeeNumber1700395200.html":{}},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["employeenumber[0",{"_index":2080,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["employeenumbers",{"_index":4851,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["employeenumbers.every((employeenumber",{"_index":4853,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["employeetype",{"_index":2792,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employer",{"_index":5675,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1569,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["en",{"_index":1029,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enable",{"_index":286,"title":{},"body":{"classes/ActivationDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"license.html":{}}}],["enabled",{"_index":1156,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/MongoosePlugin.html":{}}}],["enableimplicitconversion",{"_index":2028,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["enables",{"_index":5117,"title":{},"body":{"license.html":{}}}],["encodeuricomponent(ciphertext",{"_index":1656,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["encountered",{"_index":3641,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["end",{"_index":878,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["endpoint",{"_index":636,"title":{},"body":{"controllers/AppController.html":{},"controllers/IdentitiesPhotoController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["enforce",{"_index":5532,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":5252,"title":{},"body":{"license.html":{}}}],["enr",{"_index":258,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["enr.parameters",{"_index":261,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["enregistre",{"_index":1652,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["enregistrement",{"_index":5755,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ensure",{"_index":3721,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ensureidentitiesindexmiddleware",{"_index":2085,"title":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"modules/IdentitiesModule.html":{}}}],["ensures",{"_index":696,"title":{},"body":{"controllers/AppController.html":{}}}],["entered",{"_index":5566,"title":{},"body":{"license.html":{}}}],["entier.example",{"_index":6473,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entire",{"_index":5273,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":5583,"title":{},"body":{"license.html":{}}}],["entite",{"_index":2577,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["entity",{"_index":1217,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["entityid",{"_index":391,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["entre",{"_index":4798,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["entropy",{"_index":4310,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"dependencies.html":{}}}],["entrée",{"_index":6282,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enum",{"_index":888,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/Lifecycle.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/StatePart.html":{}}}],["enumerations",{"_index":4727,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelope",{"_index":6251,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.assigned",{"_index":6299,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.observers",{"_index":6296,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.senders",{"_index":6273,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["enveloppe",{"_index":6252,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envoi",{"_index":1499,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["envoie",{"_index":1488,"title":{},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"interfaces/TokenData.html":{}}}],["envoy",{"_index":1552,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["envoyées",{"_index":6400,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["equal",{"_index":3009,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{},"additional-documentation/filtres-api.html":{}}}],["equivalent",{"_index":5204,"title":{},"body":{"license.html":{}}}],["err",{"_index":1351,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"classes/MongooseValidationFilter.html":{},"injectables/TransformersFilestorageService.html":{}}}],["err.errors",{"_index":4147,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key].message",{"_index":4153,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints",{"_index":4148,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints'][ckey",{"_index":4152,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['property",{"_index":4150,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.message",{"_index":4155,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err['instancepath'].substring(1",{"_index":3232,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["err['message",{"_index":3233,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["erreur",{"_index":1511,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["erreurs",{"_index":6112,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["erroneously",{"_index":5026,"title":{},"body":{"license.html":{}}}],["error",{"_index":355,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"injectables/AppService.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ShutdownObserver.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('erreur",{"_index":6146,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('error",{"_index":4100,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["error('moduleref",{"_index":111,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["error('request",{"_index":181,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["error('service",{"_index":186,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["error(`validation",{"_index":3756,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["error(message",{"_index":3295,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["error.casterror",{"_index":4134,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.children",{"_index":2051,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/LifecycleSource.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.children.foreach(childerror",{"_index":3793,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["error.children.length",{"_index":2049,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/LifecycleSource.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.constraints",{"_index":2045,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/LifecycleSource.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.getresponse",{"_index":2662,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["error.message",{"_index":974,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["error.property",{"_index":2047,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/LifecycleSource.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.property}.${errorchild.property",{"_index":2053,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.stack",{"_index":2829,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["error.validationerror",{"_index":4133,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.validations",{"_index":2660,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["error['target",{"_index":2042,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild",{"_index":2050,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.children.length",{"_index":2055,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.constraints",{"_index":2052,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorhttpstatuscode",{"_index":1369,"title":{},"body":{"controllers/BackendsController.html":{}}}],["errormessages",{"_index":3782,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["errormessages.push(...formaterror(childerror",{"_index":3794,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["errormessages.push(`property",{"_index":3787,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["erroronnotfound",{"_index":2987,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["errors",{"_index":2030,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["errors.foreach(error",{"_index":3796,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["errors.map((error",{"_index":2041,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorschemadto",{"_index":2104,"title":{"classes/ErrorSchemaDto.html":{}},"body":{"classes/ErrorSchemaDto.html":{}}}],["eslint",{"_index":42,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{}}}],["eslint/no",{"_index":46,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{}}}],["espaces",{"_index":6505,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["essential",{"_index":5165,"title":{},"body":{"license.html":{}}}],["est",{"_index":1496,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et",{"_index":1314,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et/ou",{"_index":5764,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["etc",{"_index":5785,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["etre",{"_index":4345,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["even",{"_index":5635,"title":{},"body":{"license.html":{}}}],["event",{"_index":1309,"title":{},"body":{"controllers/BackendsController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"license.html":{}}}],["event.result",{"_index":3822,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["event.result._id",{"_index":3823,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["event.updated",{"_index":3814,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["event.updated._id",{"_index":3815,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["eventemitter",{"_index":78,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["eventemitter2",{"_index":93,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["eventemittermodule",{"_index":757,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":766,"title":{},"body":{"modules/AppModule.html":{}}}],["events",{"_index":3800,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["events_url",{"_index":928,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["everyone",{"_index":4947,"title":{},"body":{"license.html":{}}}],["ex",{"_index":1216,"title":{},"body":{"injectables/AuthService.html":{}}}],["exact",{"_index":5093,"title":{},"body":{"license.html":{}}}],["example",{"_index":292,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{},"classes/VerifyTokenDto.html":{},"license.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["example(params",{"_index":5937,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["example.validator.ts",{"_index":4588,"title":{},"body":{"injectables/UniquenessMailValidator.html":{},"miscellaneous/typealiases.html":{}}}],["example.validator.ts:15",{"_index":4591,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["example.validator.ts:17",{"_index":4596,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["example.validator.ts:43",{"_index":4593,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["examplequeueservice",{"_index":5935,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["examples",{"_index":1916,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["except",{"_index":5106,"title":{},"body":{"license.html":{}}}],["exception",{"_index":602,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["exception.constructor.name",{"_index":4146,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exception.filter.ts",{"_index":596,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.filter.ts:5",{"_index":601,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":3040,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.getvalidations",{"_index":3042,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.message",{"_index":3041,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception['message",{"_index":610,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exception['name",{"_index":611,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfactory",{"_index":2029,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["exceptionfilter",{"_index":597,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exceptions",{"_index":5405,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["excludeagenttype",{"_index":3874,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["excluded",{"_index":5350,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":5570,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":5657,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":5524,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":5208,"title":{},"body":{"license.html":{}}}],["exclusivemaximum",{"_index":6477,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exclusiveminimum",{"_index":6475,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["excuse",{"_index":5576,"title":{},"body":{"license.html":{}}}],["executable",{"_index":5155,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1303,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"license.html":{}}}],["executed",{"_index":4068,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["executejob",{"_index":1284,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executejob(res",{"_index":1296,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executejobdto",{"_index":1297,"title":{"classes/ExecuteJobDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/ExecuteJobDto.html":{}}}],["executejoboptions",{"_index":2123,"title":{"interfaces/ExecuteJobOptions.html":{}},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["executing",{"_index":5107,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":2095,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["exemple",{"_index":5949,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exemples",{"_index":5964,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exercise",{"_index":5499,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":5248,"title":{},"body":{"license.html":{}}}],["exhaustive",{"_index":5812,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exigences",{"_index":5788,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exist",{"_index":1165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"injectables/UniquenessMailValidator.html":{}}}],["existe",{"_index":1581,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["exists",{"_index":3684,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["existssync",{"_index":1148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(devtokenpath",{"_index":1160,"title":{},"body":{"injectables/AuthService.html":{}}}],["existssync(dynamicconfigpath",{"_index":2845,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(filepath",{"_index":2850,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(hardconfigpath",{"_index":2846,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(path",{"_index":3190,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["expect",{"_index":4143,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["expected",{"_index":5369,"title":{},"body":{"license.html":{}}}],["expects",{"_index":5368,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":1170,"title":{},"body":{"injectables/AuthService.html":{}}}],["explains",{"_index":5017,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":47,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["explicitly",{"_index":5197,"title":{},"body":{"license.html":{}}}],["explode",{"_index":2958,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exports",{"_index":551,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["exposition",{"_index":5742,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["express",{"_index":158,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"injectables/LocalStrategy.html":{},"controllers/MailadmController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":2176,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["express.user",{"_index":164,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/LocalStrategy.html":{}}}],["expressed",{"_index":5610,"title":{},"body":{"license.html":{}}}],["expression",{"_index":883,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["expressly",{"_index":5451,"title":{},"body":{"license.html":{}}}],["extend",{"_index":5053,"title":{},"body":{"license.html":{}}}],["extended",{"_index":4359,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"license.html":{}}}],["extends",{"_index":65,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["extensibilit",{"_index":5803,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["extensions",{"_index":5287,"title":{},"body":{"license.html":{}}}],["extent",{"_index":5127,"title":{},"body":{"license.html":{}}}],["extraction",{"_index":6184,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["extractjwt",{"_index":3430,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":3435,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extrasearch",{"_index":2221,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["extrasearch['hidden",{"_index":2222,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f",{"_index":4775,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["f:]+)\\]):(\\d",{"_index":784,"title":{},"body":{"modules/AppModule.html":{}}}],["f]{24",{"_index":486,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})')@apiparam({name",{"_index":418,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})/raw",{"_index":2228,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f]{24})/raw')@apiparam({name",{"_index":2188,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f]{24})/state",{"_index":2672,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["f]{24})/state')@apiparam({name",{"_index":2614,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["fa",{"_index":417,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["faciliter",{"_index":4797,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["facilities",{"_index":5209,"title":{},"body":{"license.html":{}}}],["facsimiletelephonenumber",{"_index":4823,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["factorydrive",{"_index":1796,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["factorydrivemodule",{"_index":754,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["factorydrivemodule.forrootasync",{"_index":833,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["facultatifs",{"_index":6361,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["failed",{"_index":1400,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/LifecycleSource.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/enumerations.html":{}}}],["fails",{"_index":3088,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["failure",{"_index":5633,"title":{},"body":{"license.html":{}}}],["fair",{"_index":5203,"title":{},"body":{"license.html":{}}}],["fall",{"_index":3730,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["false",{"_index":116,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["falsetoken",{"_index":1583,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["false})@apiproperty({example",{"_index":3919,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["false})@get('/get",{"_index":646,"title":{},"body":{"controllers/AppController.html":{}}}],["false})@isoptional",{"_index":4868,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["false})@validatenested({each",{"_index":1961,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["famille",{"_index":6388,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["family",{"_index":5355,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":5090,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4688,"title":{},"body":{"dependencies.html":{}}}],["fatal",{"_index":3319,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fatal(message",{"_index":3318,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["faut",{"_index":3200,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["favor",{"_index":5363,"title":{},"body":{"license.html":{}}}],["feature",{"_index":5131,"title":{},"body":{"license.html":{}}}],["fee",{"_index":5001,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":859,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fetches",{"_index":856,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fetchgithubrelease",{"_index":847,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fetchgithubrelease(project",{"_index":853,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fetching",{"_index":973,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fiabilit",{"_index":5827,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["fichier",{"_index":3192,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fichiers",{"_index":5994,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["field",{"_index":1232,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"injectables/UniquenessMailValidator.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["field.dto",{"_index":2417,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["field.part.schema",{"_index":2428,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["field]=search",{"_index":5868,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["fieldname",{"_index":2420,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["fields",{"_index":2405,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fields.dto",{"_index":528,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["fields.dto.ts",{"_index":1998,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["fields.dto.ts:8",{"_index":1999,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["figma",{"_index":4818,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["file.endswith('.yaml",{"_index":3741,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["file.endswith('.yml",{"_index":3740,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["file.match(/\\d{10",{"_index":4063,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["file.schema.endswith('.yml",{"_index":2901,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileinterceptor",{"_index":2200,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["fileisrequired",{"_index":2215,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filename",{"_index":4066,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["filename=\"${(data",{"_index":4569,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["fileobj",{"_index":2905,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.file.replace('.ui.yml",{"_index":2907,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileobj.file.replace('.yml",{"_index":3245,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["fileobj.path}/${fileobj.file",{"_index":2906,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.source",{"_index":3246,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filepath",{"_index":2790,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["filepaths",{"_index":2909,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["filepaths.find((path",{"_index":2915,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["files",{"_index":2822,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["files.filter((file",{"_index":4061,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["files.includes(file",{"_index":2830,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["files.length",{"_index":2903,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["files.sort((a",{"_index":4069,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["filesmap",{"_index":3240,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filesmap.has(target.file",{"_index":3242,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filesmap.set(target.file",{"_index":3241,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filestorage",{"_index":2154,"title":{"classes/Filestorage.html":{}},"body":{"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["filestorage.controller",{"_index":2270,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["filestorage.name",{"_index":2272,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["filestorage.service",{"_index":2207,"title":{},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filestorage.service.ts",{"_index":4527,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:13",{"_index":4534,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:19",{"_index":4540,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:45",{"_index":4548,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:58",{"_index":4546,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:71",{"_index":4542,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:8",{"_index":4557,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:86",{"_index":4544,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:99",{"_index":4537,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage/filestorage.module",{"_index":1991,"title":{},"body":{"modules/CoreModule.html":{}}}],["filestoragecontroller",{"_index":2171,"title":{"controllers/FilestorageController.html":{}},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{}}}],["filestoragecontroller.projection",{"_index":2218,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["filestoragecreatedto",{"_index":2140,"title":{"classes/FilestorageCreateDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filestoragecreatedto:26",{"_index":2264,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:31",{"_index":2261,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:37",{"_index":2262,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:42",{"_index":2257,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:47",{"_index":2259,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:52",{"_index":2256,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:57",{"_index":2260,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:62",{"_index":2258,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:67",{"_index":2263,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:72",{"_index":2255,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragedto",{"_index":2151,"title":{"classes/FilestorageDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filestoragemodule",{"_index":1980,"title":{"modules/FilestorageModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestorageschema",{"_index":2167,"title":{},"body":{"classes/Filestorage.html":{},"modules/FilestorageModule.html":{}}}],["filestorageschema.virtual('filename').get(function",{"_index":2169,"title":{},"body":{"classes/Filestorage.html":{}}}],["filestorageservice",{"_index":2208,"title":{},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"overview.html":{}}}],["filestorageupdatedto",{"_index":2152,"title":{"classes/FilestorageUpdateDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["fileuploaddto",{"_index":2131,"title":{"classes/FileUploadDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["file}':\\n${formattederrors",{"_index":3757,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["filled",{"_index":6274,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["filter",{"_index":225,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filter.dto",{"_index":2972,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["filter.dto.ts",{"_index":4171,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filter.dto.ts:1",{"_index":4172,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filtering",{"_index":3866,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["filteroptions",{"_index":429,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{}}}],["filterquery",{"_index":221,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filters",{"_index":2665,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/filtres-api.html":{}}}],["filters[=subject]=53",{"_index":5869,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["filters[^sequence]=/53",{"_index":5876,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["filters[key",{"_index":3006,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["filters[prefix",{"_index":5867,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["filterschema",{"_index":427,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["filterschema(value",{"_index":2668,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["filtersquery",{"_index":2985,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["filtersquery.length",{"_index":3003,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["filtres",{"_index":2593,"title":{"additional-documentation/filtres-api.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/filtres-api.html":{}}}],["fin",{"_index":6285,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["finally",{"_index":1228,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["finalpath",{"_index":2914,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["finaux",{"_index":5848,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["find",{"_index":201,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"license.html":{}}}],["find(filter",{"_index":234,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findall",{"_index":2801,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findandcount",{"_index":202,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcount(filter",{"_index":238,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findandcountassertions",{"_index":6042,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcountassertions(service",{"_index":6047,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcounterrorassertions(service",{"_index":6048,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid",{"_index":203,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid(_id",{"_index":240,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["findbyid(id",{"_index":4403,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["findbyidassertions",{"_index":6049,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyidassertions(service",{"_index":6051,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyiderrorassertions(service",{"_index":6053,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone",{"_index":204,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone(filter",{"_index":242,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findone(schema",{"_index":2805,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findoneassertions",{"_index":6054,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneassertions(service",{"_index":6058,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneerrorassertions(service",{"_index":6060,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fingerprint",{"_index":2145,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["finishedat",{"_index":3348,"title":{},"body":{"classes/Jobs.html":{}}}],["fire",{"_index":3824,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["firelifecycleevent(before",{"_index":3829,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["firemessage(observer",{"_index":1344,"title":{},"body":{"controllers/BackendsController.html":{}}}],["first",{"_index":2437,"title":{},"body":{"classes/FusionDto.html":{},"license.html":{}}}],["firstvaluefrom",{"_index":906,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fitness",{"_index":5613,"title":{},"body":{"license.html":{}}}],["fix",{"_index":3297,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fixed",{"_index":5305,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":6106,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["flatten",{"_index":2876,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["flexible",{"_index":5741,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["flow",{"_index":5187,"title":{},"body":{"license.html":{}}}],["fois",{"_index":6105,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["follow",{"_index":5074,"title":{},"body":{"license.html":{}}}],["followers_url",{"_index":921,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["following",{"_index":3075,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["following_url",{"_index":922,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fonction",{"_index":2996,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fonctionnalit",{"_index":5856,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnalités",{"_index":5736,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fonctionne",{"_index":5970,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnement",{"_index":6056,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctions",{"_index":2592,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fontsrc",{"_index":1836,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["forbid",{"_index":5246,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":1138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["force",{"_index":2726,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesUpsertController.html":{},"license.html":{}}}],["forcepassword",{"_index":2722,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword(@res",{"_index":2743,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword(res",{"_index":2724,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword.controller",{"_index":2946,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["forcepassword.controller.ts",{"_index":2721,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword.controller.ts:20",{"_index":2728,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword.controller.ts:37",{"_index":2736,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["forcepassword.service",{"_index":2739,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{}}}],["forcepassworddto",{"_index":2273,"title":{"classes/ForcePasswordDto.html":{}},"body":{"classes/ForcePasswordDto.html":{},"controllers/IdentitiesForcePasswordController.html":{}}}],["forcestring",{"_index":2986,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["form",{"_index":2275,"title":{"classes/Form.html":{}},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["form.controller",{"_index":2402,"title":{},"body":{"modules/FormModule.html":{}}}],["form.name",{"_index":2403,"title":{},"body":{"modules/FormModule.html":{}}}],["form.service",{"_index":2316,"title":{},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["format",{"_index":664,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/LifecycleSource.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["formaterror",{"_index":3768,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["formats",{"_index":3095,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{}}}],["formatted",{"_index":3764,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["formattederrors",{"_index":3754,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["formatvalidationerrors(errors",{"_index":3765,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["formcontroller",{"_index":2300,"title":{"controllers/FormController.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["formcontroller.projection",{"_index":2321,"title":{},"body":{"controllers/FormController.html":{}}}],["formcreatedto",{"_index":2327,"title":{"classes/FormCreateDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formcreatedto:12",{"_index":2357,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:17",{"_index":2352,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:21",{"_index":2358,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:26",{"_index":2351,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:31",{"_index":2354,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:35",{"_index":2356,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:39",{"_index":2355,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:44",{"_index":2353,"title":{},"body":{"classes/FormDto.html":{}}}],["formdto",{"_index":2302,"title":{"classes/FormDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formdto)@apiresponse({type",{"_index":2304,"title":{},"body":{"controllers/FormController.html":{}}}],["formfielddto",{"_index":2359,"title":{"classes/FormFieldDto.html":{}},"body":{"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{}}}],["formfieldpart",{"_index":2383,"title":{"classes/FormFieldPart.html":{}},"body":{"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{}}}],["formfieldpartschema",{"_index":2395,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["formmodule",{"_index":2397,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules.html":{},"overview.html":{}}}],["forms",{"_index":2296,"title":{},"body":{"classes/Form.html":{},"controllers/IdentitiesJsonFormsController.html":{},"license.html":{}}}],["formschema",{"_index":2298,"title":{},"body":{"classes/Form.html":{},"modules/FormModule.html":{}}}],["formsectiondto",{"_index":2347,"title":{"classes/FormSectionDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{}}}],["formsectionpart",{"_index":2294,"title":{"classes/FormSectionPart.html":{}},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formsectionpartschema",{"_index":2286,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formservice",{"_index":2315,"title":{"injectables/FormService.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"overview.html":{}}}],["formtypelist",{"_index":2341,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formtypes",{"_index":2291,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formtypes.base",{"_index":2297,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formulaire",{"_index":6215,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formulaires",{"_index":5884,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formupdatedto",{"_index":2311,"title":{"classes/FormUpdateDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["forwardref",{"_index":2932,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["found",{"_index":2674,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"license.html":{}}}],["found.dto.ts",{"_index":4159,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:6",{"_index":4161,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:9",{"_index":4160,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["foundation",{"_index":4944,"title":{},"body":{"license.html":{}}}],["fourni",{"_index":1493,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fournie",{"_index":5813,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournies",{"_index":6035,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournir",{"_index":5892,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["fournis",{"_index":2594,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["fournit",{"_index":4456,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fr",{"_index":1876,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["fr/${project}/releases/latest`).pipe",{"_index":970,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["fr_fr",{"_index":3253,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["fr_fr.utf",{"_index":3252,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["framesrc",{"_index":1834,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["framework",{"_index":6228,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["frameworks",{"_index":5770,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["free",{"_index":4943,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":4962,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":5003,"title":{},"body":{"license.html":{}}}],["front",{"_index":1495,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["frontend",{"_index":5734,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["frontpwd",{"_index":1797,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["fs",{"_index":899,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fs/promises",{"_index":4024,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["fstype",{"_index":2137,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"miscellaneous/enumerations.html":{}}}],["fstype.file",{"_index":2142,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["fstypelist",{"_index":2138,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["fulfilling",{"_index":5231,"title":{},"body":{"license.html":{}}}],["full",{"_index":5659,"title":{},"body":{"license.html":{}}}],["function",{"_index":1251,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/MigrationsService.html":{},"interfaces/RawBodyBufferOptions.html":{},"injectables/UniquenessMailValidator.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["functioning",{"_index":5381,"title":{},"body":{"license.html":{}}}],["fundamentally",{"_index":5033,"title":{},"body":{"license.html":{}}}],["further",{"_index":5326,"title":{},"body":{"license.html":{}}}],["fusion",{"_index":2490,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{}}}],["fusion(body",{"_index":2690,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["fusiondto",{"_index":2433,"title":{"classes/FusionDto.html":{}},"body":{"classes/FusionDto.html":{},"controllers/IdentitiesDoublonController.html":{}}}],["fusionne",{"_index":2692,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["fusionnée",{"_index":2493,"title":{},"body":{"classes/Identities.html":{}}}],["fusionnées",{"_index":2487,"title":{},"body":{"classes/Identities.html":{}}}],["future",{"_index":5055,"title":{},"body":{"license.html":{}}}],["garantir",{"_index":5825,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gcm",{"_index":1482,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["general",{"_index":4938,"title":{},"body":{"license.html":{}}}],["generally",{"_index":5176,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1258,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["generate(@res",{"_index":2780,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(res",{"_index":2754,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(undefined",{"_index":2807,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["generateall",{"_index":2752,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["generateall(@res",{"_index":2777,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generateall(res",{"_index":2761,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["genere",{"_index":1638,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["generic_error",{"_index":4760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generic_stopped",{"_index":4761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gestion",{"_index":5738,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["get('/get",{"_index":685,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':_id([0",{"_index":415,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["get(':schema",{"_index":2786,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get(':schema')@apioperation({summary",{"_index":3021,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["get('count",{"_index":2663,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('count')@apioperation({summary",{"_index":2590,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('duplicates",{"_index":2704,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["get('duplicates')@apioperation({summary",{"_index":2696,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["get('get",{"_index":3948,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get('get')@apioperation({summary",{"_index":3937,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get('getdeleted",{"_index":2653,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('getdeleted')@apipaginateddecorator(undefined",{"_index":2605,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('getpolicies",{"_index":4240,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["get('getpolicies')@apioperation({summary",{"_index":4193,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["get('identity/:identityid",{"_index":3588,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["get('ioutdated",{"_index":4261,"title":{},"body":{"controllers/PasswdController.html":{}}}],["get('ioutdated')@apioperation({summary",{"_index":4216,"title":{},"body":{"controllers/PasswdController.html":{}}}],["get('path",{"_index":2224,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path')@apireadresponsedecorator(filestoragedto",{"_index":2182,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path/raw",{"_index":2234,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path/raw')@apireadresponsedecorator(filestoragedto)@apiquery({name",{"_index":2185,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('photo/raw",{"_index":2980,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["get('recent",{"_index":3595,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["get('session",{"_index":1050,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('session')@useguards(undefined)@apioperation({summary",{"_index":1025,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('stats",{"_index":3593,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["get()@apioperation({summary",{"_index":630,"title":{},"body":{"controllers/AppController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get()@apipaginateddecorator(undefined",{"_index":430,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["get(@res",{"_index":3949,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get(args.object",{"_index":4601,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["get(identity.toobject",{"_index":1528,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["get(res",{"_index":3936,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get(value",{"_index":4603,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["getcontrollername",{"_index":27,"title":{},"body":{"classes/AbstractController.html":{}}}],["getdeleted",{"_index":2586,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["getdeleted(res",{"_index":2604,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["getdoublons",{"_index":2689,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["getdoublons(@res",{"_index":2705,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["getdoublons(res",{"_index":2695,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["getinfo",{"_index":628,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["getinfo(@res",{"_index":682,"title":{},"body":{"controllers/AppController.html":{}}}],["getinfo(res",{"_index":629,"title":{},"body":{"controllers/AppController.html":{}}}],["getlifecyclehistory",{"_index":3565,"title":{},"body":{"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{}}}],["getlifecyclehistory(identityid",{"_index":3568,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["getlifecyclestats",{"_index":3859,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["getmodel",{"_index":4106,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodel(name",{"_index":4112,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["getmodeltoken(identities.name",{"_index":6031,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodulename",{"_index":154,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getpaddingforcode",{"_index":1738,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["getparameter",{"_index":196,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["getparameter(settingname",{"_index":214,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["getpayload",{"_index":4618,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["getpolicies",{"_index":4181,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getpolicies(@res",{"_index":4242,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getpolicies(res",{"_index":4192,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getprojectupdate",{"_index":848,"title":{},"body":{"injectables/AppService.html":{}}}],["getprojectupdate(project",{"_index":865,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["getqueue",{"_index":99,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getrecentchanges",{"_index":3566,"title":{},"body":{"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{}}}],["getrecentchanges(searchfilteroptions",{"_index":3575,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["getredisconnectiontoken",{"_index":103,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getrequest",{"_index":152,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getschemapath",{"_index":2968,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["getschemapath(paginatedfilterdto",{"_index":2981,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["getservicename",{"_index":156,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getsessiondata",{"_index":1106,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsessiondata(identity",{"_index":1118,"title":{},"body":{"injectables/AuthService.html":{}}}],["getstats",{"_index":3567,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["getstats(res",{"_index":3580,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["getting",{"_index":4790,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":4647,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["gettoken'})@isstring",{"_index":4645,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["getvalidationerrors",{"_index":4132,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidationerrors(err",{"_index":4136,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidations",{"_index":4619,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["gists_url",{"_index":923,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["github",{"_index":660,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["githubasset",{"_index":932,"title":{"interfaces/GithubAsset.html":{}},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["githubauthor",{"_index":915,"title":{"interfaces/GithubAuthor.html":{}},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["githubupdate",{"_index":867,"title":{"interfaces/GithubUpdate.html":{}},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["give",{"_index":5265,"title":{},"body":{"license.html":{}}}],["given",{"_index":3825,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["givenname",{"_index":4824,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["gives",{"_index":5279,"title":{},"body":{"license.html":{}}}],["giving",{"_index":5011,"title":{},"body":{"license.html":{}}}],["glob",{"_index":4016,"title":{},"body":{"injectables/MigrationsService.html":{},"dependencies.html":{}}}],["glob(`./jobs/*.js",{"_index":4059,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["gnu",{"_index":4937,"title":{},"body":{"license.html":{}}}],["good",{"_index":4308,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["goodcomplexity",{"_index":4289,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["governed",{"_index":5408,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":5007,"title":{},"body":{"license.html":{}}}],["grand",{"_index":5829,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["grant",{"_index":5430,"title":{},"body":{"license.html":{}}}],["granted",{"_index":5193,"title":{},"body":{"license.html":{}}}],["grants",{"_index":5480,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":5000,"title":{},"body":{"license.html":{}}}],["gravatar_id",{"_index":919,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["greater",{"_index":5879,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["greatest",{"_index":5651,"title":{},"body":{"license.html":{}}}],["grille",{"_index":6259,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["group",{"_index":2860,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/LifecycleSource.html":{}}}],["groupindex",{"_index":2863,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["guarantee",{"_index":4966,"title":{},"body":{"license.html":{}}}],["gui",{"_index":5673,"title":{},"body":{"license.html":{}}}],["guides",{"_index":5846,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["gère",{"_index":6418,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["génère",{"_index":2756,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["générales",{"_index":6508,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générer",{"_index":1660,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["générique",{"_index":6445,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générées",{"_index":6339,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["gér",{"_index":6233,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gérer",{"_index":5730,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["h",{"_index":6417,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["handle",{"_index":980,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{}}}],["handle(event",{"_index":3812,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["handlebars",{"_index":4691,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":750,"title":{},"body":{"modules/AppModule.html":{}}}],["handlecron",{"_index":849,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["handleordercreatedevent(event",{"_index":3821,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["handles",{"_index":3736,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["handling",{"_index":3806,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["hard",{"_index":2892,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hardconfig",{"_index":3238,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["hardconfigfiles",{"_index":2889,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hardconfigpath",{"_index":2841,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hash",{"_index":575,"title":{},"body":{"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["hash('sha256",{"_index":1061,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["hash(data.password",{"_index":582,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.$set.password",{"_index":591,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.password",{"_index":588,"title":{},"body":{"injectables/AgentsService.html":{}}}],["haslowercase",{"_index":4290,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hasnumbers",{"_index":4291,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hasrules",{"_index":1943,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["hasspecialchars",{"_index":4292,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hastransformer",{"_index":4562,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["hastrigger",{"_index":1941,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["hasuppercase",{"_index":4293,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["having",{"_index":5207,"title":{},"body":{"license.html":{}}}],["hdfddyf18a",{"_index":4366,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["header",{"_index":6377,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["headers",{"_index":1033,"title":{},"body":{"controllers/AuthController.html":{}}}],["headers('authorization",{"_index":1070,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1798,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["helmetoptions",{"_index":1800,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["help",{"_index":3653,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["hereafter",{"_index":5520,"title":{},"body":{"license.html":{}}}],["hibp",{"_index":4694,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":469,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["hiddenquery",{"_index":2193,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["history",{"_index":3570,"title":{},"body":{"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{}}}],["holder",{"_index":5458,"title":{},"body":{"license.html":{}}}],["holders",{"_index":5414,"title":{},"body":{"license.html":{}}}],["hooks",{"_index":6212,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["hope",{"_index":5661,"title":{},"body":{"license.html":{}}}],["horizontallayout",{"_index":2868,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["host",{"_index":599,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MailSettingsDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/SmsSettingsDto.html":{}}}],["host.switchtohttp",{"_index":606,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["hosts",{"_index":5335,"title":{},"body":{"license.html":{}}}],["hour",{"_index":3716,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["hourinterval",{"_index":3727,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["hours",{"_index":875,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{}}}],["household",{"_index":5356,"title":{},"body":{"license.html":{}}}],["html",{"_index":4575,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["html_url",{"_index":920,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["http",{"_index":4442,"title":{},"body":{"injectables/ShutdownObserver.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http.server",{"_index":4438,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["http:///identities",{"_index":6416,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http:///identities/upsert",{"_index":6432,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http://127.0.0.1:2000/jwks",{"_index":1860,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["http://json",{"_index":6446,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["http://localhost/search?limit=9999&filters%5b%5esequence%5d=%2f53%2f&sort%5bmetadata.createdat%5d",{"_index":5873,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["httpexception",{"_index":1431,"title":{},"body":{"interfaces/CipherData.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["httpexception('aucune",{"_index":1723,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["httpexception.createbody",{"_index":4144,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["httpmodule",{"_index":761,"title":{},"body":{"modules/AppModule.html":{}}}],["httpmodule.registerasync",{"_index":835,"title":{},"body":{"modules/AppModule.html":{}}}],["httpmoduleoptions",{"_index":1806,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["https",{"_index":1812,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["https://ajv.js.org/security.html",{"_index":3222,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["https://fsf.org",{"_index":4946,"title":{},"body":{"license.html":{}}}],["https://monsite.com",{"_index":4336,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["https://randomkeygen.com",{"_index":1856,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["https://stackoverflow.com/questions/67314808/how",{"_index":677,"title":{},"body":{"controllers/AppController.html":{}}}],["https://www.gnu.org/licenses",{"_index":5679,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":5687,"title":{},"body":{"license.html":{}}}],["httpservers",{"_index":4434,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["httpservice",{"_index":851,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["httpstatus",{"_index":436,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/MailadmController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.accepted",{"_index":2644,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["httpstatus.bad_request",{"_index":1632,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.created",{"_index":477,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["httpstatus.not_acceptable",{"_index":1370,"title":{},"body":{"controllers/BackendsController.html":{},"classes/MongooseValidationFilter.html":{}}}],["httpstatus.not_found",{"_index":4162,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["httpstatus.ok",{"_index":485,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/MailadmController.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["hypothetical",{"_index":5671,"title":{},"body":{"license.html":{}}}],["héritent",{"_index":5971,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["i18n",{"_index":3097,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{}}}],["iauthmoduleoptions",{"_index":1084,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["ici",{"_index":5989,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["icon",{"_index":2406,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["icône",{"_index":6250,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["id",{"_index":276,"title":{},"body":{"classes/ActivationDto.html":{},"controllers/AgentsController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"classes/NeedChangePasswordDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["id'})@get('identity/:identityid",{"_index":3572,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["id1",{"_index":2435,"title":{},"body":{"classes/FusionDto.html":{}}}],["id2",{"_index":2436,"title":{},"body":{"classes/FusionDto.html":{}}}],["identifiable",{"_index":5547,"title":{},"body":{"license.html":{}}}],["identifiant",{"_index":6389,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identit",{"_index":1724,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identite",{"_index":2742,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identite'})@apiresponse({status",{"_index":2727,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["identites",{"_index":1749,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities",{"_index":1446,"title":{"classes/Identities.html":{}},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitManyDto.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"interfaces/LifecycleSource.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identities'})@isarray",{"_index":3269,"title":{},"body":{"classes/InitManyDto.html":{}}}],["identities).state",{"_index":3013,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["identities.command",{"_index":1774,"title":{},"body":{"modules/CliModule.html":{}}}],["identities.dto",{"_index":1337,"title":{},"body":{"controllers/BackendsController.html":{}}}],["identities.dto.ts",{"_index":2008,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{},"classes/SyncIdentitiesDto.html":{}}}],["identities.dto.ts:7",{"_index":2010,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{},"classes/SyncIdentitiesDto.html":{}}}],["identities.jsonforms.controller",{"_index":2799,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["identities.jsonforms.service",{"_index":2773,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identities.length",{"_index":1722,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{}}}],["identities.map((identity",{"_index":1729,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities.name",{"_index":2949,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.validation.controller",{"_index":3047,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["identities.validation.service",{"_index":3030,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identities/_schemas/identities.schema",{"_index":1447,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{}}}],["identities/identities",{"_index":1444,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{}}}],["identities/identities.module",{"_index":3620,"title":{},"body":{"modules/LifecycleModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{}}}],["identitiesactivationcontroller",{"_index":2499,"title":{"controllers/IdentitiesActivationController.html":{}},"body":{"controllers/IdentitiesActivationController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesactivationservice",{"_index":2507,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiescommand",{"_index":1773,"title":{"classes/IdentitiesCommand.html":{}},"body":{"modules/CliModule.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["identitiescommand.registerwithsubcommands",{"_index":1777,"title":{},"body":{"modules/CliModule.html":{}}}],["identitiescontroller",{"_index":6030,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiescreatedto",{"_index":2537,"title":{"classes/IdentitiesCreateDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["identitiescreatedto:18",{"_index":2717,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:24",{"_index":2715,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:30",{"_index":2713,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:36",{"_index":2716,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:41",{"_index":2714,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:60",{"_index":2712,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescrudcontroller",{"_index":2583,"title":{"controllers/IdentitiesCrudController.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiescrudcontroller.projection",{"_index":2655,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["identitiescrudservice",{"_index":1443,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["identitiesdocument",{"_index":2483,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["identitiesdoubloncontroller",{"_index":2687,"title":{"controllers/IdentitiesDoublonController.html":{}},"body":{"controllers/IdentitiesDoublonController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesdoublonservice",{"_index":2702,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesdto",{"_index":2578,"title":{"classes/IdentitiesDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesdtostub",{"_index":5985,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesfingerprintcommand",{"_index":2525,"title":{"classes/IdentitiesFingerprintCommand.html":{}},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["identitiesforcepasswordcontroller",{"_index":2720,"title":{"controllers/IdentitiesForcePasswordController.html":{}},"body":{"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesforcepasswordservice",{"_index":2738,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{},"overview.html":{}}}],["identitiesjsonformscontroller",{"_index":2749,"title":{"controllers/IdentitiesJsonFormsController.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identitiesjsonformsmodule",{"_index":2794,"title":{"modules/IdentitiesJsonformsModule.html":{}},"body":{"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["identitiesjsonformsservice",{"_index":2772,"title":{"injectables/IdentitiesJsonformsService.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"overview.html":{}}}],["identitiesmodel",{"_index":6003,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesmodule",{"_index":1407,"title":{"modules/IdentitiesModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/IdentitiesModule.html":{},"modules/LifecycleModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identitiesphotocontroller",{"_index":2926,"title":{"controllers/IdentitiesPhotoController.html":{}},"body":{"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["identitiesschema",{"_index":2494,"title":{},"body":{"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesservice",{"_index":3635,"title":{},"body":{"interfaces/LifecycleSource.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedto",{"_index":2579,"title":{"classes/IdentitiesUpdateDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedtostub",{"_index":5987,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupsertcontroller",{"_index":2925,"title":{"controllers/IdentitiesUpsertController.html":{}},"body":{"modules/IdentitiesModule.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identitiesupsertdto",{"_index":2581,"title":{"classes/IdentitiesUpsertDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["identitiesupsertservice",{"_index":2523,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesUpsertController.html":{},"overview.html":{}}}],["identitiesvalidation",{"_index":5882,"title":{},"body":{"additional-documentation/documentation-technique.html":{}}}],["identitiesvalidationcontroller",{"_index":3018,"title":{"controllers/IdentitiesValidationController.html":{}},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identitiesvalidationfilter",{"_index":2938,"title":{"classes/IdentitiesValidationFilter.html":{}},"body":{"modules/IdentitiesModule.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["identitiesvalidationmodule",{"_index":2934,"title":{"modules/IdentitiesValidationModule.html":{}},"body":{"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesvalidationservice",{"_index":2625,"title":{"injectables/IdentitiesValidationService.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identity",{"_index":281,"title":{},"body":{"classes/ActivationDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/JwtStrategy.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"classes/Logger.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identity's",{"_index":3804,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["identity'})@apiparam({name",{"_index":3571,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["identity._id",{"_index":1054,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{}}}],["identity._id}_${randombytes(16).tostring('hex",{"_index":1199,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.datastatus",{"_index":1508,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.decorator",{"_index":1039,"title":{},"body":{"controllers/AuthController.html":{}}}],["identity.email",{"_index":1055,"title":{},"body":{"controllers/AuthController.html":{}}}],["identity.fingerprint",{"_index":2533,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["identity.get('inetorgperson.uid",{"_index":1731,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson.displayname",{"_index":1551,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson.employeenumber",{"_index":2074,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["identity.inetorgperson.mail",{"_index":1598,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson.uid",{"_index":1550,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson?.employeenumber",{"_index":2976,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["identity.inetorgperson?.employeenumber[0",{"_index":3015,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["identity.inetorgperson?.employeetype",{"_index":2975,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identity.initinfo.initdate",{"_index":1745,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.initinfo.sentdate",{"_index":1747,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.initstate",{"_index":1744,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.lifecycle",{"_index":3541,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["identity.save",{"_index":1708,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.state",{"_index":2675,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["identity.tojson",{"_index":1620,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.toobject",{"_index":1186,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity_create",{"_index":4750,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_delete",{"_index":4752,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_disable",{"_index":4755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_enable",{"_index":4756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_change",{"_index":4754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_reset",{"_index":4753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_update",{"_index":4751,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identitycounter",{"_index":1257,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identitycounters",{"_index":1252,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identityid",{"_index":1209,"title":{},"body":{"injectables/AuthService.html":{},"controllers/LifecycleController.html":{}}}],["identitylifecycle",{"_index":1901,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Lifecycle.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitylifecycle.active",{"_index":1946,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/Identities.html":{}}}],["identitylifecycle.deleted",{"_index":1956,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["identitylifecycle.inactive",{"_index":5986,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitylifecycle})@isenum(identitylifecycle)@isnotempty",{"_index":3601,"title":{},"body":{"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{}}}],["identitymailattribute",{"_index":1568,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{}}}],["identitymobileattribute",{"_index":1821,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["identitymodel",{"_index":2090,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["identityrule1",{"_index":3665,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["identityrule2",{"_index":3666,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["identityrule3",{"_index":3668,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["identityrule4",{"_index":3669,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["identitystate",{"_index":1457,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identitystate.active",{"_index":3880,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["identitystate.synced",{"_index":1607,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identitystate.to_complete",{"_index":2643,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_create",{"_index":2484,"title":{},"body":{"classes/Identities.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_validate",{"_index":2676,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate})@isoptional",{"_index":2565,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["identité'})@apiresponse({status",{"_index":2505,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["identitée",{"_index":2645,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identitées",{"_index":1323,"title":{},"body":{"controllers/BackendsController.html":{},"classes/InitManyDto.html":{}}}],["identités",{"_index":1718,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{}},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identités'})@apiresponse({status",{"_index":2693,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["idrule",{"_index":3673,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["idrule.sources",{"_index":3675,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["ids",{"_index":2684,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"classes/InitManyDto.html":{}}}],["ids.ids",{"_index":1721,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["ignoreerrors",{"_index":772,"title":{},"body":{"modules/AppModule.html":{}}}],["ignoreexpiration",{"_index":3436,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignorelifecycle",{"_index":2447,"title":{},"body":{"classes/Identities.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{}}}],["il",{"_index":3125,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["image",{"_index":4555,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["imgsrc",{"_index":1837,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["imiter",{"_index":6126,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implement",{"_index":5163,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":5164,"title":{},"body":{"license.html":{}}}],["implements",{"_index":67,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AllExceptionFilter.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/ShutdownObserver.html":{},"injectables/UniquenessMailValidator.html":{}}}],["implied",{"_index":5571,"title":{},"body":{"license.html":{}}}],["implémentation",{"_index":6203,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["implémentations",{"_index":6103,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implémenter",{"_index":5924,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["implémentez",{"_index":5931,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["import(`${__dirname}/${file",{"_index":4077,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["import(plugin.package).then((plugin",{"_index":817,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["importance",{"_index":6155,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["importants",{"_index":6217,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["importe",{"_index":2995,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["importing",{"_index":5512,"title":{},"body":{"license.html":{}}}],["imports",{"_index":563,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["impose",{"_index":5439,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":5573,"title":{},"body":{"license.html":{}}}],["impossible",{"_index":1515,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["in_progress",{"_index":4789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inability",{"_index":5627,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":5630,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":3551,"title":{},"body":{"classes/LifeCycle1752765731.html":{},"miscellaneous/enumerations.html":{}}}],["inarraycontext",{"_index":3770,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["inc",{"_index":4945,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":5624,"title":{},"body":{"license.html":{}}}],["incluant",{"_index":6119,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["include",{"_index":5156,"title":{},"body":{"license.html":{}}}],["included",{"_index":5158,"title":{},"body":{"license.html":{}}}],["includes",{"_index":5111,"title":{},"body":{"license.html":{}}}],["including",{"_index":3807,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["inclure",{"_index":6380,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inclusion",{"_index":5296,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":5034,"title":{},"body":{"license.html":{}}}],["inconnu",{"_index":1637,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["incorporating",{"_index":5680,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":5358,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1636,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["increment",{"_index":1239,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.interface",{"_index":2482,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["increment.interface.ts",{"_index":1231,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.plugin",{"_index":2481,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["incrementby",{"_index":1233,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{}}}],["indemnification",{"_index":5435,"title":{},"body":{"license.html":{}}}],["indentit",{"_index":1706,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["independent",{"_index":5285,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{}}}],["index.middleware",{"_index":2948,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["index.middleware.ts",{"_index":2087,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["index.middleware.ts:13",{"_index":2093,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["index.middleware.ts:8",{"_index":2089,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["indexable",{"_index":61,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/GithubAsset.html":{},"interfaces/LifecycleSource.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{}}}],["indicate",{"_index":5484,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":5448,"title":{},"body":{"license.html":{}}}],["indiquant",{"_index":6426,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indique",{"_index":6379,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indiquer",{"_index":6408,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["individual",{"_index":5294,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":5042,"title":{},"body":{"license.html":{}}}],["individuel",{"_index":6201,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["industrial",{"_index":5372,"title":{},"body":{"license.html":{}}}],["indépendant",{"_index":5777,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["inetorgperson",{"_index":2448,"title":{"classes/inetOrgPerson.html":{}},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["inetorgperson.cn",{"_index":5988,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgperson.employeenumber",{"_index":2078,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/Identities.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgperson.employeetype",{"_index":2498,"title":{},"body":{"classes/Identities.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgperson.uid",{"_index":1501,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgpersoncreatedto",{"_index":4859,"title":{"classes/inetOrgPersonCreateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["inetorgpersoncreatedto:101",{"_index":4927,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:106",{"_index":4928,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:111",{"_index":4929,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:116",{"_index":4931,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:121",{"_index":4932,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:126",{"_index":4934,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:136",{"_index":4924,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:39",{"_index":4933,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:44",{"_index":4917,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:51",{"_index":4920,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:56",{"_index":4921,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:6",{"_index":4935,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:62",{"_index":4918,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:67",{"_index":4930,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:72",{"_index":4919,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:77",{"_index":4922,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:82",{"_index":4923,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:87",{"_index":4925,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:95",{"_index":4926,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersondto",{"_index":2557,"title":{"classes/inetOrgPersonDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersondtostub",{"_index":5983,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersonschema",{"_index":2461,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["inetorgpersonupdatedto",{"_index":4915,"title":{"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info.part.schema",{"_index":2478,"title":{},"body":{"classes/Identities.html":{}}}],["info.part.schema.ts",{"_index":3261,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["info.part.schema.ts:10",{"_index":3264,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["info.part.schema.ts:7",{"_index":3265,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["inform",{"_index":5342,"title":{},"body":{"license.html":{}}}],["information",{"_index":637,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["informations",{"_index":6359,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["infos",{"_index":634,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["infos'})@apiresponse({status",{"_index":632,"title":{},"body":{"controllers/AppController.html":{}}}],["infringe",{"_index":5482,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":5509,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":5103,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":89,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/LifecycleDto.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonDto.html":{}}}],["init",{"_index":1716,"title":{},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["init(@body",{"_index":4245,"title":{},"body":{"controllers/PasswdController.html":{}}}],["init(body",{"_index":4196,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initaccount",{"_index":1596,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initaccount(initdto",{"_index":1589,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initaccountdto",{"_index":1449,"title":{"classes/InitAccountDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitAccountDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["initdate",{"_index":3262,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["initdto.type",{"_index":1535,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initdto.uid",{"_index":1502,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initforfingerprint",{"_index":4861,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["initforfingerprint(partial",{"_index":4890,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["initialisation",{"_index":1484,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initialise",{"_index":4198,"title":{},"body":{"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["initialisées",{"_index":4257,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initialization",{"_index":3640,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["initialize",{"_index":886,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{}}}],["initialized",{"_index":2838,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"miscellaneous/enumerations.html":{}}}],["initiate",{"_index":5502,"title":{},"body":{"license.html":{}}}],["initinfo",{"_index":2449,"title":{},"body":{"classes/Identities.html":{}}}],["initinfo.initdate",{"_index":1759,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initinfopart",{"_index":2463,"title":{"classes/InitInfoPart.html":{}},"body":{"classes/Identities.html":{},"classes/InitInfoPart.html":{}}}],["initinfopartschema",{"_index":2464,"title":{},"body":{"classes/Identities.html":{},"classes/InitInfoPart.html":{}}}],["initmany",{"_index":4182,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initmany(@body",{"_index":4255,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initmany(body",{"_index":4201,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initmany(ids",{"_index":1719,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initmanydto",{"_index":1463,"title":{"classes/InitManyDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["initreset",{"_index":4183,"title":{},"body":{"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{}}}],["initreset(@body",{"_index":4259,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initreset(body",{"_index":4204,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initreset(initdto",{"_index":1498,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initresetdto",{"_index":1459,"title":{"classes/InitResetDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitResetDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["initstate",{"_index":1758,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{}}}],["initstatesenum",{"_index":1465,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["initstatesenum.initialized",{"_index":1715,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initstatesenum.nosent",{"_index":2486,"title":{},"body":{"classes/Identities.html":{}}}],["initstatesenum.sent",{"_index":1601,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["inittokenttl",{"_index":4294,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["inject",{"_index":774,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"interfaces/ValidationRecursive.html":{}}}],["injectable",{"_index":140,"title":{"injectables/AbstractService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["injectables",{"_index":141,"title":{},"body":{"injectables/AbstractService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"overview.html":{}}}],["injectconnection",{"_index":2069,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/LifeCycle1752765731.html":{},"injectables/MigrationsService.html":{},"injectables/UniquenessMailValidator.html":{}}}],["injectmodel",{"_index":251,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["injectmodel(form.name",{"_index":2432,"title":{},"body":{"injectables/FormService.html":{}}}],["injectmodel(identities.name",{"_index":2098,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["injectmodel(lifecycle.name",{"_index":3634,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["injectredis",{"_index":1140,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["inline",{"_index":4573,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["input",{"_index":6268,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["inputs",{"_index":398,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["inquirer",{"_index":345,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["inquirerservice",{"_index":331,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["inside",{"_index":5030,"title":{},"body":{"license.html":{}}}],["install",{"_index":5029,"title":{},"body":{"license.html":{}}}],["installation",{"_index":5376,"title":{},"body":{"license.html":{}}}],["installed",{"_index":5393,"title":{},"body":{"license.html":{}}}],["installing",{"_index":3681,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["instance",{"_index":4087,"title":{},"body":{"injectables/MigrationsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instance.up",{"_index":4089,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["instanceof",{"_index":2661,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{}}}],["instances",{"_index":5916,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instead",{"_index":5685,"title":{},"body":{"license.html":{}}}],["instructions",{"_index":6236,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["int",{"_index":1533,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["intact",{"_index":5260,"title":{},"body":{"license.html":{}}}],["integer",{"_index":6472,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["intended",{"_index":4965,"title":{},"body":{"license.html":{}}}],["intention",{"_index":5250,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":5120,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":6327,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["interactive",{"_index":5124,"title":{},"body":{"license.html":{}}}],["interagir",{"_index":5902,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["interchange",{"_index":5308,"title":{},"body":{"license.html":{}}}],["interest",{"_index":5497,"title":{},"body":{"license.html":{}}}],["interface",{"_index":38,"title":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/LifecycleSource.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AppService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/LifecycleSource.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"license.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/LifecycleSource.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"license.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["interfered",{"_index":5383,"title":{},"body":{"license.html":{}}}],["internal",{"_index":612,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["internallogger",{"_index":3283,"title":{"injectables/InternalLogger.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloggeroptions",{"_index":3281,"title":{"interfaces/InternalLoggerOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloglevel",{"_index":3278,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["internallogoptions",{"_index":3275,"title":{"interfaces/InternalLogOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internally",{"_index":1915,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["internalservererrorexception",{"_index":1432,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["internalservererrorexception('une",{"_index":1709,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["interne",{"_index":1007,"title":{},"body":{"controllers/AuthController.html":{}}}],["interorgperson.mail",{"_index":4304,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["interorgperson.mobile",{"_index":4334,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["interpretation",{"_index":5638,"title":{},"body":{"license.html":{}}}],["interpreted",{"_index":1928,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["interpreter",{"_index":5172,"title":{},"body":{"license.html":{}}}],["intersectiontype",{"_index":2567,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["intersectiontype(customfieldsdto",{"_index":2539,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["interval",{"_index":3714,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["intervals",{"_index":3726,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["intervalseconds",{"_index":3723,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["intimate",{"_index":5185,"title":{},"body":{"license.html":{}}}],["introduction",{"_index":5946,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["introuvable",{"_index":3194,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["intègre",{"_index":5897,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégration",{"_index":5761,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrations",{"_index":6208,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrée",{"_index":6211,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["invalid",{"_index":2639,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["invalid_credentials",{"_index":4764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_json_response",{"_index":4765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_login",{"_index":4763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalidate",{"_index":5280,"title":{},"body":{"license.html":{}}}],["invalide",{"_index":3198,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/inetOrgPerson.html":{}}}],["invalides",{"_index":2651,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["invitation",{"_index":4218,"title":{},"body":{"controllers/PasswdController.html":{}}}],["ioredis",{"_index":106,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["ip",{"_index":4713,"title":{},"body":{"dependencies.html":{}}}],["irrevocable",{"_index":5195,"title":{},"body":{"license.html":{}}}],["isarray",{"_index":529,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/InitManyDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isarray()@apiproperty({type",{"_index":2009,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{},"classes/SyncIdentitiesDto.html":{}}}],["isarray()@isstring({each",{"_index":4388,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["isarray()@type(undefined)@isstring({each",{"_index":4870,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isboolean",{"_index":289,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isboolean()@apiproperty({example",{"_index":284,"title":{},"body":{"classes/ActivationDto.html":{},"classes/PasswordPoliciesDto.html":{}}}],["isboolean()@isoptional()@apiproperty",{"_index":504,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isdate",{"_index":3988,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdate()@isoptional()@apiproperty",{"_index":3983,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdatestring",{"_index":3504,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{}}}],["isdev",{"_index":789,"title":{},"body":{"modules/AppModule.html":{}}}],["isemail",{"_index":521,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/MailSettingsDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isemail()@apiproperty({example",{"_index":3925,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["isemail()@apiproperty({required",{"_index":4879,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":502,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["isenum",{"_index":1889,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{}}}],["isenum(actiontype",{"_index":2122,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isenum(configobjecttype",{"_index":1891,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{}}}],["isenum(datastatusenum",{"_index":2572,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(formtypelist",{"_index":2349,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["isenum(formtypelist)@apiproperty({enum",{"_index":2340,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isenum(formtypes",{"_index":2418,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(formtypes)@apiproperty",{"_index":2415,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(fstypelist",{"_index":2141,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["isenum(fstypelist)@isnotempty()@apiproperty({enum",{"_index":2252,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isenum(identitylifecycle",{"_index":1902,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{}}}],["isenum(identitystate",{"_index":2570,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(initstatesenum",{"_index":2571,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isglobal",{"_index":764,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["isinarraycontext",{"_index":3767,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["isip",{"_index":3507,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isip(4",{"_index":3508,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismimetype",{"_index":2136,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["ismongoid",{"_index":522,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{}}}],["ismongoid()@apiproperty",{"_index":1790,"title":{},"body":{"classes/ConcernedToPartDTO.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["ismongoid()@apiproperty({type",{"_index":533,"title":{},"body":{"classes/AgentsDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsDto.html":{},"classes/LifecycleDto.html":{}}}],["ismongoid()@isoptional()@apiproperty({example",{"_index":2118,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isnan(number(error.property",{"_index":3775,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["isnan(tr",{"_index":3172,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["isnegative",{"_index":1919,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isnextlevelarray",{"_index":3791,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["isnotempty",{"_index":519,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"classes/StatePartDTO.html":{}}}],["isnotempty()@isenum(actiontype)@apiproperty({type",{"_index":2116,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isnotempty()@isenum(identitylifecycle)@apiproperty({type",{"_index":1906,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{}}}],["isnumber",{"_index":1920,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormFieldDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/LifeCycle1752765731.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/StatePartDTO.html":{}}}],["isnumber()@apiproperty",{"_index":2376,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isnumber()@apiproperty({example",{"_index":3272,"title":{},"body":{"classes/InitResetDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{}}}],["isnumber()@apiproperty({oneof",{"_index":1909,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{}}}],["isnumber()@isenum(identitystate)@apiproperty({enum",{"_index":2564,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isnotempty()@apiproperty",{"_index":4494,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["isnumber()@isoptional()@isenum(datastatusenum)@apiproperty({enum",{"_index":2555,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isoptional()@isenum(initstatesenum)@apiproperty({enum",{"_index":2560,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber(lifecycle",{"_index":3542,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["isnumber(value",{"_index":1940,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isobject",{"_index":1921,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@apiproperty",{"_index":3392,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isobject()@isoptional()@apiproperty({required",{"_index":2330,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isobject()@isoptional()@validatenested",{"_index":516,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isobject()@isoptional()@validatenested()@type(undefined)@apiproperty({type",{"_index":2344,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@type(undefined)@apiproperty({type",{"_index":2558,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject()@validatenested({each",{"_index":2408,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isoptional",{"_index":523,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isoptional()@isarray()@apiproperty({type",{"_index":1960,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["isoptional()@isboolean()@apiproperty({type",{"_index":2242,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@ismimetype()@apiproperty({type",{"_index":2246,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@ismongoid()@apiproperty({type",{"_index":2244,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@isobject",{"_index":1899,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{}}}],["isoptional()@isobject()@apiproperty({type",{"_index":2120,"title":{},"body":{"classes/ExecuteJobDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@isstring()@apiproperty({required",{"_index":4881,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isoptional()@isstring()@apiproperty({type",{"_index":2239,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@transform",{"_index":1908,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{}}}],["isoptional()@type(undefined",{"_index":3016,"title":{},"body":{"classes/IdentitiesUpsertDto.html":{}}}],["isoptional()@type(undefined)@apiproperty({required",{"_index":2541,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isstring",{"_index":290,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataPartDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePartDTO.html":{},"classes/VerifyTokenDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isstring()@apiproperty",{"_index":2336,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isstring()@apiproperty()@isoptional",{"_index":4862,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@apiproperty({example",{"_index":278,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FusionDto.html":{},"classes/InitResetDto.html":{},"classes/MailSettingsDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{}}}],["isstring()@apiproperty({required",{"_index":4867,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@isenum(configobjecttype",{"_index":1886,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["isstring()@isnotempty()@apiproperty",{"_index":506,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isstring()@isnotempty()@apiproperty({type",{"_index":2248,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isstring()@isoptional",{"_index":1881,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["isstring()@isoptional()@apiproperty",{"_index":499,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{}}}],["isstring()@isoptional()@apiproperty({required",{"_index":2332,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{}}}],["isstring()@isoptional()@isenum(identitylifecycle)@apiproperty({enum",{"_index":2562,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isstring({each",{"_index":3500,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isunique",{"_index":4614,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["isunique(options",{"_index":4612,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["isurl",{"_index":3931,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["isurl({protocols",{"_index":3916,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["isvalid",{"_index":1935,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isvalidobjectid",{"_index":2992,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["isvalidobjectid(filter",{"_index":3007,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["it's",{"_index":1937,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/LifecycleSource.html":{}}}],["it('should",{"_index":6046,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["item",{"_index":5141,"title":{},"body":{"license.html":{}}}],["items",{"_index":2544,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["iterate",{"_index":3783,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["itself",{"_index":5396,"title":{},"body":{"license.html":{}}}],["iv",{"_index":1472,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["iverifyoptions",{"_index":3872,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["jalons",{"_index":5854,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jest",{"_index":5945,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jest.clearallmocks",{"_index":6080,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jeton",{"_index":1015,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{}}}],["job",{"_index":871,"title":{},"body":{"injectables/AppService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job.dto",{"_index":1334,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job.dto.ts",{"_index":2114,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:14",{"_index":2119,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:19",{"_index":2121,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:9",{"_index":2117,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.start",{"_index":3692,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["job.waituntilfinished(this.queueevents",{"_index":5941,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job:added",{"_index":1396,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:completed",{"_index":1398,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:failed",{"_index":1401,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job['status",{"_index":1633,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["jobid",{"_index":3349,"title":{},"body":{"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["jobname",{"_index":4654,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["jobs",{"_index":1313,"title":{"classes/Jobs.html":{}},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{}}}],["jobs.controller",{"_index":3415,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.name",{"_index":3416,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":3377,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":1413,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["jobscontroller",{"_index":3369,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobscontroller.projection",{"_index":3381,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobscreatedto",{"_index":3386,"title":{"classes/JobsCreateDto.html":{}},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jobscreatedto:12",{"_index":3405,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:16",{"_index":3402,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:22",{"_index":3404,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:26",{"_index":3409,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:30",{"_index":3403,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:34",{"_index":3406,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:38",{"_index":3407,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:42",{"_index":3408,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobsdocument",{"_index":3365,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{}}}],["jobsdto",{"_index":3374,"title":{"classes/JobsDto.html":{}},"body":{"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jobsmodule",{"_index":1408,"title":{"modules/JobsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsoptions",{"_index":2130,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["jobsschema",{"_index":3367,"title":{},"body":{"classes/Jobs.html":{},"modules/JobsModule.html":{}}}],["jobsservice",{"_index":3376,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"overview.html":{}}}],["jobstate",{"_index":3359,"title":{},"body":{"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"miscellaneous/enumerations.html":{}}}],["jobstate.created",{"_index":3366,"title":{},"body":{"classes/Jobs.html":{}}}],["jobsupdatedto",{"_index":3399,"title":{"classes/JobsUpdateDto.html":{}},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["join",{"_index":2634,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["jour",{"_index":2618,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["jpegphoto",{"_index":4825,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["jpegphoto.jpg'].join",{"_index":2977,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["json",{"_index":897,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesJsonFormsController.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["json.parse(data",{"_index":1220,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(identity",{"_index":1189,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(infos",{"_index":1226,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(plaintext",{"_index":1682,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["json.parse(readfilesync('package.json",{"_index":946,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["json.parse(readfilesync(devtokenpath",{"_index":1161,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(result",{"_index":1667,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["json.stringify",{"_index":1174,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["json.stringify(data[key",{"_index":3155,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(lcs.rules",{"_index":3840,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["json.stringify(object.values",{"_index":3235,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(object.values(arguments))].join",{"_index":3248,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(request.body",{"_index":2044,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["json.stringify(schema",{"_index":3750,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["json.stringify(user",{"_index":1058,"title":{},"body":{"controllers/AuthController.html":{}}}],["json.stringify(validations",{"_index":2036,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsonform",{"_index":2835,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonformpath",{"_index":2881,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms",{"_index":2825,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms')}/${schema",{"_index":2883,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms/identities.jsonforms.module",{"_index":2937,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonforms/identities.jsonforms.service",{"_index":2936,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonschema",{"_index":2851,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required",{"_index":2858,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required.includes(key",{"_index":2859,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonwebtoken",{"_index":1145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jsunresolvedreference",{"_index":2038,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsunusedglobalsymbols",{"_index":3438,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jti",{"_index":1223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jti].join(this.token_path_separator",{"_index":1224,"title":{},"body":{"injectables/AuthService.html":{}}}],["june",{"_index":4940,"title":{},"body":{"license.html":{}}}],["justifi",{"_index":5862,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jwksuri",{"_index":1859,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwt",{"_index":1011,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["jwtfromrequest",{"_index":3434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":1198,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtid].join(this.token_path_separator",{"_index":1214,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":1087,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":1095,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":1088,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwtpayload",{"_index":1144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":1110,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":1079,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["k",{"_index":1471,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["k.tostring(10",{"_index":1534,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["k.tostring(16",{"_index":1530,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["keep",{"_index":1254,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"license.html":{}}}],["kernel",{"_index":5166,"title":{},"body":{"license.html":{}}}],["key",{"_index":39,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/Agents.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"license.html":{}}}],["key._id.tostring",{"_index":3477,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.match(/\\d{10",{"_index":4085,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["key.name",{"_index":3478,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat",{"_index":3471,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat.gettime",{"_index":3473,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.tojson",{"_index":3470,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.token",{"_index":3479,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyring",{"_index":3466,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyrings",{"_index":3445,"title":{"classes/Keyrings.html":{}},"body":{"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["keyrings.command",{"_index":1768,"title":{},"body":{"modules/CliModule.html":{}}}],["keyrings.controller",{"_index":3521,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.name",{"_index":3522,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.service",{"_index":3520,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings/keyrings.module",{"_index":1092,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["keyrings/keyrings.service",{"_index":1152,"title":{},"body":{"injectables/AuthService.html":{}}}],["keyringscommand",{"_index":1766,"title":{"classes/KeyringsCommand.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscommand.registerwithsubcommands",{"_index":1775,"title":{},"body":{"modules/CliModule.html":{}}}],["keyringscontroller",{"_index":3480,"title":{"controllers/KeyringsController.html":{}},"body":{"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{}}}],["keyringscontroller.projection",{"_index":3494,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["keyringscreatecommand",{"_index":3465,"title":{"classes/KeyringsCreateCommand.html":{}},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscreatedto",{"_index":3460,"title":{"classes/KeyringsCreateDto.html":{}},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{}}}],["keyringscreatedto:14",{"_index":3515,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:18",{"_index":3512,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:21",{"_index":3514,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:9",{"_index":3513,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatequestions",{"_index":1767,"title":{"classes/KeyringsCreateQuestions.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringsdocument",{"_index":3453,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["keyringsdto",{"_index":3483,"title":{"classes/KeyringsDto.html":{}},"body":{"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["keyringsmodule",{"_index":1078,"title":{"modules/KeyringsModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/KeyringsModule.html":{},"modules.html":{},"overview.html":{}}}],["keyringsschema",{"_index":3455,"title":{},"body":{"classes/Keyrings.html":{},"modules/KeyringsModule.html":{}}}],["keyringsservice",{"_index":1109,"title":{"injectables/KeyringsService.html":{}},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"overview.html":{}}}],["keys",{"_index":3062,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["key}.yml",{"_index":3193,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["kind",{"_index":5116,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":4955,"title":{},"body":{"license.html":{}}}],["know",{"_index":4988,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":5535,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5544,"title":{},"body":{"license.html":{}}}],["l",{"_index":1556,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["l'aide",{"_index":6352,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'ajout",{"_index":5809,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'api",{"_index":5798,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'application",{"_index":5779,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["l'attribut",{"_index":6449,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'endpoint",{"_index":6374,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'ensemble",{"_index":5834,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'entree",{"_index":3201,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["l'entrée",{"_index":6507,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'essentiel",{"_index":6172,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'exemple",{"_index":6159,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'id",{"_index":6281,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'identit",{"_index":1624,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'identity",{"_index":1591,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["l'identité'})@apiresponse({status",{"_index":4199,"title":{},"body":{"controllers/PasswdController.html":{}}}],["l'init",{"_index":1588,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["l'initiation",{"_index":6089,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instance",{"_index":5918,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instantiation",{"_index":6093,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'objectclass",{"_index":6383,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'objet",{"_index":6385,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'orchestrateur",{"_index":4814,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["l'ordre",{"_index":6156,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'url",{"_index":6286,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'utilisateur",{"_index":2732,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["l'échec",{"_index":6120,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'équipe",{"_index":5864,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'état",{"_index":2619,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["la",{"_index":1028,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["label",{"_index":2368,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["labeleduri",{"_index":4826,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lance",{"_index":6147,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["lang",{"_index":1807,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["langage",{"_index":5778,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["langages",{"_index":5768,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["language",{"_index":5151,"title":{},"body":{"license.html":{}}}],["large",{"_index":3225,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["larger",{"_index":5289,"title":{},"body":{"license.html":{}}}],["largest",{"_index":3712,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["last",{"_index":669,"title":{},"body":{"controllers/AppController.html":{},"injectables/MigrationsService.html":{}}}],["lastbackendsync",{"_index":2450,"title":{},"body":{"classes/Identities.html":{}}}],["lastchangedat",{"_index":4480,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["lastmajor",{"_index":691,"title":{},"body":{"controllers/AppController.html":{}}}],["lastminor",{"_index":692,"title":{},"body":{"controllers/AppController.html":{}}}],["lastparam",{"_index":3299,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["lastpatch",{"_index":693,"title":{},"body":{"controllers/AppController.html":{}}}],["laststmp",{"_index":1545,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["lastsync",{"_index":2451,"title":{},"body":{"classes/Identities.html":{}}}],["lastupdatedat",{"_index":3975,"title":{},"body":{"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastupdatedby",{"_index":3976,"title":{},"body":{"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastversion",{"_index":707,"title":{},"body":{"controllers/AppController.html":{}}}],["lastversion.split('.').map(number",{"_index":715,"title":{},"body":{"controllers/AppController.html":{}}}],["later",{"_index":5600,"title":{},"body":{"license.html":{}}}],["latest",{"_index":658,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["law",{"_index":5105,"title":{},"body":{"license.html":{}}}],["laws",{"_index":5078,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":5507,"title":{},"body":{"license.html":{}}}],["lcs",{"_index":3838,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["lcs.rules",{"_index":3841,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["lcs.target",{"_index":3842,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["ldap",{"_index":5750,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ldap/active",{"_index":4804,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["le",{"_index":1014,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["le/les",{"_index":4188,"title":{},"body":{"controllers/PasswdController.html":{}}}],["lecture",{"_index":3113,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["legal",{"_index":5012,"title":{},"body":{"license.html":{}}}],["legend",{"_index":547,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["len",{"_index":4295,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["length",{"_index":3213,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/PasswordPoliciesDto.html":{}}}],["les",{"_index":1312,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["less",{"_index":1938,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/LifecycleSource.html":{},"additional-documentation/filtres-api.html":{}}}],["lesser",{"_index":5684,"title":{},"body":{"license.html":{}}}],["lessthan",{"_index":6476,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["letters",{"_index":4316,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["leurs",{"_index":1316,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["level",{"_index":3304,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{}}}],["levées",{"_index":5832,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["lfr",{"_index":3672,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["lfr.identities",{"_index":3674,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["lgpl.html",{"_index":5688,"title":{},"body":{"license.html":{}}}],["liability",{"_index":5417,"title":{},"body":{"license.html":{}}}],["liable",{"_index":5102,"title":{},"body":{"license.html":{}}}],["liaison",{"_index":6257,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["libraries",{"_index":5154,"title":{},"body":{"license.html":{}}}],["library",{"_index":5351,"title":{},"body":{"license.html":{}}}],["license",{"_index":4936,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":5082,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":5084,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":5086,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4957,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":5486,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":5428,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":1904,"title":{"classes/Lifecycle.html":{}},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lifecycle.controller",{"_index":3619,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["lifecycle.name",{"_index":3622,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["lifecycle.service",{"_index":3585,"title":{},"body":{"controllers/LifecycleController.html":{},"modules/LifecycleModule.html":{}}}],["lifecycle.ts",{"_index":3532,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["lifecycle.ts:12",{"_index":3537,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["lifecycle.ts:18",{"_index":3536,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["lifecycle.ts:7",{"_index":3534,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["lifecycle/lifecycle.module",{"_index":3968,"title":{},"body":{"modules/ManagementModule.html":{}}}],["lifecycle1752765731",{"_index":3530,"title":{"classes/LifeCycle1752765731.html":{}},"body":{"classes/LifeCycle1752765731.html":{}}}],["lifecyclecontroller",{"_index":3563,"title":{"controllers/LifecycleController.html":{}},"body":{"controllers/LifecycleController.html":{},"modules/LifecycleModule.html":{}}}],["lifecyclecreatedto",{"_index":3597,"title":{"classes/LifecycleCreateDto.html":{}},"body":{"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{}}}],["lifecyclecreatedto:12",{"_index":3612,"title":{},"body":{"classes/LifecycleDto.html":{}}}],["lifecyclecreatedto:20",{"_index":3611,"title":{},"body":{"classes/LifecycleDto.html":{}}}],["lifecyclecreatedto:27",{"_index":3610,"title":{},"body":{"classes/LifecycleDto.html":{}}}],["lifecycledocument",{"_index":3559,"title":{},"body":{"classes/Lifecycle.html":{},"miscellaneous/typealiases.html":{}}}],["lifecycledto",{"_index":3606,"title":{"classes/LifecycleDto.html":{}},"body":{"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{}}}],["lifecyclemodule",{"_index":3613,"title":{"modules/LifecycleModule.html":{}},"body":{"modules/LifecycleModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["lifecyclerefid",{"_index":3560,"title":{},"body":{"classes/Lifecycle.html":{},"interfaces/LifecycleSource.html":{}}}],["lifecyclerules",{"_index":3659,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["lifecyclerules.push(schema",{"_index":3758,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["lifecycleschema",{"_index":3561,"title":{},"body":{"classes/Lifecycle.html":{},"modules/LifecycleModule.html":{}}}],["lifecycleservice",{"_index":3584,"title":{},"body":{"controllers/LifecycleController.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"overview.html":{}}}],["lifecyclesource",{"_index":3623,"title":{"interfaces/LifecycleSource.html":{}},"body":{"interfaces/LifecycleSource.html":{}}}],["lifecyclesources",{"_index":3633,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["lifecycleupdatedto",{"_index":3607,"title":{"classes/LifecycleUpdateDto.html":{}},"body":{"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{}}}],["lifestep",{"_index":6245,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lignes",{"_index":6355,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["likewise",{"_index":5478,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1811,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/LifecycleSource.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["limit=9999",{"_index":5875,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["limitation",{"_index":3218,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["limited",{"_index":5611,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":5416,"title":{},"body":{"license.html":{}}}],["line",{"_index":44,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"injectables/TransformersFilestorageService.html":{},"license.html":{}}}],["link",{"_index":5585,"title":{},"body":{"license.html":{}}}],["linked",{"_index":5181,"title":{},"body":{"license.html":{}}}],["linkedto",{"_index":2146,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["linking",{"_index":5683,"title":{},"body":{"license.html":{}}}],["lire",{"_index":6302,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lisibilit",{"_index":6188,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["list",{"_index":5137,"title":{},"body":{"license.html":{}}}],["list_backends",{"_index":4747,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liste",{"_index":1293,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["listens",{"_index":3801,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["listerez",{"_index":6444,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["literal",{"_index":371,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AuthController.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":5503,"title":{},"body":{"license.html":{}}}],["livrables",{"_index":5833,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["livraison",{"_index":5858,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liés",{"_index":2764,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["load",{"_index":765,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/LifecycleSource.html":{}}}],["loader",{"_index":4036,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["loader.function",{"_index":4021,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["loading",{"_index":3735,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["loadlifecyclerules",{"_index":3738,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["loads",{"_index":3650,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["local",{"_index":389,"title":{},"body":{"classes/Agents.html":{},"interfaces/ConfigInstance.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"license.html":{}}}],["localize",{"_index":3096,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["localize.fr(messages",{"_index":3254,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["localstrategy",{"_index":1080,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["localstrategy.name",{"_index":3876,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["location",{"_index":4032,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["lock",{"_index":4043,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["locklocation",{"_index":3996,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["log",{"_index":3311,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{}}}],["log(message",{"_index":3310,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["logger",{"_index":10,"title":{"classes/Logger.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/FormService.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger(`${chalk.bold.red(migrationsservice.name)}\\x1b[33m",{"_index":4014,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["logger(backendscontroller.name",{"_index":1355,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger(employeenumber1700395200.name",{"_index":2066,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["logger(identitiesfingerprintcommand.name",{"_index":2526,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["logger(identitiesvalidationservice.name",{"_index":3108,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["logger(jwtstrategy.name",{"_index":3428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger(lifecycle1752765731.name",{"_index":3535,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["logger(passwdcontroller.name",{"_index":4224,"title":{},"body":{"controllers/PasswdController.html":{}}}],["logger(this.controllername",{"_index":54,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["logger(this.servicename",{"_index":167,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["logger.controller",{"_index":3908,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.debug(`${message",{"_index":2035,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger.debug(`observer",{"_index":1349,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.debug(exception['message",{"_index":604,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["logger.error(`observer",{"_index":1352,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.name",{"_index":3909,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.service",{"_index":3902,"title":{},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["logger.verbose(`try",{"_index":3875,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["logger/logger.module",{"_index":1990,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggercontroller",{"_index":3899,"title":{"controllers/LoggerController.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["loggerdocument",{"_index":3890,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["loggermodule",{"_index":1981,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggername",{"_index":1346,"title":{},"body":{"controllers/BackendsController.html":{}}}],["loggerschema",{"_index":3892,"title":{},"body":{"classes/Logger.html":{},"modules/LoggerModule.html":{}}}],["loggerservice",{"_index":3901,"title":{"injectables/LoggerService.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["logic",{"_index":3663,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["login",{"_index":916,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["logique",{"_index":5925,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["loglevel",{"_index":1808,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["logout",{"_index":1000,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@res",{"_index":1069,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(res",{"_index":1010,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":876,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/LifecycleSource.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["long",{"_index":5205,"title":{},"body":{"license.html":{}}}],["longueur",{"_index":6496,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lors",{"_index":1555,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["loss",{"_index":5628,"title":{},"body":{"license.html":{}}}],["losses",{"_index":5631,"title":{},"body":{"license.html":{}}}],["lowercase",{"_index":4317,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lru",{"_index":903,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"dependencies.html":{}}}],["lrucache",{"_index":890,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["lt",{"_index":1760,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["léments",{"_index":5932,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["m",{"_index":1931,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["m=minutes",{"_index":1950,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["machine",{"_index":5298,"title":{},"body":{"license.html":{}}}],["made",{"_index":3827,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["mail",{"_index":988,"title":{},"body":{"classes/AskTokenDto.html":{},"interfaces/CipherData.html":{},"classes/InitResetDto.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mail'})@apiresponse({status",{"_index":3939,"title":{},"body":{"controllers/MailadmController.html":{}}}],["mail'})@isstring",{"_index":993,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mailadmcontroller",{"_index":3933,"title":{"controllers/MailadmController.html":{}},"body":{"controllers/MailadmController.html":{},"modules/SettingsModule.html":{}}}],["mailadmservice",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["mailattribute",{"_index":1526,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["mailer",{"_index":1483,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{}}}],["mailermodule",{"_index":748,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forrootasync",{"_index":773,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":1448,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["mailsettingsdto",{"_index":3913,"title":{"classes/MailSettingsDto.html":{}},"body":{"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{}}}],["maintain",{"_index":5331,"title":{},"body":{"license.html":{}}}],["maintenabilit",{"_index":6189,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["maintenance",{"_index":5740,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["maintenant",{"_index":5830,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["mais",{"_index":2647,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["major",{"_index":5161,"title":{},"body":{"license.html":{}}}],["majuscule.example",{"_index":6504,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["make",{"_index":4969,"title":{},"body":{"license.html":{}}}],["makes",{"_index":5222,"title":{},"body":{"license.html":{}}}],["making",{"_index":5092,"title":{},"body":{"license.html":{}}}],["management",{"_index":3955,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management.controller",{"_index":3966,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.identities.service.afterupdate",{"_index":3810,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["management.identities.service.afterupsert",{"_index":3819,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["management.service",{"_index":3957,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management/identities",{"_index":6373,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/_dto/_parts/activation",{"_index":2510,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesForcePasswordController.html":{}}}],["management/identities/_dto/_parts/inetorgperson.dto",{"_index":6000,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_dto/force",{"_index":2737,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["management/identities/_dto/fusion.dto",{"_index":2701,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["management/identities/_dto/identities.dto",{"_index":5980,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_dto/need",{"_index":2740,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["management/identities/_enums/data",{"_index":1469,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{}}}],["management/identities/_enums/init",{"_index":1466,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{}}}],["management/identities/_enums/lifecycle.enum",{"_index":1925,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/Lifecycle.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/states.enum",{"_index":1458,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_schemas/_parts/init",{"_index":2477,"title":{},"body":{"classes/Identities.html":{}}}],["management/identities/_schemas/identities.schema",{"_index":2097,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/PasswdController.html":{}}}],["management/identities/identities",{"_index":2508,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["management/identities/identities.module",{"_index":1412,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CliModule.html":{}}}],["management/identities/jsonforms",{"_index":2751,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["management/identities/upsert",{"_index":6429,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/validation",{"_index":3020,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["management/management.module",{"_index":730,"title":{},"body":{"modules/AppModule.html":{}}}],["management/passwd/_dto/init",{"_index":1450,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["management/passwd/_dto/reset",{"_index":1453,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["managementcontroller",{"_index":3953,"title":{"controllers/ManagementController.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["managementmodule",{"_index":721,"title":{"modules/ManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["managementmodule.register",{"_index":839,"title":{},"body":{"modules/AppModule.html":{}}}],["managementservice",{"_index":3956,"title":{"injectables/ManagementService.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"overview.html":{}}}],["manager",{"_index":651,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"miscellaneous/enumerations.html":{}}}],["manipulation",{"_index":5735,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["manière",{"_index":5806,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["manner",{"_index":5521,"title":{},"body":{"license.html":{}}}],["manquant",{"_index":3177,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["manquants",{"_index":2650,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["manualy",{"_index":3833,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["manuellement",{"_index":1304,"title":{},"body":{"controllers/BackendsController.html":{}}}],["manuels",{"_index":5844,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["manufacturer",{"_index":5032,"title":{},"body":{"license.html":{}}}],["many.dto",{"_index":1464,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["many.dto.ts",{"_index":3267,"title":{},"body":{"classes/InitManyDto.html":{}}}],["many.dto.ts:8",{"_index":3270,"title":{},"body":{"classes/InitManyDto.html":{}}}],["map",{"_index":2285,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{}}}],["map((group",{"_index":2875,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["march",{"_index":5568,"title":{},"body":{"license.html":{}}}],["marked",{"_index":5023,"title":{},"body":{"license.html":{}}}],["marks",{"_index":5434,"title":{},"body":{"license.html":{}}}],["masks",{"_index":5080,"title":{},"body":{"license.html":{}}}],["masse",{"_index":2621,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["match",{"_index":3843,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["matches",{"_index":1939,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["matches(/^\\/(?:\\.?[^\\/\\0",{"_index":2144,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["material",{"_index":5211,"title":{},"body":{"license.html":{}}}],["materially",{"_index":5397,"title":{},"body":{"license.html":{}}}],["math.floor(index",{"_index":2864,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["math.floor(intervalseconds",{"_index":3728,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["math.floor(seconds",{"_index":3725,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["math.max(1",{"_index":3724,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["matière",{"_index":6371,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["matières",{"_index":5881,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["max",{"_index":4465,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxdate",{"_index":6465,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum",{"_index":6460,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum.example",{"_index":6466,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxitems",{"_index":6459,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxlength",{"_index":4466,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxlisteners",{"_index":769,"title":{},"body":{"modules/AppModule.html":{}}}],["maxredirects",{"_index":1850,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["maxretriesperrequest",{"_index":1842,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mdi",{"_index":6253,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mdp",{"_index":1610,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["mdp'})@apiresponse({status",{"_index":4276,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["meaning",{"_index":5442,"title":{},"body":{"license.html":{}}}],["means",{"_index":5077,"title":{},"body":{"license.html":{}}}],["measure",{"_index":5230,"title":{},"body":{"license.html":{}}}],["measures",{"_index":5243,"title":{},"body":{"license.html":{}}}],["medium",{"_index":5256,"title":{},"body":{"license.html":{}}}],["meet",{"_index":5268,"title":{},"body":{"license.html":{}}}],["meets",{"_index":5142,"title":{},"body":{"license.html":{}}}],["meilleure",{"_index":6195,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["memberof",{"_index":958,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["memory",{"_index":4117,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["menu",{"_index":5139,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":5612,"title":{},"body":{"license.html":{}}}],["mere",{"_index":5119,"title":{},"body":{"license.html":{}}}],["merging",{"_index":5493,"title":{},"body":{"license.html":{}}}],["message",{"_index":343,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/LifecycleSource.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["messageevent",{"_index":1348,"title":{},"body":{"controllers/BackendsController.html":{}}}],["messages",{"_index":3080,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["met",{"_index":1622,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["metadata",{"_index":127,"title":{},"body":{"classes/AbstractSchema.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"classes/MetadataDto.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["metadata.createdat",{"_index":6006,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["metadata['context",{"_index":3326,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadata['createdby",{"_index":3328,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadatadto",{"_index":2329,"title":{"classes/MetadataDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/MetadataDto.html":{}}}],["metadatadto:12",{"_index":2345,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["metadatapart",{"_index":130,"title":{"classes/MetadataPart.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{}}}],["metadatapartdto",{"_index":2343,"title":{"classes/MetadataPartDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{}}}],["metadatapartschema",{"_index":133,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{}}}],["method",{"_index":679,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{}}}],["methode",{"_index":1712,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["methodes",{"_index":1640,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["methods",{"_index":79,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"modules/SettingsModule.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"license.html":{}}}],["methodstubs",{"_index":6127,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettant",{"_index":6085,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettre",{"_index":6303,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["middlewareconsumer",{"_index":2929,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["migration",{"_index":4020,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migration.default",{"_index":4078,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrationkey",{"_index":4011,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrations",{"_index":3997,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrations.lock",{"_index":4029,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrations.service",{"_index":3994,"title":{},"body":{"modules/MigrationsModule.html":{}}}],["migrations/migrations.module",{"_index":756,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsmodule",{"_index":722,"title":{"modules/MigrationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MigrationsModule.html":{},"modules.html":{},"overview.html":{}}}],["migrationsmodule.register",{"_index":841,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsservice",{"_index":3991,"title":{"injectables/MigrationsService.html":{}},"body":{"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"overview.html":{}}}],["migrationtimestamp",{"_index":4009,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["mime",{"_index":2148,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["mime.split('/').pop",{"_index":4577,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["mimetype",{"_index":4559,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["min",{"_index":3212,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mincomplexity",{"_index":4296,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mindate",{"_index":6469,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimal",{"_index":4314,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["minimales",{"_index":6405,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["minimize",{"_index":310,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"classes/Lifecycle.html":{}}}],["minimum",{"_index":6462,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimum.example",{"_index":6470,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minitems",{"_index":3214,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minlength",{"_index":6495,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minuscule.example",{"_index":6503,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minute",{"_index":3715,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["minuteinterval",{"_index":3729,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["minutes",{"_index":1932,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/LifecycleSource.html":{}}}],["miscellaneous",{"_index":4726,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mise",{"_index":1705,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["mises",{"_index":6024,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["misrepresentation",{"_index":5423,"title":{},"body":{"license.html":{}}}],["missing",{"_index":2638,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["mixedvalue",{"_index":307,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/typealiases.html":{}}}],["mjml",{"_index":4699,"title":{},"body":{"dependencies.html":{}}}],["mobile",{"_index":4827,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mobileattribute",{"_index":4297,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mock",{"_index":5951,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mocker",{"_index":6121,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mode",{"_index":952,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"license.html":{}}}],["model",{"_index":209,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modellabel",{"_index":6290,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modelmodel",{"_index":6023,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modelname",{"_index":1244,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["models",{"_index":1249,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["modes",{"_index":6321,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modifiables",{"_index":3117,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["modification",{"_index":5073,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["modifications",{"_index":5145,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modified",{"_index":5022,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":5272,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4998,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":5109,"title":{},"body":{"license.html":{}}}],["modifyresult",{"_index":572,"title":{},"body":{"injectables/AgentsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["modulaire",{"_index":5807,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["module",{"_index":178,"title":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["module.get(identitiesservice",{"_index":6034,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modulename",{"_index":144,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.charat(0).touppercase",{"_index":184,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.slice(1",{"_index":185,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["moduleref",{"_index":12,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MigrationsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["modules",{"_index":545,"title":{"modules.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["modules/ioredis",{"_index":105,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["modules/mailer",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":751,"title":{},"body":{"modules/AppModule.html":{}}}],["modèle",{"_index":5969,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modèles",{"_index":5953,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["moins",{"_index":6430,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["monemail@mondomaine.com",{"_index":991,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mongo",{"_index":2065,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/LifeCycle1752765731.html":{},"injectables/MigrationsService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongoconnection",{"_index":4103,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongod",{"_index":4104,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb",{"_index":4116,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"interfaces/ServiceSchemaInterface.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb.countoptions",{"_index":4409,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["mongodb://localhost:27017/backend",{"_index":1844,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongodbtestinstance",{"_index":4101,"title":{"classes/MongoDbTestInstance.html":{}},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.cleardatabase",{"_index":6017,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.getmodel(identities.name",{"_index":6015,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.start",{"_index":6014,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.stop",{"_index":6019,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver",{"_index":4109,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver.create",{"_index":4119,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongoose",{"_index":138,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"injectables/UniquenessMailValidator.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mongoose.connection",{"_index":3291,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["mongoose.plugin(plugin.default",{"_index":818,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosebasequeryoptions",{"_index":4407,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["mongoosemodule",{"_index":559,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forfeature",{"_index":3621,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":564,"title":{},"body":{"modules/AgentsModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":814,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosemoduleoptions",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongooseplugin",{"_index":731,"title":{"interfaces/MongoosePlugin.html":{}},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongoosevalidationfilter",{"_index":742,"title":{"classes/MongooseValidationFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/MongooseValidationFilter.html":{}}}],["monlogin@mondomaine",{"_index":3929,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["month",{"_index":3718,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["more",{"_index":5315,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":5467,"title":{},"body":{"license.html":{}}}],["morethan",{"_index":6474,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mot",{"_index":1486,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["mote",{"_index":4343,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mots",{"_index":1614,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["mr",{"_index":6450,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ms",{"_index":6451,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["msg}`).join('\\n",{"_index":3799,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["much",{"_index":1241,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["multi",{"_index":4794,"title":{},"body":{"index.html":{},"properties.html":{}}}],["multiple",{"_index":978,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mynewpassword",{"_index":1423,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ForcePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["myoldpassword",{"_index":1425,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mypassword",{"_index":3923,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["mécanismes",{"_index":5799,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["méthode",{"_index":6044,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["méthodes",{"_index":5920,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["même",{"_index":6427,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n",{"_index":1580,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["n'avez",{"_index":6421,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n'est",{"_index":3180,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["n'implémente",{"_index":5922,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["namequeue",{"_index":1809,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["names",{"_index":5427,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":2143,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["nature",{"_index":5286,"title":{},"body":{"license.html":{}}}],["navigateur",{"_index":4339,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["navigation",{"_index":6338,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["naviguer",{"_index":6336,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ne",{"_index":1574,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/FilestorageController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["necessary",{"_index":3826,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["need",{"_index":3835,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["needchangepassworddto",{"_index":2730,"title":{"classes/NeedChangePasswordDto.html":{}},"body":{"controllers/IdentitiesForcePasswordController.html":{},"classes/NeedChangePasswordDto.html":{}}}],["needed",{"_index":981,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["needtochangepassword",{"_index":2723,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["needtochangepassword(@res",{"_index":2747,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["needtochangepassword(res",{"_index":2729,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["negative",{"_index":1911,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nest",{"_index":335,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["nestjs",{"_index":104,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nestjs/axios",{"_index":762,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/bullmq",{"_index":727,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/config",{"_index":107,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/core",{"_index":30,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"modules/IdentitiesModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/ManagementModule.html":{},"injectables/MigrationsService.html":{},"modules/SettingsModule.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":159,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"interfaces/LifecycleSource.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1089,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":136,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/Filestorage.html":{},"modules/FilestorageModule.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/Logger.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/UniquenessMailValidator.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{}}}],["nestjs/passport",{"_index":1036,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2201,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":760,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/ActivationDto.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"controllers/CoreController.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"controllers/SettingsController.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["nestmiddleware",{"_index":2096,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["nestmodule",{"_index":2933,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["network",{"_index":5121,"title":{},"body":{"license.html":{}}}],["new",{"_index":53,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ForcePasswordDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ShutdownObserver.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newid",{"_index":2709,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["newidentitydata",{"_index":6004,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newpassword",{"_index":1421,"title":{},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ForcePasswordDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{}}}],["next",{"_index":346,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/Filestorage.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"injectables/TransformersFilestorageService.html":{},"license.html":{}}}],["niveau",{"_index":6092,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["nnetorgperson",{"_index":5751,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["node.js",{"_index":5973,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["node:crypto",{"_index":578,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/KeyringsService.html":{}}}],["node:fs",{"_index":3627,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["node:path",{"_index":2970,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["node_id",{"_index":917,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["nodejs",{"_index":5769,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nodejs.readablestream",{"_index":4536,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["nodemailer",{"_index":4704,"title":{},"body":{"dependencies.html":{}}}],["noinspection",{"_index":2037,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidationRecursive.html":{}}}],["nom",{"_index":5917,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nombre",{"_index":2591,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nomm",{"_index":6435,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nommés",{"_index":6401,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["noms",{"_index":6131,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["non",{"_index":3116,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["noncommercially",{"_index":5320,"title":{},"body":{"license.html":{}}}],["noreply@mydomain.com",{"_index":1867,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["normal",{"_index":5159,"title":{},"body":{"license.html":{}}}],["normale",{"_index":3780,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["normally",{"_index":5354,"title":{},"body":{"license.html":{}}}],["normes",{"_index":5837,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nosent",{"_index":4787,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notamment",{"_index":5763,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notation",{"_index":3773,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["notez",{"_index":6384,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notfound",{"_index":6059,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["notfounddto",{"_index":4157,"title":{"classes/NotFoundDto.html":{}},"body":{"classes/NotFoundDto.html":{}}}],["notfoundexception",{"_index":1433,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["notfoundexception('invalid",{"_index":1672,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["nothing",{"_index":5479,"title":{},"body":{"license.html":{}}}],["notice",{"_index":5132,"title":{},"body":{"license.html":{}}}],["notices",{"_index":5126,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":5468,"title":{},"body":{"license.html":{}}}],["notify",{"_index":5464,"title":{},"body":{"license.html":{}}}],["notinitialized",{"_index":4768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notwithstanding",{"_index":5412,"title":{},"body":{"license.html":{}}}],["nounknown",{"_index":6489,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nous",{"_index":5966,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouveau",{"_index":1022,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nouveaux",{"_index":5811,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nouvelle",{"_index":2492,"title":{},"body":{"classes/Identities.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouvelles",{"_index":5915,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["null",{"_index":174,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["nullable",{"_index":2149,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AppService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/EmployeeNumber1700395200.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["number.ts",{"_index":2060,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["number.ts:13",{"_index":2068,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["number.ts:19",{"_index":2067,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["number.ts:6",{"_index":2064,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["numbered",{"_index":5599,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":1927,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/PasswordPoliciesDto.html":{}}}],["numtel",{"_index":1565,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["numérations",{"_index":6226,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["numéro",{"_index":6241,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nuxtjs",{"_index":5771,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nécessaire",{"_index":6382,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nécessitent",{"_index":5929,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["négative.example",{"_index":6479,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["o",{"_index":3547,"title":{},"body":{"classes/LifeCycle1752765731.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["o.mail",{"_index":4913,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["o.mail.length",{"_index":4914,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["obj.trigger",{"_index":1942,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["object",{"_index":218,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/ChangePasswordDto.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/Filestorage.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"interfaces/LifecycleSource.html":{},"classes/NeedChangePasswordDto.html":{},"classes/Settings.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/additionalFieldsPartDto.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["object.constructor",{"_index":4615,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["object.entries(body).reduce((acc",{"_index":2666,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["object.entries(error.constraints).foreach(([constraintkey",{"_index":3786,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["object.entries(filtersquery",{"_index":3005,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["object.entries(schema?.properties",{"_index":3147,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(attributes",{"_index":3124,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(data[key]).length",{"_index":3223,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(err.errors[key]['constraints']).foreach((ckey",{"_index":4149,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["object.keys(jsonschema.properties",{"_index":2861,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(jsonschema.properties).map((key",{"_index":2855,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(validations).join",{"_index":2033,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(error.constraints)[0",{"_index":2048,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(errorchild.constraints)[0",{"_index":2054,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(projectslist",{"_index":953,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["object.values(projectslist).includes(project",{"_index":962,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["object.values(result",{"_index":1278,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["objectclass",{"_index":3131,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses",{"_index":296,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses.includes(key",{"_index":3178,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectclasses.join",{"_index":3188,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectid",{"_index":4168,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["objectidvalidationpipe",{"_index":459,"title":{"injectables/ObjectIdValidationPipe.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["objectif",{"_index":5726,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["objects",{"_index":3763,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["objectsrc",{"_index":1833,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["objet",{"_index":6128,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objets",{"_index":6207,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["obligate",{"_index":5580,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":5337,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":5232,"title":{},"body":{"license.html":{}}}],["obligatoires",{"_index":6360,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["observable",{"_index":1331,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observable((observer",{"_index":1389,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observer.next",{"_index":1347,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observers",{"_index":6294,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["occasionally",{"_index":5319,"title":{},"body":{"license.html":{}}}],["occur",{"_index":3737,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["occurrences",{"_index":3857,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["occurring",{"_index":5476,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":5039,"title":{},"body":{"license.html":{}}}],["ochestrator",{"_index":4792,"title":{},"body":{"index.html":{}}}],["octect",{"_index":1733,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["octets",{"_index":1736,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["offer",{"_index":5010,"title":{},"body":{"license.html":{}}}],["offered",{"_index":5345,"title":{},"body":{"license.html":{}}}],["offering",{"_index":5323,"title":{},"body":{"license.html":{}}}],["official",{"_index":3548,"title":{},"body":{"classes/LifeCycle1752765731.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["offline",{"_index":1173,"title":{},"body":{"injectables/AuthService.html":{}}}],["ok",{"_index":266,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["old",{"_index":1426,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["oldpassword",{"_index":1422,"title":{},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["oldpasswords",{"_index":4376,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["omit",{"_index":1042,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{}}}],["omit(body",{"_index":2979,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["omit(entity.tojson",{"_index":1218,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit(idrule",{"_index":3678,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["omit(options",{"_index":1204,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit(user",{"_index":1059,"title":{},"body":{"controllers/AuthController.html":{}}}],["omit(user.toobject",{"_index":3881,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["on_error",{"_index":4784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onapplicationbootstrap",{"_index":850,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["onapplicationshutdown",{"_index":4436,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["one",{"_index":4049,"title":{},"body":{"injectables/MigrationsService.html":{},"license.html":{}}}],["oneof",{"_index":1947,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["onevent",{"_index":3626,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["onevent('management.identities.service.afterupdate",{"_index":3811,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["onevent('management.identities.service.afterupsert",{"_index":3820,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["onglet",{"_index":6349,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onglets",{"_index":6333,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onmoduleinit",{"_index":68,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{}}}],["ont",{"_index":1750,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"interfaces/TokenData.html":{}}}],["open",{"_index":4795,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["openldap",{"_index":4809,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["operate",{"_index":5634,"title":{},"body":{"license.html":{}}}],["operated",{"_index":5328,"title":{},"body":{"license.html":{}}}],["operating",{"_index":5168,"title":{},"body":{"license.html":{}}}],["operation",{"_index":5251,"title":{},"body":{"license.html":{}}}],["operationoptions",{"_index":2989,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["operator",{"_index":6301,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optimis",{"_index":5828,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["optimize",{"_index":3661,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["optimizes",{"_index":3709,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["option",{"_index":5410,"title":{},"body":{"license.html":{}}}],["optional",{"_index":11,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["optionalparams",{"_index":3296,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionalparams[optionalparams.length",{"_index":3300,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionlabel",{"_index":6289,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optionnels",{"_index":5762,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["options",{"_index":222,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["options.createdby",{"_index":3324,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.interface.ts",{"_index":2125,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["options.limit",{"_index":4358,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["options.request",{"_index":3327,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.request.user",{"_index":3329,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target",{"_index":3301,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.console",{"_index":3305,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.db",{"_index":3302,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options?.limit",{"_index":3853,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["options?.scopes",{"_index":1196,"title":{},"body":{"injectables/AuthService.html":{}}}],["options?.skip",{"_index":3852,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["options?.sort",{"_index":3850,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["options['expiresin",{"_index":3472,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["opérations",{"_index":6153,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ora",{"_index":4706,"title":{},"body":{"dependencies.html":{}}}],["orchestrateur",{"_index":4816,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["orchestrator",{"_index":911,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"miscellaneous/enumerations.html":{}}}],["orchestrator|sesame",{"_index":648,"title":{},"body":{"controllers/AppController.html":{}}}],["order",{"_index":3847,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["organiser",{"_index":6342,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["organization",{"_index":5491,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":5087,"title":{},"body":{"license.html":{}}}],["organizations_url",{"_index":926,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["origin",{"_index":5424,"title":{},"body":{"license.html":{}}}],["original",{"_index":5425,"title":{},"body":{"license.html":{}}}],["originstate",{"_index":2683,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["others",{"_index":4992,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":3089,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["otpkey",{"_index":4377,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ou",{"_index":1489,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["out",{"_index":557,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1267,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"license.html":{}}}],["outside",{"_index":5216,"title":{},"body":{"license.html":{}}}],["over",{"_index":3784,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["overview",{"_index":5692,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1243,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelname",{"_index":1234,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelnamefunction",{"_index":1242,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["overwritten",{"_index":1247,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["owned",{"_index":5517,"title":{},"body":{"license.html":{}}}],["p",{"_index":3544,"title":{},"body":{"classes/LifeCycle1752765731.html":{},"miscellaneous/enumerations.html":{}}}],["package",{"_index":639,"title":{"dependencies.html":{},"properties.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["packaged",{"_index":5278,"title":{},"body":{"license.html":{}}}],["packagejson",{"_index":896,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["packaging",{"_index":5160,"title":{},"body":{"license.html":{}}}],["padd",{"_index":1524,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["padding",{"_index":1523,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["page",{"_index":5723,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["paginated.decorator",{"_index":452,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["paginatedfilterdto",{"_index":2971,"title":{"classes/PaginatedFilterDto.html":{}},"body":{"controllers/IdentitiesPhotoController.html":{},"classes/PaginatedFilterDto.html":{}}}],["paginatedresponsedto",{"_index":33,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/PaginatedResponseDto.html":{}}}],["pagination",{"_index":3864,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["pair",{"_index":2551,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["panneaux",{"_index":6346,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["paper",{"_index":5665,"title":{},"body":{"license.html":{}}}],["par",{"_index":1490,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["paragraph",{"_index":5455,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":5528,"title":{},"body":{"license.html":{}}}],["param",{"_index":437,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{}}}],["param('_id",{"_index":488,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["param('identityid",{"_index":3589,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["param('project",{"_index":686,"title":{},"body":{"controllers/AppController.html":{}}}],["param('schema",{"_index":2788,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["param=datastatusenum.active",{"_index":2517,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["parameter",{"_index":706,"title":{},"body":{"controllers/AppController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["parametres",{"_index":1518,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["parametres'})@apiresponse({status",{"_index":3943,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["params",{"_index":776,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["params.emailattribute",{"_index":1527,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.host}`.match(regex",{"_index":788,"title":{},"body":{"modules/AppModule.html":{}}}],["params.inittokenttl",{"_index":1594,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.mobileattribute",{"_index":1564,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.password",{"_index":803,"title":{},"body":{"modules/AppModule.html":{}}}],["params.resetcodettl",{"_index":1531,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.sender",{"_index":794,"title":{},"body":{"modules/AppModule.html":{}}}],["params.username",{"_index":801,"title":{},"body":{"modules/AppModule.html":{}}}],["paramètre",{"_index":6122,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["paramètres",{"_index":5912,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["parent",{"_index":2231,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["parentid",{"_index":481,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["parse",{"_index":1805,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"interfaces/MongoosePlugin.html":{}}}],["parse(data",{"_index":3745,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["parse(readfilesync(filepath",{"_index":2852,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(finalpath",{"_index":2919,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["parse(readfilesync(path",{"_index":3143,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parseemail",{"_index":315,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseemail(val",{"_index":318,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parsefilepipe",{"_index":2197,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["parsefloat(value",{"_index":3171,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parseint(atimestamp",{"_index":4075,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(btimestamp",{"_index":4076,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(lifecycle",{"_index":3543,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["parseint(migration",{"_index":4041,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(migrationtimestamp",{"_index":4097,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(port",{"_index":793,"title":{},"body":{"modules/AppModule.html":{}}}],["parseint(process.env['sesame_axios_max_redirects",{"_index":1851,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["parseint(process.env['sesame_axios_timeout",{"_index":1847,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["parseint(process.env['sesame_smtp_port",{"_index":1865,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["parseint(timestampmatch",{"_index":4067,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseintpipe",{"_index":1330,"title":{},"body":{"controllers/BackendsController.html":{}}}],["parsename",{"_index":3509,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["parsename(val",{"_index":3464,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["parsepassword",{"_index":316,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parsepassword(val",{"_index":323,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parser",{"_index":4355,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"dependencies.html":{}}}],["parses",{"_index":3732,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["parseusername",{"_index":317,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseusername(val",{"_index":326,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["part",{"_index":5089,"title":{},"body":{"license.html":{}}}],["partial",{"_index":619,"title":{},"body":{"classes/ApiSession.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{}}}],["partial.cn",{"_index":4894,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.departmentnumber",{"_index":4899,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.displayname",{"_index":4900,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.employeenumber",{"_index":4897,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.employeetype",{"_index":4898,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.facsimiletelephonenumber",{"_index":4901,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.givenname",{"_index":4902,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.jpegphoto",{"_index":4911,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.labeleduri",{"_index":4903,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.mail",{"_index":4904,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.mobile",{"_index":4905,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.postaladdress",{"_index":4906,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.preferredlanguage",{"_index":4907,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.sn",{"_index":4895,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.telephonenumber",{"_index":4908,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.title",{"_index":4909,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.uid",{"_index":4896,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partial.usercertificate",{"_index":4910,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialprojectiontype",{"_index":462,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":518,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(agentscreatedto",{"_index":532,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["partialtype(filestoragecreatedto",{"_index":2153,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["partialtype(formdto",{"_index":2350,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["partialtype(identitiescreatedto",{"_index":2580,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["partialtype(identitiesupdatedto",{"_index":2582,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["partialtype(inetorgpersoncreatedto",{"_index":4916,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(jobscreatedto",{"_index":3400,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["partialtype(lifecyclecreatedto",{"_index":3608,"title":{},"body":{"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{}}}],["particular",{"_index":5149,"title":{},"body":{"license.html":{}}}],["particulier",{"_index":6087,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partie",{"_index":5993,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["parties",{"_index":5118,"title":{},"body":{"license.html":{}}}],["partir",{"_index":6012,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["parts",{"_index":5189,"title":{},"body":{"license.html":{}}}],["parts/metadata.part.dto",{"_index":3973,"title":{},"body":{"classes/MetadataDto.html":{}}}],["parts/section.dto",{"_index":2348,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["parts/section.part.schema",{"_index":2295,"title":{},"body":{"classes/Form.html":{}}}],["parts/security.part.dto",{"_index":526,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["parts/state.part.dto",{"_index":525,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["party",{"_index":5329,"title":{},"body":{"license.html":{}}}],["party's",{"_index":5495,"title":{},"body":{"license.html":{}}}],["pas",{"_index":1577,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pascal",{"_index":1143,"title":{},"body":{"injectables/AuthService.html":{}}}],["pass",{"_index":802,"title":{},"body":{"modules/AppModule.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["passe",{"_index":1487,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["passe'})@apiresponse({status",{"_index":2735,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"controllers/PasswdadmController.html":{}}}],["passer",{"_index":6351,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["passport",{"_index":1799,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":1085,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.registerasync",{"_index":1093,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":3429,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":3421,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":3437,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passwd",{"_index":4180,"title":{},"body":{"controllers/PasswdController.html":{}}}],["passwd.controller",{"_index":4267,"title":{},"body":{"modules/PasswdModule.html":{}}}],["passwd.service",{"_index":4221,"title":{},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwd/passwd.module",{"_index":3967,"title":{},"body":{"modules/ManagementModule.html":{}}}],["passwdadm.service",{"_index":4280,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["passwdadmcontroller",{"_index":4268,"title":{"controllers/PasswdadmController.html":{}},"body":{"controllers/PasswdadmController.html":{},"modules/SettingsModule.html":{}}}],["passwdadmservice",{"_index":1455,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["passwdcontroller",{"_index":4178,"title":{"controllers/PasswdController.html":{}},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwddto.newpassword",{"_index":1619,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwddto.oldpassword",{"_index":1618,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwddto.uid",{"_index":1606,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwdmodule",{"_index":3963,"title":{"modules/PasswdModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["passwdservice",{"_index":1474,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["password",{"_index":324,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/ForcePasswordDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/JobsController.html":{},"injectables/LocalStrategy.html":{},"classes/MailSettingsDto.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"license.html":{}}}],["password'})@isstring",{"_index":4370,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto",{"_index":1440,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["password.dto.ts",{"_index":1420,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/NeedChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:10",{"_index":4373,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:11",{"_index":1427,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:14",{"_index":4371,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:15",{"_index":1424,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1428,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/NeedChangePasswordDto.html":{}}}],["passwordneedtobechanged",{"_index":4769,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["passwordpolicies",{"_index":1694,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwordpoliciesdto",{"_index":4274,"title":{"classes/PasswordPoliciesDto.html":{}},"body":{"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{}}}],["patch",{"_index":438,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["patch(':_id([0",{"_index":433,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["patch('state",{"_index":2682,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["patch('state')@apioperation({summary",{"_index":2617,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["patent",{"_index":5454,"title":{},"body":{"license.html":{}}}],["patents",{"_index":5058,"title":{},"body":{"license.html":{}}}],["path",{"_index":1147,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"modules/CoreModule.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"modules/ManagementModule.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"modules/SettingsModule.html":{}}}],["path.replace('validations",{"_index":2882,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["path}/${schema",{"_index":2848,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["pattern",{"_index":3688,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["paul.bismuth",{"_index":995,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/InitResetDto.html":{}}}],["paul.smith",{"_index":3259,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["paul.smith'})@isstring",{"_index":3257,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["payload",{"_index":1125,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/SyncIdentitiesDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.context",{"_index":3325,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.identity",{"_index":1181,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity._id",{"_index":1184,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity.token",{"_index":1185,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.jti].join",{"_index":1188,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.level",{"_index":3332,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.message",{"_index":3322,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.scopes.includes('api",{"_index":1182,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.scopes.includes('offline",{"_index":1180,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.type",{"_index":4627,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.type.ts",{"_index":5715,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["payload?.identity",{"_index":3441,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":5561,"title":{},"body":{"license.html":{}}}],["pb",{"_index":3220,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["peer",{"_index":5340,"title":{},"body":{"license.html":{}}}],["peers",{"_index":5343,"title":{},"body":{"license.html":{}}}],["pending",{"_index":4759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performance",{"_index":3711,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["performances",{"_index":5831,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["performing",{"_index":5177,"title":{},"body":{"license.html":{}}}],["perl",{"_index":5783,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["permanently",{"_index":5463,"title":{},"body":{"license.html":{}}}],["permet",{"_index":6350,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["permettant",{"_index":5729,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["permettre",{"_index":5808,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["permission",{"_index":5013,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":5192,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":5262,"title":{},"body":{"license.html":{}}}],["permit",{"_index":5295,"title":{},"body":{"license.html":{}}}],["permits",{"_index":5444,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4948,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":5388,"title":{},"body":{"license.html":{}}}],["persistauthorization",{"_index":1863,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["personal",{"_index":5353,"title":{},"body":{"license.html":{}}}],["personnalis",{"_index":2759,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisable",{"_index":6322,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisées",{"_index":6319,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisés",{"_index":2766,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["personne",{"_index":6509,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pertinent",{"_index":5578,"title":{},"body":{"license.html":{}}}],["peu",{"_index":1505,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["peut",{"_index":4344,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peuvent",{"_index":6132,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["phonenumber",{"_index":4680,"title":{},"body":{"dependencies.html":{}}}],["photo",{"_index":4856,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["photo.controller",{"_index":2943,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["photo.controller.ts",{"_index":2951,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["photo.controller.ts:102",{"_index":2964,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["photo.controller.ts:61",{"_index":2967,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["physical",{"_index":5302,"title":{},"body":{"license.html":{}}}],["physically",{"_index":5318,"title":{},"body":{"license.html":{}}}],["pick",{"_index":901,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["pick(identity",{"_index":1201,"title":{},"body":{"injectables/AuthService.html":{}}}],["pick(this.package",{"_index":961,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["pickprojectionhelper",{"_index":456,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["pieces",{"_index":4987,"title":{},"body":{"license.html":{}}}],["ping_target",{"_index":4749,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipetransform",{"_index":4166,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["pkginfo",{"_index":688,"title":{},"body":{"controllers/AppController.html":{}}}],["pkginfo.name",{"_index":702,"title":{},"body":{"controllers/AppController.html":{}}}],["pkginfo.version",{"_index":690,"title":{},"body":{"controllers/AppController.html":{}}}],["plac",{"_index":6437,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["place",{"_index":5325,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["placement",{"_index":6354,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["plaintext",{"_index":1679,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["plaintoinstance",{"_index":3628,"title":{},"body":{"interfaces/LifecycleSource.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["plaintoinstance(configobjectschemadto",{"_index":3746,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["plaintoinstance(inetorgpersoncreatedto",{"_index":4893,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["planning",{"_index":5851,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plateforme",{"_index":5842,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["please",{"_index":5686,"title":{},"body":{"license.html":{}}}],["plugin",{"_index":815,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin(autoincrementplugin",{"_index":2496,"title":{},"body":{"classes/Identities.html":{}}}],["plugin.default",{"_index":819,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin.options",{"_index":820,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugins",{"_index":1814,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["plus",{"_index":2962,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["plusieurs",{"_index":1717,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["pointer",{"_index":5658,"title":{},"body":{"license.html":{}}}],["police",{"_index":1609,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["policies",{"_index":1561,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["policies.resetbysms",{"_index":1562,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["policy.dto",{"_index":4279,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["policy.dto.ts",{"_index":4286,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:11",{"_index":4324,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:15",{"_index":4318,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:19",{"_index":4319,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:23",{"_index":4322,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:31",{"_index":4333,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:39",{"_index":4313,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:43",{"_index":4303,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:47",{"_index":4347,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:55",{"_index":4342,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:62",{"_index":4306,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:68",{"_index":4335,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:7",{"_index":4328,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:72",{"_index":4349,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:76",{"_index":4327,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["politique",{"_index":1613,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["pollution",{"_index":3137,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["populate",{"_index":3849,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["port",{"_index":787,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["portion",{"_index":5348,"title":{},"body":{"license.html":{}}}],["positionnement",{"_index":6258,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["positive",{"_index":3722,"title":{},"body":{"interfaces/LifecycleSource.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["positive.example",{"_index":6478,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["posix",{"_index":4025,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["posix.join(this.config.get('factorydrive.options.disks.local.config.root",{"_index":4027,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["possesses",{"_index":5314,"title":{},"body":{"license.html":{}}}],["possession",{"_index":5276,"title":{},"body":{"license.html":{}}}],["possibilit",{"_index":5772,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["possibility",{"_index":5637,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1560,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["post",{"_index":439,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["post(':schema",{"_index":2787,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post(':schema')@apioperation({summary",{"_index":2768,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('activation",{"_index":2514,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["post('activation')@apioperation({summary",{"_index":2503,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["post('change",{"_index":4225,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('change')@apioperation({summary",{"_index":4186,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('count",{"_index":2597,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["post('delete",{"_index":1356,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('delete')@apioperation({summary",{"_index":1291,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('execute",{"_index":1365,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('execute')@apioperation({summary",{"_index":1302,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('forcepassword",{"_index":2741,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["post('forcepassword')@apioperation({summary",{"_index":2725,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["post('fusion",{"_index":2708,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["post('fusion')@apioperation({summary",{"_index":2691,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["post('generate",{"_index":2779,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generate')@apioperation({summary",{"_index":2755,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generateall",{"_index":2776,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generateall')@apioperation({summary",{"_index":2762,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('init",{"_index":4244,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('init')@apioperation({summary",{"_index":4197,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initmany",{"_index":4254,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initmany')@apioperation({summary",{"_index":4202,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initreset",{"_index":4258,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initreset')@apioperation({summary",{"_index":4205,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('local",{"_index":1045,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('local')@useguards(undefined)@apioperation({summary",{"_index":1005,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":1068,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@apioperation({summary",{"_index":1012,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('needtochangepassword",{"_index":2746,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["post('needtochangepassword')@apioperation({summary",{"_index":2731,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["post('refresh",{"_index":1063,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh')@apioperation({summary",{"_index":1019,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":4237,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('reset')@apioperation({summary",{"_index":4209,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('resetbycode",{"_index":4231,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('resetbycode')@apioperation({summary",{"_index":4212,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('set",{"_index":3950,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["post('set')@apioperation({summary",{"_index":3942,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["post('setpolicies",{"_index":4282,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["post('setpolicies')@apioperation({summary",{"_index":4275,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["post('sync",{"_index":1361,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('sync')@apioperation({summary",{"_index":1328,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('syncall",{"_index":1363,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('syncall')@apioperation({summary",{"_index":1320,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('upsert",{"_index":2993,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["post('upsert')@apicreatedecorator(identitiesupsertdto",{"_index":2988,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["post('upsert/photo",{"_index":2973,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["post('upsert/photo')@useinterceptors(undefined)@apifileuploaddecorator(fileuploaddto",{"_index":2966,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["post()@apicreatedecorator(agentscreatedto",{"_index":410,"title":{},"body":{"controllers/AgentsController.html":{}}}],["post()@apicreatedecorator(formdto",{"_index":2303,"title":{},"body":{"controllers/FormController.html":{}}}],["post()@apicreatedecorator(identitiescreatedto",{"_index":2602,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["post()@apicreatedecorator(keyringscreatedto",{"_index":3482,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["post()@apioperation({summary",{"_index":3026,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["post()@useinterceptors(undefined)@apifileuploaddecorator(fileuploaddto",{"_index":2177,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["postaladdress",{"_index":4828,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pour",{"_index":1553,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pouvez",{"_index":6439,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["power",{"_index":5245,"title":{},"body":{"license.html":{}}}],["powershell",{"_index":5782,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["pr",{"_index":5760,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["practical",{"_index":4958,"title":{},"body":{"license.html":{}}}],["practice",{"_index":5046,"title":{},"body":{"license.html":{}}}],["pre",{"_index":6213,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["preamble",{"_index":4953,"title":{},"body":{"license.html":{}}}],["precise",{"_index":5070,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":5043,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":5496,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":5144,"title":{},"body":{"license.html":{}}}],["preferredlanguage",{"_index":4829,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["prefix",{"_index":403,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"interfaces/ValidationRecursive.html":{}}}],["premier",{"_index":6165,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prend",{"_index":6123,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["prendre",{"_index":5968,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prerelease",{"_index":939,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["present",{"_index":5592,"title":{},"body":{"license.html":{}}}],["presente",{"_index":3203,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["presents",{"_index":5136,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":5420,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":3135,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["prevented",{"_index":5382,"title":{},"body":{"license.html":{}}}],["previous",{"_index":5027,"title":{},"body":{"license.html":{}}}],["price",{"_index":4982,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":5563,"title":{},"body":{"license.html":{}}}],["primaryemployeenumber",{"_index":2452,"title":{},"body":{"classes/Identities.html":{}}}],["primarykey",{"_index":4611,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["principal",{"_index":6308,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["principale",{"_index":5780,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principales",{"_index":5737,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principaux",{"_index":4813,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["prior",{"_index":5465,"title":{},"body":{"license.html":{}}}],["prise",{"_index":1516,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["private",{"_index":72,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"license.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["privée",{"_index":6186,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["problems",{"_index":5024,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":5377,"title":{},"body":{"license.html":{}}}],["proceeding",{"_index":700,"title":{},"body":{"controllers/AppController.html":{}}}],["process",{"_index":887,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{}}}],["process.cwd",{"_index":1853,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env.node_env",{"_index":790,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["process.env['lang",{"_index":1822,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_front_mdp",{"_index":1868,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_https_path_cert",{"_index":1828,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_https_path_key",{"_index":1827,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_jwt_secret",{"_index":1858,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_log_level",{"_index":1823,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_mdp_sender",{"_index":1866,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_mongo_uri",{"_index":1843,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_name_queue",{"_index":1824,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_redis_uri",{"_index":1839,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_reset_pwd_mail",{"_index":1869,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_reset_pwd_mobile",{"_index":1870,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_password",{"_index":1873,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_regioncode",{"_index":1875,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_server",{"_index":1871,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_sourceaddr",{"_index":1874,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_systemid",{"_index":1872,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smtp_server",{"_index":1864,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["processed",{"_index":3828,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["processedat",{"_index":3350,"title":{},"body":{"classes/Jobs.html":{}}}],["processes",{"_index":3803,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["processing",{"_index":3662,"title":{},"body":{"interfaces/LifecycleSource.html":{},"miscellaneous/enumerations.html":{}}}],["processor",{"_index":5888,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{}}],["processus",{"_index":6102,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["procuring",{"_index":5552,"title":{},"body":{"license.html":{}}}],["procédure",{"_index":6428,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["produce",{"_index":5171,"title":{},"body":{"license.html":{}}}],["product",{"_index":5303,"title":{},"body":{"license.html":{}}}],["production",{"_index":1154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["products",{"_index":5041,"title":{},"body":{"license.html":{}}}],["profile.commonname",{"_index":6292,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["program",{"_index":4968,"title":{},"body":{"license.html":{}}}],["program's",{"_index":5255,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5676,"title":{},"body":{"license.html":{}}}],["programming",{"_index":5150,"title":{},"body":{"license.html":{}}}],["programs",{"_index":4979,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":5045,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":5241,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":5557,"title":{},"body":{"license.html":{}}}],["project",{"_index":642,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["projection",{"_index":235,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projection.helper",{"_index":458,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type",{"_index":464,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type.ts",{"_index":5710,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projectiontype",{"_index":236,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projects",{"_index":873,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["projectslist",{"_index":643,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"miscellaneous/enumerations.html":{}}}],["projet",{"_index":4810,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["projets",{"_index":5732,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["promesse",{"_index":6198,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promesses",{"_index":6111,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prominent",{"_index":5140,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":5129,"title":{},"body":{"license.html":{}}}],["promise",{"_index":213,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"modules/MigrationsModule.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promise((resolve",{"_index":4445,"title":{},"body":{"injectables/ShutdownObserver.html":{},"injectables/TransformersFilestorageService.html":{}}}],["promise.all",{"_index":1728,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/ShutdownObserver.html":{},"interfaces/TokenData.html":{}}}],["promise.reject(new",{"_index":6145,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise.resolve",{"_index":3210,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prop",{"_index":135,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Lifecycle.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["prop({required",{"_index":2156,"title":{},"body":{"classes/Filestorage.html":{},"classes/StatePart.html":{}}}],["prop({type",{"_index":132,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Lifecycle.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["propagate",{"_index":5098,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":5483,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":5110,"title":{},"body":{"license.html":{}}}],["proper",{"_index":3705,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"properties.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["properties/${key",{"_index":2857,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["property",{"_index":1245,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"license.html":{}}}],["propertyname",{"_index":4613,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["propertynames",{"_index":6490,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["propertypath",{"_index":3771,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["propres",{"_index":6248,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["proprietary",{"_index":5067,"title":{},"body":{"license.html":{}}}],["proprietes",{"_index":3204,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["propriét",{"_index":3779,"title":{},"body":{"interfaces/LifecycleSource.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriétés",{"_index":5903,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["protect",{"_index":4990,"title":{},"body":{"license.html":{}}}],["protected",{"_index":9,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["protecting",{"_index":5036,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5015,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":786,"title":{},"body":{"modules/AppModule.html":{}}}],["protocole",{"_index":4452,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["protocoles",{"_index":5795,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["protocols",{"_index":3932,"title":{},"body":{"classes/MailSettingsDto.html":{},"license.html":{}}}],["prototype",{"_index":3136,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["prove",{"_index":5616,"title":{},"body":{"license.html":{}}}],["provide",{"_index":842,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["provided",{"_index":662,"title":{},"body":{"controllers/AppController.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"license.html":{}}}],["provider",{"_index":4457,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["providers",{"_index":550,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["provision",{"_index":5054,"title":{},"body":{"license.html":{}}}],["provisional",{"_index":3545,"title":{},"body":{"classes/LifeCycle1752765731.html":{},"miscellaneous/enumerations.html":{}}}],["provisionally",{"_index":5460,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":5604,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":5606,"title":{},"body":{"license.html":{}}}],["précis",{"_index":5855,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["précise",{"_index":6170,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prérequis",{"_index":5947,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["présence",{"_index":5759,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["public",{"_index":55,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["public()@get('photo/raw')@apireadresponsedecorator(filestoragedto)@apiquery({required",{"_index":2955,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["public()@sse('sse')@apioperation({summary",{"_index":1307,"title":{},"body":{"controllers/BackendsController.html":{}}}],["publicity",{"_index":5426,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":5401,"title":{},"body":{"license.html":{}}}],["publish",{"_index":5259,"title":{},"body":{"license.html":{}}}],["published",{"_index":5601,"title":{},"body":{"license.html":{}}}],["published_at",{"_index":941,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["purpose",{"_index":5061,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3657,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["pursuant",{"_index":5550,"title":{},"body":{"license.html":{}}}],["pwned",{"_index":4302,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["python",{"_index":5781,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["qcard",{"_index":6306,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qcardactions",{"_index":6314,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qstepper",{"_index":6337,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabpanels",{"_index":6345,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabs",{"_index":6343,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qu'il",{"_index":6436,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["qu'ils",{"_index":6402,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["qualify",{"_index":5472,"title":{},"body":{"license.html":{}}}],["quality",{"_index":5615,"title":{},"body":{"license.html":{}}}],["quasar",{"_index":6229,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["que",{"_index":1579,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["query",{"_index":573,"title":{},"body":{"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/LifecycleSource.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["query('async",{"_index":1357,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('current",{"_index":687,"title":{},"body":{"controllers/AppController.html":{}}}],["query('disablelogs",{"_index":1367,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('erroronnotfound",{"_index":2999,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["query('filters",{"_index":2997,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["query('force",{"_index":2998,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["query('hidden",{"_index":2219,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('id",{"_index":1384,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["query('key",{"_index":1385,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["query('mime",{"_index":2229,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["query('mode",{"_index":2789,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["query('namespace",{"_index":2225,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('path",{"_index":2226,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('timeoutdiscard",{"_index":1366,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('updatestatus",{"_index":1368,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('upsert",{"_index":3000,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["queryoptions",{"_index":231,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["question",{"_index":332,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["question({message",{"_index":319,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questions",{"_index":342,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questionset",{"_index":333,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["queue",{"_index":81,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queue(this.config.get('application.namequeue",{"_index":119,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queue(this.config.get('namequeue",{"_index":5910,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents",{"_index":71,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents(this.config.get('application.namequeue",{"_index":122,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queueevents(this.config.get('namequeue",{"_index":5911,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueprocessorservice",{"_index":5883,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["qui",{"_index":1573,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["quickly",{"_index":3654,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["radash",{"_index":902,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"dependencies.html":{}}}],["radio",{"_index":6270,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["random_bytes_iv",{"_index":1477,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["random_bytes_k",{"_index":1475,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["randombytes",{"_index":577,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/KeyringsService.html":{}}}],["randombytes(32).tostring('hex",{"_index":585,"title":{},"body":{"injectables/AgentsService.html":{}}}],["randombytes(64).tostring('hex",{"_index":3528,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["randombytes(64).tostring('hex')].join(this.token_path_separator",{"_index":1205,"title":{},"body":{"injectables/AuthService.html":{}}}],["randomint",{"_index":1434,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["randomint(100000",{"_index":1520,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["rationalisant",{"_index":6116,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["rawbodybuffer(options",{"_index":4356,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawbodybufferoptions",{"_index":4350,"title":{"interfaces/RawBodyBufferOptions.html":{}},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawresult",{"_index":6070,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["rc.4",{"_index":4718,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":404,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"license.html":{}}}],["read(@param('_id",{"_index":2323,"title":{},"body":{"controllers/FormController.html":{}}}],["read(_id",{"_index":414,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["readability",{"_index":3710,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["readable",{"_index":5299,"title":{},"body":{"license.html":{}}}],["readdir",{"_index":2816,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readdirsync",{"_index":2815,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["readdirsync(`${process.cwd()}/configs/identities/jsonforms",{"_index":2826,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readdirsync(`${process.cwd()}/configs/identities/validations",{"_index":3109,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(`${process.cwd()}/configs/lifecycle",{"_index":3644,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["readdirsync(`${process.cwd()}/defaults/identities/jsonforms",{"_index":2827,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readdirsync(`${process.cwd()}/defaults/identities/validations",{"_index":3110,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(`${process.cwd()}/defaults/lifecycle",{"_index":3645,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["readdirsync(dynamicconfigpath).map((file",{"_index":2894,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(hardconfigpath).map((file",{"_index":2890,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readfile",{"_index":4022,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["readfile(this.locklocation",{"_index":4040,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["readfilesync",{"_index":898,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["readfilesync(`${process.cwd()}/configs/lifecycle/${file",{"_index":3743,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["readfilesync(`${process.cwd()}/defaults/identities/jsonforms/${file",{"_index":2832,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readfilesync(`${process.cwd()}/defaults/identities/validations/${file",{"_index":3111,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["readfilesync(`${process.cwd()}/defaults/lifecycle/${file",{"_index":3646,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["readily",{"_index":5537,"title":{},"body":{"license.html":{}}}],["reading",{"_index":2828,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["readonly",{"_index":76,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["readpath",{"_index":2173,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpath(namespace",{"_index":2181,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpathrawdata",{"_index":2174,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpathrawdata(res",{"_index":2184,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readphotoraw",{"_index":2952,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["readphotoraw(res",{"_index":2954,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["readrawdata",{"_index":2175,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readrawdata(res",{"_index":2187,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["reads",{"_index":3636,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["ready",{"_index":5052,"title":{},"body":{"license.html":{}}}],["reason",{"_index":5548,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":5316,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":5470,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4985,"title":{},"body":{"license.html":{}}}],["received",{"_index":4364,"title":{},"body":{"classes/ResetByCodeDto.html":{},"classes/VerifyTokenDto.html":{},"license.html":{}}}],["received_events_url",{"_index":929,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["receives",{"_index":5488,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":5554,"title":{},"body":{"license.html":{}}}],["recent",{"_index":3576,"title":{},"body":{"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{}}}],["recherche",{"_index":1590,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/TokenData.html":{}}}],["recipient",{"_index":5387,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":5546,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":5002,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":5147,"title":{},"body":{"license.html":{}}}],["record",{"_index":298,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"controllers/IdentitiesCrudController.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["recorded",{"_index":3834,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["recursively",{"_index":3789,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["redirection",{"_index":6280,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirecturl",{"_index":2277,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirig",{"_index":4341,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["redis",{"_index":73,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["redis://localhost:6379/0",{"_index":1840,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["redismodule",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redismodule.forrootasync",{"_index":824,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redisoptions",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["redistribute",{"_index":5654,"title":{},"body":{"license.html":{}}}],["reduce((acc",{"_index":2862,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["ref",{"_index":179,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/Lifecycle.html":{}}}],["reference",{"_index":3603,"title":{},"body":{"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{}}}],["referring",{"_index":4981,"title":{},"body":{"license.html":{}}}],["refers",{"_index":5076,"title":{},"body":{"license.html":{}}}],["refid",{"_index":3555,"title":{},"body":{"classes/Lifecycle.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{}}}],["reflect",{"_index":4711,"title":{},"body":{"dependencies.html":{}}}],["reflect.getmetadata('imports",{"_index":1994,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["refrain",{"_index":5582,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":1001,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(@res",{"_index":1064,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(res",{"_index":1018,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":1065,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token].join(this.token_path_separator",{"_index":1208,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_expires_in",{"_index":1101,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_prefix",{"_index":1102,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":5409,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":5277,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":5190,"title":{},"body":{"license.html":{}}}],["regenerating",{"_index":1168,"title":{},"body":{"injectables/AuthService.html":{}}}],["regex",{"_index":778,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["region",{"_index":4459,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["regioncode",{"_index":1820,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["register",{"_index":1983,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/SettingsModule.html":{}}}],["registerdecorator",{"_index":1922,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/UniquenessMailValidator.html":{}}}],["reinitialis",{"_index":4346,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reinitialisation",{"_index":1547,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["reinitialise",{"_index":4213,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reinstated",{"_index":5459,"title":{},"body":{"license.html":{}}}],["reject",{"_index":3173,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TransformersFilestorageService.html":{}}}],["reject(err",{"_index":4583,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["reject(error",{"_index":4447,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["rejects",{"_index":3085,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["rejetée",{"_index":6199,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["relationship",{"_index":5217,"title":{},"body":{"license.html":{}}}],["release",{"_index":857,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["released",{"_index":4975,"title":{},"body":{"license.html":{}}}],["releases",{"_index":872,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["relevant",{"_index":5270,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":5445,"title":{},"body":{"license.html":{}}}],["relying",{"_index":5536,"title":{},"body":{"license.html":{}}}],["remain",{"_index":5336,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4971,"title":{},"body":{"license.html":{}}}],["remarques",{"_index":6511,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["removal",{"_index":5411,"title":{},"body":{"license.html":{}}}],["remove",{"_index":405,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{},"license.html":{}}}],["remove(@param('_id",{"_index":2326,"title":{},"body":{"controllers/FormController.html":{}}}],["remove(_id",{"_index":421,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["remplir",{"_index":6238,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renater",{"_index":5765,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["rendant",{"_index":6313,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendent",{"_index":6347,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["render",{"_index":5069,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":5629,"title":{},"body":{"license.html":{}}}],["rendre",{"_index":6329,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendu",{"_index":6320,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renewtokens",{"_index":1107,"title":{},"body":{"injectables/AuthService.html":{}}}],["renewtokens(refresh_token",{"_index":1121,"title":{},"body":{"injectables/AuthService.html":{}}}],["reninitialiser",{"_index":1506,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["renvoie",{"_index":2697,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["repair",{"_index":5620,"title":{},"body":{"license.html":{}}}],["repertoire",{"_index":3115,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["reply@mondomaine",{"_index":3926,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["repondu",{"_index":1751,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["repondue",{"_index":4219,"title":{},"body":{"controllers/PasswdController.html":{}}}],["repos_url",{"_index":927,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["represent",{"_index":5374,"title":{},"body":{"license.html":{}}}],["representing",{"_index":1948,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["représent",{"_index":6240,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représentant",{"_index":5904,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représente",{"_index":6204,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["représentent",{"_index":6130,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["représenter",{"_index":6206,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["req",{"_index":162,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/JobsController.html":{}}}],["req.query",{"_index":3384,"title":{},"body":{"controllers/JobsController.html":{}}}],["reqidentity",{"_index":1037,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":143,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/filtres-api.html":{}}}],["request.query['debug",{"_index":2039,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["requestcontext",{"_index":161,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontext.currentcontext?.req",{"_index":175,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontextmodule",{"_index":736,"title":{},"body":{"modules/AppModule.html":{}}}],["requete",{"_index":6362,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["require",{"_index":5184,"title":{},"body":{"license.html":{}}}],["require_protocol",{"_index":3917,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["require_tld",{"_index":3918,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["required",{"_index":302,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AppController.html":{},"classes/ConcernedToPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/DataPart.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"classes/Lifecycle.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requirement",{"_index":5271,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":5339,"title":{},"body":{"license.html":{}}}],["requires",{"_index":5021,"title":{},"body":{"license.html":{}}}],["requiretls",{"_index":798,"title":{},"body":{"modules/AppModule.html":{}}}],["requiring",{"_index":5091,"title":{},"body":{"license.html":{}}}],["requis",{"_index":2549,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requises",{"_index":6406,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["requête",{"_index":6358,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requêtes",{"_index":6372,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["res",{"_index":413,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["res.json",{"_index":683,"title":{},"body":{"controllers/AppController.html":{}}}],["res.render('core/filestorage/transformers/html",{"_index":4574,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["res.setheader('content",{"_index":4566,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["res.socket.on('close",{"_index":1387,"title":{},"body":{"controllers/BackendsController.html":{}}}],["res.status(code).json",{"_index":3014,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["res.status(httpstatus.accepted).json",{"_index":1360,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["res.status(httpstatus.bad_request).json",{"_index":2519,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{}}}],["res.status(httpstatus.created).json",{"_index":475,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["res.status(httpstatus.internal_server_error).json",{"_index":4252,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":484,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["res.status(httpstatus.ok).send",{"_index":1072,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(statuscode).json",{"_index":2652,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["reset",{"_index":556,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"classes/PasswordPoliciesDto.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"interfaces/TokenData.html":{},"overview.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["reset'})@apiresponse({status",{"_index":4206,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(@body",{"_index":4238,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(body",{"_index":4208,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(data",{"_index":1713,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["reset.dto",{"_index":1460,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["reset.dto.ts",{"_index":3271,"title":{},"body":{"classes/InitResetDto.html":{}}}],["reset.dto.ts:11",{"_index":3273,"title":{},"body":{"classes/InitResetDto.html":{}}}],["reset.dto.ts:7",{"_index":3274,"title":{},"body":{"classes/InitResetDto.html":{}}}],["resetaccount",{"_index":1549,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["resetbycode",{"_index":4184,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(@body",{"_index":4233,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(body",{"_index":4211,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(data",{"_index":1690,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["resetbycodedto",{"_index":1452,"title":{"classes/ResetByCodeDto.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{},"interfaces/TokenData.html":{}}}],["resetbysms",{"_index":4298,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["resetcodettl",{"_index":4299,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reseting",{"_index":1570,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["resetpassworddto",{"_index":1441,"title":{"classes/ResetPasswordDto.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{}}}],["resetvalidation",{"_index":6325,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["resolve",{"_index":1146,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(buffer.concat(chunks).tostring('utf8",{"_index":4585,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["resolve(null",{"_index":4448,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["resolve(process.cwd",{"_index":1158,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolveconfigpath",{"_index":3053,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolveconfigpath(key",{"_index":3068,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolved",{"_index":2916,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"license.html":{}}}],["resolvejsonformpath",{"_index":2802,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolvejsonformpath(schema",{"_index":2811,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolves",{"_index":860,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["respect",{"_index":4999,"title":{},"body":{"license.html":{}}}],["respecte",{"_index":1612,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["respecter",{"_index":5836,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["respecter.example",{"_index":6499,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["respectés",{"_index":5859,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["response",{"_index":408,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"controllers/MailadmController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["response.decorator",{"_index":450,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["response.dto",{"_index":35,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["response.dto.ts",{"_index":4173,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:12",{"_index":4175,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:6",{"_index":4176,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:9",{"_index":4177,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.status(httpstatus.not_acceptable).json",{"_index":4141,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["response.status(status).json",{"_index":609,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["response?.status",{"_index":1702,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["responsibilities",{"_index":4997,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":3049,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["ressource",{"_index":6376,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["rest",{"_index":5744,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["restrict",{"_index":5060,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":5242,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":5443,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":5440,"title":{},"body":{"license.html":{}}}],["result",{"_index":1276,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"interfaces/LifecycleSource.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"license.html":{}}}],["result.interface",{"_index":4652,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts",{"_index":1264,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts:13",{"_index":4651,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{}}}],["result.push",{"_index":2908,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["resulting",{"_index":5094,"title":{},"body":{"license.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["retains",{"_index":5391,"title":{},"body":{"license.html":{}}}],["reterrors",{"_index":3228,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["reterrors[err['instancepath'].substring(1",{"_index":3231,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["retoune",{"_index":1572,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["retour",{"_index":6142,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retourne",{"_index":3938,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retournées",{"_index":6157,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retours",{"_index":5961,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retries",{"_index":979,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["retrieve",{"_index":3236,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{}}}],["retrieves",{"_index":638,"title":{},"body":{"controllers/AppController.html":{},"interfaces/LifecycleSource.html":{}}}],["retry",{"_index":854,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["return",{"_index":56,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"controllers/MailadmController.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/RawBodyBufferOptions.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["returns",{"_index":98,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"modules/SettingsModule.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["reussi",{"_index":4338,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reviewing",{"_index":5641,"title":{},"body":{"license.html":{}}}],["revised",{"_index":5590,"title":{},"body":{"license.html":{}}}],["reçu",{"_index":4232,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reçu'})@apiresponse({status",{"_index":4214,"title":{},"body":{"controllers/PasswdController.html":{}}}],["rien",{"_index":1576,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["right",{"_index":5385,"title":{},"body":{"license.html":{}}}],["rights",{"_index":4991,"title":{},"body":{"license.html":{}}}],["risk",{"_index":5614,"title":{},"body":{"license.html":{}}}],["roles",{"_index":531,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["rom",{"_index":5394,"title":{},"body":{"license.html":{}}}],["root",{"_index":1852,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{}}}],["round",{"_index":6483,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["routermodule",{"_index":1986,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["routermodule.register",{"_index":1992,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["row",{"_index":2369,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["royalty",{"_index":5501,"title":{},"body":{"license.html":{}}}],["rule",{"_index":3677,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["rule.rules",{"_index":3698,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["rule.source",{"_index":3699,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["rule.target",{"_index":3702,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["rule.trigger",{"_index":3679,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["rules",{"_index":1235,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/Identities.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["run",{"_index":394,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"license.html":{}}}],["run(inputs",{"_index":349,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["runjob(rule",{"_index":3695,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["running",{"_index":4092,"title":{},"body":{"injectables/MigrationsService.html":{},"license.html":{}}}],["runs",{"_index":5169,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":907,"title":{},"body":{"injectables/AppService.html":{},"controllers/BackendsController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"dependencies.html":{}}}],["règles",{"_index":5758,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["récupère",{"_index":1020,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["récupér",{"_index":6231,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["récupération",{"_index":1026,"title":{},"body":{"controllers/AuthController.html":{}}}],["réel",{"_index":1311,"title":{},"body":{"controllers/BackendsController.html":{}}}],["référence",{"_index":6124,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["références",{"_index":5962,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["référez",{"_index":6175,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["régulière",{"_index":6498,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["réinitialisation",{"_index":1514,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["réinitialiser",{"_index":1710,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["réponse",{"_index":6364,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["résultats",{"_index":5849,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["réussies",{"_index":6154,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["réussit",{"_index":6202,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["s",{"_index":1933,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["s3",{"_index":1804,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["s9nv9vjxdw7bs0haowumdj3xpbsj7dsdrj2nd1z9rvqlk/sf1lkzpfnwdvlx1dzug0wgeyab9a",{"_index":4372,"title":{},"body":{"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["s=seconds",{"_index":1951,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["safest",{"_index":5656,"title":{},"body":{"license.html":{}}}],["sake",{"_index":5020,"title":{},"body":{"license.html":{}}}],["sale",{"_index":5511,"title":{},"body":{"license.html":{}}}],["same",{"_index":661,"title":{},"body":{"controllers/AppController.html":{},"license.html":{}}}],["sans",{"_index":3127,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["satisfy",{"_index":5338,"title":{},"body":{"license.html":{}}}],["save",{"_index":3894,"title":{},"body":{"classes/Logger.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["saveoptions",{"_index":227,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["saying",{"_index":5334,"title":{},"body":{"license.html":{}}}],["scheduled",{"_index":880,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["schedulemodule",{"_index":759,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":837,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulerregistry",{"_index":3630,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["schema",{"_index":305,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Lifecycle.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.dto.ts",{"_index":2106,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:12",{"_index":2112,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:16",{"_index":2108,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:6",{"_index":2111,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:9",{"_index":2109,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.endswith('.ui.yml",{"_index":2878,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.endswith('.yml",{"_index":2839,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.hasownproperty('required",{"_index":3205,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema.identities",{"_index":3747,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["schema.org/draft",{"_index":6447,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.replace('.yml",{"_index":2879,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema['properties'].hasownproperty(required",{"_index":3207,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema['properties'][required]['minitems",{"_index":3216,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema['properties'][required]['minlength",{"_index":3217,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema['properties'][required]['type",{"_index":3215,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schema['required",{"_index":3206,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["schemafactory",{"_index":306,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Lifecycle.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(additionalfieldspart",{"_index":312,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["schemafactory.createforclass(agents",{"_index":393,"title":{},"body":{"classes/Agents.html":{}}}],["schemafactory.createforclass(concernedtopart",{"_index":1785,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["schemafactory.createforclass(datapart",{"_index":2006,"title":{},"body":{"classes/DataPart.html":{}}}],["schemafactory.createforclass(filestorage).index",{"_index":2168,"title":{},"body":{"classes/Filestorage.html":{}}}],["schemafactory.createforclass(form",{"_index":2299,"title":{},"body":{"classes/Form.html":{}}}],["schemafactory.createforclass(formfieldpart",{"_index":2396,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["schemafactory.createforclass(formsectionpart",{"_index":2429,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["schemafactory.createforclass(identities",{"_index":2495,"title":{},"body":{"classes/Identities.html":{}}}],["schemafactory.createforclass(inetorgperson",{"_index":4858,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(initinfopart",{"_index":3266,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["schemafactory.createforclass(jobs",{"_index":3368,"title":{},"body":{"classes/Jobs.html":{}}}],["schemafactory.createforclass(keyrings",{"_index":3456,"title":{},"body":{"classes/Keyrings.html":{}}}],["schemafactory.createforclass(lifecycle",{"_index":3562,"title":{},"body":{"classes/Lifecycle.html":{}}}],["schemafactory.createforclass(logger).pre",{"_index":3893,"title":{},"body":{"classes/Logger.html":{}}}],["schemafactory.createforclass(metadatapart",{"_index":3981,"title":{},"body":{"classes/MetadataPart.html":{}}}],["schemafactory.createforclass(securitypart",{"_index":4386,"title":{},"body":{"classes/SecurityPart.html":{}}}],["schemafactory.createforclass(settings",{"_index":4414,"title":{},"body":{"classes/Settings.html":{}}}],["schemafactory.createforclass(statepart",{"_index":4492,"title":{},"body":{"classes/StatePart.html":{}}}],["schemafactory.createforclass(tasks",{"_index":4506,"title":{},"body":{"classes/Tasks.html":{}}}],["schemas",{"_index":2897,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["schemas/abstract.schema",{"_index":4408,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["schema}.${employeetype.tolowercase()}.ui",{"_index":2912,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.${mode}.${employeetype.tolowercase()}.ui",{"_index":2910,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.${mode}.ui",{"_index":2911,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.ui",{"_index":2913,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.ui.yml",{"_index":2918,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["school",{"_index":5677,"title":{},"body":{"license.html":{}}}],["schéma",{"_index":2758,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["schémas",{"_index":2765,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["scope",{"_index":2023,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/ValidationRecursive.html":{},"license.html":{}}}],["scope.request",{"_index":2024,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["scopes",{"_index":1172,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["scopes.push(...options.scopes",{"_index":1197,"title":{},"body":{"injectables/AuthService.html":{}}}],["script",{"_index":6222,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["scripts",{"_index":5173,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["scriptsrc",{"_index":1838,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["scénarios",{"_index":6118,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["se",{"_index":4811,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["search",{"_index":406,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{}}}],["search(@res",{"_index":3034,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{}}}],["search(res",{"_index":425,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{}}}],["searchall",{"_index":2753,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(@res",{"_index":2784,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(res",{"_index":2770,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchfield",{"_index":6291,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["searchfilteroptions",{"_index":428,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{}}}],["searchfilterschema",{"_index":426,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["second",{"_index":2439,"title":{},"body":{"classes/FusionDto.html":{},"interfaces/LifecycleSource.html":{}}}],["secondarily",{"_index":5101,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":992,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["secondes",{"_index":4326,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["seconds",{"_index":984,"title":{},"body":{"injectables/AppService.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{}}}],["secret",{"_index":1857,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["secretkey",{"_index":4378,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["secretorkey",{"_index":3432,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":5221,"title":{},"body":{"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sectionname",{"_index":2419,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["sections",{"_index":2278,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["secure",{"_index":795,"title":{},"body":{"modules/AppModule.html":{}}}],["securit",{"_index":1696,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["security",{"_index":367,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["security.secretkey",{"_index":1193,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitypart",{"_index":377,"title":{"classes/SecurityPart.html":{}},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{}}}],["securitypartdto",{"_index":508,"title":{"classes/SecurityPartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/SecurityPartDTO.html":{}}}],["securitypartschema",{"_index":378,"title":{},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{}}}],["see",{"_index":676,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"license.html":{}}}],["sein",{"_index":5978,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["select",{"_index":6267,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["self",{"_index":1832,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["sell",{"_index":5526,"title":{},"body":{"license.html":{}}}],["selling",{"_index":5510,"title":{},"body":{"license.html":{}}}],["selon",{"_index":6114,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["semiconductor",{"_index":5079,"title":{},"body":{"license.html":{}}}],["send",{"_index":1350,"title":{},"body":{"controllers/BackendsController.html":{},"classes/InitResetDto.html":{}}}],["sender",{"_index":1817,"title":{},"body":{"interfaces/ConfigInstance.html":{},"classes/MailSettingsDto.html":{},"interfaces/MongoosePlugin.html":{}}}],["senders",{"_index":6271,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sendmail",{"_index":1543,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["sensibles",{"_index":5802,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sent",{"_index":1308,"title":{},"body":{"controllers/BackendsController.html":{},"miscellaneous/enumerations.html":{}}}],["sentdate",{"_index":3263,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["separable",{"_index":5347,"title":{},"body":{"license.html":{}}}],["separate",{"_index":5284,"title":{},"body":{"license.html":{}}}],["separately",{"_index":5281,"title":{},"body":{"license.html":{}}}],["sera",{"_index":4340,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sert",{"_index":1575,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["server",{"_index":613,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"classes/MongoDbTestInstance.html":{},"injectables/ShutdownObserver.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["server.close((error",{"_index":4446,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["serves",{"_index":5162,"title":{},"body":{"license.html":{}}}],["serveur",{"_index":1554,"title":{},"body":{"interfaces/CipherData.html":{},"classes/MailSettingsDto.html":{},"controllers/PasswdController.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["serveurs",{"_index":4808,"title":{},"body":{"index.html":{}}}],["service",{"_index":775,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"license.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["service.getparams",{"_index":777,"title":{},"body":{"modules/AppModule.html":{}}}],["servicename",{"_index":145,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["services",{"_index":5893,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["serviceschemainterface",{"_index":4396,"title":{"interfaces/ServiceSchemaInterface.html":{}},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["servicing",{"_index":5619,"title":{},"body":{"license.html":{}}}],["servit",{"_index":2489,"title":{},"body":{"classes/Identities.html":{}}}],["ses",{"_index":6247,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sesame",{"_index":910,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["sesame_app_manager",{"_index":914,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"miscellaneous/enumerations.html":{}}}],["sesame_daemon",{"_index":912,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"miscellaneous/enumerations.html":{}}}],["sesame_orchestrator",{"_index":909,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"miscellaneous/enumerations.html":{}}}],["session",{"_index":1002,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{}}}],["session(@res",{"_index":1052,"title":{},"body":{"controllers/AuthController.html":{}}}],["session(res",{"_index":1024,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ts",{"_index":616,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:2",{"_index":621,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:3",{"_index":623,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:4",{"_index":622,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:5",{"_index":620,"title":{},"body":{"classes/ApiSession.html":{}}}],["set",{"_index":269,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/LifeCycle1752765731.html":{},"interfaces/LifecycleSource.html":{},"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["set(@body",{"_index":3951,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["set(body",{"_index":3941,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["setinitstate(identity",{"_index":1743,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["setoninsert",{"_index":268,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["setparameter",{"_index":197,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["setparameter(settingname",{"_index":217,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["setpolicies",{"_index":4271,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["setpolicies(@body",{"_index":4283,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["setpolicies(body",{"_index":4273,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["settimeout",{"_index":982,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["settingname",{"_index":216,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings",{"_index":253,"title":{"classes/Settings.html":{}},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settings.name",{"_index":4430,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.service.ts",{"_index":191,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:13",{"_index":215,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:22",{"_index":219,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:41",{"_index":212,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:7",{"_index":210,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings/_dto/mail.settings.dto",{"_index":3945,"title":{},"body":{"controllers/MailadmController.html":{}}}],["settings/_dto/password",{"_index":4278,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["settings/_dto/sms.settings.dto",{"_index":4475,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["settings/_schemas/settings.schema",{"_index":254,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"modules/SettingsModule.html":{}}}],["settings/mail",{"_index":3935,"title":{},"body":{"controllers/MailadmController.html":{}}}],["settings/mailadm.controller",{"_index":4429,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/mailadm.service",{"_index":753,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{}}}],["settings/passwdadm",{"_index":4270,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["settings/passwdadm.controller",{"_index":4428,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/passwdadm.service",{"_index":1456,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{}}}],["settings/settings.controller",{"_index":4426,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/settings.module",{"_index":747,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"modules/PasswdModule.html":{}}}],["settings/settings.service",{"_index":4418,"title":{},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settings/sms",{"_index":4471,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["settings/smsadm.controller",{"_index":4427,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/smsadm.service",{"_index":1462,"title":{},"body":{"interfaces/CipherData.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["settingscontroller",{"_index":4415,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settingsdocument",{"_index":4413,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/typealiases.html":{}}}],["settingsmodule",{"_index":723,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsmodule.register",{"_index":840,"title":{},"body":{"modules/AppModule.html":{}}}],["settingsname",{"_index":193,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settingsschema",{"_index":272,"title":{},"body":{"classes/AbstractSettingsService-1.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{}}}],["settingsservice",{"_index":4417,"title":{"injectables/SettingsService.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["shall",{"_index":5226,"title":{},"body":{"license.html":{}}}],["share",{"_index":4963,"title":{},"body":{"license.html":{}}}],["shared",{"_index":5179,"title":{},"body":{"license.html":{}}}],["short",{"_index":5667,"title":{},"body":{"license.html":{}}}],["show",{"_index":5004,"title":{},"body":{"license.html":{}}}],["showfriendlyerrorstack",{"_index":1841,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["showunfocuseddescription",{"_index":2874,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["shutdownobserver",{"_index":724,"title":{"injectables/ShutdownObserver.html":{}},"body":{"modules/AppModule.html":{},"injectables/ShutdownObserver.html":{},"overview.html":{}}}],["si",{"_index":1504,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sign",{"_index":5678,"title":{},"body":{"license.html":{}}}],["significant",{"_index":5375,"title":{},"body":{"license.html":{}}}],["significatif",{"_index":5861,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["significative",{"_index":6160,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["signifie",{"_index":6164,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["similaire",{"_index":6090,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["similar",{"_index":5240,"title":{},"body":{"license.html":{}}}],["simplifie",{"_index":6101,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simul",{"_index":6025,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulation",{"_index":6169,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulations",{"_index":6148,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simuler",{"_index":5975,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simultaneously",{"_index":5577,"title":{},"body":{"license.html":{}}}],["simulées",{"_index":6113,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulés",{"_index":5954,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["single",{"_index":825,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"modules/CliModule.html":{},"injectables/IdentitiesValidationService.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["site_admin",{"_index":931,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["skip",{"_index":3851,"title":{},"body":{"interfaces/LifecycleSource.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["skipping",{"_index":3685,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["slots",{"_index":6323,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["smpp",{"_index":4453,"title":{},"body":{"classes/SmsSettingsDto.html":{},"dependencies.html":{}}}],["smpp.org",{"_index":4461,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["smpp://smscsim.smpp.org:2775",{"_index":4451,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["sms",{"_index":1491,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/InitResetDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["sms'})@apiresponse({status",{"_index":4472,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["smsadmcontroller",{"_index":4424,"title":{"controllers/SmsadmController.html":{}},"body":{"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{}}}],["smsadmservice",{"_index":1461,"title":{},"body":{"interfaces/CipherData.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["smsattribute",{"_index":1563,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smssettingsdto",{"_index":4449,"title":{"classes/SmsSettingsDto.html":{}},"body":{"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{}}}],["smtp",{"_index":3921,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["smtp://localhost:25",{"_index":3915,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["smtp://smscsim.smpp.org:25",{"_index":3920,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["smtpparams",{"_index":1538,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smtpparams.host",{"_index":1541,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smtpparams.sender",{"_index":1546,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smtps",{"_index":796,"title":{},"body":{"modules/AppModule.html":{},"classes/MailSettingsDto.html":{}}}],["smtps?|):\\/\\/([a",{"_index":779,"title":{},"body":{"modules/AppModule.html":{}}}],["sn",{"_index":4830,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["software",{"_index":442,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"license.html":{}}}],["soit",{"_index":3202,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["sold",{"_index":5357,"title":{},"body":{"license.html":{}}}],["sole",{"_index":5206,"title":{},"body":{"license.html":{}}}],["solely",{"_index":5219,"title":{},"body":{"license.html":{}}}],["sommaire",{"_index":6216,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["son",{"_index":2734,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["sont",{"_index":2649,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sort",{"_index":1748,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sort[metadata.createdat",{"_index":5877,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["sort[subject]=1list",{"_index":5878,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["sorted",{"_index":3845,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["sorties",{"_index":5776,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sorting",{"_index":3867,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["soumission",{"_index":6278,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"modules/LifecycleModule.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["source1",{"_index":3664,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["source2",{"_index":3667,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["sourceaddr",{"_index":1819,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["sources",{"_index":1896,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/Identities.html":{},"interfaces/LifecycleSource.html":{},"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sous",{"_index":6249,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["spam",{"_index":4251,"title":{},"body":{"controllers/PasswdController.html":{}}}],["spare",{"_index":5312,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4980,"title":{},"body":{"license.html":{}}}],["special",{"_index":4320,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"license.html":{}}}],["specific",{"_index":678,"title":{},"body":{"controllers/AppController.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["specifically",{"_index":5183,"title":{},"body":{"license.html":{}}}],["specified",{"_index":655,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["specifier",{"_index":6431,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["specifies",{"_index":5598,"title":{},"body":{"license.html":{}}}],["specify",{"_index":5602,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":5591,"title":{},"body":{"license.html":{}}}],["sprints",{"_index":5853,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["spécifi",{"_index":6143,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["spécifier",{"_index":6423,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["spécifique",{"_index":5926,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiques",{"_index":6150,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiquesexample",{"_index":6464,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiés",{"_index":6115,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["src/.../action",{"_index":4728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../agent",{"_index":4730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../agent.type.ts",{"_index":5699,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../app.service.ts",{"_index":4745,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auto",{"_index":5708,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../backend",{"_index":4733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.object.ts",{"_index":4735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../data",{"_index":4736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../fs",{"_index":4739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../identities.schema.ts",{"_index":5701,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../init",{"_index":4742,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../internal.logger.ts",{"_index":4743,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jobs.schema.ts",{"_index":5702,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../keyrings.schema.ts",{"_index":5703,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../lifecycle.enum.ts",{"_index":4740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../lifecycle.schema.ts",{"_index":5704,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../lifecycle.service.ts",{"_index":5700,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../logger.schema.ts",{"_index":5705,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mixed",{"_index":5706,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../partial",{"_index":5709,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../settings.schema.ts",{"_index":5711,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../state.enum.ts",{"_index":4744,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../states.enum.ts",{"_index":4741,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.schema.ts",{"_index":5712,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../types.ts",{"_index":4738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../uniqueness",{"_index":5713,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validation",{"_index":5714,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../wrapper.type.ts",{"_index":5717,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/abstracts/abstract",{"_index":190,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["src/_common/abstracts/abstract.controller.ts",{"_index":6,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.controller.ts:14",{"_index":26,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:15",{"_index":19,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:22",{"_index":28,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:6",{"_index":62,"title":{},"body":{"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts",{"_index":64,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:11",{"_index":88,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:12",{"_index":84,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:13",{"_index":87,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:15",{"_index":100,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:17",{"_index":83,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:24",{"_index":97,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:9",{"_index":86,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.service.ts",{"_index":142,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/abstract.service.ts:19",{"_index":150,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:20",{"_index":151,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:21",{"_index":148,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:22",{"_index":149,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:24",{"_index":147,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:25",{"_index":146,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:37",{"_index":153,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:45",{"_index":155,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:52",{"_index":157,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:7",{"_index":188,"title":{},"body":{"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/dto/custom",{"_index":1997,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts",{"_index":3971,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts:12",{"_index":3972,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts",{"_index":3982,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:13",{"_index":3984,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:18",{"_index":3987,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:23",{"_index":3986,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:8",{"_index":3985,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts",{"_index":4397,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:18",{"_index":4401,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:24",{"_index":4398,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:26",{"_index":4402,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:32",{"_index":4404,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:38",{"_index":4405,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:44",{"_index":4399,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:46",{"_index":4406,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:52",{"_index":4400,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts",{"_index":124,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:6",{"_index":129,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:9",{"_index":134,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts",{"_index":3974,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10",{"_index":3977,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13",{"_index":3980,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16",{"_index":3979,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7",{"_index":3978,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/data/api",{"_index":615,"title":{},"body":{"classes/ApiSession.html":{}}}],["src/_common/data/console",{"_index":1967,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["src/_common/dto/error",{"_index":2105,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["src/_common/dto/not",{"_index":4158,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["src/_common/dto/paginated",{"_index":4170,"title":{},"body":{"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["src/_common/errors/validationexception.ts",{"_index":4617,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:18",{"_index":4640,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:22",{"_index":4639,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:31",{"_index":4642,"title":{},"body":{"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:38",{"_index":4622,"title":{},"body":{"classes/ValidationConfigException.html":{}}}],["src/_common/errors/validationexception.ts:9",{"_index":4638,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/filters/all",{"_index":595,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["src/_common/filters/identities",{"_index":3035,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["src/_common/filters/mongoose",{"_index":4131,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["src/_common/middlewares/raw",{"_index":4351,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["src/_common/observers/shutdown.observer.ts",{"_index":4433,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/observers/shutdown.observer.ts:12",{"_index":4440,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/observers/shutdown.observer.ts:6",{"_index":4441,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/observers/shutdown.observer.ts:8",{"_index":4439,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/pipes/dto",{"_index":2011,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["src/_common/pipes/object",{"_index":4163,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["src/_common/plugins/mongoose/auto",{"_index":1230,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["src/_common/tests/mongodb.test.instance.ts",{"_index":4102,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:18",{"_index":4115,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:24",{"_index":4111,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:31",{"_index":4113,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:5",{"_index":4110,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:6",{"_index":4108,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:8",{"_index":4114,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/types/agent.type.ts",{"_index":5718,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/mixed",{"_index":5719,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/partial",{"_index":5720,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/validation",{"_index":5721,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/wrapper.type.ts",{"_index":5722,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/validators/uniqueness",{"_index":4587,"title":{},"body":{"injectables/UniquenessMailValidator.html":{},"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":627,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:24",{"_index":635,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:41",{"_index":652,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":725,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":845,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"miscellaneous/enumerations.html":{}}}],["src/app.service.ts:116",{"_index":869,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:136",{"_index":861,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:146",{"_index":866,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:166",{"_index":855,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:40",{"_index":2441,"title":{},"body":{"interfaces/GithubAsset.html":{}}}],["src/app.service.ts:67",{"_index":895,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:72",{"_index":852,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:90",{"_index":884,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cli/agents.command.ts",{"_index":314,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:12",{"_index":328,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:20",{"_index":321,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:29",{"_index":325,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:35",{"_index":495,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:45",{"_index":496,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:57",{"_index":396,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/agents.command.ts:63",{"_index":397,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/backends.command.ts",{"_index":1269,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:15",{"_index":1417,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:26",{"_index":1270,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:32",{"_index":1271,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:6",{"_index":1416,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/cli.module.ts",{"_index":1764,"title":{},"body":{"modules/CliModule.html":{}}}],["src/cli/identities.command.ts",{"_index":2520,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["src/cli/identities.command.ts:10",{"_index":2718,"title":{},"body":{"classes/IdentitiesFingerprintCommand.html":{}}}],["src/cli/identities.command.ts:20",{"_index":2719,"title":{},"body":{"classes/IdentitiesFingerprintCommand.html":{}}}],["src/cli/identities.command.ts:42",{"_index":2521,"title":{},"body":{"classes/IdentitiesCommand.html":{}}}],["src/cli/identities.command.ts:48",{"_index":2522,"title":{},"body":{"classes/IdentitiesCommand.html":{}}}],["src/cli/keyrings.command.ts",{"_index":3457,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:15",{"_index":3510,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:21",{"_index":3497,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:32",{"_index":3498,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:63",{"_index":3458,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/cli/keyrings.command.ts:69",{"_index":3459,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/config.ts",{"_index":1794,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["src/core/agents/_dto/agents.dto.ts",{"_index":497,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:17",{"_index":515,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:22",{"_index":501,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:27",{"_index":503,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:32",{"_index":507,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:37",{"_index":514,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:43",{"_index":513,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:48",{"_index":500,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:58",{"_index":510,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:63",{"_index":505,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:69",{"_index":534,"title":{},"body":{"classes/AgentsDto.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts",{"_index":4387,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:13",{"_index":4393,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:19",{"_index":4395,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:25",{"_index":4390,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:30",{"_index":4391,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:35",{"_index":4394,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:8",{"_index":4392,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts",{"_index":4493,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:13",{"_index":4496,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:18",{"_index":4497,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:23",{"_index":4499,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:28",{"_index":4498,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:8",{"_index":4495,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_enum/agent",{"_index":4757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts",{"_index":4374,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:10",{"_index":4382,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:15",{"_index":4383,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:20",{"_index":4385,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:25",{"_index":4380,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:31",{"_index":4381,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:36",{"_index":4384,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts",{"_index":4479,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:13",{"_index":4484,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:19",{"_index":4485,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:22",{"_index":4486,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:25",{"_index":4488,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:28",{"_index":4487,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/agents.schema.ts",{"_index":363,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:23",{"_index":385,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:28",{"_index":373,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:35",{"_index":375,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:41",{"_index":376,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:47",{"_index":384,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:54",{"_index":382,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:60",{"_index":370,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:65",{"_index":379,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:70",{"_index":372,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/agents.controller.ts",{"_index":402,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:104",{"_index":424,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:41",{"_index":412,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:51",{"_index":431,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:72",{"_index":420,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:89",{"_index":435,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.module.ts",{"_index":558,"title":{},"body":{"modules/AgentsModule.html":{}}}],["src/core/agents/agents.service.ts",{"_index":568,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/agents/agents.service.ts:12",{"_index":569,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts",{"_index":3420,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:12",{"_index":3423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:27",{"_index":3427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts",{"_index":3869,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:10",{"_index":3870,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:18",{"_index":3873,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/auth.controller.ts",{"_index":998,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:28",{"_index":1009,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:39",{"_index":1031,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:54",{"_index":1023,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:64",{"_index":1017,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.module.ts",{"_index":1081,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/core/auth/auth.service.ts",{"_index":1097,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:119",{"_index":1117,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:169",{"_index":1119,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:184",{"_index":1122,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:196",{"_index":1115,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:22",{"_index":1132,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:23",{"_index":1137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:25",{"_index":1129,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:26",{"_index":1136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:28",{"_index":1127,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:29",{"_index":1111,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:41",{"_index":1120,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:71",{"_index":1113,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:84",{"_index":1124,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/backends/_dto/delete",{"_index":2007,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{}}}],["src/core/backends/_dto/execute",{"_index":2113,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["src/core/backends/_dto/sync",{"_index":4500,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["src/core/backends/_enum/action",{"_index":4746,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/backend",{"_index":1263,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/execute",{"_index":2124,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["src/core/backends/_interfaces/worker",{"_index":4649,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["src/core/backends/backends.controller.ts",{"_index":1282,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:132",{"_index":1318,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:54",{"_index":1295,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:69",{"_index":1329,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:84",{"_index":1325,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:94",{"_index":1305,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.module.ts",{"_index":1410,"title":{},"body":{"modules/BackendsModule.html":{}}}],["src/core/core.controller.ts",{"_index":1971,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/core.module.ts",{"_index":1982,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.module.ts:29",{"_index":1984,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.service.ts",{"_index":1995,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:4",{"_index":1996,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts",{"_index":2132,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:19",{"_index":2135,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:26",{"_index":2253,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:31",{"_index":2249,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:37",{"_index":2250,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:42",{"_index":2241,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:47",{"_index":2245,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:52",{"_index":2240,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:57",{"_index":2247,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:62",{"_index":2243,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:67",{"_index":2251,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:72",{"_index":2238,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:78",{"_index":2254,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["src/core/filestorage/_enum/fs",{"_index":4774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts",{"_index":2155,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:15",{"_index":2166,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:20",{"_index":2162,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:26",{"_index":2163,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:33",{"_index":2164,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:39",{"_index":2160,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:45",{"_index":2158,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:51",{"_index":2161,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:57",{"_index":2165,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:63",{"_index":2157,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:70",{"_index":2159,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_services/transformers",{"_index":4526,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["src/core/filestorage/filestorage.controller.ts",{"_index":2172,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:102",{"_index":2180,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:115",{"_index":2183,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:135",{"_index":2190,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:151",{"_index":2186,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:164",{"_index":2196,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:179",{"_index":2192,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:59",{"_index":2178,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:73",{"_index":2194,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.module.ts",{"_index":2268,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["src/core/form/_dto/form.dto.ts",{"_index":2328,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:12",{"_index":2339,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:17",{"_index":2333,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:21",{"_index":2342,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:26",{"_index":2331,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:31",{"_index":2335,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:35",{"_index":2338,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:39",{"_index":2337,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:44",{"_index":2334,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts",{"_index":2360,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:11",{"_index":2379,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:15",{"_index":2380,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:19",{"_index":2381,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:23",{"_index":2377,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:27",{"_index":2372,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:31",{"_index":2371,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:35",{"_index":2374,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:39",{"_index":2375,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:43",{"_index":2373,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:7",{"_index":2378,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts",{"_index":2404,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:10",{"_index":2412,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:14",{"_index":2416,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:19",{"_index":2411,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:24",{"_index":2407,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:31",{"_index":2414,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:37",{"_index":2410,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_enum/types.ts",{"_index":4770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/form/_interface/form.interface.ts",{"_index":4523,"title":{},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["src/core/form/_schemas/form.schema.ts",{"_index":2276,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:12",{"_index":2290,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:15",{"_index":2283,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:21",{"_index":2282,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:28",{"_index":2292,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:31",{"_index":2287,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:34",{"_index":2289,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:37",{"_index":2288,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:40",{"_index":2284,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts",{"_index":2384,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:12",{"_index":2393,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:15",{"_index":2394,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:18",{"_index":2390,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:24",{"_index":2386,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:30",{"_index":2385,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:36",{"_index":2388,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:42",{"_index":2389,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:48",{"_index":2387,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:6",{"_index":2391,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:9",{"_index":2392,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts",{"_index":2421,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:10",{"_index":2425,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:17",{"_index":2427,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:22",{"_index":2424,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:27",{"_index":2422,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:30",{"_index":2426,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:33",{"_index":2423,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/form.controller.ts",{"_index":2301,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:39",{"_index":2305,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:49",{"_index":2310,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:69",{"_index":2307,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:80",{"_index":2313,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:95",{"_index":2309,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.module.ts",{"_index":2400,"title":{},"body":{"modules/FormModule.html":{}}}],["src/core/form/form.service.ts",{"_index":2430,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/form/form.service.ts:9",{"_index":2431,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/jobs/_dto/_parts/concerned",{"_index":1787,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts",{"_index":3387,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:12",{"_index":3391,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:16",{"_index":3388,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:22",{"_index":3390,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:26",{"_index":3396,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:30",{"_index":3389,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:34",{"_index":3393,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:38",{"_index":3394,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:42",{"_index":3395,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:48",{"_index":3401,"title":{},"body":{"classes/JobsDto.html":{}}}],["src/core/jobs/_enums/state.enum.ts",{"_index":4788,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/jobs/_schemas/_parts/concerned",{"_index":1779,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts",{"_index":3346,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:15",{"_index":3355,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:21",{"_index":3351,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:26",{"_index":3353,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:29",{"_index":3361,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:32",{"_index":3352,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:35",{"_index":3356,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:38",{"_index":3358,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:41",{"_index":3357,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:44",{"_index":3354,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:47",{"_index":3360,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/jobs.controller.ts",{"_index":3370,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.controller.ts:39",{"_index":3373,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.controller.ts:63",{"_index":3372,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.module.ts",{"_index":3413,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/core/jobs/jobs.service.ts",{"_index":3417,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/jobs/jobs.service.ts:8",{"_index":3418,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts",{"_index":3499,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:14",{"_index":3506,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:18",{"_index":3502,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:21",{"_index":3505,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:27",{"_index":3511,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:9",{"_index":3503,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts",{"_index":3446,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:13",{"_index":3450,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:19",{"_index":3452,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:25",{"_index":3449,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:28",{"_index":3451,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/keyrings.controller.ts",{"_index":3481,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:37",{"_index":3484,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:47",{"_index":3489,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:68",{"_index":3486,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:84",{"_index":3488,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.module.ts",{"_index":3519,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["src/core/keyrings/keyrings.service.ts",{"_index":3523,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/keyrings/keyrings.service.ts:11",{"_index":3524,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts",{"_index":2001,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:12",{"_index":2004,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:18",{"_index":2002,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/logger.schema.ts",{"_index":3882,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:15",{"_index":3887,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:22",{"_index":3886,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:29",{"_index":3885,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:36",{"_index":3884,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/internal.logger.ts",{"_index":3276,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/logger/internal.logger.ts:107",{"_index":3344,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:123",{"_index":3341,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:139",{"_index":3338,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:27",{"_index":3336,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:34",{"_index":3342,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:45",{"_index":3340,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:62",{"_index":3345,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:78",{"_index":3343,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:91",{"_index":3339,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/logger.controller.ts",{"_index":3900,"title":{},"body":{"controllers/LoggerController.html":{}}}],["src/core/logger/logger.module.ts",{"_index":3906,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/core/logger/logger.service.ts",{"_index":3910,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/logger/logger.service.ts:8",{"_index":3911,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts",{"_index":4502,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts:10",{"_index":4503,"title":{},"body":{"classes/Tasks.html":{}}}],["src/core/tasks/tasks.controller.ts",{"_index":4508,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/core/tasks/tasks.module.ts",{"_index":4515,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/core/tasks/tasks.service.ts",{"_index":4519,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/tasks/tasks.service.ts:8",{"_index":4520,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/management/identities/_dto/_parts/activation",{"_index":274,"title":{},"body":{"classes/ActivationDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts",{"_index":4655,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:11",{"_index":4658,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:18",{"_index":4657,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:24",{"_index":4659,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts",{"_index":4860,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:101",{"_index":4882,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:106",{"_index":4883,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:111",{"_index":4884,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:116",{"_index":4886,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:121",{"_index":4887,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:126",{"_index":4889,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:136",{"_index":4876,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:39",{"_index":4888,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:44",{"_index":4863,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:51",{"_index":4872,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:56",{"_index":4873,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:6",{"_index":4891,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:62",{"_index":4866,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:67",{"_index":4885,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:72",{"_index":4869,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:77",{"_index":4874,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:82",{"_index":4875,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:87",{"_index":4877,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:95",{"_index":4880,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/force",{"_index":2274,"title":{},"body":{"classes/ForcePasswordDto.html":{}}}],["src/management/identities/_dto/fusion.dto.ts",{"_index":2434,"title":{},"body":{"classes/FusionDto.html":{}}}],["src/management/identities/_dto/fusion.dto.ts:11",{"_index":2440,"title":{},"body":{"classes/FusionDto.html":{}}}],["src/management/identities/_dto/fusion.dto.ts:7",{"_index":2438,"title":{},"body":{"classes/FusionDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts",{"_index":2538,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:18",{"_index":2566,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:24",{"_index":2561,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:30",{"_index":2556,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:36",{"_index":2563,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:41",{"_index":2559,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:60",{"_index":2554,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:70",{"_index":3017,"title":{},"body":{"classes/IdentitiesUpsertDto.html":{}}}],["src/management/identities/_dto/need",{"_index":4156,"title":{},"body":{"classes/NeedChangePasswordDto.html":{}}}],["src/management/identities/_enums/data",{"_index":4767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/init",{"_index":4786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/lifecycle.enum.ts",{"_index":4777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/states.enum.ts",{"_index":4778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_middlewares/ensure",{"_index":2086,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts",{"_index":294,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:11",{"_index":300,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:14",{"_index":304,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:8",{"_index":303,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts",{"_index":4820,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:12",{"_index":4835,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:15",{"_index":4838,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:18",{"_index":4839,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:21",{"_index":4841,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:24",{"_index":4842,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:27",{"_index":4843,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:30",{"_index":4844,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:33",{"_index":4845,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:36",{"_index":4846,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:39",{"_index":4847,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:42",{"_index":4848,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:45",{"_index":4849,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:61",{"_index":4836,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:64",{"_index":4837,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:67",{"_index":4834,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:70",{"_index":4840,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:76",{"_index":4850,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:9",{"_index":4833,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/init",{"_index":3260,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["src/management/identities/_schemas/identities.schema.ts",{"_index":2442,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:20",{"_index":2472,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:23",{"_index":2469,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:26",{"_index":2456,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:29",{"_index":2457,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:32",{"_index":2460,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:35",{"_index":2462,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:38",{"_index":2454,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:41",{"_index":2459,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:44",{"_index":2468,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:47",{"_index":2467,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:50",{"_index":2466,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:53",{"_index":2465,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:58",{"_index":2455,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:62",{"_index":2471,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:66",{"_index":2458,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:69",{"_index":2470,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/identities",{"_index":2500,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["src/management/identities/identities.module.ts",{"_index":2924,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["src/management/identities/identities.module.ts:67",{"_index":2930,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["src/management/identities/jsonforms/_config",{"_index":2904,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/_config/${schema",{"_index":2842,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts",{"_index":2750,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:16",{"_index":2767,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:26",{"_index":2760,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:36",{"_index":2771,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:47",{"_index":2769,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.module.ts",{"_index":2798,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts",{"_index":2800,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:124",{"_index":2809,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:156",{"_index":2804,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:17",{"_index":2810,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:185",{"_index":2806,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:46",{"_index":2812,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:59",{"_index":2808,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:9",{"_index":2803,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/validations/_config",{"_index":2887,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts",{"_index":1878,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:10",{"_index":1880,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:14",{"_index":1887,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:17",{"_index":1884,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:21",{"_index":1882,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:26",{"_index":1959,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:29",{"_index":1958,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:32",{"_index":1957,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:38",{"_index":1966,"title":{},"body":{"classes/ConfigObjectSchemaDTO-1.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:42",{"_index":1965,"title":{},"body":{"classes/ConfigObjectSchemaDTO-1.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:7",{"_index":1883,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_enums/config.object.ts",{"_index":4766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts",{"_index":3019,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:18",{"_index":3028,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:50",{"_index":3024,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:60",{"_index":3023,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.module.ts",{"_index":3046,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["src/management/identities/validations/identities.validation.service.ts",{"_index":3048,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:100",{"_index":3061,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:111",{"_index":3064,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:152",{"_index":3074,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:21",{"_index":3090,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:214",{"_index":3077,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:22",{"_index":3091,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:23",{"_index":3059,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:230",{"_index":3083,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:309",{"_index":3087,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:34",{"_index":3067,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:374",{"_index":3065,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:429",{"_index":3066,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:447",{"_index":3079,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:62",{"_index":3069,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:75",{"_index":3071,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/lifecycle/_dto/config.dto.ts",{"_index":1895,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/lifecycle/_dto/config.dto.ts:134",{"_index":1905,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{}}}],["src/management/lifecycle/_dto/config.dto.ts:138",{"_index":1900,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{}}}],["src/management/lifecycle/_dto/config.dto.ts:152",{"_index":1917,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{}}}],["src/management/lifecycle/_dto/config.dto.ts:163",{"_index":1907,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{}}}],["src/management/lifecycle/_dto/config.dto.ts:175",{"_index":1963,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/lifecycle/_dto/lifecycle.dto.ts",{"_index":3598,"title":{},"body":{"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{}}}],["src/management/lifecycle/_dto/lifecycle.dto.ts:12",{"_index":3605,"title":{},"body":{"classes/LifecycleCreateDto.html":{}}}],["src/management/lifecycle/_dto/lifecycle.dto.ts:20",{"_index":3602,"title":{},"body":{"classes/LifecycleCreateDto.html":{}}}],["src/management/lifecycle/_dto/lifecycle.dto.ts:27",{"_index":3600,"title":{},"body":{"classes/LifecycleCreateDto.html":{}}}],["src/management/lifecycle/_dto/lifecycle.dto.ts:33",{"_index":3609,"title":{},"body":{"classes/LifecycleDto.html":{}}}],["src/management/lifecycle/_schemas/lifecycle.schema.ts",{"_index":3554,"title":{},"body":{"classes/Lifecycle.html":{},"miscellaneous/typealiases.html":{}}}],["src/management/lifecycle/_schemas/lifecycle.schema.ts:17",{"_index":3558,"title":{},"body":{"classes/Lifecycle.html":{}}}],["src/management/lifecycle/_schemas/lifecycle.schema.ts:24",{"_index":3557,"title":{},"body":{"classes/Lifecycle.html":{}}}],["src/management/lifecycle/_schemas/lifecycle.schema.ts:30",{"_index":3556,"title":{},"body":{"classes/Lifecycle.html":{}}}],["src/management/lifecycle/lifecycle.controller.ts",{"_index":3564,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["src/management/lifecycle/lifecycle.controller.ts:35",{"_index":3573,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["src/management/lifecycle/lifecycle.controller.ts:57",{"_index":3582,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["src/management/lifecycle/lifecycle.controller.ts:73",{"_index":3578,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["src/management/lifecycle/lifecycle.module.ts",{"_index":3618,"title":{},"body":{"modules/LifecycleModule.html":{}}}],["src/management/lifecycle/lifecycle.service.ts",{"_index":3624,"title":{},"body":{"interfaces/LifecycleSource.html":{},"miscellaneous/typealiases.html":{}}}],["src/management/lifecycle/lifecycle.service.ts:19",{"_index":3625,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["src/management/management.controller.ts",{"_index":3954,"title":{},"body":{"controllers/ManagementController.html":{}}}],["src/management/management.module.ts",{"_index":3964,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.module.ts:15",{"_index":3965,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.service.ts",{"_index":3969,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/management.service.ts:4",{"_index":3970,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/passwd/_dto/ask",{"_index":986,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["src/management/passwd/_dto/change",{"_index":1419,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["src/management/passwd/_dto/init",{"_index":3255,"title":{},"body":{"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{}}}],["src/management/passwd/_dto/reset",{"_index":4361,"title":{},"body":{"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{}}}],["src/management/passwd/_dto/verify",{"_index":4644,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["src/management/passwd/passwd.controller.ts",{"_index":4179,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:118",{"_index":4203,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:127",{"_index":4207,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:139",{"_index":4220,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:28",{"_index":4191,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:48",{"_index":4215,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:73",{"_index":4210,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:90",{"_index":4195,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:99",{"_index":4200,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.module.ts",{"_index":4266,"title":{},"body":{"modules/PasswdModule.html":{}}}],["src/management/passwd/passwd.service.ts",{"_index":1430,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["src/migrations/jobs/1700395200",{"_index":2058,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["src/migrations/jobs/1752765731",{"_index":3531,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["src/migrations/migrations.module.ts",{"_index":3992,"title":{},"body":{"modules/MigrationsModule.html":{}}}],["src/migrations/migrations.module.ts:10",{"_index":3993,"title":{},"body":{"modules/MigrationsModule.html":{}}}],["src/migrations/migrations.service.ts",{"_index":3995,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:125",{"_index":4004,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:14",{"_index":4015,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:16",{"_index":4013,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:162",{"_index":4010,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:17",{"_index":4002,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:28",{"_index":4012,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:40",{"_index":4003,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:84",{"_index":4006,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/settings/_abstracts/abstract",{"_index":271,"title":{},"body":{"classes/AbstractSettingsService-1.html":{}}}],["src/settings/_dto/mail.settings.dto.ts",{"_index":3914,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:11",{"_index":3928,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:15",{"_index":3930,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:19",{"_index":3924,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:7",{"_index":3922,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/password",{"_index":4285,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts",{"_index":4450,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:11",{"_index":4469,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:15",{"_index":4458,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:19",{"_index":4460,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:28",{"_index":4467,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:7",{"_index":4454,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_schemas/settings.schema.ts",{"_index":4410,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/typealiases.html":{}}}],["src/settings/_schemas/settings.schema.ts:11",{"_index":4412,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/_schemas/settings.schema.ts:9",{"_index":4411,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/mailadm.controller.ts",{"_index":3934,"title":{},"body":{"controllers/MailadmController.html":{}}}],["src/settings/mailadm.controller.ts:15",{"_index":3940,"title":{},"body":{"controllers/MailadmController.html":{}}}],["src/settings/mailadm.controller.ts:24",{"_index":3944,"title":{},"body":{"controllers/MailadmController.html":{}}}],["src/settings/passwdadm.controller.ts",{"_index":4269,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/passwdadm.controller.ts:15",{"_index":4277,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/passwdadm.controller.ts:24",{"_index":4272,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/settings.controller.ts",{"_index":4416,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.module.ts",{"_index":4423,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/settings/settings.module.ts:27",{"_index":4425,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/settings/settings.service.ts",{"_index":4431,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:4",{"_index":4432,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/smsadm.controller.ts",{"_index":4470,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["src/settings/smsadm.controller.ts:15",{"_index":4473,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["src/settings/smsadm.controller.ts:24",{"_index":4474,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["srcfusionid",{"_index":2453,"title":{},"body":{"classes/Identities.html":{}}}],["sse",{"_index":1285,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse('sse",{"_index":1382,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(@res",{"_index":1383,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(res",{"_index":1306,"title":{},"body":{"controllers/BackendsController.html":{}}}],["ssetoken",{"_index":1060,"title":{},"body":{"controllers/AuthController.html":{}}}],["sslv3,tlsv1,tlsv1.1,tlsv1.2",{"_index":806,"title":{},"body":{"modules/AppModule.html":{}}}],["stabilit",{"_index":5826,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stand",{"_index":5051,"title":{},"body":{"license.html":{}}}],["standard",{"_index":5146,"title":{},"body":{"license.html":{}}}],["standards",{"_index":5148,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["starred_url",{"_index":924,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["start",{"_index":877,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/MongoDbTestInstance.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["startat",{"_index":1236,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{}}}],["started",{"_index":960,"title":{"index.html":{},"license.html":{}},"body":{"injectables/AppService.html":{},"classes/EmployeeNumber1700395200.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/LifeCycle1752765731.html":{}}}],["starting",{"_index":950,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["startloader",{"_index":4018,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["startloader('migration",{"_index":4037,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["starts",{"_index":3649,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["state",{"_index":368,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"interfaces/CipherData.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["state.enum",{"_index":1467,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{}}}],["state.enum.ts",{"_index":4731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stated",{"_index":5196,"title":{},"body":{"license.html":{}}}],["statement",{"_index":5447,"title":{},"body":{"license.html":{}}}],["statepart",{"_index":380,"title":{"classes/StatePart.html":{}},"body":{"classes/Agents.html":{},"classes/StatePart.html":{}}}],["statepartdto",{"_index":511,"title":{"classes/StatePartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/StatePartDTO.html":{}}}],["statepartschema",{"_index":381,"title":{},"body":{"classes/Agents.html":{},"classes/StatePart.html":{}}}],["states",{"_index":5059,"title":{},"body":{"license.html":{}}}],["static",{"_index":468,"title":{},"body":{"controllers/AgentsController.html":{},"interfaces/CipherData.html":{},"modules/CoreModule.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["stating",{"_index":5261,"title":{},"body":{"license.html":{}}}],["statistics",{"_index":3592,"title":{},"body":{"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{}}}],["statistics'})@get('stats",{"_index":3581,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["stats",{"_index":3860,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["status",{"_index":277,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"license.html":{}}}],["status.ts",{"_index":4737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":476,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{}}}],["statut",{"_index":6424,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["stepper",{"_index":6225,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["steps",{"_index":4772,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stock",{"_index":5996,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stockage",{"_index":5753,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stocker",{"_index":5773,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stockés",{"_index":5739,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stop",{"_index":4107,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stoploader",{"_index":4019,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["stoploader(loader",{"_index":4039,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["storage",{"_index":846,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"license.html":{}}}],["storage/identities",{"_index":1854,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["storagemanagerconfig",{"_index":1802,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["stores",{"_index":3734,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["strategy",{"_index":3431,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["stream",{"_index":2230,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["stream.on('data",{"_index":4579,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.on('end",{"_index":4584,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.on('error",{"_index":4582,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.pipe(res",{"_index":4571,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["streamtostring",{"_index":4529,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["streamtostring(stream",{"_index":4535,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["strict",{"_index":115,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{}}}],["string",{"_index":40,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["string(data[key][index",{"_index":3169,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["string(data[key][index][elems",{"_index":3163,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["stringify",{"_index":2813,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["stringify(jsonform",{"_index":2886,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["strings",{"_index":1929,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["string})@apideletedresponsedecorator(agentsdto",{"_index":423,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apideletedresponsedecorator(filestoragedto",{"_index":2191,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apideletedresponsedecorator(formdto",{"_index":2308,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apideletedresponsedecorator(keyringsdto",{"_index":3487,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apireadresponsedecorator(agentsdto",{"_index":419,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apireadresponsedecorator(filestoragedto",{"_index":2179,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apireadresponsedecorator(filestoragedto)@apiquery({name",{"_index":2189,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apireadresponsedecorator(formdto",{"_index":2306,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apireadresponsedecorator(identitiesdto",{"_index":2607,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["string})@apireadresponsedecorator(jobsdto",{"_index":3371,"title":{},"body":{"controllers/JobsController.html":{}}}],["string})@apireadresponsedecorator(keyringsdto",{"_index":3485,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apiupdatedecorator(agentsupdatedto",{"_index":434,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apiupdatedecorator(filestorageupdatedto",{"_index":2195,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apiupdatedecorator(formupdatedto",{"_index":2312,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apiupdatedecorator(identitiesupdatedto",{"_index":2611,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["string})@isnotempty",{"_index":3604,"title":{},"body":{"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{}}}],["structure",{"_index":2877,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/LifecycleSource.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["structures",{"_index":6331,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stub",{"_index":5999,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stubs",{"_index":5948,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["style",{"_index":2956,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["stylesrc",{"_index":1835,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["subcommand",{"_index":334,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subcommands",{"_index":360,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subdividing",{"_index":5492,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1203,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"license.html":{},"additional-documentation/filtres-api.html":{}}}],["sublicenses",{"_index":5522,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":5220,"title":{},"body":{"license.html":{}}}],["submit",{"_index":6326,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitapiurl",{"_index":2279,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitbuttontext",{"_index":2280,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["subprograms",{"_index":5182,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":5681,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":1332,"title":{},"body":{"controllers/BackendsController.html":{}}}],["subscriptions_url",{"_index":925,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["subsection",{"_index":5321,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":5370,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":5049,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":3211,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["succeeds",{"_index":3084,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["success",{"_index":1191,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":354,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["succès",{"_index":2084,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/LifeCycle1752765731.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["such",{"_index":864,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["sue",{"_index":5534,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":5379,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":1930,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["suite",{"_index":6168,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suites",{"_index":5824,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["suivantes",{"_index":6001,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["suivants",{"_index":6266,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["suivez",{"_index":6366,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["sum",{"_index":3862,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["summary",{"_index":681,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/LifecycleController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["supann",{"_index":2573,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supann.yml",{"_index":6404,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannaliaslogin",{"_index":2574,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["supannbirthdate",{"_index":6413,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname",{"_index":6411,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname\"options",{"_index":6453,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supanncivilite",{"_index":6410,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannempid",{"_index":6409,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannentiteaffectationprincipale",{"_index":2576,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["super",{"_index":256,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["super(configservice",{"_index":5936,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["super(context",{"_index":109,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["super(message",{"_index":4631,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super(payload",{"_index":4637,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super.create",{"_index":3529,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["super.create(data",{"_index":586,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.debug(...[message",{"_index":3314,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error('failed",{"_index":3292,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error(...[message",{"_index":3306,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal('failed",{"_index":3333,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal(...[message",{"_index":3320,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log('initializing",{"_index":3286,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log(...[message",{"_index":3312,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.transform(value",{"_index":2025,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["super.update",{"_index":592,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.verbose(...[message",{"_index":3317,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.warn(...[message",{"_index":3309,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super[payload.level](payload.message",{"_index":3334,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["supplement",{"_index":5404,"title":{},"body":{"license.html":{}}}],["supplémentaires",{"_index":5963,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["support",{"_index":5267,"title":{},"body":{"license.html":{},"modules.html":{}}}],["supportant",{"_index":6104,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["supports",{"_index":5330,"title":{},"body":{"license.html":{}}}],["supposés",{"_index":2699,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["supprime",{"_index":1013,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supprimer",{"_index":6304,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sur",{"_index":4187,"title":{},"body":{"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sure",{"_index":4970,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":4994,"title":{},"body":{"license.html":{}}}],["survenue",{"_index":1512,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["survive",{"_index":5446,"title":{},"body":{"license.html":{}}}],["suspendedat",{"_index":3448,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendedreason",{"_index":4481,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendeduntil",{"_index":4482,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["sustained",{"_index":5632,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5690,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":680,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["swagger/json",{"_index":1861,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggercustomoptions",{"_index":1801,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggeroptions",{"_index":1862,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["switch",{"_index":3148,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/LifeCycle1752765731.html":{}}}],["switchtoprocessing",{"_index":1621,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["symlink",{"_index":4776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["syncall",{"_index":1274,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["syncallidentities",{"_index":1286,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities(@res",{"_index":1364,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities(res",{"_index":1319,"title":{},"body":{"controllers/BackendsController.html":{}}}],["synced",{"_index":4779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synchronis",{"_index":4190,"title":{},"body":{"controllers/PasswdController.html":{}}}],["synchronisation",{"_index":4793,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["synchronise",{"_index":1321,"title":{},"body":{"controllers/BackendsController.html":{}}}],["synchroniser",{"_index":1324,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["synchronization",{"_index":4057,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["synchronized",{"_index":2101,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["syncidentities",{"_index":1287,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncidentities(res",{"_index":1326,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncidentitiesdto",{"_index":1327,"title":{"classes/SyncIdentitiesDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/SyncIdentitiesDto.html":{}}}],["syncronisation",{"_index":6419,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["synctimeout",{"_index":1301,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["syntax",{"_index":5866,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["system",{"_index":3298,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"license.html":{}}}],["systematic",{"_index":5037,"title":{},"body":{"license.html":{}}}],["systemid",{"_index":1818,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["système",{"_index":5731,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sécurisée",{"_index":5797,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurisées",{"_index":5794,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurit",{"_index":5790,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["séparés",{"_index":5995,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["séquentiels",{"_index":6139,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sésame",{"_index":4791,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["t",{"_index":224,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["table",{"_index":5880,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["tableau",{"_index":2545,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tableaux",{"_index":6137,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tabs",{"_index":4773,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tag",{"_index":1473,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["tag_name",{"_index":936,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["tags",{"_index":966,"title":{},"body":{"injectables/AppService.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["taille",{"_index":3219,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["take",{"_index":4960,"title":{},"body":{"license.html":{}}}],["tangible",{"_index":5352,"title":{},"body":{"license.html":{}}}],["tant",{"_index":6455,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tapes",{"_index":6242,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tarball_url",{"_index":943,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["target",{"_index":1897,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/UniquenessMailValidator.html":{}}}],["target_commitish",{"_index":937,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["targetstate",{"_index":2128,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{},"controllers/IdentitiesCrudController.html":{}}}],["task",{"_index":2129,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["tasks",{"_index":4501,"title":{"classes/Tasks.html":{}},"body":{"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["tasks.controller",{"_index":4517,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.name",{"_index":4518,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.service",{"_index":4510,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":1414,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["taskscontroller",{"_index":4507,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasksdocument",{"_index":4504,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{}}}],["tasksmodule",{"_index":1409,"title":{"modules/TasksModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksschema",{"_index":4505,"title":{},"body":{"classes/Tasks.html":{},"modules/TasksModule.html":{}}}],["tasksservice",{"_index":4509,"title":{"injectables/TasksService.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["tat",{"_index":1317,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tats",{"_index":6262,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["tbd",{"_index":6438,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tdata",{"_index":4174,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["technique",{"_index":5843,"title":{"additional-documentation/documentation-technique.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["techniques",{"_index":5789,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["technological",{"_index":5229,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":5766,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["teh",{"_index":4300,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["tel",{"_index":5733,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["telephonenumber",{"_index":4831,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["telles",{"_index":6332,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tells",{"_index":5133,"title":{},"body":{"license.html":{}}}],["template",{"_index":809,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["templates",{"_index":812,"title":{},"body":{"modules/AppModule.html":{}}}],["temporaire",{"_index":6008,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["temps",{"_index":1310,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["tendez",{"_index":5927,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tendu",{"_index":5933,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tentative",{"_index":1513,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["term",{"_index":5194,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":5666,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":5453,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":5471,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":5462,"title":{},"body":{"license.html":{}}}],["termination",{"_index":5450,"title":{},"body":{"license.html":{}}}],["terminée",{"_index":2083,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/LifeCycle1752765731.html":{}}}],["terms",{"_index":5005,"title":{},"body":{"license.html":{}}}],["test",{"_index":1503,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["test(employeenumber",{"_index":4855,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["test.createtestingmodule",{"_index":6029,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["teste",{"_index":6062,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tester",{"_index":5965,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["testingmodule",{"_index":6028,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tests",{"_index":5820,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["text/html",{"_index":4551,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["text/plain",{"_index":4549,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["texte",{"_index":6276,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["themes",{"_index":4719,"title":{},"body":{"dependencies.html":{}}}],["therefore",{"_index":4995,"title":{},"body":{"license.html":{}}}],["things",{"_index":4989,"title":{},"body":{"license.html":{}}}],["third",{"_index":5254,"title":{},"body":{"license.html":{}}}],["thirdpartyauth",{"_index":369,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["this._checkmigrationlockfile",{"_index":4033,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this._custommodulename",{"_index":170,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this._customservicename",{"_index":172,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this._executemigrations",{"_index":4038,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this._loadmigrationsfiles(currenttimestamp",{"_index":4035,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this._migrateemployeenumbertoarray",{"_index":2071,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this._migratelifecycletochar",{"_index":3540,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["this._model",{"_index":265,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this._model.aggregate",{"_index":3861,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this._options.mongoose.options",{"_index":3289,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this._queue",{"_index":108,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this._req",{"_index":165,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this._service.activation(body.id",{"_index":2518,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["this._service.count(searchfilterschema",{"_index":2664,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.countall(filters",{"_index":2670,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.create",{"_index":2216,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.create(body",{"_index":474,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.delete(_id",{"_index":494,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findall",{"_index":2785,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.findandcount",{"_index":483,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyid(_id",{"_index":489,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyidwithrawdata(_id",{"_index":2232,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.findone",{"_index":2227,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.findone(schema",{"_index":2791,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.findone(searchfilterschema",{"_index":2974,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["this._service.findonewithrawdata",{"_index":2235,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.forcepassword(body.id",{"_index":2744,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["this._service.fusion(body.id1",{"_index":2710,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["this._service.generate",{"_index":2782,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.generateall",{"_index":2778,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.getlifecyclehistory(identityid",{"_index":3590,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["this._service.getlifecyclestats",{"_index":3594,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["this._service.getrecentchanges(searchfilteroptions",{"_index":3596,"title":{},"body":{"controllers/LifecycleController.html":{}}}],["this._service.needtochangepassword(body.id",{"_index":2748,"title":{},"body":{"controllers/IdentitiesForcePasswordController.html":{}}}],["this._service.searchdoubles",{"_index":2706,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["this._service.transformnullstostring(json.parse(json.stringify(identity",{"_index":2658,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.trashandcount(identitiescrudcontroller.projection",{"_index":2656,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.update(_id",{"_index":492,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["this._service.updatestate(_id",{"_index":2680,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.updatestatemany(body",{"_index":2685,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.upsertwithfingerprint(filters",{"_index":3010,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["this._service.validate(body",{"_index":3033,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["this._writemigrationlockfile(key",{"_index":4095,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.access_token_expires_in",{"_index":1202,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.access_token_prefix",{"_index":1213,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.create(agent",{"_index":351,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.agentsservice.findbyid(id",{"_index":1386,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["this.agentsservice.findone",{"_index":1176,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.model.countdocuments",{"_index":1192,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ajv.addformat('number",{"_index":3105,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.compile(validschema",{"_index":3107,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.errors",{"_index":3230,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.errorstext(this.validateschema.errors",{"_index":3199,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.validate(schema",{"_index":3227,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.appservice.getinfo",{"_index":684,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.getprojectupdate(project",{"_index":710,"title":{},"body":{"controllers/AppController.html":{}}}],["this.asktoken",{"_index":1529,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.auth.authenticatewithlocal(username",{"_index":3877,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.auth.verifyidentity(payload",{"_index":3443,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.createtokens",{"_index":3476,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.backends.executejob",{"_index":1616,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.backendsservice.deleteidentities(body.payload",{"_index":1359,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.executejob",{"_index":1377,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('added",{"_index":1390,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('completed",{"_index":1397,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('failed",{"_index":1399,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.syncallidentities",{"_index":1277,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{}}}],["this.backendsservice.syncidentities(body.payload",{"_index":1362,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.checkandcreateobjectclasses(data",{"_index":3128,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.commonlogdb",{"_index":3303,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.concerned",{"_index":3897,"title":{},"body":{"classes/Logger.html":{}}}],["this.concerned.tolocalelowercase",{"_index":3898,"title":{},"body":{"classes/Logger.html":{}}}],["this.config",{"_index":113,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.config.get('application.lang",{"_index":3251,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.config.get('frontpwd.url",{"_index":1597,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.connection",{"_index":3290,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.connection.collection('logs').insertone",{"_index":3331,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.connection.collection(contraint.collection).countdocuments",{"_index":4605,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["this.constructor.name",{"_index":112,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/BackendsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.constructor.name.replace(/controller",{"_index":57,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["this.constructor.name.replace(/service",{"_index":187,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.context",{"_index":3895,"title":{},"body":{"classes/Logger.html":{}}}],["this.context.tolocalelowercase",{"_index":3896,"title":{},"body":{"classes/Logger.html":{}}}],["this.convertsecondstocron",{"_index":3686,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.count",{"_index":3855,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.create",{"_index":3703,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.createattributes(objectclass",{"_index":3134,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.createtokens(new",{"_index":1169,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createtokens(omit(identity.toobject",{"_index":1221,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.decrypttoken(data.token",{"_index":1714,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.decrypttokenwithcode(data.token",{"_index":1697,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.defaultvalues",{"_index":264,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this.dev_token_path",{"_index":1159,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.eventemitter",{"_index":168,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.fetchgithubrelease(project",{"_index":955,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.filestorage.findonewithrawdata",{"_index":2982,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["this.filestorage.upsertfile(filter",{"_index":2978,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["this.find",{"_index":3848,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.findone",{"_index":260,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this.firelifecycleevent(event.before",{"_index":3817,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.formatvalidationerrors(errors",{"_index":3755,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.generate(file",{"_index":2902,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.getpaddingforcode",{"_index":1525,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.getstatus",{"_index":4635,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.getvalidationerrors(exception",{"_index":4145,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["this.httpservers.map",{"_index":4444,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["this.httpservers.push(server",{"_index":4443,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["this.httpservice.get(`https://api.github.com/repos/libertech",{"_index":969,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.identities.find",{"_index":1720,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.identities.findone",{"_index":1500,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.identities.model.updateone",{"_index":1625,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.identitiesservice.model.find",{"_index":3697,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.identitiesservice.model.findoneandupdate",{"_index":3701,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.identitiesupsertservice.count",{"_index":2527,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["this.identitiesupsertservice.find",{"_index":2529,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["this.identitiesupsertservice.generatefingerprint(identity",{"_index":2535,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["this.identitiesupsertservice.previewfingerprint(identity.tojson",{"_index":2531,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["this.identitymodel.ensureindexes",{"_index":2099,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["this.initaccount",{"_index":1732,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.initialize",{"_index":3293,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.inquirer.ask('agent",{"_index":350,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.inquirer.ask('keyrings",{"_index":3467,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.jwtservice.decode(jwt",{"_index":1222,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign",{"_index":1200,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keyringsservice.create(keyring",{"_index":3468,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.keyringsservice.findone",{"_index":1183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lifecyclesources[after.lifecycle",{"_index":3836,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.lifecyclesources[source",{"_index":3676,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.lifecyclesources[source].push(rule",{"_index":3693,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.loadlifecyclerules",{"_index":3660,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.locklocation",{"_index":4026,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger",{"_index":52,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug('application",{"_index":949,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.debug('cron",{"_index":959,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.debug(['findall",{"_index":3234,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['findone",{"_index":3247,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(`additionalfields",{"_index":3153,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(`creating",{"_index":3687,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.debug(`fetching",{"_index":965,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.debug(`lifecycle",{"_index":3759,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.debug(`loaded",{"_index":3744,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.debug(`no",{"_index":3844,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.debug(`processing",{"_index":3837,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.debug(`running",{"_index":3696,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.debug(`session",{"_index":1053,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.logger.debug(`validated",{"_index":3753,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.debug(chalk.yellow('checking",{"_index":4034,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.debug(chalk.yellow('lock",{"_index":4031,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.debug(chalk.yellow('migrations",{"_index":4030,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error('erreur",{"_index":1603,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.error('error",{"_index":1567,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{}}}],["this.logger.error('invalid",{"_index":3139,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.error('request",{"_index":3224,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.error('schema",{"_index":3141,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.error(`error",{"_index":972,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["this.logger.error(`invalid",{"_index":3749,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.error(`token",{"_index":1166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(chalk.red('database",{"_index":4055,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(chalk.red('error",{"_index":4053,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(chalk.red(`error",{"_index":4091,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(e",{"_index":4099,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(e.message",{"_index":4093,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.fatal(`failed",{"_index":977,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.log('application",{"_index":956,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.log('datatoken",{"_index":1698,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('decrypt",{"_index":1668,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('delete",{"_index":1703,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('employeenumber1700395200",{"_index":2070,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.logger.log('identities",{"_index":2837,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.log('init",{"_index":1599,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('initializing",{"_index":2824,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.log('k",{"_index":1674,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('lifecycle1752765731",{"_index":3539,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["this.logger.log('lifecycleservice",{"_index":3648,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.log('mailer.identitymailattribute",{"_index":1592,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('migration",{"_index":2082,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/LifeCycle1752765731.html":{}}}],["this.logger.log('reset",{"_index":1536,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('resetbycode",{"_index":1691,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('token",{"_index":1532,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log(`call",{"_index":4228,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log(`fingerprint",{"_index":2536,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["this.logger.log(`found",{"_index":3700,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.log(`identity",{"_index":2532,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"interfaces/LifecycleSource.html":{}}}],["this.logger.log(`loaded",{"_index":3761,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.log(`migrating",{"_index":2076,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/LifeCycle1752765731.html":{}}}],["this.logger.log(`new",{"_index":1175,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`processing",{"_index":2530,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["this.logger.log(`token",{"_index":1163,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`total",{"_index":2528,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["this.logger.log(`trigger",{"_index":3680,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.log(chalk.blue('all",{"_index":4096,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.blue('no",{"_index":4083,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.blue(`migration",{"_index":4042,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.green('database",{"_index":4058,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.green('migration",{"_index":4052,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.green('no",{"_index":4082,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.yellow(`migration",{"_index":4079,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.yellow(`running",{"_index":4090,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(objectclass",{"_index":3133,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.verbose('bootstrap",{"_index":3658,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.verbose('error",{"_index":1689,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.verbose('initializing",{"_index":3643,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.verbose('loading",{"_index":3739,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.verbose('send",{"_index":1730,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.verbose(`atempt",{"_index":3439,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.logger.verbose(`checking",{"_index":954,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.verbose(`handling",{"_index":3813,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.verbose(`processing",{"_index":3839,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.verbose(`retrying",{"_index":983,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.verbose(`validating",{"_index":3196,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["this.logger.warn('dev",{"_index":1155,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn('invalid",{"_index":1195,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn('no",{"_index":3816,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.warn('skipping",{"_index":951,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.warn('upserting",{"_index":3002,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["this.logger.warn(`copied",{"_index":2834,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["this.logger.warn(`cron",{"_index":3683,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.warn(`skipping",{"_index":3742,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.logger.warn(`unknown",{"_index":3552,"title":{},"body":{"classes/LifeCycle1752765731.html":{}}}],["this.logger.warn(`updating",{"_index":2534,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{}}}],["this.logger.warn(chalk.red('no",{"_index":4044,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.warn(chalk.yellow('no",{"_index":4048,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.warn(chalk.yellow(`migration",{"_index":4064,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.mailadmservice.getparams",{"_index":1539,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"interfaces/TokenData.html":{}}}],["this.mailadmservice.setparams(body",{"_index":3952,"title":{},"body":{"controllers/MailadmController.html":{}}}],["this.mailer",{"_index":1542,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.mailer.addtransporter('laststmp",{"_index":1540,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.message",{"_index":4634,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.migrations.get(key",{"_index":4086,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.migrations.keys",{"_index":4084,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.migrations.set(file",{"_index":4080,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.migrations.size",{"_index":4081,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.moduleref",{"_index":50,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.moduleref.create(migration.default",{"_index":4088,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.moduleref.get(configservice",{"_index":114,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.moduleref.get(getredisconnectiontoken",{"_index":118,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.mongo.collection('identities').find",{"_index":2072,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/LifeCycle1752765731.html":{}}}],["this.mongo.collection('identities').updateone",{"_index":2077,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/LifeCycle1752765731.html":{}}}],["this.mongo.collection('migrations').findone",{"_index":4046,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.mongo.collection('migrations').insertone",{"_index":4056,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.mongoconnection",{"_index":4122,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.close",{"_index":4125,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.collections",{"_index":4128,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.dropdatabase",{"_index":4124,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.model(name",{"_index":4130,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod",{"_index":4118,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.geturi",{"_index":4121,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.stop",{"_index":4126,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.name",{"_index":4632,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.package",{"_index":945,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.passwdadmservice.checkpolicies(data.newpassword",{"_index":1695,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.checkpolicies(passwddto.newpassword",{"_index":1611,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.getpolicies",{"_index":1519,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.setpolicies(body",{"_index":4284,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["this.passwdservice.change(body",{"_index":4227,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.checkinitoutdated",{"_index":4262,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initaccount(body",{"_index":4246,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initmany(body",{"_index":4256,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initreset(body",{"_index":4260,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.reset(body",{"_index":4239,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.resetbycode(body",{"_index":4236,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.path.split('/').pop",{"_index":2170,"title":{},"body":{"classes/Filestorage.html":{}}}],["this.queue",{"_index":5909,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queue.add('exemple",{"_index":5938,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents",{"_index":121,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents.on('failed",{"_index":5939,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis",{"_index":117,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis.del([this.access_token_prefix",{"_index":1225,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del([this.refresh_token_prefix",{"_index":1227,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del(data.token",{"_index":1704,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.exists('codepadding",{"_index":1739,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.expire",{"_index":1210,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.expire(ciphertext",{"_index":1655,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.get('codepadding",{"_index":1740,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.get([this.access_token_prefix",{"_index":1187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get([this.refresh_token_prefix",{"_index":1219,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get(token",{"_index":1665,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.set",{"_index":1206,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.set('codepadding",{"_index":1742,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.refresh_token_expires_in",{"_index":1211,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.refresh_token_prefix",{"_index":1207,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request",{"_index":180,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request.path.split('/').slice(1).shift",{"_index":183,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.resolveconfigpath(key",{"_index":3140,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolveconfigpath(schema",{"_index":3250,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolvejsonformpath(path",{"_index":2917,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.runjob.bind(this",{"_index":3690,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.schedulerregistry.addcronjob(`lifecycle",{"_index":3691,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.schedulerregistry.doesexist('cron",{"_index":3682,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["this.service.clearsession(jwt.replace(/^bearer\\s",{"_index":1071,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.createtokens(user",{"_index":1049,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.getsessiondata(identity",{"_index":1056,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.renewtokens(body.refresh_token",{"_index":1066,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.setinitstate(identity",{"_index":1600,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.setloglevels(_options?.loglevel",{"_index":3285,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.smsadmservice.getparams",{"_index":4477,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["this.smsadmservice.send(numtel",{"_index":1566,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.smsadmservice.setparams(body",{"_index":4478,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["this.storage.get(project",{"_index":967,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.storage.has(project",{"_index":964,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.storage.set(project",{"_index":975,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["this.transformattribute(key",{"_index":3129,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.transformerservice.transform(mime",{"_index":2233,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["this.transformnumber(data[key][index",{"_index":3168,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.transformnumber(data[key][index][elems",{"_index":3164,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.translateajv(this.ajv.errors",{"_index":3229,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.upsert",{"_index":267,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this.validateattribute(key",{"_index":3209,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema",{"_index":3106,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema(schema",{"_index":3197,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validationrecursive(error",{"_index":2031,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validationrecursive(errorchild",{"_index":2056,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validations",{"_index":4633,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this[key",{"_index":624,"title":{},"body":{"classes/ApiSession.html":{}}}],["those",{"_index":5047,"title":{},"body":{"license.html":{}}}],["though",{"_index":5407,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":5056,"title":{},"body":{"license.html":{}}}],["three",{"_index":5310,"title":{},"body":{"license.html":{}}}],["through",{"_index":3865,"title":{},"body":{"interfaces/LifecycleSource.html":{},"license.html":{}}}],["throw",{"_index":110,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["throws",{"_index":666,"title":{},"body":{"controllers/AppController.html":{}}}],["thus",{"_index":5212,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":6218,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketform",{"_index":4522,"title":{"interfaces/TicketForm.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["ticketformfield",{"_index":4524,"title":{"interfaces/TicketFormField.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketformsection",{"_index":4525,"title":{"interfaces/TicketFormSection.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tickets/form",{"_index":6234,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tierces",{"_index":4806,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tiers",{"_index":5774,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["time",{"_index":1910,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["timeout",{"_index":1846,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["timeoutdiscard",{"_index":1371,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["timeoutdiscardquery",{"_index":1298,"title":{},"body":{"controllers/BackendsController.html":{}}}],["timestamp",{"_index":4047,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["timestampmatch",{"_index":4062,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["tiquette",{"_index":6255,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["title",{"_index":2281,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["titre",{"_index":6235,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tk",{"_index":6223,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tkformtype",{"_index":6312,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tls",{"_index":804,"title":{},"body":{"modules/AppModule.html":{}}}],["tmp",{"_index":4028,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["to.part.dto",{"_index":3397,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["to.part.dto.ts",{"_index":1788,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:13",{"_index":1791,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:18",{"_index":1792,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:9",{"_index":1789,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.parts.schema",{"_index":3364,"title":{},"body":{"classes/Jobs.html":{}}}],["to.parts.schema.ts",{"_index":1780,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:10",{"_index":1782,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:13",{"_index":1783,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:7",{"_index":1781,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to_complete",{"_index":2636,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"miscellaneous/enumerations.html":{}}}],["to_create",{"_index":4783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to_sync",{"_index":4782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to_validate",{"_index":2640,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":176,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"classes/Filestorage.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{}}}],["token",{"_index":617,"title":{},"body":{"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto",{"_index":1438,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token.dto.ts",{"_index":987,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:10",{"_index":4646,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:11",{"_index":994,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.dto.ts:7",{"_index":996,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.json",{"_index":1131,"title":{},"body":{"injectables/AuthService.html":{}}}],["token=${data?.token",{"_index":1711,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token=${token",{"_index":1684,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token_algorithm",{"_index":1479,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token_path_separator",{"_index":1103,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokendata",{"_index":1470,"title":{"interfaces/TokenData.html":{}},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["tokendata.uid",{"_index":1699,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["tokens",{"_index":1048,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tools",{"_index":5175,"title":{},"body":{"license.html":{}}}],["total",{"_index":482,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"classes/IdentitiesCommand.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{},"interfaces/LifecycleSource.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{}}}],["toujours",{"_index":6456,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tous",{"_index":2763,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["tout",{"_index":1615,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["toutes",{"_index":1322,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tr",{"_index":3170,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["track",{"_index":1255,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["tracker",{"_index":1246,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackercollection",{"_index":1237,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackermodelname",{"_index":1238,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trade",{"_index":5432,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":5431,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":5433,"title":{},"body":{"license.html":{}}}],["traitement",{"_index":5894,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["traiter",{"_index":5905,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["transaction",{"_index":5384,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":5122,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":5386,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":5490,"title":{},"body":{"license.html":{}}}],["transform",{"_index":1918,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["transform(data",{"_index":3070,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transform(mime",{"_index":4538,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transform(value",{"_index":2017,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transformation",{"_index":3154,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transformattribute",{"_index":3054,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transformattribute(key",{"_index":3072,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transformer",{"_index":524,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"interfaces/LifecycleSource.html":{},"classes/MetadataDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["transformers",{"_index":4528,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformerservice",{"_index":2211,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["transformersfilestorageservice",{"_index":2205,"title":{"injectables/TransformersFilestorageService.html":{}},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/TransformersFilestorageService.html":{},"overview.html":{}}}],["transformersfilestorageservice.streamtostring(stream",{"_index":4576,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers.hasownproperty(mimetype",{"_index":4563,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers.hasownproperty(mimetype.split('/')[0",{"_index":4564,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers[mimetype.split('/')[0",{"_index":4565,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers[mimetype](mime",{"_index":4572,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformhtml",{"_index":4552,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformimage",{"_index":4556,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformpdf",{"_index":4554,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformplain",{"_index":4550,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformhtml",{"_index":4530,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformhtml(_",{"_index":4541,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformimage",{"_index":4531,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformimage(mime",{"_index":4543,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformkeys",{"_index":6293,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["transformnumber",{"_index":3055,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transformnumber(value",{"_index":3076,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transformoptions",{"_index":2027,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transformpdf",{"_index":4532,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformpdf(_",{"_index":4545,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformplain",{"_index":4533,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformplain(_",{"_index":4547,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformtriggertoseconds(value",{"_index":1934,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["translateajv",{"_index":3056,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["translateajv(messages",{"_index":3078,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["transmission",{"_index":5341,"title":{},"body":{"license.html":{}}}],["transport",{"_index":792,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["transportername",{"_index":1544,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["trashandcount",{"_index":205,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["trashandcount(projection",{"_index":244,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["travers",{"_index":5841,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tre",{"_index":5793,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["treated",{"_index":5406,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":5235,"title":{},"body":{"license.html":{}}}],["tree",{"_index":480,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["trigger",{"_index":1898,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/LifecycleSource.html":{}}}],["triggered",{"_index":3809,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["trim",{"_index":2034,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesCrudController.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tronque",{"_index":6481,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["trouve",{"_index":5979,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["trouvée",{"_index":1725,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["true",{"_index":285,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/Lifecycle.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["true|on|yes|1/i.test(asyncquery",{"_index":1358,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(disablelogsquery",{"_index":1374,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(erroronnotfound",{"_index":3011,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["true|on|yes|1/i.test(forcestring",{"_index":3001,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["true|on|yes|1/i.test(hiddenquery",{"_index":2220,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["true|on|yes|1/i.test(timeoutdiscardquery",{"_index":1372,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(updatestatusquery",{"_index":1376,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(upsert",{"_index":3012,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["true})@apiproperty()@isoptional",{"_index":4871,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["true})@apiproperty({type",{"_index":1903,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/SecurityPartDTO.html":{}}}],["true})@isip(4",{"_index":3501,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["true})@isoptional",{"_index":4865,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["true})@isoptional()@apiproperty({type",{"_index":4389,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["true})@isoptional()@type(undefined)@apiproperty({type",{"_index":2413,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["true})@type(undefined",{"_index":1962,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["true})@type(undefined)@apiproperty({type",{"_index":2409,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["truncate",{"_index":6480,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["try",{"_index":257,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesForcePasswordController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["ts",{"_index":4142,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ttl",{"_index":891,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CipherData.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["ttlautopurge",{"_index":894,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["two",{"_index":5008,"title":{},"body":{"license.html":{}}}],["typage",{"_index":5757,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/LifeCycle1752765731.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["type.enum",{"_index":1340,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/TokenData.html":{}}}],["type.enum.ts",{"_index":4729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.vue",{"_index":6224,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["typealiases",{"_index":5697,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":2075,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/LifeCycle1752765731.html":{},"injectables/MigrationsService.html":{}}}],["types",{"_index":137,"title":{},"body":{"classes/AbstractSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/BackendsController.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitManyDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["types.objectid",{"_index":128,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"classes/InitManyDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Lifecycle.html":{},"controllers/LifecycleController.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"injectables/LoggerService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["types.objectid(`${filter",{"_index":3008,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["types.objectid(body.id",{"_index":1380,"title":{},"body":{"controllers/BackendsController.html":{}}}],["types.objectid(value",{"_index":4169,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":4167,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["typescript",{"_index":45,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["typical",{"_index":5365,"title":{},"body":{"license.html":{}}}],["têtes",{"_index":6344,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["u2fkey",{"_index":4379,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ui.yml",{"_index":2880,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["uid",{"_index":989,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["uid=${asktoken?.uid",{"_index":1658,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["uid=${initdto?.uid",{"_index":1571,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["uid=${passwddto?.uid",{"_index":1630,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["un",{"_index":1021,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/LifecycleSource.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["unacceptable",{"_index":5044,"title":{},"body":{"license.html":{}}}],["unauthorizedexception",{"_index":1139,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":232,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ErrorSchemaDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesForcePasswordController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/Lifecycle.html":{},"interfaces/LifecycleSource.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{}}}],["under",{"_index":5083,"title":{},"body":{"license.html":{}}}],["une",{"_index":1292,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["uniforme",{"_index":6135,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unique",{"_index":374,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Identities.html":{},"classes/Keyrings.html":{},"classes/Settings.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["uniquement",{"_index":6041,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["uniquenessmailinterface",{"_index":4610,"title":{},"body":{"injectables/UniquenessMailValidator.html":{},"miscellaneous/typealiases.html":{}}}],["uniquenessmailvalidator",{"_index":4586,"title":{"injectables/UniquenessMailValidator.html":{}},"body":{"injectables/UniquenessMailValidator.html":{}}}],["uniques",{"_index":6133,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unit",{"_index":3713,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["units",{"_index":1913,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["unknown",{"_index":603,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":5373,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":5199,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":5097,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":5223,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":5403,"title":{},"body":{"license.html":{}}}],["unsafe",{"_index":3382,"title":{},"body":{"controllers/JobsController.html":{}}}],["until",{"_index":5461,"title":{},"body":{"license.html":{}}}],["unused",{"_index":347,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["up",{"_index":2062,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/LifeCycle1752765731.html":{},"injectables/MigrationsService.html":{}}}],["update",{"_index":206,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["update(_id",{"_index":246,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["update(res",{"_index":641,"title":{},"body":{"controllers/AppController.html":{}}}],["update.$set.password",{"_index":590,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.$set?.password",{"_index":589,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.decorator",{"_index":455,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["update.password",{"_index":587,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update/:project(sesame",{"_index":647,"title":{},"body":{"controllers/AppController.html":{}}}],["update?.$set",{"_index":593,"title":{},"body":{"injectables/AgentsService.html":{}}}],["updateassertions",{"_index":6066,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateassertions(service",{"_index":6071,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateavailable",{"_index":709,"title":{},"body":{"controllers/AppController.html":{}}}],["updated",{"_index":1727,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedata",{"_index":6068,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedidentitydata",{"_index":6005,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedstub",{"_index":6022,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateerrorassertions(service",{"_index":6072,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateoptions",{"_index":6069,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatequery",{"_index":247,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["updates",{"_index":654,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["updatestate",{"_index":2587,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestate(_id",{"_index":2613,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestatemany",{"_index":2588,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestatemany(res",{"_index":2616,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestatus",{"_index":1375,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["updatestatusquery",{"_index":1300,"title":{},"body":{"controllers/BackendsController.html":{}}}],["updating",{"_index":4098,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["upload.decorator",{"_index":2203,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upload_url",{"_index":934,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["uploadedfile",{"_index":2198,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["uploadedfile(new",{"_index":2214,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upper",{"_index":4311,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["uppercase",{"_index":4323,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["upsert",{"_index":207,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"interfaces/LifecycleSource.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["upsert(filter",{"_index":249,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["upsert(res",{"_index":2984,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.controller",{"_index":2942,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["upsert.controller.ts",{"_index":2983,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.controller.ts:118",{"_index":2991,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.controller.ts:60",{"_index":2990,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.service",{"_index":2524,"title":{},"body":{"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upserted",{"_index":3818,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["upsertinetorgpersonjpegphoto",{"_index":2953,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upsertinetorgpersonjpegphoto(res",{"_index":2965,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["uri",{"_index":822,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["url",{"_index":826,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["url.example",{"_index":6502,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["usage",{"_index":5871,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["usages",{"_index":5865,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["use",{"_index":1240,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["use(req",{"_index":2091,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["useclass",{"_index":843,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["used",{"_index":1259,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/LifecycleSource.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["usefactory",{"_index":566,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["useful",{"_index":5662,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":1032,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('jwt",{"_index":1051,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('local",{"_index":1046,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":2199,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":2212,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["user",{"_index":163,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"classes/ForcePasswordDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/NeedChangePasswordDto.html":{},"license.html":{}}}],["user.security.secretkey",{"_index":1062,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["user.state.current",{"_index":3879,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["user_view_type",{"_index":930,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["usercertificate",{"_index":4832,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["useridentity",{"_index":1212,"title":{},"body":{"injectables/AuthService.html":{}}}],["useridentity.tojson",{"_index":1215,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":327,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/MailSettingsDto.html":{}}}],["userpassword",{"_index":4857,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["users",{"_index":4972,"title":{},"body":{"license.html":{}}}],["uses",{"_index":879,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"license.html":{}}}],["usevalue",{"_index":6032,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["using",{"_index":881,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["utf",{"_index":947,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"injectables/MigrationsService.html":{}}}],["utf8",{"_index":1649,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["utilis",{"_index":6020,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisables",{"_index":6040,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisant",{"_index":5775,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisateur",{"_index":1008,"title":{"additional-documentation/documentation-utilisateur.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilisateurs",{"_index":5816,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisation",{"_index":5748,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilise",{"_index":6180,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["utiliser",{"_index":5818,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisée",{"_index":5906,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisées",{"_index":5767,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisés",{"_index":5974,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilitaire",{"_index":6083,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilitaires",{"_index":5944,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["va",{"_index":6125,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["val",{"_index":322,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/UniquenessMailValidator.html":{}}}],["valeur",{"_index":6397,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeur.example",{"_index":6482,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeurs",{"_index":3158,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valid",{"_index":698,"title":{},"body":{"controllers/AppController.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/LifecycleSource.html":{},"license.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validate",{"_index":695,"title":{},"body":{"controllers/AppController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UniquenessMailValidator.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(_",{"_index":3424,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(data",{"_index":3081,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(res",{"_index":3025,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["validate(value",{"_index":4594,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["validateattribute",{"_index":3057,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validateattribute(key",{"_index":3086,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validateif",{"_index":4892,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["validateif(o",{"_index":4878,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["validatenested",{"_index":520,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/CustomFieldsDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["validatenested()@apiproperty",{"_index":2370,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["validatenested()@type(undefined)@apiproperty({type",{"_index":509,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["validatenested()@type(undefined)@isnotempty()@apiproperty({type",{"_index":512,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["validatenested({each",{"_index":1964,"title":{},"body":{"classes/ConfigObjectSchemaDTO-1.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["validateorreject",{"_index":3629,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["validateorreject(schema",{"_index":3751,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["validaterulesortrigger",{"_index":1945,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["validates",{"_index":663,"title":{},"body":{"controllers/AppController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["validateschema",{"_index":2821,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["validating",{"_index":3050,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["validation",{"_index":2032,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["validation.filter",{"_index":744,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["validation.filter.ts",{"_index":3036,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:34",{"_index":4137,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:7",{"_index":3038,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["validation.filter.ts:8",{"_index":4135,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.pipe",{"_index":461,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LifecycleController.html":{}}}],["validation.pipe.ts",{"_index":2012,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:15",{"_index":4641,"title":{},"body":{"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:21",{"_index":2019,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:23",{"_index":2016,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:57",{"_index":2022,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:7",{"_index":4165,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["validation/${key}.yml",{"_index":3118,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validation/inetorgperson.yml",{"_index":3249,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validationarguments",{"_index":1924,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/UniquenessMailValidator.html":{}}}],["validationarguments.property",{"_index":4609,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["validationconfigexception",{"_index":2818,"title":{"classes/ValidationConfigException.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationconfigexception(validations",{"_index":3195,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validationerror",{"_index":2021,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationexception",{"_index":3037,"title":{"classes/ValidationException.html":{}},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:18",{"_index":4625,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:22",{"_index":4624,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:9",{"_index":4623,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexceptionpayload",{"_index":4621,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["validationoptions",{"_index":1923,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/UniquenessMailValidator.html":{}}}],["validationpipe",{"_index":2013,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive",{"_index":2014,"title":{"interfaces/ValidationRecursive.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive(error",{"_index":2020,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations",{"_index":297,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validations/identities.validation.module",{"_index":2935,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validations/identities.validation.service",{"_index":2626,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["validations['message",{"_index":3191,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[`${key}.${property",{"_index":4151,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[`${prefix",{"_index":2046,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations[attribute",{"_index":3175,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[err.path",{"_index":4154,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[key",{"_index":3179,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["validationschemaexception",{"_index":3101,"title":{"classes/ValidationSchemaException.html":{}},"body":{"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validator",{"_index":291,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConfigObjectSchemaDTO-1.html":{},"classes/CustomFieldsDto.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/ForcePasswordDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/LifecycleCreateDto.html":{},"classes/LifecycleDto.html":{},"interfaces/LifecycleSource.html":{},"classes/LifecycleUpdateDto.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/NeedChangePasswordDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"injectables/UniquenessMailValidator.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["validatorconstraint",{"_index":4597,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["validatorconstraintinterface",{"_index":4598,"title":{},"body":{"injectables/UniquenessMailValidator.html":{}}}],["valide",{"_index":3183,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["valider",{"_index":6183,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valides",{"_index":3187,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validschema",{"_index":3098,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validés",{"_index":6390,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["value",{"_index":858,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/FilestorageController.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesFingerprintCommand.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"classes/LifeCycle1752765731.html":{},"classes/MailSettingsDto.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PasswordPoliciesDto.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{},"interfaces/ValidationRecursive.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["value.type",{"_index":309,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["value.type.ts",{"_index":5707,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":1926,"title":{},"body":{"classes/ConfigObjectIdentitiesDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["variabilit",{"_index":5754,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["variables",{"_index":5900,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vars",{"_index":348,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/IdentitiesCommand.html":{},"classes/IdentitiesFingerprintCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["verbatim",{"_index":4951,"title":{},"body":{"license.html":{}}}],["verbe",{"_index":6375,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["verbose",{"_index":3316,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verbose(message",{"_index":3315,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verbosememoryleak",{"_index":771,"title":{},"body":{"modules/AppModule.html":{}}}],["verification",{"_index":1608,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["verifiedcallback",{"_index":3426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["verifiez",{"_index":4247,"title":{},"body":{"controllers/PasswdController.html":{}}}],["verify",{"_index":1141,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity",{"_index":1108,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity(payload",{"_index":1123,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytokendto",{"_index":4643,"title":{"classes/VerifyTokenDto.html":{}},"body":{"classes/VerifyTokenDto.html":{}}}],["vers",{"_index":4807,"title":{},"body":{"index.html":{}}}],["version",{"_index":657,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{},"classes/MongoDbTestInstance.html":{},"license.html":{},"properties.html":{}}}],["versionkey",{"_index":390,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Lifecycle.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["versionn",{"_index":5840,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["versions",{"_index":4967,"title":{},"body":{"license.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["verticallayout",{"_index":2853,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["veuillez",{"_index":6237,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["via",{"_index":2599,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vide",{"_index":3167,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["vides",{"_index":6458,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vie",{"_index":5746,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["view",{"_index":5135,"title":{},"body":{"license.html":{}}}],["violates",{"_index":5400,"title":{},"body":{"license.html":{}}}],["violation",{"_index":5457,"title":{},"body":{"license.html":{}}}],["vise",{"_index":5727,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["visible",{"_index":5130,"title":{},"body":{"license.html":{}}}],["voici",{"_index":5998,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["void",{"_index":2092,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/LifecycleSource.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ShutdownObserver.html":{},"license.html":{}}}],["voir",{"_index":2959,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["volume",{"_index":5290,"title":{},"body":{"license.html":{}}}],["vos",{"_index":4250,"title":{},"body":{"controllers/PasswdController.html":{}}}],["votre",{"_index":1548,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vous",{"_index":6176,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vpis",{"_index":6441,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue",{"_index":5889,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue.js",{"_index":6220,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénement",{"_index":6328,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénements",{"_index":5907,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vérifie",{"_index":6043,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["w",{"_index":3549,"title":{},"body":{"classes/LifeCycle1752765731.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["wait",{"_index":3550,"title":{},"body":{"classes/LifeCycle1752765731.html":{},"miscellaneous/enumerations.html":{}}}],["waive",{"_index":5244,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5646,"title":{},"body":{"license.html":{}}}],["want",{"_index":4986,"title":{},"body":{"license.html":{}}}],["wanting",{"_index":1248,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["warn",{"_index":3308,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["warn(message",{"_index":3307,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["warnings",{"_index":3808,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["warranties",{"_index":5134,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":5018,"title":{},"body":{"license.html":{}}}],["way",{"_index":4976,"title":{},"body":{"license.html":{}}}],["ways",{"_index":5300,"title":{},"body":{"license.html":{}}}],["welcome",{"_index":5669,"title":{},"body":{"license.html":{}}}],["well",{"_index":5114,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":5494,"title":{},"body":{"license.html":{}}}],["whether",{"_index":668,"title":{},"body":{"controllers/AppController.html":{},"interfaces/LifecycleSource.html":{},"license.html":{}}}],["whitelist",{"_index":3752,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["whitelistedheaders",{"_index":4354,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["whole",{"_index":5157,"title":{},"body":{"license.html":{}}}],["whose",{"_index":5349,"title":{},"body":{"license.html":{}}}],["widely",{"_index":5152,"title":{},"body":{"license.html":{}}}],["wildcard",{"_index":767,"title":{},"body":{"modules/AppModule.html":{}}}],["window",{"_index":5167,"title":{},"body":{"license.html":{}}}],["winston",{"_index":4703,"title":{},"body":{"dependencies.html":{}}}],["wipo",{"_index":5234,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4984,"title":{},"body":{"license.html":{}}}],["within",{"_index":5441,"title":{},"body":{"license.html":{}}}],["without",{"_index":3208,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"license.html":{}}}],["wkfsjldxgryajg1",{"_index":4468,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["wont",{"_index":4331,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["work",{"_index":4974,"title":{},"body":{"license.html":{}}}],["work's",{"_index":5174,"title":{},"body":{"license.html":{}}}],["workerresultinfointerface",{"_index":4648,"title":{"interfaces/WorkerResultInfoInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["workerresultinterface",{"_index":4653,"title":{"interfaces/WorkerResultInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["working",{"_index":5153,"title":{},"body":{"license.html":{}}}],["works",{"_index":4956,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":5525,"title":{},"body":{"license.html":{}}}],["wrappertype",{"_index":5716,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["writefile",{"_index":4023,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["writefile(this.locklocation",{"_index":4050,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["writefilesync",{"_index":1149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{}}}],["writefilesync(`${jsonformpath",{"_index":2885,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["writefilesync(`${process.cwd()}/configs/identities/jsonforms/${file",{"_index":2833,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["writefilesync(`${process.cwd()}/configs/identities/validations/${file",{"_index":3112,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["writefilesync(`${process.cwd()}/configs/lifecycle/${file",{"_index":3647,"title":{},"body":{"interfaces/LifecycleSource.html":{}}}],["writing",{"_index":5609,"title":{},"body":{"license.html":{}}}],["written",{"_index":5309,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":4636,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["x",{"_index":6415,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["x.y.z",{"_index":665,"title":{},"body":{"controllers/AppController.html":{}}}],["xx",{"_index":1685,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["xxxxxx@xxxxxxxxxxx",{"_index":1584,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["xxxxxxxx@xxxxxxx",{"_index":1585,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["y",{"_index":3126,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["yaml",{"_index":2814,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/LifecycleSource.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["years",{"_index":5311,"title":{},"body":{"license.html":{}}}],["yes",{"_index":25,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"injectables/UniquenessMailValidator.html":{}}}],["yes|1|on|true/i.test(process.env['sesame_https_enabled",{"_index":1826,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["yml",{"_index":2840,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/LifecycleSource.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yml$/.test(fileobj.file",{"_index":3244,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yourself",{"_index":5541,"title":{},"body":{"license.html":{}}}],["yup",{"_index":4715,"title":{},"body":{"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["z",{"_index":6500,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["z0",{"_index":781,"title":{},"body":{"modules/AppModule.html":{},"classes/inetOrgPerson.html":{}}}],["za",{"_index":780,"title":{},"body":{"modules/AppModule.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["zipball_url",{"_index":944,"title":{},"body":{"injectables/AppService.html":{},"interfaces/GithubAsset.html":{},"interfaces/GithubAuthor.html":{},"interfaces/GithubUpdate.html":{}}}],["zoom",{"_index":555,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LifecycleModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["zsvyngf8",{"_index":4455,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractController.html":{"url":"classes/AbstractController.html","title":"class - AbstractController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                    Optional\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controllerName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractControllerContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractControllerContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controllerName\n                    \n                \n\n                \n                    \n                        getcontrollerName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.controller.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerContext.html":{"url":"interfaces/AbstractControllerContext.html","title":"interface - AbstractControllerContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractControllerContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:6\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractQueueProcessor.html":{"url":"classes/AbstractQueueProcessor.html","title":"class - AbstractQueueProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractQueueProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.queue.processor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n            \n                Implements\n            \n            \n                        OnModuleInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _queue\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                queueEvents\n                            \n                            \n                                    Private\n                                redis\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    queue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.queue.processor.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        queue\n                    \n                \n\n                \n                    \n                        getqueue()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.queue.processor.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Queue, QueueEvents } from 'bullmq';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { getRedisConnectionToken } from '@nestjs-modules/ioredis';\nimport { Redis } from 'ioredis';\nimport { OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nexport abstract class AbstractQueueProcessor extends AbstractService implements OnModuleInit {\n  protected config: ConfigService;\n\n  private redis: Redis;\n  protected _queue: Queue;\n  public queueEvents: QueueEvents;\n\n  public get queue(): Queue {\n    return this._queue;\n  }\n\n  public constructor(context?: AbstractServiceContext) {\n    super(context);\n    if (!this.moduleRef) throw new Error('ModuleRef is not defined in ' + this.constructor.name);\n  }\n\n  public async onModuleInit() {\n    this.config = this.moduleRef.get(ConfigService, { strict: false });\n    this.redis = this.moduleRef.get(getRedisConnectionToken(), { strict: false });\n\n    this._queue = new Queue(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n    this.queueEvents = new QueueEvents(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSchema.html":{"url":"classes/AbstractSchema.html","title":"class - AbstractSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | any\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MetadataPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\nimport { Types, Document } from 'mongoose';\nimport { MetadataPart, MetadataPartSchema } from '~/_common/abstracts/schemas/parts/metadata.part.schema';\n\nexport abstract class AbstractSchema extends Document {\n  public readonly _id: Types.ObjectId | any // eslint-disable-line\n\n  @Prop({ type: MetadataPartSchema })\n  public metadata?: MetadataPart;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractService.html":{"url":"injectables/AbstractService.html","title":"injectable - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    request\n                                \n                                \n                                    moduleName\n                                \n                                \n                                    serviceName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        request\n                    \n                \n\n                \n                    \n                        getrequest()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        moduleName\n                    \n                \n\n                \n                    \n                        getmoduleName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:45\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n\n                \n                    \n                        getserviceName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:52\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n  serviceName?: string;\n  moduleName?: string;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  private _customServiceName: string;\n  private _customModuleName: string;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n    this.eventEmitter = context?.eventEmitter;\n\n    this._customModuleName = context?.moduleName\n    this._customServiceName = context?.serviceName\n  }\n\n  protected get request():\n    | (Request & {\n      user?: Express.User & any // eslint-disable-line\n    })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return this._customModuleName || moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    if (!this.constructor.name) throw new Error('Service name is not defined in ' + this.constructor.name);\n    return this._customServiceName || this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractServiceContext.html":{"url":"interfaces/AbstractServiceContext.html","title":"interface - AbstractServiceContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractServiceContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            eventEmitter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moduleName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            req\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            serviceName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventEmitter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventEmitter:     EventEmitter2\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter2\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        req:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n  serviceName?: string;\n  moduleName?: string;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  private _customServiceName: string;\n  private _customModuleName: string;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n    this.eventEmitter = context?.eventEmitter;\n\n    this._customModuleName = context?.moduleName\n    this._customServiceName = context?.serviceName\n  }\n\n  protected get request():\n    | (Request & {\n      user?: Express.User & any // eslint-disable-line\n    })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return this._customModuleName || moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    if (!this.constructor.name) throw new Error('Service name is not defined in ' + this.constructor.name);\n    return this._customServiceName || this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSettingsService.html":{"url":"classes/AbstractSettingsService.html","title":"class - AbstractSettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract-settings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                settingsName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                defaultValues\n                            \n                            \n                                    Protected\n                                    Async\n                                getParameter\n                            \n                            \n                                    Protected\n                                    Async\n                                setParameter\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract-settings.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        settingsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract-settings.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        defaultValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameter(settingName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        setParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParameter(settingName: string, parameters: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:56\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:191\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:358\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:81\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:156\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:233\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:296\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Settings } from '~/settings/_schemas/settings.schema';\n\nexport class AbstractSettingsService extends AbstractServiceSchema {\n  protected settingsName: string;\n\n  constructor(@InjectModel(Settings.name) protected _model: Model) {\n    super();\n  }\n\n  protected async getParameter(settingName: string): Promise {\n    try {\n      const enr = await this.findOne({ name: settingName });\n      return enr.parameters;\n    } catch (e) {\n      return this.defaultValues();\n    }\n  }\n\n  protected async setParameter(settingName: string, parameters: object): Promise {\n    // const enr = new this._model({\n    //   name: settingName,\n    //   parameters: parameters,\n    // });\n    const ok = await this.upsert(\n      { name: settingName },\n      {\n        $setOnInsert: {\n          name: settingName,\n        },\n        $set: {\n          parameters: parameters,\n        },\n      },\n    );\n    return ok;\n  }\n\n  protected async defaultValues(): Promise {\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSettingsService-1.html":{"url":"classes/AbstractSettingsService-1.html","title":"class - AbstractSettingsService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_abstracts/abstract-settings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                settingsName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                defaultValues\n                            \n                            \n                                    Protected\n                                    Async\n                                getParameter\n                            \n                            \n                                    Protected\n                                    Async\n                                setParameter\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/settings/_abstracts/abstract-settings.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        settingsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/settings/_abstracts/abstract-settings.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        defaultValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/_abstracts/abstract-settings.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameter(settingName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/_abstracts/abstract-settings.service.ts:13\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        setParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParameter(settingName: string, parameters: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/_abstracts/abstract-settings.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:56\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:191\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:358\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:81\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:156\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:233\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:296\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Settings, SettingsSchema } from '~/settings/_schemas/settings.schema';\n\nexport class AbstractSettingsService extends AbstractServiceSchema {\n  protected settingsName: string;\n\n  constructor(@InjectModel(Settings.name) protected _model: Model) {\n    super();\n  }\n\n  protected async getParameter(settingName: string): Promise {\n    try {\n      const enr = await this.findOne({ name: settingName });\n      return enr.parameters;\n    } catch (e) {\n      return this.defaultValues();\n    }\n  }\n\n  protected async setParameter(settingName: string, parameters: object): Promise {\n    const enr = new this._model({\n      name: settingName,\n      parameters: parameters,\n    });\n    const ok = await this.upsert(\n      { name: settingName },\n      {\n        $setOnInsert: {\n          name: settingName,\n        },\n        $set: {\n          parameters: parameters,\n        },\n      },\n    );\n    return ok;\n  }\n\n  protected async defaultValues(): Promise {\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivationDto.html":{"url":"classes/ActivationDto.html","title":"class - ActivationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/activation-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'Id of identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/activation-dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: 'true', description: 'true or false to enable or disable the identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/activation-dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsString } from 'class-validator';\n\nexport class ActivationDto {\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'Id of identity', type: String })\n  public id: string;\n\n  @IsBoolean()\n  @ApiProperty({ example: 'true', description: 'true or false to enable or disable the identity', type: String })\n  public status: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdditionalFieldsPart.html":{"url":"classes/AdditionalFieldsPart.html","title":"class - AdditionalFieldsPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdditionalFieldsPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    Public\n                                objectClasses\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\n@Schema({ _id: false, minimize: false, })\nexport class AdditionalFieldsPart extends Document {\n  @Prop({ type: Array, of: String, required: true, default: [] })\n  public objectClasses: string[];\n\n  @Prop({ type: Object, default: {} })\n  public attributes: Record;\n\n  @Prop({ type: Object, required: false })\n  public validations?: Record;\n}\n\nexport const AdditionalFieldsPartSchema = SchemaFactory.createForClass(AdditionalFieldsPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentCreateQuestions.html":{"url":"classes/AgentCreateQuestions.html","title":"class - AgentCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseEmail\n                            \n                            \n                                    \n                                parsePassword\n                            \n                            \n                                    \n                                parseUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseEmail(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Email ?', name: 'email'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parsePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    parsePassword(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Password ?', name: 'password', type: 'password'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseUsername(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Username ?', name: 'username'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Agents.html":{"url":"classes/Agents.html","title":"class - Agents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/agents.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                baseURL\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                displayName\n                            \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    Public\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '/'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: SecurityPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: StatePartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_THIRD_PARTY_AUTH})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { StatePart, StatePartSchema } from '~/core/agents/_schemas/_parts/state.part.schema';\nimport { SecurityPart, SecurityPartSchema } from '~/core/agents/_schemas/_parts/security.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nconst DEFAULT_THIRD_PARTY_AUTH = 'local';\n\n@Schema({ versionKey: false })\nexport class Agents extends AbstractSchema {\n  // @Prop({\n  //   type: Types.ObjectId,\n  //   required: true,\n  //   unique: true,\n  // })\n  // public entityId: Types.ObjectId\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public username: string;\n\n  @Prop({\n    type: String,\n  })\n  public displayName: string;\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public email: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public password: string;\n\n  @Prop({\n    type: String,\n    default: DEFAULT_THIRD_PARTY_AUTH,\n  })\n  public thirdPartyAuth: string;\n\n  @Prop({\n    type: StatePartSchema,\n    required: true,\n    default: {},\n  })\n  public state: StatePart;\n\n  @Prop({\n    type: String,\n    default: '/',\n  })\n  public baseURL: string;\n\n  @Prop({\n    type: SecurityPartSchema,\n  })\n  public security: SecurityPart;\n\n  @Prop({\n    type: Object,\n  })\n  public customFields?: { [key: string]: MixedValue };\n}\n\nexport const AgentsSchema = SchemaFactory.createForClass(Agents);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCommand.html":{"url":"classes/AgentsCommand.html","title":"class - AgentsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AgentsController.html":{"url":"controllers/AgentsController.html","title":"controller - AgentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AgentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                agents\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: AgentsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: AgentsUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { AgentsCreateDto, AgentsDto, AgentsUpdateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from './agents.service';\n\n@ApiTags('core/agents')\n@Controller('agents')\nexport class AgentsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    // entityId: 1,\n    username: 1,\n    displayName: 1,\n    email: 1,\n    state: 1,\n    hidden: 1,\n  };\n\n  public constructor(private readonly _service: AgentsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n  public async create(@Res() res: Response, @Body() body: AgentsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(AgentsDto, AgentsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      AgentsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(AgentsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n      security: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: AgentsUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(AgentsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateCommand.html":{"url":"classes/AgentsCreateCommand.html","title":"class - AgentsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, agentsService: AgentsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateDto.html":{"url":"classes/AgentsCreateDto.html","title":"class - AgentsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, ValidateNested, IsEmail, IsBoolean, IsMongoId, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsDto.html":{"url":"classes/AgentsDto.html","title":"class - AgentsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AgentsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:43\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, ValidateNested, IsEmail, IsBoolean, IsMongoId, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgentsModule.html":{"url":"modules/AgentsModule.html","title":"module - AgentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AgentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/agents/agents.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AgentsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AgentsSchema, Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from './agents.service';\nimport { AgentsController } from './agents.controller';\n// import { AgentsCommand } from '~/cli/agents.command';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Agents.name,\n        useFactory: () => AgentsSchema,\n      },\n    ]),\n  ],\n  providers: [AgentsService /* ...AgentsCommand.registerWithSubCommands() */],\n  controllers: [AgentsController],\n  exports: [AgentsService],\n})\nexport class AgentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService.html":{"url":"injectables/AgentsService.html","title":"injectable - AgentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/agents/agents.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: AgentsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:17\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:27\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:56\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:358\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:81\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:156\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:296\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { Document, Model, ModifyResult, Query, QueryOptions, SaveOptions, Types, UpdateQuery } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { AgentsCreateDto } from './_dto/agents.dto';\nimport { hash } from 'argon2';\nimport { randomBytes } from 'node:crypto';\nimport { SecurityPartDTO } from './_dto/parts/security.part.dto';\n\n@Injectable()\nexport class AgentsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Agents.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: AgentsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    data.password = await hash(data.password);\n    data.security = (data.security || {}) as SecurityPartDTO;\n    data.security.secretKey = randomBytes(32).toString('hex');\n    return await super.create(data, options);\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery & any,\n    options?: QueryOptions,\n  ): Promise>> {\n    if (update.password) {\n      update.password = await hash(update.password);\n    }\n    if (update.$set?.password) {\n      update.$set.password = await hash(update.$set.password);\n    }\n    return await super.update(\n      _id,\n      {\n        ...update,\n        $set: {\n          ...(update?.$set || {}),\n        },\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsUpdateDto.html":{"url":"classes/AgentsUpdateDto.html","title":"class - AgentsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(AgentsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, ValidateNested, IsEmail, IsBoolean, IsMongoId, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/all-exception.filter.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { Response } from 'express';\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    Logger.debug(exception['message'], 'AllExceptionFilter');\n\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = 500;\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception['message'] || exception['name'] || 'Internal server error',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiSession.html":{"url":"classes/ApiSession.html","title":"class - ApiSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/api-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/api-session.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ApiSession {\n  public readonly _id: string;\n  public readonly username: string;\n  public readonly displayName: string;\n  public readonly token: string;\n\n  public constructor(data: Partial) {\n    for (const key in data) {\n      this[key] = data[key];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                getInfo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get API infos'})@ApiResponse({status: 200, description: 'Return API infos'})\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:24\n                        \n                    \n\n\n            \n                \n                        This endpoint returns the API information.\nIt retrieves the package information from the AppService and returns it in the response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(res: Response, project?: ProjectsList, current?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'current', required: false})@Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:41\n                        \n                    \n\n\n            \n                \n                        This endpoint checks for updates of the specified project.\nIt compares the current version with the latest version available on GitHub.\nIf the project is not the same as the package name or if a current version is provided,\nit validates the current version format.\nIf the current version is not in the format X.Y.Z, it throws a BadRequestException.\nIt returns the project name, whether an update is available, the current version,\nand the last version available.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                project\n                                            \n                                                            ProjectsList\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Query, Res } from '@nestjs/common';\nimport { AppService, ProjectsList } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\nimport { ApiBearerAuth, ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\n\n@Public()\n@Controller()\n@ApiBearerAuth()\n// @see https://stackoverflow.com/questions/67314808/how-to-disable-security-for-a-specific-controller-method-in-nestjs-swagger\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  /**\n   * This endpoint returns the API information.\n   * It retrieves the package information from the AppService and returns it in the response.\n   */\n  @Get()\n  @ApiOperation({ summary: 'Get API infos' })\n  @ApiResponse({ status: 200, description: 'Return API infos' })\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n\n  /**\n   * This endpoint checks for updates of the specified project.\n   * It compares the current version with the latest version available on GitHub.\n   * If the project is not the same as the package name or if a current version is provided,\n   * it validates the current version format.\n   * If the current version is not in the format X.Y.Z, it throws a BadRequestException.\n   * It returns the project name, whether an update is available, the current version,\n   * and the last version available.\n   */\n  @ApiQuery({ name: 'current', required: false })\n  @Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n  public async update(\n    @Res() res: Response,\n    @Param('project') project?: ProjectsList,\n    @Query('current') current?: string,\n  ): Promise {\n    const pkgInfo = this.appService.getInfo();\n    const currentVersion = current || pkgInfo.version;\n    const [lastMajor, lastMinor, lastPatch] = currentVersion.split('.').map(Number);\n\n    /**\n     * If the project is not the same as the package name or if a current version is provided,\n     * we validate the current version format.\n     * If the current version is not in the format X.Y.Z, we throw a BadRequestException.\n     *\n     * This ensures that the current version is always in a valid format before proceeding with the comparison.\n     */\n    if (project !== pkgInfo.name || current) {\n      if (!/[0-9]+\\.[0-9]+\\.[0-9]+/.test(current)) {\n        throw new BadRequestException('Invalid version for current parameter');\n      }\n    }\n\n    let lastVersion = '0.0.0';\n    let updateAvailable = false;\n    let data = await this.appService.getProjectUpdate(project);\n\n    if (data) {\n      lastVersion = data.tag_name.replace(/^v/, '');\n      const [currentMajor, currentMinor, currentPatch] = lastVersion.split('.').map(Number);\n      updateAvailable = currentMajor > lastMajor || currentMinor > lastMinor || currentPatch > lastPatch;\n    }\n\n    return res.json({\n      data: {\n        project,\n        updateAvailable,\n        currentVersion,\n        lastVersion,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nMigrationsModule\n\nMigrationsModule\n\nAppModule -->\n\nMigrationsModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nShutdownObserver\n\nShutdownObserver\n\nAppModule -->\n\nShutdownObserver->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ShutdownObserver\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            ManagementModule\n                        \n                        \n                            MigrationsModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BullModule } from '@nestjs/bullmq';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { CoreModule } from './core/core.module';\nimport { ManagementModule } from './management/management.module';\nimport config, { MongoosePlugin } from './config';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { RedisOptions } from 'ioredis';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RequestContextModule } from 'nestjs-request-context';\nimport { APP_FILTER, APP_GUARD, APP_PIPE } from '@nestjs/core';\nimport { AuthGuard } from './_common/guards/auth.guard';\nimport { MongooseValidationFilter } from './_common/filters/mongoose-validation.filter';\nimport { DtoValidationPipe } from './_common/pipes/dto-validation.pipe';\nimport { SettingsModule } from '~/settings/settings.module';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MailadmService } from '~/settings/mailadm.service';\nimport { FactorydriveModule } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { MigrationsModule } from './migrations/migrations.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { ShutdownObserver } from './_common/observers/shutdown.observer';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    EventEmitterModule.forRoot({\n      wildcard: true,\n      delimiter: '.',\n      maxListeners: 25,\n      verboseMemoryLeak: true,\n      ignoreErrors: false,\n    }),\n    MailerModule.forRootAsync({\n      imports: [SettingsModule],\n      inject: [MailadmService],\n      useFactory: async (service: MailadmService) => {\n        const params = await service.getParams();\n        const regex = /^(smtps?|):\\/\\/([a-zA-Z0-9.-]+|\\d{1,3}(?:\\.\\d{1,3}){3}|\\[(?:[0-9a-fA-F:]+)\\]):(\\d+)$/;\n        const [_, protocol, host, port] = `${params.host}`.match(regex);\n        const isDev = process.env.NODE_ENV === 'development';\n\n        return {\n          transport: {\n            host,\n            port: parseInt(port),\n            from: params.sender,\n            secure: protocol === 'smtps' && port === '465',\n            requireTLS: protocol === 'smtps' && port === '587',\n            auth: {\n              user: params.username,\n              pass: params.password,\n            },\n            tls: {\n              ciphers: 'SSLv3,TLSv1,TLSv1.1,TLSv1.2',\n            },\n            debug: isDev,\n            logger: isDev,\n          },\n          defaults: {\n            from: params.sender,\n          },\n          template: {\n            dir: __dirname + '/../templates',\n            adapter: new HandlebarsAdapter(),\n            options: {\n              strict: true,\n            },\n          },\n        };\n      },\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        type: 'single',\n        url: config.get('ioredis.uri'),\n        options: config.get('ioredis.options'),\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n        blockingConnection: true,\n      }),\n    }),\n    FactorydriveModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        ...config.get('factorydrive.options'),\n      }),\n    }),\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        ...config.get('axios.options'),\n      }),\n    }),\n    RequestContextModule,\n    ScheduleModule.forRoot(),\n    CoreModule.register(),\n    ManagementModule.register(),\n    SettingsModule.register(),\n    MigrationsModule.register(),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    ShutdownObserver,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard('jwt'),\n    },\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: AllExceptionFilter,\n    // },\n    {\n      provide: APP_FILTER,\n      useClass: MongooseValidationFilter,\n    },\n    {\n      provide: APP_PIPE,\n      useClass: DtoValidationPipe,\n    },\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                package\n                            \n                            \n                                    Protected\n                                storage\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                fetchGithubRelease\n                            \n                            \n                                    Public\n                                getInfo\n                            \n                            \n                                    Public\n                                getProjectUpdate\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                handleCron\n                            \n                            \n                                    Public\n                                    Async\n                                onApplicationBootstrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        fetchGithubRelease\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchGithubRelease(project: ProjectsList, retry: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Fetches the latest release information for a specified project from GitHub.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            ProjectsList\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The project name to fetch updates for.\n\n                                            \n                                        \n                                        \n                                                retry\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the latest release information for the specified project.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:136\n                        \n                    \n\n\n            \n                \n                        Returns basic information about the application, such as name and version.\n\n\n                        \n                            Returns :     Partial\n\n                        \n                            \n                                Returns basic information about the application, such as name and version.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProjectUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProjectUpdate(project: ProjectsList)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:146\n                        \n                    \n\n\n            \n                \n                        Fetches the latest release information for a specified project from GitHub.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            ProjectsList\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The project name to fetch updates for.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GithubUpdate\n\n                        \n                            \n                                A promise that resolves to the latest release information for the specified project.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        handleCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_6_HOURS)\n                \n            \n\n                    \n                        \n                            Defined in src/app.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Cron job to fetch the latest releases of projects every 6 hours.\nThis method logs the start and end of the job, and fetches updates for each project in the ProjectsList.\nIt uses the fetchGithubRelease method to get the latest releases from GitHub.\nThe job is scheduled using the CronExpression.EVERY_6_HOURS expression.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:90\n                        \n                    \n\n\n            \n                \n                        On application bootstrap, this method is called to initialize the service.\nIt logs the start of the bootstrap process and fetches the latest releases for each project\nin the ProjectsList enum.\nIt uses the fetchGithubRelease method to get the latest releases from GitHub.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the bootstrap process is complete.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        package\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LRUCache({\n    ttl: 1_000 * 60 * 60 * 6, // 6 hours\n    ttlAutopurge: true,\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, OnApplicationBootstrap } from '@nestjs/common';\nimport { PackageJson } from 'types-package-json';\nimport { ModuleRef } from '@nestjs/core';\nimport { readFileSync } from 'fs';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { pick } from 'radash';\nimport { HttpService } from '@nestjs/axios';\nimport { LRUCache } from 'lru-cache';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\nexport enum ProjectsList {\n  SESAME_ORCHESTRATOR = 'sesame-orchestrator',\n  SESAME_DAEMON = 'sesame-daemon',\n  SESAME_APP_MANAGER = 'sesame-app-manager',\n}\n\nexport interface GithubAuthor {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  user_view_type: string;\n  site_admin: boolean;\n}\n\nexport interface GithubAsset {\n  [key: string]: any;\n}\n\nexport interface GithubUpdate {\n  url: string;\n  assets_url: string;\n  upload_url: string;\n  html_url: string;\n  id: number;\n  author: GithubAuthor;\n  node_id: string;\n  tag_name: string;\n  target_commitish: string;\n  name: string;\n  draft: boolean;\n  prerelease: boolean;\n  created_at: string;\n  published_at: string;\n  assets: GithubAsset[];\n  tarball_url: string;\n  zipball_url: string;\n  body: string;\n}\n\n@Injectable()\nexport class AppService extends AbstractService implements OnApplicationBootstrap {\n  protected storage = new LRUCache({\n    ttl: 1_000 * 60 * 60 * 6, // 6 hours\n    ttlAutopurge: true,\n  });\n\n  protected package: Partial;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly httpService: HttpService,\n  ) {\n    super({ moduleRef });\n    this.package = JSON.parse(readFileSync('package.json', 'utf-8'));\n  }\n\n  /**\n   * On application bootstrap, this method is called to initialize the service.\n   * It logs the start of the bootstrap process and fetches the latest releases for each project\n   * in the ProjectsList enum.\n   * It uses the fetchGithubRelease method to get the latest releases from GitHub.\n   *\n   * @returns {Promise} A promise that resolves when the bootstrap process is complete.\n   */\n  public async onApplicationBootstrap(): Promise {\n    this.logger.debug('Application service bootstrap starting...');\n\n    if (process.env.NODE_ENV === 'development') {\n      this.logger.warn('Skipping GitHub release fetch in development mode.');\n    } else {\n      for (const project of Object.values(ProjectsList)) {\n        this.logger.verbose(`Checking for updates for project: ${project}`);\n        await this.fetchGithubRelease(project);\n      }\n    }\n\n    this.logger.log('Application service bootstrap completed.');\n  }\n\n  /**\n   * Cron job to fetch the latest releases of projects every 6 hours.\n   * This method logs the start and end of the job, and fetches updates for each project in the ProjectsList.\n   * It uses the fetchGithubRelease method to get the latest releases from GitHub.\n   * The job is scheduled using the CronExpression.EVERY_6_HOURS expression.\n   *\n   * @Cron(CronExpression.EVERY_6_HOURS)\n   * @returns {Promise}\n   * @memberof AppService\n   */\n  @Cron(CronExpression.EVERY_6_HOURS)\n  public async handleCron(): Promise {\n    this.logger.debug('Cron job started.');\n\n    if (process.env.NODE_ENV === 'development') {\n      this.logger.warn('Skipping GitHub release fetch in development mode.');\n    } else {\n      for (const project of Object.values(ProjectsList)) {\n        this.logger.verbose(`Checking for updates for project: ${project}`);\n        await this.fetchGithubRelease(project);\n      }\n    }\n\n    this.logger.debug('Cron job completed.');\n  }\n\n  /**\n   * Returns basic information about the application, such as name and version.\n   *\n   * @returns {Partial} Returns basic information about the application, such as name and version.\n   */\n  public getInfo(): Partial {\n    return pick(this.package, ['name', 'version']);\n  }\n\n  /**\n   * Fetches the latest release information for a specified project from GitHub.\n   *\n   * @param project The project name to fetch updates for.\n   * @returns {Promise} A promise that resolves to the latest release information for the specified project.\n   */\n  public getProjectUpdate(project: ProjectsList): GithubUpdate {\n    if (!Object.values(ProjectsList).includes(project)) {\n      throw new BadRequestException(`Invalid project: ${project}`);\n    }\n\n    if (this.storage.has(project)) {\n      this.logger.debug(`Fetching ${project} tags from cache`);\n\n      return this.storage.get(project) as GithubUpdate;\n    }\n\n    return null; // Return null if the project is not cached\n  }\n\n  /**\n   * Fetches the latest release information for a specified project from GitHub.\n   *\n   * @param project The project name to fetch updates for.\n   * @returns {Promise} A promise that resolves to the latest release information for the specified project.\n   */\n  private async fetchGithubRelease(project: ProjectsList, retry = 0): Promise {\n    if (this.storage.has(project)) {\n      this.logger.debug(`Fetching ${project} tags from cache`);\n\n      return this.storage.get(project) as GithubUpdate;\n    }\n\n    this.logger.debug(`Fetching ${project} tags from GitHub API`);\n\n    try {\n      const { data } = await firstValueFrom(\n        this.httpService.get(`https://api.github.com/repos/Libertech-FR/${project}/releases/latest`).pipe(\n          catchError((error) => {\n            this.logger.error(`Error fetching release for ${project}: ${error.message}`);\n            throw error;\n          })\n        )\n      );\n      this.storage.set(project, data);\n      return data;\n    } catch (error) {\n      if (retry >= 3) {\n        this.logger.fatal(`Failed to fetch release for ${project} after multiple retries: ${error.message}`);\n\n        return null; // Return null or handle as needed\n      }\n\n      setTimeout(() => {\n        this.logger.verbose(`Retrying to fetch ${project} release after error: ${error.message}`);\n        return this.fetchGithubRelease(project, retry + 1);\n      }, 1_000 * 60); // Retry after 60 seconds\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AskTokenDto.html":{"url":"classes/AskTokenDto.html","title":"class - AskTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AskTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/ask-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                mail\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'monemail@mondomaine.com', description: 'secondary mail'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/ask-token.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/ask-token.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class AskTokenDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User id' })\n  public uid: string;\n\n  @ApiProperty({ example: 'monemail@mondomaine.com', description: 'secondary mail' })\n  @IsString()\n  public mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                session\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(res: Response, user: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('local')@UseGuards(undefined)@ApiOperation({summary: 'Authentification interne utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(res: Response, jwt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@ApiOperation({summary: 'Supprime le jeton d'authentification utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh')@ApiOperation({summary: 'Récupère un nouveau jeton d'authentification'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        session\n                        \n                    \n                \n            \n            \n                \n                        \n                    session(res: Response, identity: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('session')@UseGuards(undefined)@ApiOperation({summary: 'Récupération de la session en cours'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res, UseGuards, Headers, Get } from '@nestjs/common';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ModuleRef } from '@nestjs/core';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Response } from 'express';\nimport { ReqIdentity } from '~/_common/decorators/params/req-identity.decorator';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { hash } from 'crypto';\nimport { omit, pick } from 'radash';\n\n@Public()\n@ApiTags('core/auth')\n@Controller('auth')\nexport class AuthController extends AbstractController {\n  constructor(\n    protected moduleRef: ModuleRef,\n    private readonly service: AuthService,\n  ) {\n    super();\n  }\n\n  @Post('local')\n  @UseGuards(AuthGuard('local'))\n  @ApiOperation({ summary: 'Authentification interne utilisateur' })\n  public async authenticateWithLocal(@Res() res: Response, @ReqIdentity() user: AgentType): Promise {\n    const tokens = await this.service.createTokens(user);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      user,\n    });\n  }\n\n  @Get('session')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiOperation({ summary: 'Récupération de la session en cours' })\n  public async session(@Res() res: Response, @ReqIdentity() identity: AgentType): Promise {\n    this.logger.debug(`Session request for ${identity._id} (${identity.email})`);\n    const user = await this.service.getSessionData(identity);\n    this.logger.debug(`Session data delivered for ${identity._id} (${identity.email}) with ${JSON.stringify(user)}`);\n    return res.status(HttpStatus.OK).json({\n      user: {\n        ...omit(user, ['security', 'metadata']),\n        sseToken: hash('sha256', user.security.secretKey),\n      },\n    });\n  }\n\n  //TODO: change any\n  @Post('refresh')\n  @ApiOperation({ summary: \"Récupère un nouveau jeton d'authentification\" })\n  public async refresh(@Res() res: Response, @Body() body: { refresh_token: string }): Promise {\n    const [agents, tokens] = await this.service.renewTokens(body.refresh_token);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      sseToken: hash('sha256', agents.security.secretKey),\n    });\n  }\n\n  @Post('logout')\n  @ApiOperation({ summary: \"Supprime le jeton d'authentification utilisateur\" })\n  public async logout(@Res() res: Response, @Headers('Authorization') jwt: string): Promise {\n    await this.service.clearSession(jwt.replace(/^Bearer\\s/, ''));\n    return res.status(HttpStatus.OK).send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { IAuthModuleOptions, PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { JwtModule, JwtModuleOptions } from '@nestjs/jwt';\nimport { JwtStrategy } from '~/core/auth/_strategies/jwt.strategy';\nimport { LocalStrategy } from '~/core/auth/_strategies/local.strategy';\nimport { KeyringsModule } from '../keyrings/keyrings.module';\n\n@Module({\n  imports: [\n    PassportModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('passport.options', {}),\n      }),\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('jwt.options', {}),\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, LocalStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                ACCESS_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                ACCESS_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                DEV_TOKEN_PATH\n                            \n                            \n                                    Protected\n                                REFRESH_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                REFRESH_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                TOKEN_PATH_SEPARATOR\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    Public\n                                    Async\n                                clearSession\n                            \n                            \n                                    Public\n                                    Async\n                                createTokens\n                            \n                            \n                                    Public\n                                    Async\n                                getSessionData\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                renewTokens\n                            \n                            \n                                    Public\n                                    Async\n                                verifyIdentity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, agentsService: AgentsService, keyringsService: KeyringsService, jwtService: JwtService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/auth.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearSession(jwt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTokens(identity, refresh_token?: string | , options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refresh_token\n                                            \n                                                        string | \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getSessionData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSessionData(identity: AgentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        renewTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    renewTokens(refresh_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refresh_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyIdentity\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyIdentity(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        ACCESS_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 5 * 60\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'access_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        DEV_TOKEN_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.dev-token.json'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        REFRESH_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 3600 * 24 * 7\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'refresh_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        TOKEN_PATH_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, OnModuleInit, UnauthorizedException } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ModuleRef } from '@nestjs/core';\nimport { Redis } from 'ioredis';\nimport { randomBytes } from 'crypto';\nimport { InjectRedis } from '@nestjs-modules/ioredis';\nimport { verify as argon2Verify } from 'argon2';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from '~/core/agents/agents.service';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { omit, pascal, pick } from 'radash';\nimport { JwtPayload } from 'jsonwebtoken';\nimport { JwtService } from '@nestjs/jwt';\nimport { resolve } from 'path';\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\nimport { ConsoleSession } from '~/_common/data/console-session';\nimport { KeyringsService } from '../keyrings/keyrings.service';\nimport { ApiSession } from '~/_common/data/api-session';\n\n@Injectable()\nexport class AuthService extends AbstractService implements OnModuleInit {\n  protected readonly DEV_TOKEN_PATH = '.dev-token.json';\n  protected readonly TOKEN_PATH_SEPARATOR = ':';\n\n  protected readonly ACCESS_TOKEN_PREFIX = 'access_token';\n  protected readonly REFRESH_TOKEN_PREFIX = 'refresh_token';\n\n  protected ACCESS_TOKEN_EXPIRES_IN = 5 * 60;\n  protected REFRESH_TOKEN_EXPIRES_IN = 3600 * 24 * 7;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    protected readonly agentsService: AgentsService,\n    protected readonly keyringsService: KeyringsService,\n    private readonly jwtService: JwtService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async onModuleInit(): Promise {\n    if (process.env.NODE_ENV !== 'production') {\n      this.logger.warn('DEV MODE ENABLED !');\n      const devTokenPath = resolve(process.cwd(), this.DEV_TOKEN_PATH);\n      if (existsSync(devTokenPath)) {\n        try {\n          const data = JSON.parse(readFileSync(devTokenPath, 'utf-8'));\n          if (data.access_token) {\n            this.logger.log(`TOKEN ALREADY EXIST : `);\n            return;\n          }\n        } catch (e) {\n          this.logger.error(`TOKEN FILE CORRUPTED ! REGENERATING...`);\n        }\n      }\n      const { access_token } = await this.createTokens(new ConsoleSession(), false, {\n        expiresIn: '1y',\n        scopes: ['offline', 'api'],\n      });\n      writeFileSync(\n        devTokenPath,\n        JSON.stringify({\n          access_token,\n        }),\n      );\n\n      this.logger.log(`NEW TOKEN CREATED : `);\n    }\n  }\n\n  public async authenticateWithLocal(username: string, password: string): Promise {\n    try {\n      const user = await this.agentsService.findOne({ username });\n      if (user && (await argon2Verify(user.password, password))) {\n        return user;\n      }\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n\n  // eslint-disable-next-line\n  public async verifyIdentity(payload: any & { identity: AgentType & { token: string } }): Promise {\n    // console.log('payload', payload);\n    if (payload.scopes.includes('offline')) {\n      return payload.identity;\n    }\n    if (payload.scopes.includes('api')) {\n      try {\n        const identity = await this.keyringsService.findOne({\n          _id: payload.identity._id,\n          token: payload.identity.token,\n        });\n        if (identity) {\n          return identity.toObject();\n        }\n      } catch (e) { }\n      return null;\n    }\n    try {\n      const identity = await this.redis.get([this.ACCESS_TOKEN_PREFIX, payload.jti].join(':'));\n      if (identity) {\n        const data = JSON.parse(identity);\n        // console.log('data', data);\n        const success = await this.agentsService.model.countDocuments({\n          _id: payload.identity._id,\n          'security.secretKey': data.identity?.security?.secretKey,\n        });\n\n        return success ? data : null;\n      }\n    } catch (e) {\n      this.logger.warn('Invalid jwt session', e);\n    }\n    return null;\n  }\n\n  public async createTokens(\n    identity: AgentType & any,\n    refresh_token?: string | false,\n    options?: any,\n  ): Promise {\n    const scopes = ['sesame'];\n    if (options?.scopes) scopes.push(...options.scopes);\n    const jwtid = `${identity._id}_${randomBytes(16).toString('hex')}`;\n    const access_token = this.jwtService.sign(\n      { identity: pick(identity, ['_id', 'username', 'email', 'token']), scopes },\n      {\n        expiresIn: this.ACCESS_TOKEN_EXPIRES_IN,\n        jwtid,\n        subject: `${identity._id}`,\n        ...omit(options, ['scopes']),\n      },\n    );\n    if (refresh_token === false) return { access_token };\n    if (!refresh_token) {\n      refresh_token = [`${identity._id}`, randomBytes(64).toString('hex')].join(this.TOKEN_PATH_SEPARATOR);\n      await this.redis.set(\n        [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n        JSON.stringify({\n          identityId: identity._id,\n        }),\n      );\n    }\n    await this.redis.expire(\n      [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n      this.REFRESH_TOKEN_EXPIRES_IN,\n    );\n    const userIdentity = await this.agentsService.findOne({ _id: identity._id });\n    await this.redis.set(\n      [this.ACCESS_TOKEN_PREFIX, jwtid].join(this.TOKEN_PATH_SEPARATOR),\n      JSON.stringify({\n        identity: userIdentity.toJSON(),\n        refresh_token,\n      }),\n      'EX',\n      this.ACCESS_TOKEN_EXPIRES_IN,\n    );\n    return {\n      access_token,\n      refresh_token,\n    };\n  }\n\n  public async getSessionData(identity: AgentType): Promise {\n    const entity = await this.agentsService.findOne(\n      { _id: identity._id },\n      {\n        projection: {\n          metadata: 0,\n          password: 0,\n        },\n      },\n    )\n    return {\n      ...omit(entity.toJSON(), ['password']),\n    };\n  }\n\n  public async renewTokens(refresh_token: string): Promise {\n    const data = await this.redis.get([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n    if (!data) throw new UnauthorizedException();\n    const { identityId } = JSON.parse(data);\n    const identity = await this.agentsService.findOne({ _id: identityId });\n    if (!identity) throw new ForbiddenException();\n    return [identity, await this.createTokens(omit(identity.toObject(), ['password']), refresh_token)];\n  }\n\n  public async clearSession(jwt: string): Promise {\n    try {\n      const data = this.jwtService.decode(jwt) as JwtPayload;\n      if (!data) return null;\n      const { jti } = data;\n      const infos = await this.redis.get([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      await this.redis.del([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      if (infos) {\n        const { refresh_token } = JSON.parse(infos);\n        await this.redis.del([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n      }\n    } finally {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginOptions.html":{"url":"interfaces/AutoIncrementPluginOptions.html","title":"interface - AutoIncrementPluginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            incrementBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overwriteModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rules\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerCollection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : _id\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the field to increment\n-> Only use this if it is not \"_id\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incrementBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incrementBy:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How much to increment the field by\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overwriteModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overwriteModelName:         string | OverwriteModelNameFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | OverwriteModelNameFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrite what to use for the modelName property in the tracker document\nThis can be overwritten when wanting to use a single tracker for multiple models\nDefaults to document.constructor.modelName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rules:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startAt:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 0\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    the count should start at\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerCollection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerCollection:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounters\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Tracker Collection to use to keep track of an counter for the ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerModelName:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounter\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the tracker model name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  type?: string;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n\n  rules?: Function;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginTrackerSpec.html":{"url":"interfaces/AutoIncrementPluginTrackerSpec.html","title":"interface - AutoIncrementPluginTrackerSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginTrackerSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            modelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current Tracker count\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field in the schema\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ModelName from the current model\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  type?: string;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n\n  rules?: Function;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInfoInterface.html":{"url":"interfaces/BackendResultInfoInterface.html","title":"interface - BackendResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInterface.html":{"url":"interfaces/BackendResultInterface.html","title":"interface - BackendResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backend\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsCommand.html":{"url":"classes/BackendsCommand.html","title":"class - BackendsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BackendsController.html":{"url":"controllers/BackendsController.html","title":"controller - BackendsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BackendsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                backends\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                deleteIdentities\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                executeJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                sse\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                syncAllIdentities\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                syncIdentities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        deleteIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteIdentities(res: Response, body: DeleteIdentitiesDto, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete')@ApiOperation({summary: 'Supprime une liste d'identitées'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            DeleteIdentitiesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        executeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeJob(res: Response, body: ExecuteJobDto, asyncQuery: string, timeoutDiscardQuery: string, disableLogsQuery: string, updateStatusQuery: string, syncTimeout?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('execute')@ApiOperation({summary: 'Execute un backend manuellement'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ExecuteJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                timeoutDiscardQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                disableLogsQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStatusQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                syncTimeout\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        sse\n                        \n                    \n                \n            \n            \n                \n                        \n                    sse(res: Response, id: string, key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Sse('sse')@ApiOperation({summary: 'Server Sent Event - Récupère en temps réel les Jobs et affiche leurs état'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        syncAllIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAllIdentities(res: Response, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('syncall')@ApiOperation({summary: 'Synchronise toutes les identitées à synchroniser'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        syncIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncIdentities(res: Response, body: SyncIdentitiesDto, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sync')@ApiOperation({summary: 'Synchronise une liste d'identitées'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            SyncIdentitiesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport {\n  Body,\n  Controller,\n  HttpStatus,\n  Logger,\n  ParseIntPipe,\n  Post,\n  Query,\n  Req,\n  Res,\n  Sse,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Response, Request } from 'express';\nimport Redis from 'ioredis';\nimport { Observable, Subscriber } from 'rxjs';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ExecuteJobDto } from './_dto/execute-job.dto';\nimport { BackendsService } from './backends.service';\nimport { SyncIdentitiesDto } from './_dto/sync-identities.dto';\nimport { Types } from 'mongoose';\nimport { ActionType } from './_enum/action-type.enum';\nimport { DeleteIdentitiesDto } from './_dto/delete-identities.dto';\nimport { hash } from 'crypto';\nimport { AgentsService } from '../agents/agents.service';\nimport { Agents } from '../agents/_schemas/agents.schema';\n\nfunction fireMessage(observer: Subscriber, channel: string, message: any, loggername: string) {\n  try {\n    observer.next({\n      data: { channel, payload: message },\n    } as MessageEvent);\n    Logger.debug(`Observer send to  with data `, loggername);\n  } catch (err) {\n    Logger.error(`Observer error from  with data . Error: ${err}`, loggername);\n  }\n}\n\n@ApiTags('core/backends')\n@Controller('backends')\nexport class BackendsController {\n  private readonly logger = new Logger(BackendsController.name);\n\n  constructor(\n    private agentsService: AgentsService,\n    private backendsService: BackendsService,\n    @InjectRedis() protected readonly redis: Redis,\n  ) { }\n\n  @Post('delete')\n  @ApiOperation({ summary: \"Supprime une liste d'identitées\" })\n  public async deleteIdentities(\n    @Res() res: Response,\n    @Body() body: DeleteIdentitiesDto,\n    @Query('async') asyncQuery: string,\n  ) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.deleteIdentities(body.payload, {\n      async,\n    });\n\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('sync')\n  @ApiOperation({ summary: \"Synchronise une liste d'identitées\" })\n  public async syncIdentities(\n    @Res() res: Response,\n    @Body() body: SyncIdentitiesDto,\n    @Query('async') asyncQuery: string,\n  ) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncIdentities(body.payload, {\n      async,\n    });\n\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('syncall')\n  @ApiOperation({ summary: 'Synchronise toutes les identitées à synchroniser' })\n  public async syncAllIdentities(@Res() res: Response, @Query('async') asyncQuery: string) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncAllIdentities({\n      async: false,\n    });\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('execute')\n  @ApiOperation({ summary: 'Execute un backend manuellement' })\n  public async executeJob(\n    @Res() res: Response,\n    @Body() body: ExecuteJobDto,\n    @Query('async') asyncQuery: string,\n    @Query('timeoutDiscard') timeoutDiscardQuery: string,\n    @Query('disableLogs') disableLogsQuery: string,\n    @Query('updateStatus') updateStatusQuery: string,\n    @Query(\n      'syncTimeout',\n      new ParseIntPipe({\n        optional: true,\n        errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE,\n      }),\n    )\n    syncTimeout?: number,\n  ): Promise {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const timeoutDiscard = /true|on|yes|1/i.test(timeoutDiscardQuery);\n    const disableLogs = /true|on|yes|1/i.test(disableLogsQuery);\n    const updateStatus = /true|on|yes|1/i.test(updateStatusQuery);\n    const [job, response] = await this.backendsService.executeJob(\n      body.action,\n      body.id ? new Types.ObjectId(body.id) : null,\n      body.payload,\n      {\n        async,\n        syncTimeout,\n        timeoutDiscard,\n        disableLogs,\n        updateStatus,\n      },\n    );\n    return res.status(HttpStatus.ACCEPTED).json({ async, job, response });\n  }\n\n  @Public()\n  @Sse('sse')\n  @ApiOperation({ summary: 'Server Sent Event - Récupère en temps réel les Jobs et affiche leurs état' })\n  public async sse(@Res() res: Response, @Query('id') id: string, @Query('key') key: string): Promise> {\n    if (!id || !key) throw new UnauthorizedException();\n    const user = await this.agentsService.findById(id);\n    if (!user) throw new UnauthorizedException();\n    if (key !== hash('sha256', user.security.secretKey)) throw new UnauthorizedException();\n\n    res.socket.on('close', () => {\n      Logger.debug(`Observer close connection`, this.constructor.name);\n    });\n\n    return new Observable((observer) => {\n      this.backendsService.queueEvents.on('added', (added) => {\n        if (\n          ![ActionType.IDENTITY_UPDATE, ActionType.IDENTITY_CREATE, ActionType.IDENTITY_DELETE].includes(\n            added.name,\n          )\n        )\n          return;\n        return fireMessage(observer, 'job:added', added, this.constructor.name);\n      });\n\n      this.backendsService.queueEvents.on('completed', (completed) => {\n        return fireMessage(observer, 'job:completed', completed, this.constructor.name);\n      });\n\n      this.backendsService.queueEvents.on('failed', (failed) => {\n        return fireMessage(observer, 'job:failed', failed, this.constructor.name);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BackendsModule.html":{"url":"modules/BackendsModule.html","title":"module - BackendsModule","body":"\n                   \n\n\n\n\n    Modules\n    BackendsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_BackendsModule_imports\n\n\n\ncluster_BackendsModule_exports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nAgentsModule->BackendsModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/backends/backends.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BackendsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            IdentitiesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BackendsService } from './backends.service';\nimport { BackendsController } from './backends.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { IdentitiesModule } from '~/management/identities/identities.module';\nimport { JobsModule } from '../jobs/jobs.module';\nimport { TasksModule } from '../tasks/tasks.module';\nimport { AgentsModule } from '../agents/agents.module';\n@Module({\n  imports: [ConfigModule, IdentitiesModule, JobsModule, TasksModule, AgentsModule],\n  controllers: [BackendsController],\n  providers: [BackendsService],\n  exports: [BackendsService],\n})\nexport class BackendsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsSyncallCommand.html":{"url":"classes/BackendsSyncallCommand.html","title":"class - BackendsSyncallCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsSyncallCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, backendsService: BackendsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendsService\n                                                  \n                                                        \n                                                                        BackendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                oldPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyNewPassword', description: 'New password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyOldPassword', description: 'Old password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ChangePasswordDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public uid: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyOldPassword', description: 'Old password', type: String })\n  public oldPassword: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyNewPassword', description: 'New password', type: String })\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CipherData.html":{"url":"interfaces/CipherData.html","title":"interface - CipherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CipherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {InjectRedis} from '@nestjs-modules/ioredis';\nimport {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport {randomInt} from 'crypto';\nimport Redis from 'ioredis';\nimport {AbstractService} from '~/_common/abstracts/abstract.service';\nimport {ActionType} from '~/core/backends/_enum/action-type.enum';\nimport {BackendsService} from '~/core/backends/backends.service';\nimport {Jobs} from '~/core/jobs/_schemas/jobs.schema';\nimport {AskTokenDto} from './_dto/ask-token.dto';\nimport {ChangePasswordDto} from './_dto/change-password.dto';\nimport {ResetPasswordDto} from './_dto/reset-password.dto';\nimport {IdentitiesCrudService} from '../identities/identities-crud.service';\nimport {get} from 'radash';\nimport {Identities} from '../identities/_schemas/identities.schema';\nimport {MailerService} from '@nestjs-modules/mailer';\nimport {InitAccountDto} from '~/management/passwd/_dto/init-account.dto';\nimport {ConfigService} from '@nestjs/config';\nimport {ResetByCodeDto} from '~/management/passwd/_dto/reset-by-code.dto';\nimport {PasswdadmService} from '~/settings/passwdadm.service';\nimport {IdentityState} from '~/management/identities/_enums/states.enum';\nimport {InitResetDto} from '~/management/passwd/_dto/init-reset.dto';\nimport {SmsadmService} from '~/settings/smsadm.service';\nimport {InitManyDto} from '~/management/passwd/_dto/init-many.dto';\nimport {InitStatesEnum} from '~/management/identities/_enums/init-state.enum';\nimport {MailadmService} from '~/settings/mailadm.service';\nimport {DataStatusEnum} from \"~/management/identities/_enums/data-status\";\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesCrudService,\n    protected mailer: MailerService,\n    protected config: ConfigService,\n    private passwdadmService: PasswdadmService,\n    private smsadmService: SmsadmService,\n    private mailadmService: MailadmService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n  //Initialisation du reset de mot de passe envoie un email ou par sms  un code et fourni un token au front.\n  // Le code est la clé du token\n  public async initReset(initDto: InitResetDto): Promise {\n    //envoi du mail\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //test si on peu reninitialiser le compte\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE ||  identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //prise des parametres\n      const params = await this.passwdadmService.getPolicies();\n      const k = randomInt(100000, 999999);\n      //asking for padding\n      const padd = await this.getPaddingForCode();\n      const mailAttribute = params.emailAttribute;\n      const mail = get(identity.toObject(), mailAttribute);\n      if (mail) {\n        const token = await this.askToken({ mail: mail, uid: initDto.uid }, padd + k.toString(16), params.resetCodeTTL);\n        this.logger.log('Token :' + token + '  int : ' + k.toString(10));\n        if (initDto.type === 0) {\n          this.logger.log('Reset password asked by mail for  : ' + initDto.uid);\n          const smtpParams = await this.mailadmService.getParams();\n          if (mailAttribute !== '') {\n            // this.mailer.addTransporter('lastStmp', smtpParams.host)\n            this.mailer\n              .sendMail({\n                // transporterName: 'lastStmp',\n                from: smtpParams.sender,\n                to: mail,\n                subject: 'Reinitialisation de votre mot de passe',\n                template: 'resetaccount',\n                context: {\n                  uid: identity.inetOrgPerson.uid,\n                  displayName: identity.inetOrgPerson.displayName,\n                  code: k,\n                },\n              })\n              .then(() => {\n                this.logger.log('reset compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              })\n              .catch(() => {\n                throw new BadRequestException({\n                  message: 'Erreur serveur lors de l envoi du mail',\n                  error: 'Bad Request',\n                  statusCode: 400,\n                });\n              });\n            return token;\n          } else {\n            return false;\n          }\n        } else {\n          //envoi par SMS si c est possible\n          const policies = await this.passwdadmService.getPolicies();\n          if (policies.resetBySms === true) {\n            this.logger.log('Reset password asked by SMS for  : ' + initDto.uid);\n            const smsAttribute = params.mobileAttribute;\n            if (smsAttribute !== '') {\n              const numTel = get(identity.toObject(), smsAttribute);\n              await this.smsadmService.send(numTel, 'Votre code de reinitialisation : ' + k.toString(10));\n            }\n            return token;\n          } else {\n            return false;\n          }\n        }\n      } else {\n        this.logger.error('Error while reset identityMailAttribute Empty');\n      }\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (uid=${initDto?.uid})`);\n      //on retoune un token qui ne sert à rien pour ne pas divulguer que l uid n existe pas\n      const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n      const falseToken = await this.askToken({ mail: 'xxxxxx@xxxxxxxxxxx', uid: 'xxxxxxxx@xxxxxxx' }, k, 0);\n      return falseToken;\n    }\n  }\n  //Initialisation du compte. Envoi d' un mail avec un token pour l'init du compte\n  public async initAccount(initDto: InitAccountDto): Promise {\n    //recherche de l'identity\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //test si on peu reninitialiser le compte\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE || identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //envoi du mail\n      const params = await this.passwdadmService.getPolicies();\n      const mailAttribute = params.emailAttribute;\n      this.logger.log('mailer.identityMailAttribute : ' + mailAttribute);\n      if (mailAttribute !== '') {\n        const mail = get(identity.toObject(), mailAttribute);\n        if (mail) {\n          const smtpParams = await this.mailadmService.getParams();\n          //demande du token\n          const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n          const token = await this.askToken({ mail: mail, uid: initDto.uid }, k, params.initTokenTTL);\n          //envoi du token\n          this.mailer\n            .sendMail({\n              from: smtpParams.sender,\n              to: mail,\n              subject: 'Activation de votre compte',\n              template: 'initaccount',\n              context: {\n                displayName: identity.inetOrgPerson.displayName,\n                uid: initDto.uid,\n                url: this.config.get('frontPwd.url') + '/initaccount/' + token,\n                mail: identity.inetOrgPerson.mail\n              },\n            })\n            .then(() => {\n              this.logger.log('Init compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              this.setInitState(identity, InitStatesEnum.SENT);\n            })\n            .catch((e) => {\n              this.logger.error('Erreur serveur lors de l envoi du mail' + e);\n              throw new BadRequestException({\n                message: 'Erreur serveur lors de l envoi du mail' + e,\n                error: 'Bad Request',\n                statusCode: 400,\n              });\n            });\n\n          return true;\n        } else {\n          this.logger.error('Error while initAccount identityMailAttribute Empty');\n          return false;\n        }\n      } else {\n        this.logger.error('Error while initAccount identityMailAttribute not defined');\n        return false;\n      }\n    } catch (e) {\n      this.logger.error('Error while initialize password. ' + e + ` (uid=${initDto?.uid})`);\n      return false;\n    }\n  }\n\n  //Changement du password\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': passwdDto.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE ||  identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //verification de la police de mdp\n      if ((await this.passwdadmService.checkPolicies(passwdDto.newPassword)) === false) {\n        throw new BadRequestException({\n          message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique des mots de passe',\n          error: 'Bad Request',\n          statusCode: 400,\n        });\n      }\n      //tout est ok en envoie au backend\n      const result = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_CHANGE,\n        identity._id,\n        {\n          uid: passwdDto.uid,\n          oldPassword: passwdDto.oldPassword,\n          newPassword: passwdDto.newPassword,\n          ...identity.toJSON(),\n        },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n      // on met actif l'identité\n      await this.identities.model.updateOne({ _id:identity._id},{dataStatus: DataStatusEnum.ACTIVE})\n      return result;\n    } catch (e) {\n      let job = undefined;\n      let _debug = undefined;\n      this.logger.error('Error while changing password. ' + e + ` (uid=${passwdDto?.uid})`);\n\n      if (e?.response?.status === HttpStatus.BAD_REQUEST) {\n        job = {};\n        job['status'] = e?.response?.job?.status;\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        _debug = e?.response?.error?.response;\n      }\n\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Mot de passe incorrect ou utilisateur inconnu',\n        error: 'Bad Request',\n        statusCode: 400,\n        job,\n        _debug,\n      });\n    }\n  }\n\n  // Genere un token pour les autres methodes\n  public async askToken(askToken: AskTokenDto, k, ttl: number): Promise {\n    try {\n      /*\n      if (ttl >0){\n\n        await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n      }\n      */\n\n      const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n      const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n      let ciphertext = cipher.update(\n        JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n        'utf8',\n        'base64',\n      );\n      ciphertext += cipher.final('base64');\n      //on enregistre pas dans redis si le ttl =0\n      if (ttl > 0) {\n        await this.redis.set(\n          ciphertext,\n          JSON.stringify({\n            k,\n            iv,\n            tag: cipher.getAuthTag().toString('base64'),\n          }),\n        );\n        await this.redis.expire(ciphertext, ttl);\n      }\n      return encodeURIComponent(ciphertext);\n    } catch (e) {\n      this.logger.error('Error while ask token. ' + e + ` (uid=${askToken?.uid})`);\n      throw new BadRequestException('Impossible de générer un token, une erreur est survenue');\n    }\n  }\n\n  // decrypte le token à l aide du code\n  public async decryptTokenWithCode(token: string, code: number): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n      this.logger.log('decrypt ' + cypherData);\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n      const padd = await this.getPaddingForCode();\n      const k = padd + code.toString(16);\n      this.logger.log('k=' + k);\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.error('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token xx');\n    }\n  }\n\n  // decrypte le token d'initialisation du compte\n  public async decryptToken(token: string): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.verbose('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token');\n    }\n  }\n\n  // reset du password\n  public async resetByCode(data: ResetByCodeDto): Promise {\n    this.logger.log('resetByCode : ' + data.token + ' ' + data.code);\n    //verification du passwordPolicies\n    if ((await this.passwdadmService.checkPolicies(data.newpassword)) === false) {\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique de securité',\n        error: 'Bad Request',\n        statusCode: 400,\n      });\n    }\n    const tokenData = await this.decryptTokenWithCode(data.token, data.code);\n    this.logger.log('dataToken :' + tokenData);\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid })) as Identities;\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: identity.inetOrgPerson.uid, newPassword: data.newpassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        this.logger.log('delete key');\n        await this.redis.del(data.token);\n        // mise de l indentité active\n        // on met actif l'identité\n        identity.dataStatus = DataStatusEnum.ACTIVE;\n        await identity.save()\n        return [_, response];\n      }\n      this.logger.error('Error from backend while reseting password by code');\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password by code. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  // methode pour le reset par token (pour l initialisation du compte)\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': tokenData.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newPassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        await this.redis.del(data.token);\n        await this.setInitState(identity, InitStatesEnum.INITIALIZED);\n        return [_, response];\n      }\n\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  //Envoi le message d init à plusieurs identités\n  public async initMany(ids: InitManyDto): Promise {\n    const identities = await this.identities.find({ _id: { $in: ids.ids } });\n    if (identities.length === 0) {\n      throw new HttpException('Aucune identité trouvée.', 404);\n    }\n    const updated = await Promise.all(\n      identities.map((identity) => {\n        this.logger.verbose('send To :' + identity.get('inetOrgPerson.uid'));\n        return this.initAccount({ uid: identity.get('inetOrgPerson.uid') });\n      }),\n    );\n    return updated as any;\n  }\n\n  // genere des octect pour completer le code qui est de 4 octets et demi\n  private async getPaddingForCode(): Promise {\n    let code = '';\n    if (await this.redis.exists('CODEPADDING')) {\n      code = await this.redis.get('CODEPADDING');\n    } else {\n      code = crypto.randomBytes(13).toString('hex') + '0';\n      await this.redis.set('CODEPADDING', code);\n    }\n    return code;\n  }\n\n  private async setInitState(identity: Identities, state: InitStatesEnum): Promise {\n    identity.initState = state;\n    // on met actif l'identité\n    identity.dataStatus = DataStatusEnum.ACTIVE;\n    if (state === InitStatesEnum.SENT) {\n      identity.initInfo.initDate = new Date();\n      identity.initInfo.sentDate = null;\n    } else if (state === InitStatesEnum.INITIALIZED) {\n      identity.initInfo.sentDate = new Date();\n    }\n    const ok = await identity.save();\n    return ok;\n  }\n\n  // sort les identites qui n ont pas repondu dans le delai à l init de leurs comptes\n  public async checkInitOutDated(): Promise {\n    const date = new Date();\n    const params = await this.passwdadmService.getPolicies();\n    date.setTime(date.getTime() - params.initTokenTTL * 1000);\n    console.log('modifié:' + date);\n    const identities = await this.identities.find({\n      initState: InitStatesEnum.SENT,\n      'initInfo.initDate': { $lt: date },\n    });\n    return identities;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CliModule.html":{"url":"modules/CliModule.html","title":"module - CliModule","body":"\n                   \n\n\n\n\n    Modules\n    CliModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CliModule\n\n\n\ncluster_CliModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nCliModule -->\n\nIdentitiesModule->CliModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cli/cli.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            IdentitiesModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AgentCreateQuestions, AgentsCommand } from './agents.command';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { BullModule } from '@nestjs/bullmq';\nimport { RedisOptions } from 'ioredis';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport config, { MongoosePlugin } from '~/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { KeyringsCommand, KeyringsCreateQuestions } from './keyrings.command';\nimport { KeyringsModule } from '~/core/keyrings/keyrings.module';\nimport { BackendsCommand } from './backends.command';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { AuthModule } from '~/core/auth/auth.module';\nimport { FactorydriveModule } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { IdentitiesCommand } from './identities.command';\nimport { IdentitiesModule } from '~/management/identities/identities.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        type: 'single',\n        url: config.get('ioredis.uri'),\n        options: config.get('ioredis.options'),\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    FactorydriveModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        ...config.get('factorydrive.options'),\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n    BackendsModule,\n    IdentitiesModule,\n    AuthModule,\n  ],\n  providers: [\n    ...AgentsCommand.registerWithSubCommands(),\n    ...KeyringsCommand.registerWithSubCommands(),\n    ...BackendsCommand.registerWithSubCommands(),\n    ...IdentitiesCommand.registerWithSubCommands(),\n    AgentCreateQuestions,\n    KeyringsCreateQuestions,\n  ],\n})\nexport class CliModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcernedToPart.html":{"url":"classes/ConcernedToPart.html","title":"class - ConcernedToPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcernedToPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                $ref\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        $ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\n\n@Schema({ _id: false })\nexport class ConcernedToPart extends Document {\n  @Prop({ type: String, required: true })\n  public $ref: string;\n\n  @Prop({ type: Types.ObjectId, required: true })\n  public id: Types.ObjectId;\n\n  @Prop({ type: String })\n  public name?: string;\n}\n\nexport const ConcernedToPartSchema = SchemaFactory.createForClass(ConcernedToPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcernedToPartDTO.html":{"url":"classes/ConcernedToPartDTO.html","title":"class - ConcernedToPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcernedToPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/_parts/concerned-to.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                $ref\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        $ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { Types } from 'mongoose';\n\nexport class ConcernedToPartDTO {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public $ref: string;\n\n  @IsMongoId()\n  @ApiProperty()\n  public id: Types.ObjectId;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInstance.html":{"url":"interfaces/ConfigInstance.html","title":"interface - ConfigInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            application\n                                        \n                                \n                                \n                                        \n                                            axios\n                                        \n                                \n                                \n                                        \n                                            factorydrive\n                                        \n                                \n                                \n                                        \n                                            frontPwd\n                                        \n                                \n                                \n                                        \n                                            helmet\n                                        \n                                \n                                \n                                        \n                                            ioredis\n                                        \n                                \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            mailer\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                                \n                                        \n                                            passport\n                                        \n                                \n                                \n                                        \n                                            sms\n                                        \n                                \n                                \n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        application\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        application:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        axios\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        axios:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        factorydrive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        factorydrive:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frontPwd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frontPwd:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helmet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helmet:     HelmetOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HelmetOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ioredis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ioredis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mailer:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passport:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sms:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\nimport { StorageManagerConfig } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { AmazonWebServicesS3StorageConfig } from '@the-software-compagny/nestjs_module_factorydrive-s3';\nimport { parse } from 'path';\nimport { HttpModuleOptions } from '@nestjs/axios';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    lang: string\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n    https: {\n      enabled: boolean;\n      key: string;\n      cert: string;\n    }\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  axios: {\n    options: HttpModuleOptions;\n  };\n  factorydrive: {\n    options:\n    | StorageManagerConfig\n    | {\n      disks: {\n        [key: string]: {\n          driver: 's3';\n          config: AmazonWebServicesS3StorageConfig;\n        };\n      };\n    };\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  mailer: {\n    host: string;\n    port: number;\n    sender: string;\n  };\n  sms: {\n    host: string;\n    systemId: string;\n    password: string;\n    sourceAddr: string;\n    regionCode: string;\n  };\n  frontPwd: {\n    url: string;\n    identityMailAttribute: string;\n    identityMobileAttribute: string;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    lang: process.env['LANG'] || 'en',\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n    https: {\n      enabled: /yes|1|on|true/i.test(process.env['SESAME_HTTPS_ENABLED']),\n      key: process.env['SESAME_HTTPS_PATH_KEY'] || '',\n      cert: process.env['SESAME_HTTPS_PATH_CERT'] || '',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [\n    ],\n  },\n  axios: {\n    options: {\n      timeout: parseInt(process.env['SESAME_AXIOS_TIMEOUT'], 10) || 5_000,\n      maxRedirects: parseInt(process.env['SESAME_AXIOS_MAX_REDIRECTS'], 10) || 5,\n    },\n  },\n  factorydrive: {\n    options: {\n      default: 'local',\n      disks: {\n        local: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage',\n          },\n        },\n        identities: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage/identities',\n          },\n        },\n      },\n    },\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n  mailer: {\n    host: process.env['SESAME_SMTP_SERVER'],\n    port: parseInt(process.env['SESAME_SMTP_PORT']) || 25,\n    sender: process.env['SESAME_MDP_SENDER'] || 'noreply@mydomain.com',\n  },\n  frontPwd: {\n    url: process.env['SESAME_FRONT_MDP'],\n    identityMailAttribute: process.env['SESAME_RESET_PWD_MAIL'] || '',\n    identityMobileAttribute: process.env['SESAME_RESET_PWD_MOBILE'] || '',\n  },\n  sms: {\n    host: process.env['SESAME_SMPP_SERVER'] || '',\n    systemId: process.env['SESAME_SMPP_SYSTEMID'] || '',\n    password: process.env['SESAME_SMPP_PASSWORD'] || '',\n    sourceAddr: process.env['SESAME_SMPP_SOURCEADDR'] || '',\n    regionCode: process.env['SESAME_SMPP_REGIONCODE'] || 'FR',\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectAttributeDTO.html":{"url":"classes/ConfigObjectAttributeDTO.html","title":"class - ConfigObjectAttributeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectAttributeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                desc\n                            \n                            \n                                    \n                                    \n                                    Public\n                                format\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                required\n                            \n                            \n                                    \n                                    \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(ConfigObjectType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean, IsOptional} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  public type: ConfigObjectType;\n\n  @IsBoolean()\n  public required: boolean;\n\n  @IsString()\n  @IsOptional()\n  public format: string;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @ArrayNotEmpty()\n  public attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  public objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  public attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectIdentitiesDTO.html":{"url":"classes/ConfigObjectIdentitiesDTO.html","title":"class - ConfigObjectIdentitiesDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectIdentitiesDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/lifecycle/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                rules\n                            \n                            \n                                    \n                                    \n                                    Public\n                                sources\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                target\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_dto/config.dto.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(IdentityLifecycle, {each: true})@ApiProperty({type: String, enum: IdentityLifecycle, description: 'Lifecycle state of the identity', example: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_dto/config.dto.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(IdentityLifecycle)@ApiProperty({type: String, enum: IdentityLifecycle, description: 'Target lifecycle state for the identity', example: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_dto/config.dto.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        trigger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Transform( => )@IsNumber()@ApiProperty({oneOf: undefined, required: false, description: 'Trigger time as negative number (days) or negative time string with units (converted to negative seconds internally)', examples: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_dto/config.dto.ts:152\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type, Transform } from 'class-transformer';\nimport { IsArray, IsEnum, IsNegative, IsNotEmpty, IsNumber, IsObject, IsOptional, ValidateNested, registerDecorator, ValidationOptions, ValidationArguments, isString, isNumber } from 'class-validator';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\n\n/**\n * Transform trigger values to seconds.\n * - Numbers are interpreted as days and converted to seconds\n * - Strings with 'd' suffix are interpreted as days and converted to seconds\n * - Strings with 'm' suffix are interpreted as minutes and converted to seconds\n * - Strings with 's' suffix are already in seconds\n *\n * @param value The trigger value to transform\n * @returns The value converted to seconds\n */\nfunction transformTriggerToSeconds(value: number | string): number | undefined {\n  let isValid = false;\n\n  if (value === undefined || value === null) {\n    return undefined;\n  }\n\n  /**\n   * Check if the value is a negative number.\n   * If it's a number, we check if it's less than 0.\n   * If it's a string, we check if it matches the regex for negative time strings.\n   */\n  if (isNumber(value)) {\n    isValid = value  0);\n          const hasTrigger = obj.trigger !== undefined && obj.trigger !== null;\n          return hasRules || hasTrigger;\n        },\n        defaultMessage(_: ValidationArguments) {\n          return 'Either rules or trigger must be provided';\n        }\n      }\n    });\n  };\n}\n\n@ValidateRulesOrTrigger({ message: 'Either rules or trigger must be provided' })\nexport class ConfigObjectIdentitiesDTO {\n  @IsEnum(IdentityLifecycle, { each: true })\n  @ApiProperty({\n    type: String,\n    enum: IdentityLifecycle,\n    description: 'Lifecycle state of the identity',\n    example: IdentityLifecycle.ACTIVE,\n    required: true,\n  })\n  public sources: IdentityLifecycle[];\n\n  @IsOptional()\n  @IsObject()\n  public rules: object;\n\n  @IsOptional()\n  @Transform(({ value }) => transformTriggerToSeconds(value))\n  @IsNumber()\n  @ApiProperty({\n    oneOf: [\n      { type: 'number', description: 'Negative number representing days' },\n      { type: 'string', description: 'Negative time string with units (d=days, m=minutes, s=seconds)' }\n    ],\n    required: false,\n    description: 'Trigger time as negative number (days) or negative time string with units (converted to negative seconds internally)',\n    examples: [-90, '-90d', '-10m', '-45s']\n  })\n  public trigger: number;\n\n  @IsNotEmpty()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({\n    type: String,\n    enum: IdentityLifecycle,\n    description: 'Target lifecycle state for the identity',\n    example: IdentityLifecycle.DELETED,\n    required: true,\n  })\n  public target: IdentityLifecycle;\n}\n\nexport class ConfigObjectSchemaDTO {\n  @IsOptional()\n  @IsArray()\n  @ApiProperty({\n    type: ConfigObjectIdentitiesDTO,\n    required: false,\n  })\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectIdentitiesDTO)\n  public identities: ConfigObjectIdentitiesDTO[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectObjectClassDTO.html":{"url":"classes/ConfigObjectObjectClassDTO.html","title":"class - ConfigObjectObjectClassDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectObjectClassDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    Public\n                                desc\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean, IsOptional} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  public type: ConfigObjectType;\n\n  @IsBoolean()\n  public required: boolean;\n\n  @IsString()\n  @IsOptional()\n  public format: string;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @ArrayNotEmpty()\n  public attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  public objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  public attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectSchemaDTO.html":{"url":"classes/ConfigObjectSchemaDTO.html","title":"class - ConfigObjectSchemaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectSchemaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/lifecycle/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                identities\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        identities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigObjectIdentitiesDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ApiProperty({type: ConfigObjectIdentitiesDTO, required: false})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_dto/config.dto.ts:175\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type, Transform } from 'class-transformer';\nimport { IsArray, IsEnum, IsNegative, IsNotEmpty, IsNumber, IsObject, IsOptional, ValidateNested, registerDecorator, ValidationOptions, ValidationArguments, isString, isNumber } from 'class-validator';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\n\n/**\n * Transform trigger values to seconds.\n * - Numbers are interpreted as days and converted to seconds\n * - Strings with 'd' suffix are interpreted as days and converted to seconds\n * - Strings with 'm' suffix are interpreted as minutes and converted to seconds\n * - Strings with 's' suffix are already in seconds\n *\n * @param value The trigger value to transform\n * @returns The value converted to seconds\n */\nfunction transformTriggerToSeconds(value: number | string): number | undefined {\n  let isValid = false;\n\n  if (value === undefined || value === null) {\n    return undefined;\n  }\n\n  /**\n   * Check if the value is a negative number.\n   * If it's a number, we check if it's less than 0.\n   * If it's a string, we check if it matches the regex for negative time strings.\n   */\n  if (isNumber(value)) {\n    isValid = value  0);\n          const hasTrigger = obj.trigger !== undefined && obj.trigger !== null;\n          return hasRules || hasTrigger;\n        },\n        defaultMessage(_: ValidationArguments) {\n          return 'Either rules or trigger must be provided';\n        }\n      }\n    });\n  };\n}\n\n@ValidateRulesOrTrigger({ message: 'Either rules or trigger must be provided' })\nexport class ConfigObjectIdentitiesDTO {\n  @IsEnum(IdentityLifecycle, { each: true })\n  @ApiProperty({\n    type: String,\n    enum: IdentityLifecycle,\n    description: 'Lifecycle state of the identity',\n    example: IdentityLifecycle.ACTIVE,\n    required: true,\n  })\n  public sources: IdentityLifecycle[];\n\n  @IsOptional()\n  @IsObject()\n  public rules: object;\n\n  @IsOptional()\n  @Transform(({ value }) => transformTriggerToSeconds(value))\n  @IsNumber()\n  @ApiProperty({\n    oneOf: [\n      { type: 'number', description: 'Negative number representing days' },\n      { type: 'string', description: 'Negative time string with units (d=days, m=minutes, s=seconds)' }\n    ],\n    required: false,\n    description: 'Trigger time as negative number (days) or negative time string with units (converted to negative seconds internally)',\n    examples: [-90, '-90d', '-10m', '-45s']\n  })\n  public trigger: number;\n\n  @IsNotEmpty()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({\n    type: String,\n    enum: IdentityLifecycle,\n    description: 'Target lifecycle state for the identity',\n    example: IdentityLifecycle.DELETED,\n    required: true,\n  })\n  public target: IdentityLifecycle;\n}\n\nexport class ConfigObjectSchemaDTO {\n  @IsOptional()\n  @IsArray()\n  @ApiProperty({\n    type: ConfigObjectIdentitiesDTO,\n    required: false,\n  })\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectIdentitiesDTO)\n  public identities: ConfigObjectIdentitiesDTO[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectSchemaDTO-1.html":{"url":"classes/ConfigObjectSchemaDTO-1.html","title":"class - ConfigObjectSchemaDTO-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectSchemaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    \n                                    Public\n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectAttributeDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectObjectClassDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean, IsOptional} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  public type: ConfigObjectType;\n\n  @IsBoolean()\n  public required: boolean;\n\n  @IsString()\n  @IsOptional()\n  public format: string;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @ArrayNotEmpty()\n  public attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  public objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  public attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleSession.html":{"url":"classes/ConsoleSession.html","title":"class - ConsoleSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/console-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/console-session.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '000000000000000000000000'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ConsoleSession {\n  public readonly _id: string = '000000000000000000000000';\n  public readonly username: string = 'console';\n  public readonly displayName: string = 'Console';\n\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                core\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { CoreService } from './core.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('core')\n@Controller('core')\nexport class CoreController {\n  public constructor(private readonly _service: CoreService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\nCoreModule -->\n\nFilestorageModule->CoreModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            FilestorageModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            KeyringsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/core.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { AgentsModule } from './agents/agents.module';\nimport { AuthModule } from './auth/auth.module';\nimport { BackendsModule } from './backends/backends.module';\nimport { CoreController } from './core.controller';\nimport { CoreService } from './core.service';\nimport { JobsModule } from './jobs/jobs.module';\nimport { KeyringsModule } from './keyrings/keyrings.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { TasksModule } from './tasks/tasks.module';\nimport { FilestorageModule } from './filestorage/filestorage.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    BackendsModule,\n    LoggerModule,\n    KeyringsModule,\n    AgentsModule,\n    JobsModule,\n    TasksModule,\n    FilestorageModule,\n  ],\n  providers: [CoreService],\n  controllers: [CoreController],\n})\nexport class CoreModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'core',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreService.html":{"url":"injectables/CoreService.html","title":"injectable - CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/core.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CoreService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomFieldsDto.html":{"url":"classes/CustomFieldsDto.html","title":"class - CustomFieldsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomFieldsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/custom-fields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/custom-fields.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class CustomFieldsDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  public customFields?: { [key: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataPart.html":{"url":"classes/DataPart.html","title":"class - DataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/_parts/data.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_DATA_TYPE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport const DEFAULT_DATA_TYPE = 'default';\n\n@Schema({ _id: false })\nexport class DataPart extends Document {\n  @Prop({\n    type: String,\n    default: DEFAULT_DATA_TYPE,\n  })\n  public type?: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public message: string;\n}\n\nexport const DataPartSchema = SchemaFactory.createForClass(DataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteIdentitiesDto.html":{"url":"classes/DeleteIdentitiesDto.html","title":"class - DeleteIdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteIdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/delete-identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/delete-identities.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class DeleteIdentitiesDto {\n  @IsArray()\n  @ApiProperty({ type: Array })\n  public payload: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidationPipe.html":{"url":"injectables/DtoValidationPipe.html","title":"injectable - DtoValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Public\n                                validationRecursive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validationRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    validationRecursive(error: ValidationError, prefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationRecursive\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        // console.log('validations', JSON.stringify(request.body));\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeeNumber1700395200.html":{"url":"classes/EmployeeNumber1700395200.html","title":"class - EmployeeNumber1700395200","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeeNumber1700395200\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/jobs/1700395200-employee-number.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _migrateEmployeeNumberToArray\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(mongo: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/migrations/jobs/1700395200-employee-number.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongo\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(EmployeeNumber1700395200.name)\n                    \n                \n                    \n                        \n                                Defined in src/migrations/jobs/1700395200-employee-number.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _migrateEmployeeNumberToArray\n                        \n                    \n                \n            \n            \n                \n                        \n                    _migrateEmployeeNumberToArray()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/jobs/1700395200-employee-number.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/jobs/1700395200-employee-number.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\"\nimport { InjectConnection, InjectModel } from \"@nestjs/mongoose\"\nimport { Connection, Model } from \"mongoose\"\n\nexport default class EmployeeNumber1700395200 {\n  private readonly logger = new Logger(EmployeeNumber1700395200.name)\n\n  public constructor(\n    @InjectConnection() private mongo: Connection,\n  ) {\n  }\n\n  public async up(): Promise {\n    this.logger.log('EmployeeNumber1700395200 up started')\n\n    await this._migrateEmployeeNumberToArray()\n  }\n\n  private async _migrateEmployeeNumberToArray(): Promise {\n    const identities = await this.mongo.collection('identities').find();\n\n    for await (const identity of identities) {\n      const employeeNumber = identity.inetOrgPerson.employeeNumber;\n\n      if (typeof employeeNumber === 'string') {\n        this.logger.log(`Migrating employeeNumber for identity ${identity._id}`);\n        identity.inetOrgPerson.employeeNumber = [employeeNumber];\n        this.mongo.collection('identities').updateOne({ _id: identity._id }, { $set: { 'inetOrgPerson.employeeNumber': [employeeNumber] } });\n      } else if (Array.isArray(employeeNumber)) {\n        if (typeof employeeNumber[0] === 'number') {\n          this.logger.log(`Migrating employeeNumber for identity ${identity._id}`);\n          identity.inetOrgPerson.employeeNumber = employeeNumber.map(String);\n          this.mongo.collection('identities').updateOne({ _id: identity._id }, { $set: { 'inetOrgPerson.employeeNumber': employeeNumber.map(String) } });\n        }\n      }\n    }\n\n    this.logger.log('Migration terminée avec succès');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnsureIdentitiesIndexMiddleware.html":{"url":"injectables/EnsureIdentitiesIndexMiddleware.html","title":"injectable - EnsureIdentitiesIndexMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EnsureIdentitiesIndexMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_middlewares/ensure-identities-index.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identityModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/_middlewares/ensure-identities-index.middleware.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identityModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/_middlewares/ensure-identities-index.middleware.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestMiddleware } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Request, Response } from 'express';\nimport { Model } from 'mongoose';\nimport { Identities } from '~/management/identities/_schemas/identities.schema';\n\n@Injectable()\nexport class EnsureIdentitiesIndexMiddleware implements NestMiddleware {\n  constructor(\n    @InjectModel(Identities.name) private readonly identityModel: Model,\n  ) { }\n\n  public async use(req: Request, res: Response, next: () => void) {\n    try {\n      await this.identityModel.ensureIndexes();\n      // console.log('Indexes synchronized.');\n    } catch (err) {\n      console.error('Erreur lors de la création des index :', err);\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorSchemaDto.html":{"url":"classes/ErrorSchemaDto.html","title":"class - ErrorSchemaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorSchemaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/error-schema.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                _exception\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        _exception\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class ErrorSchemaDto {\n  @ApiProperty({ enum: [HttpStatus.BAD_REQUEST] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n\n  @ApiProperty()\n  public validations?: { [key: string]: string }[];\n\n  @ApiProperty()\n  // eslint-disable-next-line\n  public _exception?: { [key: string]: any }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExecuteJobDto.html":{"url":"classes/ExecuteJobDto.html","title":"class - ExecuteJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExecuteJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/execute-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(ActionType)@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsOptional()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsNotEmpty, IsObject, IsOptional } from 'class-validator';\nimport { ActionType } from '../_enum/action-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ExecuteJobDto {\n  @IsNotEmpty()\n  @IsEnum(ActionType)\n  @ApiProperty({ type: String })\n  public action: ActionType;\n\n  @IsMongoId()\n  @IsOptional()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public id?: string;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: Object })\n  public payload: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExecuteJobOptions.html":{"url":"interfaces/ExecuteJobOptions.html","title":"interface - ExecuteJobOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExecuteJobOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/execute-job-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            async\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dataState\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLogs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            job\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            switchToProcessing\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            syncTimeout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            targetState\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeoutDiscard\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updateStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        async\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        async:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataState:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLogs:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        job\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        job:         JobsOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JobsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchToProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        switchToProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        syncTimeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        syncTimeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetState:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeoutDiscard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeoutDiscard:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateStatus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JobsOptions } from 'bullmq';\nimport { Types } from 'mongoose';\n\nexport interface ExecuteJobOptions {\n  job?: JobsOptions;\n  async?: boolean;\n  disableLogs?: boolean;\n  syncTimeout?: number;\n  timeoutDiscard?: boolean;\n  updateStatus?: boolean;\n  switchToProcessing?: boolean;\n  comment?: string;\n  targetState?: any;\n  dataState?: any;\n  task?: Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileUploadDto.html":{"url":"classes/FileUploadDto.html","title":"class - FileUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filestorage.html":{"url":"classes/Filestorage.html","title":"class - Filestorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filestorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_schemas/filestorage.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                fingerprint\n                            \n                            \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String, enum: FsTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\n\n@Schema({\n  collection: 'filestorage',\n  versionKey: false,\n})\nexport class Filestorage extends AbstractSchema {\n  @Prop({\n    required: true,\n    type: String,\n    enum: FsTypeList,\n  })\n  public type: FsType;\n\n  @Prop({\n    type: String,\n  })\n  public mime?: string;\n\n  @Prop({\n    required: true,\n    type: String,\n  })\n  public namespace: string;\n\n  @Prop({\n    required: true,\n    type: String,\n    //TODO: check file path ..?\n  })\n  public path: string;\n\n  @Prop({\n    required: true,\n    type: String,\n  })\n  public fingerprint: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  public comments?: string;\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public hidden: boolean;\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  public tags?: { [key: string]: any } // eslint-disable-line\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  public acls?: { [key: string]: any } // eslint-disable-line\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  // eslint-disable-next-line\n  public customFields?: { [key: string]: any }\n}\n\nexport const FilestorageSchema = SchemaFactory.createForClass(Filestorage).index(\n  { namespace: 1, path: 1 },\n  { unique: true },\n);\n\nFilestorageSchema.virtual('filename').get(function (this: Filestorage): string {\n  return this.path.split('/').pop();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilestorageController.html":{"url":"controllers/FilestorageController.html","title":"controller - FilestorageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilestorageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/filestorage.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                filestorage\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPath\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPathRawData\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                readRawData\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FilestorageCreateDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiFileUploadDecorator(FileUploadDto, FilestorageCreateDto, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FilestorageCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        readPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPath(namespace: string, path: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('path')@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        readPathRawData\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPathRawData(res: Response, namespace: string, path: string, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('path/raw')@ApiReadResponseDecorator(FilestorageDto)@ApiQuery({name: 'mime', required: false, type: String})\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        readRawData\n                        \n                    \n                \n            \n            \n                \n                        \n                    readRawData(res: Response, _id: Types.ObjectId, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})/raw')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FilestorageDto)@ApiQuery({name: 'mime', required: false, type: String})\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions, hiddenQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hiddenQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FilestorageUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FilestorageUpdateDto, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FilestorageUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  ParseFilePipe,\n  Patch,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiParam, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  FilterSchema,\n  ObjectIdValidationPipe,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiFileUploadDecorator } from '~/_common/decorators/api-file-upload.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { FilestorageCreateDto, FilestorageDto, FilestorageUpdateDto, FileUploadDto } from './_dto/filestorage.dto';\nimport { TransformersFilestorageService } from './_services/transformers-filestorage.service';\nimport { FilestorageService } from './filestorage.service';\n\n@ApiTags('core/filestorage')\n@Controller('filestorage')\nexport class FilestorageController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    type: 1,\n    namespace: 1,\n    path: 1,\n    hidden: 1,\n  };\n\n  public constructor(\n    private readonly _service: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n  ) {\n    super();\n  }\n\n  @Post()\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiFileUploadDecorator(FileUploadDto, FilestorageCreateDto, FilestorageDto)\n  public async create(\n    @Res() res: Response,\n    @Body() body: FilestorageCreateDto,\n    @UploadedFile(new ParseFilePipe({ fileIsRequired: false })) file?: Express.Multer.File,\n  ): Promise {\n    const data = await this._service.create({ ...body, file });\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FilestorageDto, FilestorageController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n    @Query('hidden') hiddenQuery: string,\n  ): Promise {\n    const hidden = /true|on|yes|1/i.test(hiddenQuery);\n    const extraSearch = { hidden: { $ne: true } };\n    if (hidden) delete extraSearch['hidden'];\n\n    const [data, total] = await this._service.findAndCount(\n      {\n        ...extraSearch,\n        ...searchFilterSchema,\n      },\n      FilestorageController.projection,\n      searchFilterOptions,\n    );\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Get('path')\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async readPath(\n    @Query('namespace') namespace: string,\n    @Query('path') path: string,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findOne({ namespace, path });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})/raw')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FilestorageDto)\n  @ApiQuery({\n    name: 'mime',\n    required: false,\n    type: String,\n  })\n  public async readRawData(\n    @Res() res: Response,\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Query('mime') mime: string = '',\n  ): Promise {\n    const [data, stream, parent] = await this._service.findByIdWithRawData(_id);\n    await this.transformerService.transform(mime, res, data, stream, parent);\n  }\n\n  @Get('path/raw')\n  @ApiReadResponseDecorator(FilestorageDto)\n  @ApiQuery({\n    name: 'mime',\n    required: false,\n    type: String,\n  })\n  public async readPathRawData(\n    @Res() res: Response,\n    @Query('namespace') namespace: string,\n    @Query('path') path: string,\n    @Query('mime') mime: string = '',\n  ): Promise {\n    const [data, stream, parent] = await this._service.findOneWithRawData({ namespace, path });\n    await this.transformerService.transform(mime, res, data, stream, parent);\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FilestorageUpdateDto, FilestorageDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: FilestorageUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FilestorageDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageCreateDto.html":{"url":"classes/FilestorageCreateDto.html","title":"class - FilestorageCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                fingerprint\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                linkedTo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        linkedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMimeType()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, default: '/'})@Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, {message: 'Path must be a valid path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FsTypeList)@IsNotEmpty()@ApiProperty({enum: FsTypeList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageDto.html":{"url":"classes/FilestorageDto.html","title":"class - FilestorageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FilestorageCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                fingerprint\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                linkedTo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        linkedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMimeType()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, default: '/'})@Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, {message: 'Path must be a valid path'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FsTypeList)@IsNotEmpty()@ApiProperty({enum: FsTypeList, default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilestorageModule.html":{"url":"modules/FilestorageModule.html","title":"module - FilestorageModule","body":"\n                   \n\n\n\n\n    Modules\n    FilestorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilestorageModule\n\n\n\ncluster_FilestorageModule_exports\n\n\n\ncluster_FilestorageModule_providers\n\n\n\n\nFilestorageService \n\nFilestorageService \n\n\n\nTransformersFilestorageService \n\nTransformersFilestorageService \n\n\n\nFilestorageModule\n\nFilestorageModule\n\nFilestorageService  -->\n\nFilestorageModule->FilestorageService \n\n\n\nTransformersFilestorageService  -->\n\nFilestorageModule->TransformersFilestorageService \n\n\n\n\n\nFilestorageService\n\nFilestorageService\n\nFilestorageModule -->\n\nFilestorageService->FilestorageModule\n\n\n\n\n\nTransformersFilestorageService\n\nTransformersFilestorageService\n\nFilestorageModule -->\n\nTransformersFilestorageService->FilestorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/filestorage/filestorage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilestorageService\n                        \n                        \n                            TransformersFilestorageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilestorageController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilestorageService\n                        \n                        \n                            TransformersFilestorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Filestorage, FilestorageSchema } from './_schemas/filestorage.schema';\nimport { FilestorageService } from './filestorage.service';\nimport { FilestorageController } from './filestorage.controller';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Filestorage.name,\n        useFactory: () => FilestorageSchema,\n      },\n    ]),\n  ],\n  controllers: [FilestorageController],\n  providers: [FilestorageService, TransformersFilestorageService],\n  exports: [FilestorageService, TransformersFilestorageService],\n})\nexport class FilestorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageUpdateDto.html":{"url":"classes/FilestorageUpdateDto.html","title":"class - FilestorageUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(FilestorageCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForcePasswordDto.html":{"url":"classes/ForcePasswordDto.html","title":"class - ForcePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForcePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/force-password-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/force-password-dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyNewPassword', description: 'New password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/force-password-dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ForcePasswordDto {\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'User object id', type: String })\n  public id: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyNewPassword', description: 'New password', type: String })\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/form.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                redirectUrl\n                            \n                            \n                                    \n                                sections\n                            \n                            \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map, of: FormSectionPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FormTypes } from '../_enum/types';\nimport { FormSectionPart, FormSectionPartSchema } from './parts/section.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema({\n  collection: 'forms',\n  versionKey: false,\n})\nexport class Form extends AbstractSchema {\n  @Prop()\n  title: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  defaultValues: { [key: string]: MixedValue };\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({ type: Map, of: FormSectionPartSchema })\n  sections: Map;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  submitApiUrl: string;\n\n  @Prop()\n  redirectUrl: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FormController.html":{"url":"controllers/FormController.html","title":"controller - FormController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FormController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                form\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FormDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(FormDto, FormDto)@ApiResponse({type: FormDto})\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FormUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FormUpdateDto, FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { FormDto, FormUpdateDto } from './_dto/form.dto';\nimport { FormService } from './form.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport {\n  SearchFilterSchema,\n  FilterSchema,\n  SearchFilterOptions,\n  FilterOptions,\n  ObjectIdValidationPipe,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Types } from 'mongoose';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\n\n@ApiTags('forms')\n@Controller('form')\nexport class FormController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    title: 1,\n    description: 1,\n    type: 1,\n    sections: 1,\n    submitButtonText: 1,\n  };\n  constructor(private readonly _service: FormService) {\n    super();\n  }\n  @Post()\n  @ApiCreateDecorator(FormDto, FormDto)\n  @ApiResponse({ type: FormDto })\n  public async create(@Res() res: Response, @Body() body: FormDto) {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FormDto, FormController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      FormController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FormDto)\n  public async read(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.findById(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FormUpdateDto, FormDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: FormUpdateDto,\n    @Res() res: Response,\n  ) {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FormDto)\n  public async remove(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormCreateDto.html":{"url":"classes/FormCreateDto.html","title":"class - FormCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MetadataDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormDto.html":{"url":"classes/FormDto.html","title":"class - FormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FormCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldDto.html":{"url":"classes/FormFieldDto.html","title":"class - FormFieldDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/field.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                    \n                                col\n                            \n                            \n                                    \n                                    \n                                component\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                model-value\n                            \n                            \n                                    \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNumber, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nexport class FormFieldDto {\n  @IsString()\n  @ApiProperty()\n  component: string;\n\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsString()\n  @ApiProperty()\n  'model-value': string;\n\n  @IsNumber()\n  @ApiProperty()\n  row: number;\n\n  @IsNumber()\n  @ApiProperty()\n  col: number;\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDefault: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnCreate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnRead: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnUpdate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDelete: { [attr: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldPart.html":{"url":"classes/FormFieldPart.html","title":"class - FormFieldPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/field.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                col\n                            \n                            \n                                    \n                                component\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                model-value\n                            \n                            \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema()\nexport class FormFieldPart {\n  @Prop()\n  component: string;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  'model-value': string;\n\n  @Prop()\n  row: number;\n\n  @Prop()\n  col: number;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDefault: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnCreate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnRead: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnUpdate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDelete: { [attr: string]: MixedValue } | object;\n}\n\nexport const FormFieldPartSchema = SchemaFactory.createForClass(FormFieldPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/form/form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FormController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { FormSchema, Form } from './_schemas/form.schema';\nimport { FormService } from './form.service';\nimport { FormController } from './form.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Form.name,\n        useFactory: () => FormSchema,\n      },\n    ]),\n  ],\n  providers: [FormService],\n  controllers: [FormController],\n})\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionDto.html":{"url":"classes/FormSectionDto.html","title":"class - FormSectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/section.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fields\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@Type(undefined)@ApiProperty({type: FormFieldDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@IsOptional()@Type(undefined)@ApiProperty({type: () => FormSectionDto, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypes)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { FormFieldDto } from './field.dto';\nimport { FormTypes } from '../../_enum/types';\n\nexport class FormSectionDto {\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsEnum(FormTypes)\n  @ApiProperty()\n  type: FormTypes;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  icon?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  @Type(() => FormSectionDto)\n  @ApiProperty({ type: () => FormSectionDto, required: false })\n  sections?: { [sectionName: string]: FormSectionDto };\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @Type(() => FormFieldDto)\n  @ApiProperty({ type: FormFieldDto })\n  fields: { [fieldName: string]: FormFieldDto };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionPart.html":{"url":"classes/FormSectionPart.html","title":"class - FormSectionPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/section.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                fields\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { FormTypes } from '../../_enum/types';\nimport { FormFieldPart } from './field.part.schema';\n\n@Schema({ _id: false })\nexport class FormSectionPart {\n  @Prop({\n    type: String,\n  })\n  label: string;\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({\n    type: String,\n  })\n  icon?: string;\n\n  @Prop({\n    type: String,\n  })\n  description?: string;\n\n  @Prop({ type: Map })\n  sections?: Map;\n\n  @Prop({ type: Map })\n  fields: Map;\n}\n\nexport const FormSectionPartSchema = SchemaFactory.createForClass(FormSectionPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/core/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:56\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:191\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:358\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:81\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:156\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:233\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:296\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Form } from './_schemas/form.schema';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { ModuleRef } from '@nestjs/core';\n\n@Injectable()\nexport class FormService extends AbstractServiceSchema {\n  constructor(\n    @InjectModel(Form.name) protected _model: Model,\n    protected readonly moduleRef: ModuleRef,\n  ) {\n    super({ moduleRef });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormUpdateDto.html":{"url":"classes/FormUpdateDto.html","title":"class - FormUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(FormDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FusionDto.html":{"url":"classes/FusionDto.html","title":"class - FusionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FusionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/fusion.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id1\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'Id of the first identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/fusion.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'Id of the second identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/fusion.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class FusionDto {\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'Id of the first identity', type: String })\n  public id1: string;\n\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'Id of the second identity', type: String })\n  public id2: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubAsset.html":{"url":"interfaces/GithubAsset.html","title":"interface - GithubAsset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubAsset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:40\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, OnApplicationBootstrap } from '@nestjs/common';\nimport { PackageJson } from 'types-package-json';\nimport { ModuleRef } from '@nestjs/core';\nimport { readFileSync } from 'fs';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { pick } from 'radash';\nimport { HttpService } from '@nestjs/axios';\nimport { LRUCache } from 'lru-cache';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\nexport enum ProjectsList {\n  SESAME_ORCHESTRATOR = 'sesame-orchestrator',\n  SESAME_DAEMON = 'sesame-daemon',\n  SESAME_APP_MANAGER = 'sesame-app-manager',\n}\n\nexport interface GithubAuthor {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  user_view_type: string;\n  site_admin: boolean;\n}\n\nexport interface GithubAsset {\n  [key: string]: any;\n}\n\nexport interface GithubUpdate {\n  url: string;\n  assets_url: string;\n  upload_url: string;\n  html_url: string;\n  id: number;\n  author: GithubAuthor;\n  node_id: string;\n  tag_name: string;\n  target_commitish: string;\n  name: string;\n  draft: boolean;\n  prerelease: boolean;\n  created_at: string;\n  published_at: string;\n  assets: GithubAsset[];\n  tarball_url: string;\n  zipball_url: string;\n  body: string;\n}\n\n@Injectable()\nexport class AppService extends AbstractService implements OnApplicationBootstrap {\n  protected storage = new LRUCache({\n    ttl: 1_000 * 60 * 60 * 6, // 6 hours\n    ttlAutopurge: true,\n  });\n\n  protected package: Partial;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly httpService: HttpService,\n  ) {\n    super({ moduleRef });\n    this.package = JSON.parse(readFileSync('package.json', 'utf-8'));\n  }\n\n  /**\n   * On application bootstrap, this method is called to initialize the service.\n   * It logs the start of the bootstrap process and fetches the latest releases for each project\n   * in the ProjectsList enum.\n   * It uses the fetchGithubRelease method to get the latest releases from GitHub.\n   *\n   * @returns {Promise} A promise that resolves when the bootstrap process is complete.\n   */\n  public async onApplicationBootstrap(): Promise {\n    this.logger.debug('Application service bootstrap starting...');\n\n    if (process.env.NODE_ENV === 'development') {\n      this.logger.warn('Skipping GitHub release fetch in development mode.');\n    } else {\n      for (const project of Object.values(ProjectsList)) {\n        this.logger.verbose(`Checking for updates for project: ${project}`);\n        await this.fetchGithubRelease(project);\n      }\n    }\n\n    this.logger.log('Application service bootstrap completed.');\n  }\n\n  /**\n   * Cron job to fetch the latest releases of projects every 6 hours.\n   * This method logs the start and end of the job, and fetches updates for each project in the ProjectsList.\n   * It uses the fetchGithubRelease method to get the latest releases from GitHub.\n   * The job is scheduled using the CronExpression.EVERY_6_HOURS expression.\n   *\n   * @Cron(CronExpression.EVERY_6_HOURS)\n   * @returns {Promise}\n   * @memberof AppService\n   */\n  @Cron(CronExpression.EVERY_6_HOURS)\n  public async handleCron(): Promise {\n    this.logger.debug('Cron job started.');\n\n    if (process.env.NODE_ENV === 'development') {\n      this.logger.warn('Skipping GitHub release fetch in development mode.');\n    } else {\n      for (const project of Object.values(ProjectsList)) {\n        this.logger.verbose(`Checking for updates for project: ${project}`);\n        await this.fetchGithubRelease(project);\n      }\n    }\n\n    this.logger.debug('Cron job completed.');\n  }\n\n  /**\n   * Returns basic information about the application, such as name and version.\n   *\n   * @returns {Partial} Returns basic information about the application, such as name and version.\n   */\n  public getInfo(): Partial {\n    return pick(this.package, ['name', 'version']);\n  }\n\n  /**\n   * Fetches the latest release information for a specified project from GitHub.\n   *\n   * @param project The project name to fetch updates for.\n   * @returns {Promise} A promise that resolves to the latest release information for the specified project.\n   */\n  public getProjectUpdate(project: ProjectsList): GithubUpdate {\n    if (!Object.values(ProjectsList).includes(project)) {\n      throw new BadRequestException(`Invalid project: ${project}`);\n    }\n\n    if (this.storage.has(project)) {\n      this.logger.debug(`Fetching ${project} tags from cache`);\n\n      return this.storage.get(project) as GithubUpdate;\n    }\n\n    return null; // Return null if the project is not cached\n  }\n\n  /**\n   * Fetches the latest release information for a specified project from GitHub.\n   *\n   * @param project The project name to fetch updates for.\n   * @returns {Promise} A promise that resolves to the latest release information for the specified project.\n   */\n  private async fetchGithubRelease(project: ProjectsList, retry = 0): Promise {\n    if (this.storage.has(project)) {\n      this.logger.debug(`Fetching ${project} tags from cache`);\n\n      return this.storage.get(project) as GithubUpdate;\n    }\n\n    this.logger.debug(`Fetching ${project} tags from GitHub API`);\n\n    try {\n      const { data } = await firstValueFrom(\n        this.httpService.get(`https://api.github.com/repos/Libertech-FR/${project}/releases/latest`).pipe(\n          catchError((error) => {\n            this.logger.error(`Error fetching release for ${project}: ${error.message}`);\n            throw error;\n          })\n        )\n      );\n      this.storage.set(project, data);\n      return data;\n    } catch (error) {\n      if (retry >= 3) {\n        this.logger.fatal(`Failed to fetch release for ${project} after multiple retries: ${error.message}`);\n\n        return null; // Return null or handle as needed\n      }\n\n      setTimeout(() => {\n        this.logger.verbose(`Retrying to fetch ${project} release after error: ${error.message}`);\n        return this.fetchGithubRelease(project, retry + 1);\n      }, 1_000 * 60); // Retry after 60 seconds\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubAuthor.html":{"url":"interfaces/GithubAuthor.html","title":"interface - GithubAuthor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubAuthor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar_url\n                                        \n                                \n                                \n                                        \n                                            events_url\n                                        \n                                \n                                \n                                        \n                                            followers_url\n                                        \n                                \n                                \n                                        \n                                            following_url\n                                        \n                                \n                                \n                                        \n                                            gists_url\n                                        \n                                \n                                \n                                        \n                                            gravatar_id\n                                        \n                                \n                                \n                                        \n                                            html_url\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            node_id\n                                        \n                                \n                                \n                                        \n                                            organizations_url\n                                        \n                                \n                                \n                                        \n                                            received_events_url\n                                        \n                                \n                                \n                                        \n                                            repos_url\n                                        \n                                \n                                \n                                        \n                                            site_admin\n                                        \n                                \n                                \n                                        \n                                            starred_url\n                                        \n                                \n                                \n                                        \n                                            subscriptions_url\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            user_view_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        events_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gists_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gists_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gravatar_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gravatar_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizations_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizations_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        received_events_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        received_events_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        site_admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        site_admin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starred_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        starred_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscriptions_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscriptions_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_view_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_view_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BadRequestException, Injectable, OnApplicationBootstrap } from '@nestjs/common';\nimport { PackageJson } from 'types-package-json';\nimport { ModuleRef } from '@nestjs/core';\nimport { readFileSync } from 'fs';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { pick } from 'radash';\nimport { HttpService } from '@nestjs/axios';\nimport { LRUCache } from 'lru-cache';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\nexport enum ProjectsList {\n  SESAME_ORCHESTRATOR = 'sesame-orchestrator',\n  SESAME_DAEMON = 'sesame-daemon',\n  SESAME_APP_MANAGER = 'sesame-app-manager',\n}\n\nexport interface GithubAuthor {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  user_view_type: string;\n  site_admin: boolean;\n}\n\nexport interface GithubAsset {\n  [key: string]: any;\n}\n\nexport interface GithubUpdate {\n  url: string;\n  assets_url: string;\n  upload_url: string;\n  html_url: string;\n  id: number;\n  author: GithubAuthor;\n  node_id: string;\n  tag_name: string;\n  target_commitish: string;\n  name: string;\n  draft: boolean;\n  prerelease: boolean;\n  created_at: string;\n  published_at: string;\n  assets: GithubAsset[];\n  tarball_url: string;\n  zipball_url: string;\n  body: string;\n}\n\n@Injectable()\nexport class AppService extends AbstractService implements OnApplicationBootstrap {\n  protected storage = new LRUCache({\n    ttl: 1_000 * 60 * 60 * 6, // 6 hours\n    ttlAutopurge: true,\n  });\n\n  protected package: Partial;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly httpService: HttpService,\n  ) {\n    super({ moduleRef });\n    this.package = JSON.parse(readFileSync('package.json', 'utf-8'));\n  }\n\n  /**\n   * On application bootstrap, this method is called to initialize the service.\n   * It logs the start of the bootstrap process and fetches the latest releases for each project\n   * in the ProjectsList enum.\n   * It uses the fetchGithubRelease method to get the latest releases from GitHub.\n   *\n   * @returns {Promise} A promise that resolves when the bootstrap process is complete.\n   */\n  public async onApplicationBootstrap(): Promise {\n    this.logger.debug('Application service bootstrap starting...');\n\n    if (process.env.NODE_ENV === 'development') {\n      this.logger.warn('Skipping GitHub release fetch in development mode.');\n    } else {\n      for (const project of Object.values(ProjectsList)) {\n        this.logger.verbose(`Checking for updates for project: ${project}`);\n        await this.fetchGithubRelease(project);\n      }\n    }\n\n    this.logger.log('Application service bootstrap completed.');\n  }\n\n  /**\n   * Cron job to fetch the latest releases of projects every 6 hours.\n   * This method logs the start and end of the job, and fetches updates for each project in the ProjectsList.\n   * It uses the fetchGithubRelease method to get the latest releases from GitHub.\n   * The job is scheduled using the CronExpression.EVERY_6_HOURS expression.\n   *\n   * @Cron(CronExpression.EVERY_6_HOURS)\n   * @returns {Promise}\n   * @memberof AppService\n   */\n  @Cron(CronExpression.EVERY_6_HOURS)\n  public async handleCron(): Promise {\n    this.logger.debug('Cron job started.');\n\n    if (process.env.NODE_ENV === 'development') {\n      this.logger.warn('Skipping GitHub release fetch in development mode.');\n    } else {\n      for (const project of Object.values(ProjectsList)) {\n        this.logger.verbose(`Checking for updates for project: ${project}`);\n        await this.fetchGithubRelease(project);\n      }\n    }\n\n    this.logger.debug('Cron job completed.');\n  }\n\n  /**\n   * Returns basic information about the application, such as name and version.\n   *\n   * @returns {Partial} Returns basic information about the application, such as name and version.\n   */\n  public getInfo(): Partial {\n    return pick(this.package, ['name', 'version']);\n  }\n\n  /**\n   * Fetches the latest release information for a specified project from GitHub.\n   *\n   * @param project The project name to fetch updates for.\n   * @returns {Promise} A promise that resolves to the latest release information for the specified project.\n   */\n  public getProjectUpdate(project: ProjectsList): GithubUpdate {\n    if (!Object.values(ProjectsList).includes(project)) {\n      throw new BadRequestException(`Invalid project: ${project}`);\n    }\n\n    if (this.storage.has(project)) {\n      this.logger.debug(`Fetching ${project} tags from cache`);\n\n      return this.storage.get(project) as GithubUpdate;\n    }\n\n    return null; // Return null if the project is not cached\n  }\n\n  /**\n   * Fetches the latest release information for a specified project from GitHub.\n   *\n   * @param project The project name to fetch updates for.\n   * @returns {Promise} A promise that resolves to the latest release information for the specified project.\n   */\n  private async fetchGithubRelease(project: ProjectsList, retry = 0): Promise {\n    if (this.storage.has(project)) {\n      this.logger.debug(`Fetching ${project} tags from cache`);\n\n      return this.storage.get(project) as GithubUpdate;\n    }\n\n    this.logger.debug(`Fetching ${project} tags from GitHub API`);\n\n    try {\n      const { data } = await firstValueFrom(\n        this.httpService.get(`https://api.github.com/repos/Libertech-FR/${project}/releases/latest`).pipe(\n          catchError((error) => {\n            this.logger.error(`Error fetching release for ${project}: ${error.message}`);\n            throw error;\n          })\n        )\n      );\n      this.storage.set(project, data);\n      return data;\n    } catch (error) {\n      if (retry >= 3) {\n        this.logger.fatal(`Failed to fetch release for ${project} after multiple retries: ${error.message}`);\n\n        return null; // Return null or handle as needed\n      }\n\n      setTimeout(() => {\n        this.logger.verbose(`Retrying to fetch ${project} release after error: ${error.message}`);\n        return this.fetchGithubRelease(project, retry + 1);\n      }, 1_000 * 60); // Retry after 60 seconds\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubUpdate.html":{"url":"interfaces/GithubUpdate.html","title":"interface - GithubUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            assets\n                                        \n                                \n                                \n                                        \n                                            assets_url\n                                        \n                                \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            draft\n                                        \n                                \n                                \n                                        \n                                            html_url\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            node_id\n                                        \n                                \n                                \n                                        \n                                            prerelease\n                                        \n                                \n                                \n                                        \n                                            published_at\n                                        \n                                \n                                \n                                        \n                                            tag_name\n                                        \n                                \n                                \n                                        \n                                            tarball_url\n                                        \n                                \n                                \n                                        \n                                            target_commitish\n                                        \n                                \n                                \n                                        \n                                            upload_url\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            zipball_url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assets:         GithubAsset[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GithubAsset[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assets_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         GithubAuthor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GithubAuthor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prerelease\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prerelease:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        published_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        published_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tarball_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tarball_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target_commitish\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target_commitish:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upload_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        upload_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipball_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipball_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BadRequestException, Injectable, OnApplicationBootstrap } from '@nestjs/common';\nimport { PackageJson } from 'types-package-json';\nimport { ModuleRef } from '@nestjs/core';\nimport { readFileSync } from 'fs';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { pick } from 'radash';\nimport { HttpService } from '@nestjs/axios';\nimport { LRUCache } from 'lru-cache';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\nexport enum ProjectsList {\n  SESAME_ORCHESTRATOR = 'sesame-orchestrator',\n  SESAME_DAEMON = 'sesame-daemon',\n  SESAME_APP_MANAGER = 'sesame-app-manager',\n}\n\nexport interface GithubAuthor {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  user_view_type: string;\n  site_admin: boolean;\n}\n\nexport interface GithubAsset {\n  [key: string]: any;\n}\n\nexport interface GithubUpdate {\n  url: string;\n  assets_url: string;\n  upload_url: string;\n  html_url: string;\n  id: number;\n  author: GithubAuthor;\n  node_id: string;\n  tag_name: string;\n  target_commitish: string;\n  name: string;\n  draft: boolean;\n  prerelease: boolean;\n  created_at: string;\n  published_at: string;\n  assets: GithubAsset[];\n  tarball_url: string;\n  zipball_url: string;\n  body: string;\n}\n\n@Injectable()\nexport class AppService extends AbstractService implements OnApplicationBootstrap {\n  protected storage = new LRUCache({\n    ttl: 1_000 * 60 * 60 * 6, // 6 hours\n    ttlAutopurge: true,\n  });\n\n  protected package: Partial;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly httpService: HttpService,\n  ) {\n    super({ moduleRef });\n    this.package = JSON.parse(readFileSync('package.json', 'utf-8'));\n  }\n\n  /**\n   * On application bootstrap, this method is called to initialize the service.\n   * It logs the start of the bootstrap process and fetches the latest releases for each project\n   * in the ProjectsList enum.\n   * It uses the fetchGithubRelease method to get the latest releases from GitHub.\n   *\n   * @returns {Promise} A promise that resolves when the bootstrap process is complete.\n   */\n  public async onApplicationBootstrap(): Promise {\n    this.logger.debug('Application service bootstrap starting...');\n\n    if (process.env.NODE_ENV === 'development') {\n      this.logger.warn('Skipping GitHub release fetch in development mode.');\n    } else {\n      for (const project of Object.values(ProjectsList)) {\n        this.logger.verbose(`Checking for updates for project: ${project}`);\n        await this.fetchGithubRelease(project);\n      }\n    }\n\n    this.logger.log('Application service bootstrap completed.');\n  }\n\n  /**\n   * Cron job to fetch the latest releases of projects every 6 hours.\n   * This method logs the start and end of the job, and fetches updates for each project in the ProjectsList.\n   * It uses the fetchGithubRelease method to get the latest releases from GitHub.\n   * The job is scheduled using the CronExpression.EVERY_6_HOURS expression.\n   *\n   * @Cron(CronExpression.EVERY_6_HOURS)\n   * @returns {Promise}\n   * @memberof AppService\n   */\n  @Cron(CronExpression.EVERY_6_HOURS)\n  public async handleCron(): Promise {\n    this.logger.debug('Cron job started.');\n\n    if (process.env.NODE_ENV === 'development') {\n      this.logger.warn('Skipping GitHub release fetch in development mode.');\n    } else {\n      for (const project of Object.values(ProjectsList)) {\n        this.logger.verbose(`Checking for updates for project: ${project}`);\n        await this.fetchGithubRelease(project);\n      }\n    }\n\n    this.logger.debug('Cron job completed.');\n  }\n\n  /**\n   * Returns basic information about the application, such as name and version.\n   *\n   * @returns {Partial} Returns basic information about the application, such as name and version.\n   */\n  public getInfo(): Partial {\n    return pick(this.package, ['name', 'version']);\n  }\n\n  /**\n   * Fetches the latest release information for a specified project from GitHub.\n   *\n   * @param project The project name to fetch updates for.\n   * @returns {Promise} A promise that resolves to the latest release information for the specified project.\n   */\n  public getProjectUpdate(project: ProjectsList): GithubUpdate {\n    if (!Object.values(ProjectsList).includes(project)) {\n      throw new BadRequestException(`Invalid project: ${project}`);\n    }\n\n    if (this.storage.has(project)) {\n      this.logger.debug(`Fetching ${project} tags from cache`);\n\n      return this.storage.get(project) as GithubUpdate;\n    }\n\n    return null; // Return null if the project is not cached\n  }\n\n  /**\n   * Fetches the latest release information for a specified project from GitHub.\n   *\n   * @param project The project name to fetch updates for.\n   * @returns {Promise} A promise that resolves to the latest release information for the specified project.\n   */\n  private async fetchGithubRelease(project: ProjectsList, retry = 0): Promise {\n    if (this.storage.has(project)) {\n      this.logger.debug(`Fetching ${project} tags from cache`);\n\n      return this.storage.get(project) as GithubUpdate;\n    }\n\n    this.logger.debug(`Fetching ${project} tags from GitHub API`);\n\n    try {\n      const { data } = await firstValueFrom(\n        this.httpService.get(`https://api.github.com/repos/Libertech-FR/${project}/releases/latest`).pipe(\n          catchError((error) => {\n            this.logger.error(`Error fetching release for ${project}: ${error.message}`);\n            throw error;\n          })\n        )\n      );\n      this.storage.set(project, data);\n      return data;\n    } catch (error) {\n      if (retry >= 3) {\n        this.logger.fatal(`Failed to fetch release for ${project} after multiple retries: ${error.message}`);\n\n        return null; // Return null or handle as needed\n      }\n\n      setTimeout(() => {\n        this.logger.verbose(`Retrying to fetch ${project} release after error: ${error.message}`);\n        return this.fetchGithubRelease(project, retry + 1);\n      }, 1_000 * 60); // Retry after 60 seconds\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identities.html":{"url":"classes/Identities.html","title":"class - Identities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/identities.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                additionalFields\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                dataStatus\n                            \n                            \n                                    \n                                    Public\n                                deletedFlag\n                            \n                            \n                                    \n                                    Public\n                                destFusionId\n                            \n                            \n                                    \n                                    Public\n                                fingerprint\n                            \n                            \n                                    \n                                    Public\n                                ignoreLifecycle\n                            \n                            \n                                    \n                                    Public\n                                inetOrgPerson\n                            \n                            \n                                    \n                                    Public\n                                initInfo\n                            \n                            \n                                    \n                                    Public\n                                initState\n                            \n                            \n                                    \n                                    Public\n                                lastBackendSync\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastSync\n                            \n                            \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    Public\n                                primaryEmployeeNumber\n                            \n                            \n                                    \n                                    Public\n                                srcFusionId\n                            \n                            \n                                    \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdditionalFieldsPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: AdditionalFieldsPartSchema, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        dataStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: DataStatusEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deletedFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        destFusionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        ignoreLifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPerson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: inetOrgPersonSchema, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        initInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitInfoPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: InitInfoPartSchema, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        initState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitStatesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: InitStatesEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastBackendSync\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastSync\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: IdentityLifecycle, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        primaryEmployeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        srcFusionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdentityLifecycle } from './../_enums/lifecycle.enum';\nimport { inetOrgPerson, inetOrgPersonSchema } from './_parts/inetOrgPerson.part';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentityState } from '../_enums/states.enum';\nimport { AdditionalFieldsPart, AdditionalFieldsPartSchema } from './_parts/additionalFields.part.schema';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { InitInfoPart, InitInfoPartSchema } from '~/management/identities/_schemas/_parts/init-info.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { AutoIncrementPlugin } from '~/_common/plugins/mongoose/auto-increment.plugin';\nimport { AutoIncrementPluginOptions } from '~/_common/plugins/mongoose/auto-increment.interface';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport type IdentitiesDocument = Identities & Document;\n\n@Schema({ versionKey: false, minimize: false, })\nexport class Identities extends AbstractSchema {\n  @Prop({ type: Number, enum: IdentityState, default: IdentityState.TO_CREATE })\n  public state: IdentityState;\n\n  @Prop({ type: String, enum: IdentityLifecycle, default: IdentityLifecycle.ACTIVE })\n  public lifecycle: IdentityLifecycle;\n\n  @Prop({ type: Number, enum: DataStatusEnum, default: DataStatusEnum.NOTINITIALIZED })\n  public dataStatus: DataStatusEnum;\n\n  @Prop({ type: Boolean, default: false })\n  public deletedFlag: boolean;\n\n  @Prop({ type: Boolean, default: false })\n  public ignoreLifecycle: boolean;\n\n  @Prop({ type: inetOrgPersonSchema, required: true })\n  public inetOrgPerson: inetOrgPerson;\n\n  @Prop({ type: AdditionalFieldsPartSchema, required: false, default: {} })\n  public additionalFields: AdditionalFieldsPart;\n\n  @Prop({ type: String })\n  public fingerprint: string;\n\n  @Prop({ type: Date })\n  public lastSync?: Date;\n\n  @Prop({ type: Date, default: null })\n  public lastBackendSync: Date;\n\n  @Prop({ type: Number, enum: InitStatesEnum, default: InitStatesEnum.NOSENT })\n  public initState: InitStatesEnum;\n\n  @Prop({ type: InitInfoPartSchema, default: {} })\n  public initInfo: InitInfoPart;\n\n  @Prop({\n    type: Object,\n  })\n  public customFields?: { [key: string]: MixedValue };\n\n  //pour les identités fusionnées ont met les deux identités sources\n  @Prop({ type: Types.ObjectId, required: false, default: null })\n  public srcFusionId: Types.ObjectId;\n\n  //pour les identités qui on servit à une fusion on met la destination (la nouvelle identité fusionnée)\n  @Prop({ type: Types.ObjectId, required: false })\n  public destFusionId: Types.ObjectId;\n\n  @Prop({ type: String, required: false, default: null })\n  public primaryEmployeeNumber: string;\n}\n\nexport const IdentitiesSchema = SchemaFactory.createForClass(Identities)\n  .plugin(AutoIncrementPlugin, {\n    incrementBy: 1,\n    field: 'inetOrgPerson.employeeNumber',\n    startAt: 1,\n    type: 'array',\n    rules: (ctx) => {\n      return ctx.inetOrgPerson.employeeType === 'LOCAL';\n    },\n  })\n  .index(\n    { 'inetOrgPerson.employeeNumber': 1, 'inetOrgPerson.employeeType': 1 },\n    { unique: true },\n  );\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesActivationController.html":{"url":"controllers/IdentitiesActivationController.html","title":"controller - IdentitiesActivationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesActivationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-activation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                activation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        activation\n                        \n                    \n                \n            \n            \n                \n                        \n                    activation(res: Response, body: ActivationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('activation')@ApiOperation({summary: 'active/desactive l identité'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-activation.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ActivationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {AbstractController} from '~/_common/abstracts/abstract.controller';\nimport {IdentitiesActivationService} from '~/management/identities/identities-activation.service';\nimport {ApiOperation, ApiResponse, ApiTags} from '@nestjs/swagger';\nimport {Body, Controller, HttpStatus, Post, Res} from '@nestjs/common';\nimport {Response} from 'express';\nimport {ActivationDto} from '~/management/identities/_dto/_parts/activation-dto';\nimport {DataStatusEnum} from \"~/management/identities/_enums/data-status\";\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesActivationController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesActivationService) {\n    super();\n  }\n\n  @Post('activation')\n  @ApiOperation({ summary: 'active/desactive l identité' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async activation(@Res() res: Response, @Body() body: ActivationDto): Promise {\n    try {\n      let param = DataStatusEnum.INACTIVE\n      if ( body.status === true){\n         param=DataStatusEnum.ACTIVE\n      }\n      const data = await this._service.activation(body.id, param);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesCommand.html":{"url":"classes/IdentitiesCommand.html","title":"class - IdentitiesCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/identities.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/identities.command.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/identities.command.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\";\nimport { ModuleRef } from \"@nestjs/core\";\nimport { Command, CommandRunner, SubCommand } from \"nest-commander\";\nimport { Identities } from \"~/management/identities/_schemas/identities.schema\";\nimport { IdentitiesUpsertService } from \"~/management/identities/identities-upsert.service\";\n\n\n@SubCommand({ name: 'fingerprint' })\nexport class IdentitiesFingerprintCommand extends CommandRunner {\n  private readonly logger = new Logger(IdentitiesFingerprintCommand.name);\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly identitiesUpsertService: IdentitiesUpsertService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const total = await this.identitiesUpsertService.count();\n    this.logger.log(`Total identities: ${total}`);\n\n    const identities = await this.identitiesUpsertService.find() as unknown as Identities[];\n\n    for await (const identity of identities) {\n      this.logger.log(`Processing identity: ${identity._id}`);\n      const fingerprint = await this.identitiesUpsertService.previewFingerprint(identity.toJSON());\n      this.logger.log(`Identity: ${identity._id}, Fingerprint: ${fingerprint}, Old: ${identity.fingerprint}`);\n\n      if (identity.fingerprint !== fingerprint) {\n        this.logger.warn(`Updating fingerprint for identity: ${identity._id}`);\n        await this.identitiesUpsertService.generateFingerprint(identity, fingerprint);\n      } else {\n        this.logger.log(`Fingerprint already up to date for identity: ${identity._id}`);\n      }\n    }\n  }\n}\n\n@Command({ name: 'identities', arguments: '', subCommands: [IdentitiesFingerprintCommand] })\nexport class IdentitiesCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesCreateDto.html":{"url":"classes/IdentitiesCreateDto.html","title":"class - IdentitiesCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IntersectionType(CustomFieldsDto, MetadataDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                dataStatus\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                initState\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        dataStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(DataStatusEnum)@ApiProperty({enum: DataStatusEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        initState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitStatesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(InitStatesEnum)@ApiProperty({enum: InitStatesEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested, IsString } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  @IsOptional()\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsString()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: string;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesCrudController.html":{"url":"controllers/IdentitiesCrudController.html","title":"controller - IdentitiesCrudController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesCrudController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-crud.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                countAll\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getdeleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateStateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')@ApiOperation({summary: 'Compte le nombre d'identitées en fonctions des filtres fournis'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        countAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    countAll(res: Response, body: literal type, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('count-all')@ApiOperation({summary: 'Compte le nombre d'identitées en fonctions des filtres fournis via un body de counts'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: IdentitiesCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getdeleted\n                        \n                    \n                \n            \n            \n                \n                        \n                    getdeleted(res: Response, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getdeleted')@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:288\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateState(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})/state')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:248\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        updateStateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStateMany(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('state')@ApiOperation({summary: 'Met à jour l'état d'une ou plusieurs  en masse'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:269\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Res,\n} from '@nestjs/common';\nimport { ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  filterSchema,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Document, Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesCreateDto, IdentitiesDto, IdentitiesUpdateDto } from './_dto/identities.dto';\nimport { IdentityState } from './_enums/states.enum';\nimport { Identities } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { FilestorageService } from '~/core/filestorage/filestorage.service';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\nimport { IdentitiesCrudService } from '~/management/identities/identities-crud.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesCrudController extends AbstractController {\n  public constructor(\n    protected readonly _service: IdentitiesCrudService,\n    protected readonly _validation: IdentitiesValidationService,\n    protected readonly filestorage: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n    dataStatus: 1,\n    lifecycle: 1,\n  };\n\n  @Post()\n  @ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n  public async create(\n    @Res() res: Response,\n    @Body() body: IdentitiesCreateDto,\n  ): Promise;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    let statusCode = HttpStatus.CREATED;\n    let message = null;\n    if (!body.inetOrgPerson.employeeType) {\n      body.inetOrgPerson.employeeType = 'LOCAL';\n    }\n    if (!body.inetOrgPerson.cn) {\n      body.inetOrgPerson.cn = [\n        body.inetOrgPerson.sn?.toUpperCase(),\n        body.inetOrgPerson.givenName,\n      ].join(' ').trim();\n    }\n    if (!body.inetOrgPerson.displayName) {\n      body.inetOrgPerson.displayName = [\n        body.inetOrgPerson.givenName,\n        body.inetOrgPerson.sn?.toUpperCase(),\n      ].join(' ').trim();\n    }\n    const data = await this._service.create(body);\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if (data.toObject().state === IdentityState.TO_COMPLETE) {\n      statusCode = HttpStatus.ACCEPTED;\n      message = 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.';\n    }\n\n    return res.status(statusCode).json({\n      statusCode,\n      data,\n      message,\n    });\n  }\n  @Get('getdeleted')\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesCrudController.projection))\n  public async getdeleted(\n    @Res() res: Response,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise;\n        total?: number;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    const [data, total] = await this._service.trashAndCount(IdentitiesCrudController.projection, searchFilterOptions);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesCrudController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise;\n        total?: number;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      IdentitiesCrudController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(IdentitiesDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const identity = await this._service.findById(_id);\n      const data = this._service.transformNullsToString(JSON.parse(JSON.stringify(identity)));\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      console.log('error', error);\n      let validations = error.validations;\n      if (error instanceof BadRequestException) validations = error.getResponse();\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: validations,\n      });\n    }\n  }\n\n  @Get('count')\n  @ApiOperation({ summary: \"Compte le nombre d'identitées en fonctions des filtres fournis\" })\n  public async count(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise> {\n    const total = await this._service.count(searchFilterSchema, searchFilterOptions);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: total,\n    });\n  }\n\n  @Post('count-all')\n  @ApiOperation({ summary: \"Compte le nombre d'identitées en fonctions des filtres fournis via un body de counts\" })\n  public async countAll(\n    @Res() res: Response,\n    @Body() body: {\n      [key: string]: FilterSchema;\n    },\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise> {\n    const filters = Object.entries(body).reduce((acc, [key, value]) => {\n      acc[key] = filterSchema(value);\n      return acc;\n    }, {} as Record);\n\n    const data = await this._service.countAll(filters, searchFilterOptions);\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})/state')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async updateState(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const identity = await this._service.findById(_id);\n    if (!identity) {\n      throw new BadRequestException('Identity not found');\n    }\n    if (identity.state !== IdentityState.TO_VALIDATE) {\n      throw new BadRequestException(\"La validation de l'identité est déjà complétée.\");\n    }\n    const data = await this._service.updateState(_id, body.state);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch('state')\n  @ApiOperation({ summary: \"Met à jour l'état d'une ou plusieurs  en masse\" })\n  public async updateStateMany(\n    @Res() res: Response,\n    @Body()\n    body: {\n      originState: IdentityState;\n      targetState: IdentityState;\n      ids: Types.ObjectId[];\n    },\n  ): Promise {\n    const data = await this._service.updateStateMany(body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  //@Delete(':_id([0-9a-fA-F]{24})')\n  //@ApiParam({ name: '_id', type: String })\n  //@ApiDeletedResponseDecorator(IdentitiesDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.delete(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesDoublonController.html":{"url":"controllers/IdentitiesDoublonController.html","title":"controller - IdentitiesDoublonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesDoublonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-doublon.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                fusion\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getDoublons\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        fusion\n                        \n                    \n                \n            \n            \n                \n                        \n                    fusion(body: FusionDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('fusion')@ApiOperation({summary: 'fusionne les deux identités'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-doublon.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            FusionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getDoublons\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDoublons(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('duplicates')@ApiOperation({summary: 'Renvoie la liste des doublons supposés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-doublon.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesDto } from './_dto/identities.dto';\nimport { FusionDto } from '~/management/identities/_dto/fusion.dto';\nimport { IdentitiesDoublonService } from '~/management/identities/identities-doublon.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\n\nexport class IdentitiesDoublonController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesDoublonService) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n  };\n\n  @Get('duplicates')\n  @ApiOperation({ summary: 'Renvoie la liste des doublons supposés' })\n  public async getDoublons(@Res() res: Response): Promise {\n    const data = await this._service.searchDoubles();\n    const total = data.length;\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n      total,\n    });\n  }\n\n  @Post('fusion')\n  @ApiOperation({ summary: 'fusionne les deux identités' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async fusion(\n    @Body() body: FusionDto,\n    @Res() res: Response,\n  ): Promise {\n    const newId = await this._service.fusion(body.id1, body.id2);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      newId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesDto.html":{"url":"classes/IdentitiesDto.html","title":"class - IdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdentitiesCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                dataStatus\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                initState\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        dataStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(DataStatusEnum)@ApiProperty({enum: DataStatusEnum})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        initState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitStatesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(InitStatesEnum)@ApiProperty({enum: InitStatesEnum})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested, IsString } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  @IsOptional()\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsString()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: string;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesFingerprintCommand.html":{"url":"classes/IdentitiesFingerprintCommand.html","title":"class - IdentitiesFingerprintCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesFingerprintCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/identities.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, identitiesUpsertService: IdentitiesUpsertService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/identities.command.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identitiesUpsertService\n                                                  \n                                                        \n                                                                        IdentitiesUpsertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(IdentitiesFingerprintCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/cli/identities.command.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/identities.command.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\";\nimport { ModuleRef } from \"@nestjs/core\";\nimport { Command, CommandRunner, SubCommand } from \"nest-commander\";\nimport { Identities } from \"~/management/identities/_schemas/identities.schema\";\nimport { IdentitiesUpsertService } from \"~/management/identities/identities-upsert.service\";\n\n\n@SubCommand({ name: 'fingerprint' })\nexport class IdentitiesFingerprintCommand extends CommandRunner {\n  private readonly logger = new Logger(IdentitiesFingerprintCommand.name);\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly identitiesUpsertService: IdentitiesUpsertService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const total = await this.identitiesUpsertService.count();\n    this.logger.log(`Total identities: ${total}`);\n\n    const identities = await this.identitiesUpsertService.find() as unknown as Identities[];\n\n    for await (const identity of identities) {\n      this.logger.log(`Processing identity: ${identity._id}`);\n      const fingerprint = await this.identitiesUpsertService.previewFingerprint(identity.toJSON());\n      this.logger.log(`Identity: ${identity._id}, Fingerprint: ${fingerprint}, Old: ${identity.fingerprint}`);\n\n      if (identity.fingerprint !== fingerprint) {\n        this.logger.warn(`Updating fingerprint for identity: ${identity._id}`);\n        await this.identitiesUpsertService.generateFingerprint(identity, fingerprint);\n      } else {\n        this.logger.log(`Fingerprint already up to date for identity: ${identity._id}`);\n      }\n    }\n  }\n}\n\n@Command({ name: 'identities', arguments: '', subCommands: [IdentitiesFingerprintCommand] })\nexport class IdentitiesCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesForcePasswordController.html":{"url":"controllers/IdentitiesForcePasswordController.html","title":"controller - IdentitiesForcePasswordController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesForcePasswordController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-forcepassword.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                forcePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                needToChangePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        forcePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    forcePassword(res: Response, body: ForcePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forcepassword')@ApiOperation({summary: 'force le mot de passe de l identite'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-forcepassword.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ForcePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        needToChangePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    needToChangePassword(res: Response, body: NeedChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('needtochangepassword')@ApiOperation({summary: 'force l'utilisateur a changer son mot de passe'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-forcepassword.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            NeedChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { IdentitiesActivationService } from '~/management/identities/identities-activation.service';\nimport { ApiOperation, ApiResponse, ApiTags} from '@nestjs/swagger';\nimport { Body, Controller, HttpStatus, Post, Res} from '@nestjs/common';\nimport { Response } from 'express';\nimport { ActivationDto } from '~/management/identities/_dto/_parts/activation-dto';\nimport {ForcePasswordDto} from \"~/management/identities/_dto/force-password-dto\";\nimport {IdentitiesForcepasswordService} from \"~/management/identities/identities-forcepassword.service\";\nimport {NeedChangePasswordDto} from \"~/management/identities/_dto/need-change-password.dto\";\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesForcePasswordController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesForcepasswordService) {\n    super();\n  }\n  @Post('forcepassword')\n  @ApiOperation({ summary: 'force le mot de passe de l identite' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async forcePassword(@Res() res: Response, @Body() body: ForcePasswordDto): Promise {\n    try {\n      const data = await this._service.forcePassword(body.id, body.newPassword);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n      });\n    }\n  }\n  @Post('needtochangepassword')\n  @ApiOperation({ summary: \"force l'utilisateur a changer son mot de passe\" })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async needToChangePassword(@Res() res: Response, @Body() body: NeedChangePasswordDto): Promise {\n    try {\n      const data = await this._service.needToChangePassword(body.id)\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesJsonFormsController.html":{"url":"controllers/IdentitiesJsonFormsController.html","title":"controller - IdentitiesJsonFormsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesJsonFormsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/jsonforms\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                generate\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                generateAll\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                searchAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(res: Response, schema: string | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generate')@ApiOperation({summary: 'Génère un JSON Forms d'un schéma personnalisé'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                schema\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generateAll')@ApiOperation({summary: 'Génère tous les JSON Forms liés aux schémas personnalisés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema, mode: \"create\" | \"update\", body: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':schema')@ApiOperation({summary: 'Récupère un JSON Forms d'un schéma personnalisé'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mode\n                                            \n                                                        \"create\" | \"update\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Liste les JSON Forms de schémas personnalisés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Query, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { Response } from 'express';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management/identities/jsonforms')\n@Controller('management/identities/jsonforms')\nexport class IdentitiesJsonFormsController extends AbstractController {\n  public constructor(private readonly _service: IdentitiesJsonformsService) {\n    super();\n  }\n\n  @Post('generateAll')\n  @ApiOperation({ summary: 'Génère tous les JSON Forms liés aux schémas personnalisés' })\n  public async generateAll(@Res() res: Response): Promise {\n    const result = await this._service.generateAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Post('generate')\n  @ApiOperation({ summary: \"Génère un JSON Forms d'un schéma personnalisé\" })\n  public async generate(@Res() res: Response, @Body('schema') schema: string | null = null): Promise {\n    const result = await this._service.generate({ schema, path: './configs/identities/jsonforms' });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Liste les JSON Forms de schémas personnalisés' })\n  public async searchAll(@Res() res: Response): Promise {\n    const result = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  // @Get(':schema')\n  @Post(':schema')\n  @ApiOperation({ summary: \"Récupère un JSON Forms d'un schéma personnalisé\" })\n  public async search(\n    @Res() res: Response,\n    @Param('schema') schema,\n    @Query('mode') mode: 'create' | 'update',\n    @Body() body: Partial,\n  ): Promise {\n    const [filePath, result] = await this._service.findOne(schema, { mode, employeeType: body?.employeeType });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n      file: filePath,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesJsonformsModule.html":{"url":"modules/IdentitiesJsonformsModule.html","title":"module - IdentitiesJsonformsModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesJsonformsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesJsonFormsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { IdentitiesJsonFormsController } from './identities.jsonforms.controller';\n\n@Module({\n  controllers: [IdentitiesJsonFormsController],\n  providers: [IdentitiesJsonformsService],\n  exports: [IdentitiesJsonformsService],\n})\nexport class IdentitiesJsonformsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesJsonformsService.html":{"url":"injectables/IdentitiesJsonformsService.html","title":"injectable - IdentitiesJsonformsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesJsonformsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                generate\n                            \n                            \n                                    Public\n                                    Async\n                                generateAll\n                            \n                            \n                                    Public\n                                onApplicationBootstrap\n                            \n                            \n                                    Private\n                                resolveJsonFormPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema: string, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveJsonFormPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveJsonFormPath(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnApplicationBootstrap, OnModuleInit } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { parse, stringify } from 'yaml';\nimport { existsSync, readFileSync, writeFileSync, readdirSync, readdir } from 'fs';\n// import Ajv from 'ajv';\nimport { ValidationConfigException } from '~/_common/errors/ValidationException';\n\n@Injectable()\nexport class IdentitiesJsonformsService extends AbstractService implements OnApplicationBootstrap {\n  // private ajv: Ajv = new Ajv({ allErrors: true });\n  // private validateSchema;\n\n  public constructor() {\n    super();\n  }\n\n  public onApplicationBootstrap(): void {\n    let files = [];\n    let defaultFiles = [];\n\n    this.logger.log('Initializing identities jsonforms service');\n\n    try {\n      files = readdirSync(`${process.cwd()}/configs/identities/jsonforms`);\n      defaultFiles = readdirSync(`${process.cwd()}/defaults/identities/jsonforms`);\n    } catch (error) {\n      this.logger.error('Error reading identities jsonforms', error.message, error.stack);\n    }\n\n    for (const file of defaultFiles) {\n      if (!files.includes(file)) {\n        try {\n          const defaultFile = readFileSync(`${process.cwd()}/defaults/identities/jsonforms/${file}`, 'utf-8');\n          writeFileSync(`${process.cwd()}/configs/identities/jsonforms/${file}`, defaultFile);\n\n          this.logger.warn(`Copied default jsonform file: ${file}`);\n        } catch (error) {\n          this.logger.error(`Error copying default jsonform file: ${file}`, error.message, error.stack);\n        }\n      }\n    }\n\n    this.logger.log('Identities jsonforms service initialized');\n  }\n\n  private resolveJsonFormPath(schema: string): string | null {\n    if (!schema.endsWith('.yml')) schema += '.yml';\n    const hardConfigPath = `./src/management/identities/jsonforms/_config/${schema}`;\n    const dynamicConfigPath = `./configs/identities/jsonforms/${schema}`;\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    return null;\n  }\n\n  public async generate({ schema, path }): Promise {\n    if (schema) {\n      console.log(`Generating jsonforms for schema: ${schema}`);\n      if (!schema.endsWith('.yml')) schema += '.yml';\n      const filePath = `${path}/${schema}`;\n      console.log(`File path: ${filePath}`);\n      if (!existsSync(filePath)) {\n        console.log(`File not found: ${filePath}`);\n        const message = `File not found: ${filePath}`;\n        throw new ValidationConfigException({ message });\n      }\n\n      const jsonSchema = parse(readFileSync(filePath, 'utf-8'));\n\n      // const jsonForm = {\n      //   type: 'VerticalLayout',\n      //   elements: Object.keys(jsonSchema.properties).map((key) => {\n      //     return {\n      //       type: 'Control',\n      //       label: key,\n      //       scope: `#/properties/${key}`,\n      //       options: {\n      //         required: jsonSchema.required && jsonSchema.required.includes(key),\n      //       },\n      //     };\n      //   }),\n      // };\n\n      const jsonForm = {\n        type: 'Group',\n        label: schema,\n        elements: Object.keys(jsonSchema.properties)\n          .reduce((acc, key, index) => {\n            const groupIndex = Math.floor(index / 3); // Determine the current group based on the index\n            if (!acc[groupIndex]) {\n              acc[groupIndex] = {\n                // Initialize a new HorizontalLayout group if it doesn't exist\n                type: 'HorizontalLayout',\n                elements: [],\n              };\n            }\n\n            acc[groupIndex].elements.push({\n              // Add the current element to its corresponding group\n              type: 'Control',\n              label: key,\n              scope: `#/properties/${key}`,\n              options: {\n                required: jsonSchema.required && jsonSchema.required.includes(key),\n                showUnfocusedDescription: false,\n              },\n            });\n\n            return acc;\n          }, [])\n          .map((group) => group), // Flatten the structure\n      };\n      if (!schema.endsWith('.ui.yml')) schema = schema.replace('.yml', '.ui.yml');\n      const jsonFormPath = `${path.replace('validations', 'jsonforms')}/${schema}`;\n      console.log(`Writing jsonform to: ${jsonFormPath}`);\n      writeFileSync(`${jsonFormPath}`, stringify(jsonForm));\n      return jsonForm;\n    }\n  }\n\n  public async generateAll(): Promise {\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ schema: file, path: hardConfigPath }));\n    } catch (error) {\n      console.log(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n        schema: file,\n        path: dynamicConfigPath,\n      }));\n    } catch (error) {\n      console.log(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    console.log('Generating jsonforms for all schemas');\n    console.log('Hard config files:', hardConfigFiles);\n    console.log('Dynamic config files:', dynamicConfigFiles);\n\n    const files = [...hardConfigFiles, ...dynamicConfigFiles].filter((file) => file.schema.endsWith('.yml'));\n    for (const file of files) {\n      this.generate(file);\n    }\n    return files.length;\n  }\n\n  public async findAll(): Promise {\n    const hardConfigPath = './src/management/identities/jsonforms/_config';\n    const dynamicConfigPath = './configs/identities/jsonforms';\n\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ file, path: hardConfigPath }));\n    } catch (error) {\n      console.log(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({ file, path: dynamicConfigPath }));\n    } catch (error) {\n      console.log(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    const files = [...hardConfigFiles, ...dynamicConfigFiles];\n    const result = [];\n    for (const fileObj of files) {\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.ui.yml', '');\n      result.push({ [key]: data });\n    }\n    return [result, files.length];\n  }\n\n  public async findOne(\n    schema: string,\n    options?: { mode?: string; employeeType?: string }\n  ): Promise {\n    const { mode = 'create', employeeType = '' } = options || {};\n    if (schema.endsWith('.yml')) schema = schema.replace('.yml', '');\n\n    const filePaths = [\n      `${schema}.${mode}.${employeeType.toLowerCase()}.ui`,\n      `${schema}.${mode}.ui`,\n      `${schema}.${employeeType.toLowerCase()}.ui`,\n      `${schema}.ui`,\n    ];\n\n    let finalPath = null;\n    const filePath = filePaths.find((path) => {\n      const resolved = this.resolveJsonFormPath(path)\n      if (!resolved) return null;\n      finalPath = resolved;\n\n      return resolved;\n    });\n\n    if (!filePath) {\n      throw new ValidationConfigException({ message: `File not found: ${schema}.ui.yml` });\n    }\n\n    return [filePath, parse(readFileSync(finalPath, 'utf-8'))];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesModule.html":{"url":"modules/IdentitiesModule.html","title":"module - IdentitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_imports\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesModule -->\n\nAgentsModule->IdentitiesModule\n\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\nIdentitiesModule -->\n\nFilestorageModule->IdentitiesModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nIdentitiesModule -->\n\nSettingsModule->IdentitiesModule\n\n\n\n\n\nIdentitiesCrudService \n\nIdentitiesCrudService \n\nIdentitiesCrudService  -->\n\nIdentitiesModule->IdentitiesCrudService \n\n\n\n\n\nIdentitiesUpsertService \n\nIdentitiesUpsertService \n\nIdentitiesUpsertService  -->\n\nIdentitiesModule->IdentitiesUpsertService \n\n\n\n\n\nIdentitiesForcepasswordService\n\nIdentitiesForcepasswordService\n\nIdentitiesModule -->\n\nIdentitiesForcepasswordService->IdentitiesModule\n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/identities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesForcepasswordService\n                        \n                        \n                            IdentitiesJsonformsService\n                        \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesCrudController\n                        \n                        \n                            IdentitiesUpsertController\n                        \n                        \n                            IdentitiesPhotoController\n                        \n                        \n                            IdentitiesDoublonController\n                        \n                        \n                            IdentitiesActivationController\n                        \n                        \n                            IdentitiesForcePasswordController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            FilestorageModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesCrudService\n                        \n                        \n                            IdentitiesUpsertService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                        \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/identities.module.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { forwardRef, MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Identities, IdentitiesSchema } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { IdentitiesValidationModule } from './validations/identities.validation.module';\nimport { IdentitiesJsonformsService } from './jsonforms/identities.jsonforms.service';\nimport { IdentitiesJsonformsModule } from './jsonforms/identities.jsonforms.module';\nimport { APP_FILTER } from '@nestjs/core';\nimport { IdentitiesValidationFilter } from '~/_common/filters/identities-validation.filter';\nimport { FilestorageModule } from '~/core/filestorage/filestorage.module';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { IdentitiesUpsertService } from '~/management/identities/identities-upsert.service';\nimport { IdentitiesCrudService } from '~/management/identities/identities-crud.service';\nimport { IdentitiesDoublonService } from '~/management/identities/identities-doublon.service';\nimport { IdentitiesCrudController } from '~/management/identities/identities-crud.controller';\nimport { IdentitiesUpsertController } from '~/management/identities/identities-upsert.controller';\nimport { IdentitiesPhotoController } from '~/management/identities/identities-photo.controller';\nimport { IdentitiesActivationController } from '~/management/identities/identities-activation.controller';\nimport { IdentitiesActivationService } from '~/management/identities/identities-activation.service';\nimport { IdentitiesDoublonController } from '~/management/identities/identities-doublon.controller';\nimport { IdentitiesForcePasswordController } from \"~/management/identities/identities-forcepassword.controller\";\nimport { IdentitiesForcepasswordService } from \"~/management/identities/identities-forcepassword.service\";\nimport { SettingsModule } from \"~/settings/settings.module\";\nimport { EnsureIdentitiesIndexMiddleware } from './_middlewares/ensure-identities-index.middleware';\nimport { AgentsModule } from '~/core/agents/agents.module';\n\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Identities.name,\n        imports: [IdentitiesValidationModule, IdentitiesJsonformsModule],\n        inject: [IdentitiesValidationService, IdentitiesJsonformsService],\n        useFactory: () => IdentitiesSchema,\n      },\n    ]),\n    FilestorageModule,\n    forwardRef(() => BackendsModule),\n    SettingsModule,\n    AgentsModule,\n  ],\n  providers: [\n    IdentitiesUpsertService,\n    IdentitiesCrudService,\n    IdentitiesDoublonService,\n    IdentitiesValidationService,\n    IdentitiesActivationService,\n    {\n      provide: APP_FILTER,\n      useClass: IdentitiesValidationFilter,\n    },\n    IdentitiesJsonformsService,\n    IdentitiesForcepasswordService\n  ],\n  controllers: [\n    IdentitiesCrudController,\n    IdentitiesUpsertController,\n    IdentitiesPhotoController,\n    IdentitiesDoublonController,\n    IdentitiesActivationController,\n    IdentitiesForcePasswordController\n  ],\n  exports: [IdentitiesCrudService, IdentitiesUpsertService],\n})\nexport class IdentitiesModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer.apply(EnsureIdentitiesIndexMiddleware).forRoutes('/management/identities/*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesPhotoController.html":{"url":"controllers/IdentitiesPhotoController.html","title":"controller - IdentitiesPhotoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesPhotoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-photo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPhotoRaw\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsertInetOrgPersonJpegPhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        readPhotoRaw\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPhotoRaw(res: Response, searchFilterSchema: FilterSchema, id: string, key: string, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('photo/raw')@ApiReadResponseDecorator(FilestorageDto)@ApiQuery({required: false, name: 'filters', style: 'deepObject', explode: true, type: 'object', schema: undefined, description: 'Filtres de recherche, voir la documentation de chaque endpoint pour plus de détails'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-photo.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        upsertInetOrgPersonJpegPhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertInetOrgPersonJpegPhoto(res: Response, body: Partial, searchFilterSchema: FilterSchema, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert/photo')@UseInterceptors(undefined)@ApiFileUploadDecorator(FileUploadDto, undefined, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-photo.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  ParseFilePipe,\n  Post,\n  Query,\n  Res,\n  UnauthorizedException,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiQuery, ApiTags, getSchemaPath, PartialType } from '@nestjs/swagger';\nimport { FilterSchema, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesDto } from './_dto/identities.dto';\nimport { Identities } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiFileUploadDecorator } from '~/_common/decorators/api-file-upload.decorator';\nimport { FilestorageCreateDto, FilestorageDto, FileUploadDto } from '~/core/filestorage/_dto/filestorage.dto';\nimport { FilestorageService } from '~/core/filestorage/filestorage.service';\nimport { FsType } from '~/core/filestorage/_enum/fs-type.enum';\nimport { join } from 'node:path';\nimport { omit } from 'radash';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\nimport { PaginatedFilterDto } from '~/_common/dto/paginated-filter.dto';\nimport { IdentitiesCrudService } from '~/management/identities/identities-crud.service';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { hash } from 'crypto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesPhotoController extends AbstractController {\n  public constructor(\n    protected readonly _service: IdentitiesCrudService,\n    protected readonly _validation: IdentitiesValidationService,\n    protected readonly filestorage: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n    private agentsService: AgentsService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n  };\n\n  @Post('upsert/photo')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiFileUploadDecorator(FileUploadDto, PartialType(FilestorageCreateDto), FilestorageDto)\n  public async upsertInetOrgPersonJpegPhoto(\n    @Res() res: Response,\n    @Body() body: Partial,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @UploadedFile(new ParseFilePipe({ fileIsRequired: false })) file?: Express.Multer.File,\n  ): Promise {\n    const identity = await this._service.findOne(searchFilterSchema);\n    const filter = {\n      namespace: 'identities',\n      path: join(\n        [identity.inetOrgPerson?.employeeType, identity.inetOrgPerson?.employeeNumber, 'jpegPhoto.jpg'].join('/'),\n      ),\n    };\n\n    const data = await this.filestorage.upsertFile(filter, {\n      ...filter,\n      type: FsType.FILE,\n      file,\n      ...omit(body, ['namespace', 'path', 'type', 'file'] as any),\n    });\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Public()\n  @Get('photo/raw')\n  @ApiReadResponseDecorator(FilestorageDto)\n  @ApiQuery({\n    required: false,\n    name: 'filters',\n    style: 'deepObject',\n    explode: true,\n    type: 'object',\n    schema: {\n      $ref: getSchemaPath(PaginatedFilterDto),\n    },\n    description: 'Filtres de recherche, voir la documentation de chaque endpoint pour plus de détails',\n  })\n  public async readPhotoRaw(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @Query('id') id: string,\n    @Query('key') key: string,\n    @Query('mime') mime: string = '',\n  ): Promise {\n    if (!id || !key) throw new UnauthorizedException();\n    const user = await this.agentsService.findById(id);\n    if (!user) throw new UnauthorizedException();\n    if (key !== hash('sha256', user.security.secretKey)) throw new UnauthorizedException();\n\n    const identity = await this._service.findOne(searchFilterSchema);\n    const [data, stream, parent] = await this.filestorage.findOneWithRawData({\n      namespace: 'identities',\n      path: join(\n        [identity.inetOrgPerson?.employeeType, identity.inetOrgPerson?.employeeNumber, 'jpegPhoto.jpg'].join('/'),\n      ),\n    });\n    await this.transformerService.transform(mime, res, data, stream, parent);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpdateDto.html":{"url":"classes/IdentitiesUpdateDto.html","title":"class - IdentitiesUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested, IsString } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  @IsOptional()\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsString()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: string;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesUpsertController.html":{"url":"controllers/IdentitiesUpsertController.html","title":"controller - IdentitiesUpsertController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesUpsertController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-upsert.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsert\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsertInetOrgPersonJpegPhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(res: Response, body: IdentitiesUpsertDto, filtersQuery: literal type[], forceString: string, errorOnNotFound: string, upsert: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert')@ApiCreateDecorator(IdentitiesUpsertDto, IdentitiesDto, {operationOptions: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-upsert.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpsertDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filtersQuery\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                        \n                                                forceString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                errorOnNotFound\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'false'\n                                            \n\n                                        \n                                        \n                                                upsert\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'true'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        upsertInetOrgPersonJpegPhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertInetOrgPersonJpegPhoto(res: Response, body: Partial, searchFilterSchema: FilterSchema, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert/photo')@UseInterceptors(undefined)@ApiFileUploadDecorator(FileUploadDto, undefined, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-upsert.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  HttpStatus,\n  ParseFilePipe,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiTags, PartialType } from '@nestjs/swagger';\nimport { FilterSchema, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Document, Types, isValidObjectId } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesDto, IdentitiesUpsertDto } from './_dto/identities.dto';\nimport { IdentityState } from './_enums/states.enum';\nimport { Identities } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiFileUploadDecorator } from '~/_common/decorators/api-file-upload.decorator';\nimport { FilestorageCreateDto, FilestorageDto, FileUploadDto } from '~/core/filestorage/_dto/filestorage.dto';\nimport { FilestorageService } from '~/core/filestorage/filestorage.service';\nimport { FsType } from '~/core/filestorage/_enum/fs-type.enum';\nimport { join } from 'node:path';\nimport { omit } from 'radash';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\nimport { IdentitiesUpsertService } from '~/management/identities/identities-upsert.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesUpsertController extends AbstractController {\n  public constructor(\n    protected readonly _service: IdentitiesUpsertService,\n    protected readonly _validation: IdentitiesValidationService,\n    protected readonly filestorage: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n  };\n\n  @Post('upsert')\n  @ApiCreateDecorator(IdentitiesUpsertDto, IdentitiesDto, {\n    operationOptions: {\n      summary: 'Importe ou met à jour une  en fonction des filtres fournis',\n    },\n  })\n  public async upsert(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesUpsertDto,\n    @Query('filters')\n    filtersQuery: {\n      [key: string]: string;\n    }[] = [],\n    @Query('force') forceString: string,\n    @Query('errorOnNotFound') errorOnNotFound: string = 'false',\n    @Query('upsert') upsert: string = 'true',\n  ): Promise;\n      message?: string;\n      validations?: MixedValue;\n    }>\n  > {\n    const force = /true|on|yes|1/i.test(forceString);\n    if (force) {\n      this.logger.warn('Upserting with force mode enabled.');\n    }\n    const filters = {};\n    if (filtersQuery.length === 0) {\n      throw new BadRequestException('Missing filters array');\n    }\n    for (const [key, filter] of Object.entries(filtersQuery)) {\n      filters[key] = isValidObjectId(filter) ? new Types.ObjectId(`${filter}`) : filter;\n    }\n\n    //TODO: check if the filters are valid and if the body is equal to filters\n\n    const [code, data] = await this._service.upsertWithFingerprint(filters, body, {\n      errorOnNotFound: /true|on|yes|1/i.test(errorOnNotFound),\n      upsert: /true|on|yes|1/i.test(upsert),\n    }, { force });\n\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as unknown as Identities).state === IdentityState.TO_COMPLETE) {\n      return res.status(HttpStatus.ACCEPTED).json({\n        statusCode: HttpStatus.ACCEPTED,\n        message: 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.',\n        data,\n      });\n    }\n\n    return res.status(code).json({\n      statusCode: code,\n      message: code === HttpStatus.OK ? 'Identitée mise à jour avec succès.' : 'Identitée créée avec succès.',\n      data,\n    });\n  }\n\n  @Post('upsert/photo')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiFileUploadDecorator(FileUploadDto, PartialType(FilestorageCreateDto), FilestorageDto)\n  public async upsertInetOrgPersonJpegPhoto(\n    @Res() res: Response,\n    @Body() body: Partial,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @UploadedFile(new ParseFilePipe({ fileIsRequired: false })) file?: Express.Multer.File,\n  ): Promise {\n    const identity = await this._service.findOne(searchFilterSchema);\n    const filter = {\n      namespace: 'identities',\n      path: join(\n        [identity.inetOrgPerson?.employeeType, identity.inetOrgPerson?.employeeNumber[0], 'jpegPhoto.jpg'].join('/'),\n      ),\n    };\n\n    const data = await this.filestorage.upsertFile(filter, {\n      ...filter,\n      type: FsType.FILE,\n      file,\n      ...omit(body, ['namespace', 'path', 'type', 'file'] as any),\n    });\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpsertDto.html":{"url":"classes/IdentitiesUpsertDto.html","title":"class - IdentitiesUpsertDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpsertDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesUpdateDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                $setOnInsert\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        $setOnInsert\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested, IsString } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  @IsOptional()\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsString()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: string;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesValidationController.html":{"url":"controllers/IdentitiesValidationController.html","title":"controller - IdentitiesValidationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesValidationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/validation\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    Async\n                                searchAll\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':schema')@ApiOperation({summary: 'Récupère un schéma personnalisé d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Liste les schémas personnalisés d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(res: Response, body: AdditionalFieldsPart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Effectue la validation des schémas personnalisés d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AdditionalFieldsPart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport { IdentitiesValidationService } from './identities.validation.service';\n\n@ApiTags('management/identities/validation')\n@Controller('management/identities/validation')\nexport class IdentitiesValidationController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesValidationService) {\n    super();\n  }\n\n  @Post()\n  @ApiOperation({ summary: \"Effectue la validation des schémas personnalisés d'identités\" })\n  public async validate(\n    @Res()\n    res: Response,\n    @Body() body: AdditionalFieldsPart,\n  ): Promise\n  > {\n    try {\n      const data = await this._service.validate(body);\n      return res.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Get()\n  @ApiOperation({ summary: \"Liste les schémas personnalisés d'identités\" })\n  async searchAll(@Res() res: Response): Promise {\n    const [result] = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get(':schema')\n  @ApiOperation({ summary: \"Récupère un schéma personnalisé d'identités\" })\n  async search(@Res() res: Response, @Param('schema') schema): Promise {\n    const result = await this._service.findOne(schema);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesValidationFilter.html":{"url":"classes/IdentitiesValidationFilter.html","title":"class - IdentitiesValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/identities-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/identities-validation.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            ValidationException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { ValidationException } from '~/_common/errors/ValidationException';\nimport { Response } from 'express';\n\n@Catch(ValidationException)\nexport class IdentitiesValidationFilter implements ExceptionFilter {\n  catch(exception: ValidationException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n\n    Logger.debug(exception['message'], 'IdentitiesValidationFilter');\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception.message,\n      validations: exception.getValidations(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesValidationModule.html":{"url":"modules/IdentitiesValidationModule.html","title":"module - IdentitiesValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_providers\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesValidationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesValidationService } from './identities.validation.service';\nimport { IdentitiesValidationController } from './identities.validation.controller';\n\n@Module({\n  controllers: [IdentitiesValidationController],\n  providers: [IdentitiesValidationService],\n  exports: [IdentitiesValidationService],\n})\nexport class IdentitiesValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesValidationService.html":{"url":"injectables/IdentitiesValidationService.html","title":"injectable - IdentitiesValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for validating identities.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                validateSchema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkAndCreateObjectClasses\n                            \n                            \n                                    Private\n                                    Async\n                                createAttributes\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                onApplicationBootstrap\n                            \n                            \n                                    Private\n                                resolveConfigPath\n                            \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Public\n                                    Async\n                                transformAttribute\n                            \n                            \n                                    Private\n                                    Async\n                                transformNumber\n                            \n                            \n                                    Private\n                                    Async\n                                translateAjv\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                            \n                                    Public\n                                    Async\n                                validateAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/validations/identities.validation.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        checkAndCreateObjectClasses\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAndCreateObjectClasses(data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:100\n                        \n                    \n\n\n            \n                \n                        check objectclasses and add missing keys\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createAttributes\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAttributes(key: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:374\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:429\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveConfigPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveConfigPath(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transformAttribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformAttribute(key: string, attribute: any, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:152\n                        \n                    \n\n\n            \n                \n                        Transform data following schema validation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                attribute\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        transformNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformNumber(value)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:214\n                        \n                    \n\n\n            \n                \n                        transform string in number if it is possible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        translateAjv\n                        \n                    \n                \n            \n            \n                \n                        \n                    translateAjv(messages)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:447\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messages\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(data: AdditionalFieldsPart | additionalFieldsPartDto, callException: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:230\n                        \n                    \n\n\n            \n                \n                        Validates additional fields for identities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        AdditionalFieldsPart | additionalFieldsPartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe additional fields data to validate.\n\n\n                                            \n                                        \n                                        \n                                                callException\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves if validation succeeds, or rejects with validation errors.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validateAttribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAttribute(key: string, attribute: any, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:309\n                        \n                    \n\n\n            \n                \n                        Validates a single attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the attribute to validate.\n\n\n                                            \n                                        \n                                        \n                                                attribute\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe attribute value to validate.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with an error message if validation fails, otherwise null.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Ajv\n\n                    \n                \n                \n                    \n                        Default value : new Ajv({ allErrors: true })\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateSchema\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger, OnApplicationBootstrap } from '@nestjs/common';\nimport { parse } from 'yaml';\nimport { existsSync, readFileSync, readdirSync, writeFileSync } from 'fs';\nimport { ConfigObjectSchemaDTO } from './_dto/config.dto';\nimport { diff } from 'radash';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport Ajv from 'ajv';\nimport addFormats from 'ajv-formats';\nimport localize from 'ajv-i18n';\nimport validSchema from './_config/validSchema';\nimport ajvErrors from 'ajv-errors';\nimport { ValidationConfigException, ValidationSchemaException } from '~/_common/errors/ValidationException';\nimport { additionalFieldsPartDto } from '../_dto/_parts/additionalFields.dto';\nimport { ConfigService } from \"@nestjs/config\";\n\n/**\n * Service responsible for validating identities.\n */\n@Injectable()\nexport class IdentitiesValidationService implements OnApplicationBootstrap {\n  private ajv: Ajv = new Ajv({ allErrors: true });\n  private validateSchema;\n  private logger: Logger;\n\n  public constructor(protected config: ConfigService) {\n    addFormats(this.ajv);\n    ajvErrors(this.ajv);\n    this.ajv.addFormat('number', /^\\d*$/);\n    this.validateSchema = this.ajv.compile(validSchema);\n    this.logger = new Logger(IdentitiesValidationService.name);\n\n  }\n\n  public onApplicationBootstrap(): void {\n    let files = [];\n    let defaultFiles = [];\n\n    this.logger.log('Initializing identities validations service');\n\n    try {\n      files = readdirSync(`${process.cwd()}/configs/identities/validations`);\n      defaultFiles = readdirSync(`${process.cwd()}/defaults/identities/validations`);\n    } catch (error) {\n      this.logger.error('Error reading identities validations files', error.message, error.stack);\n    }\n\n    for (const file of defaultFiles) {\n      if (!files.includes(file)) {\n        try {\n          const defaultFile = readFileSync(`${process.cwd()}/defaults/identities/validations/${file}`, 'utf-8');\n          writeFileSync(`${process.cwd()}/configs/identities/validations/${file}`, defaultFile);\n          this.logger.warn(`Copied default validation file: ${file}`);\n        } catch (error) {\n          this.logger.error(`Error copying default validation file: ${file}`, error.message, error.stack);\n        }\n      }\n    }\n\n    this.logger.log('Identities validations service initialized');\n  }\n\n  private resolveConfigPath(key: string): string | null {\n    //lecture deja dans le repertoire /validation pour les schemas non modifiables\n    const hardConfigPath = `./validation/${key}.yml`;\n    const dynamicConfigPath = `./configs/identities/validations/${key}.yml`;\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    return null;\n  }\n\n  public async transform(data: Partial = {}): Promise> {\n    if (!data.objectClasses) {\n      data.objectClasses = [];\n    }\n    if (!data.attributes) {\n      data.attributes = {};\n    }\n    data.validations = {};\n\n    const attributes = data.attributes || {};\n    const attributesKeys = Object.keys(attributes);\n\n    //test si il y a les attributs sans attributes\n    await this.checkAndCreateObjectClasses(data);\n    for (const key of attributesKeys) {\n      await this.transformAttribute(key, attributes[key], attributes);\n    }\n\n    return data\n  }\n\n  /**\n   * check objectclasses and add missing keys\n   * @param data\n   */\n  public async checkAndCreateObjectClasses(data) {\n    const objectClasses = data.objectClasses || [];\n    const attributes = data.attributes || {};\n    const attributesKeys = Object.keys(attributes);\n    for (const objectclass of objectClasses) {\n      if (!attributesKeys.includes(objectclass)) {\n        this.logger.log(objectclass + \" attribute not found creating\");\n        await this.createAttributes(objectclass, data);\n      }\n    }\n  }\n  private async createAttributes(key: string, data: any) {\n\n    // Validate the key to prevent prototype pollution\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      this.logger.error('Invalid key: ' + key);\n      throw new BadRequestException('Invalid key: ' + key);\n    }\n    const path = this.resolveConfigPath(key);\n    if (path === null) {\n      this.logger.error('schema for ' + key + ' does not exist');\n      throw new BadRequestException('schema for ' + key + ' does not exist');\n    }\n    const schema: any = parse(readFileSync(path, 'utf8'));\n    //creation de la clé\n    data.attributes[key] = {}\n    for (const [index, def] of Object.entries(schema?.properties || {})) {\n      switch ((def as any).type) {\n        case 'array':\n          data.attributes[key][index] = [];\n          break;\n\n        case 'object':\n          data.attributes[key][index] = {};\n          break;\n\n        case 'number':\n          data.attributes[key][index] = 0;\n          break;\n\n        default:\n          data.attributes[key][index] = '';\n          break;\n      }\n    }\n  }\n  /**\n   * Transform data following schema validation\n   * @param key\n   * @param attribute\n   * @param data\n   */\n  public async transformAttribute(key: string, attribute: any, data: any) {\n\n    const path = this.resolveConfigPath(key);\n    if (path === null) {\n      this.logger.error('schema for ' + key + ' does not exist');\n      throw new BadRequestException('schema for ' + key + ' does not exist');\n    }\n    const schema: any = parse(readFileSync(path, 'utf8'));\n    this.logger.debug(`Additionalfields object transformation: ${JSON.stringify(data[key])}`);\n    for (const [index, def] of Object.entries(schema?.properties || {})) {\n      switch ((def as any).type) {\n        case 'array':\n          if (typeof data[key][index] === 'undefined' || data[key][index] === null) {\n            data[key][index] = [];\n          }\n          if (!(data[key][index] instanceof Array)) {\n            data[key][index] = [data[key][index]];\n          }\n          if (typeof def['items'] !== 'undefined') {\n            //test si toutes les valeurs sont du bon type\n            for (const elems in data[key][index]) {\n              if (typeof data[key][index][elems] !== def['items']['type']) {\n                switch (def['items']['type']) {\n                  case 'string':\n                    data[key][index][elems] = String(data[key][index][elems]);\n                    break;\n                  case 'number':\n                    data[key][index][elems] = await this.transformNumber(data[key][index][elems])\n                    break;\n                }\n              }\n            }\n          }\n          break;\n        case 'number':\n          if (typeof data[key][index] === 'undefined' || data[key][index] === null) {\n            data[key][index] = 0;\n          }\n          if (typeof data[key][index] !== 'number') {\n            //on ne convertit pas si la chaine est vide\n            if (typeof data[key][index] === 'string' && data[key][index] !== \"\") {\n              data[key][index] = await this.transformNumber(data[key][index])\n            }\n          }\n          break;\n        case 'string':\n          if (typeof data[key][index] === 'undefined' || data[key][index] === null) {\n            data[key][index] = \"\";\n          }\n          if (typeof data[key][index] !== 'string') {\n            data[key][index] = String(data[key][index]);\n          }\n          break;\n      }\n    }\n  }\n\n  /**\n   * transform string in number if it is possible\n   * @param value\n   * @private\n   */\n  private async transformNumber(value) {\n    if (typeof value === 'string') {\n      const tr = parseFloat(value)\n      if (!isNaN(tr)) {\n        return tr\n      } else {\n        return 0\n      }\n    }\n    return value\n  }\n  /**\n   * Validates additional fields for identities.\n   * @param data - The additional fields data to validate.\n   * @returns A promise that resolves if validation succeeds, or rejects with validation errors.\n   */\n  public async validate(data: AdditionalFieldsPart | additionalFieldsPartDto, callException: boolean = true): Promise {\n    if (!data.objectClasses) {\n      data.objectClasses = [];\n    }\n    if (!data.attributes) {\n      data.attributes = {};\n    }\n    data.validations = {};\n\n    const objectClasses = data.objectClasses || [];\n    const attributes = data.attributes || {};\n    const attributesKeys = Object.keys(attributes);\n    const validations = {};\n    let reject = false;\n\n    // Check for missing attributes\n    for (const attribute of diff(objectClasses, attributesKeys)) {\n      validations[attribute] = `Attribut '${attribute}' manquant dans les champs additionnels`;\n      reject = true;\n    }\n\n    for (const key of attributesKeys) {\n      // Check for invalid object classes\n      if (!objectClasses.includes(key)) {\n        validations[key] =\n          `${key} n'est pas une classe d'objet valide dans ce contexte, les classes d'objets valides sont: ${objectClasses.join(\n            ', ',\n          )}'`;\n        reject = true;\n        continue;\n      }\n\n      // Check for missing schema files\n      const path = this.resolveConfigPath(key);\n      if (!existsSync(path)) {\n        validations['message'] = `Fichier de config '${key}.yml' introuvable`;\n        throw new ValidationConfigException(validations);\n      }\n\n      // Check for invalid schema\n      this.logger.verbose(`Validating schema ${key}.yml`);\n      const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n      if (!this.validateSchema(schema)) {\n        validations['message'] = `Schema ${key}.yml invalide: ${this.ajv.errorsText(this.validateSchema.errors)}`;\n        throw new ValidationConfigException(validations);\n      }\n      //verification des required, il faut que l'entree soit presente dans les proprietes\n      if (schema.hasOwnProperty('required')) {\n        for (const required of schema['required']) {\n          if (!schema['properties'].hasOwnProperty(required)) {\n            validations['message'] = `Schema ${key}.yml invalide : required : ${required} without property`;\n            throw new ValidationConfigException(validations);\n          }\n        }\n      }\n    }\n    // Validate each attribute\n    for (const key of attributesKeys) {\n      const validationError = await this.validateAttribute(key, attributes[key], attributes);\n      if (validationError) {\n        validations[key] = validationError;\n        reject = true;\n      } else {\n        delete validations[key];\n      }\n    }\n\n    if (reject && callException) {\n      throw new ValidationSchemaException({ validations });\n    }\n    return Promise.resolve({ message: 'Validation succeeded' });\n  }\n\n  /**\n   * Validates a single attribute.\n   * @param key - The key of the attribute to validate.\n   * @param attribute - The attribute value to validate.\n   * @returns A promise that resolves with an error message if validation fails, otherwise null.\n   */\n  public async validateAttribute(key: string, attribute: any, data: any): Promise {\n    const path = this.resolveConfigPath(key);\n    if (path === null) {\n      this.logger.error('schema for ' + key + ' does not exist');\n      throw new BadRequestException('schema for ' + key + ' does not exist');\n    }\n    const schema: any = parse(readFileSync(path, 'utf8'));\n    // mise de min length et minItems dans les champs requis\n    if (schema.hasOwnProperty('required')) {\n      for (const required of schema['required']) {\n        switch (schema['properties'][required]['type']) {\n          case 'array':\n            if (!schema['properties'][required]['minItems']) {\n              schema['properties'][required]['minItems'] = 1\n            }\n            break;\n          case 'string':\n            if (!schema['properties'][required]['minLength']) {\n              schema['properties'][required]['minLength'] = 1\n            }\n            break;\n        }\n      }\n    }\n    for (const [index, def] of Object.entries(schema?.properties || {})) {\n      if (typeof data[key][index] === 'undefined' || data[key][index] === null) {\n        switch ((def as any).type) {\n          case 'array':\n            data[key][index] = [];\n            break;\n\n          case 'object':\n            data[key][index] = {};\n            break;\n\n          case 'number':\n            data[key][index] = 0;\n            break;\n\n          default:\n            data[key][index] = '';\n            break;\n        }\n      }\n    }\n\n    this.logger.debug(`Additionalfields object validation: ${JSON.stringify(data[key])}`);\n    //limitation de la taille du data pour le pb de deny of service de ajv\n    //voir (https://ajv.js.org/security.html)\n    if (Object.keys(data[key]).length > 500) {\n      this.logger.error('Request too large');\n      throw new BadRequestException('Request too large');\n    }\n    const ok = await this.ajv.validate(schema, data[key]);\n    if (ok === false) {\n      const retErrors = {};\n      await this.translateAjv(this.ajv.errors)\n      for (const err of this.ajv.errors) {\n        retErrors[err['instancePath'].substring(1)] = err['instancePath'].substring(1) + ' ' + err['message']\n      }\n      return (retErrors)\n    }\n    return null\n  }\n\n  public async findAll(): Promise {\n    this.logger.debug(['findAll', JSON.stringify(Object.values({ ...arguments }))].join(' '));\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n    // Retrieve files from each directory and tag them with their source\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({\n        file,\n        path: hardConfigPath,\n        source: 'hardConfig',\n      }));\n    } catch (error) {\n      this.logger.error(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n        file,\n        path: dynamicConfigPath,\n        source: 'dynamicConfig',\n      }));\n    } catch (error) {\n      this.logger.error(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    // const files = [...hardConfigFiles, ...dynamicConfigFiles];\n    const filesMap = new Map();\n\n    for (const target of dynamicConfigFiles) {\n      filesMap.set(target.file, target);\n    }\n\n    for (const target of hardConfigFiles) {\n      if (filesMap.has(target.file)) {\n        continue;\n      }\n      filesMap.set(target.file, target);\n    }\n\n    const files = Array.from(filesMap.values());\n\n    const result = [];\n    for (const fileObj of files) {\n      if (/.yml$/.test(fileObj.file) === false) continue;\n\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.yml', '');\n      result.push({ [key]: data, source: fileObj.source, name: key });\n    }\n    return [result, files.length];\n  }\n\n  public async findOne(schema): Promise {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '));\n    let filePath = '';\n    if (schema === 'inetorgperson') {\n      filePath = './validation/inetorgperson.yml';\n      if (!existsSync(filePath)) {\n        const message = `File not found /validation/inetorgperson.yml`;\n        throw new ValidationConfigException({ message });\n      }\n    } else {\n      filePath = this.resolveConfigPath(schema);\n      if (!existsSync(filePath)) {\n        const message = `File not found: ${filePath}`;\n        throw new ValidationConfigException({ message });\n      }\n    }\n    return parse(readFileSync(filePath, 'utf-8'));\n  }\n  private async translateAjv(messages) {\n    switch (this.config.get('application.lang')) {\n      case 'en':\n        break\n      case 'fr':\n      case 'fr_FR.UTF-8':\n      case 'fr_FR':\n        localize.fr(messages)\n        break\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAccountDto.html":{"url":"classes/InitAccountDto.html","title":"class - InitAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uid', description: 'paul.smith'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-account.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class InitAccountDto {\n  @ApiProperty({ example: 'uid', description: 'paul.smith' })\n  @IsString()\n  public uid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitInfoPart.html":{"url":"classes/InitInfoPart.html","title":"class - InitInfoPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitInfoPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/init-info.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                initDate\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                sentDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        initDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/init-info.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        sentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/init-info.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class InitInfoPart extends Document {\n  @Prop({ type: Date })\n  public sentDate?: Date;\n\n  @Prop({ type: Date })\n  public initDate?: Date;\n}\nexport const InitInfoPartSchema = SchemaFactory.createForClass(InitInfoPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitManyDto.html":{"url":"classes/InitManyDto.html","title":"class - InitManyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitManyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-many.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Envoie la demande d init à plusieurs identitées. Id des identities'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-many.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class InitManyDto {\n  @ApiProperty({ description: 'Envoie la demande d init à plusieurs identitées. Id des identities' })\n  @IsArray()\n  public ids: Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitResetDto.html":{"url":"classes/InitResetDto.html","title":"class - InitResetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitResetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-reset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: 0, description: '0 = send by mail, 1 = send by SMS'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-reset.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-reset.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class InitResetDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User id' })\n  public uid: string;\n\n  @IsNumber()\n  @ApiProperty({ example: 0, description: '0 = send by mail, 1 = send by SMS' })\n  public type: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLogOptions.html":{"url":"interfaces/InternalLogOptions.html","title":"interface - InternalLogOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLogOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     Request\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Request\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         InternalLogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InternalLogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InternalLogger.html":{"url":"injectables/InternalLogger.html","title":"injectable - InternalLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InternalLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                connection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commonLogDb\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                    Public\n                                    Async\n                                initialize\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_options?: InternalLoggerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/internal.logger.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _options\n                                                  \n                                                        \n                                                                        InternalLoggerOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commonLogDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    commonLogDb(payload: literal type, options: InternalLogOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InternalLogOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/core/logger/internal.logger.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLoggerOptions.html":{"url":"interfaces/InternalLoggerOptions.html","title":"interface - InternalLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLoggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     LogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Jobs.html":{"url":"classes/Jobs.html","title":"class - Jobs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Jobs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/jobs.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                concernedTo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                finishedAt\n                            \n                            \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                params\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                processedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                result\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ConcernedToPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        finishedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        processedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JobState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: JobState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { JobState } from '../_enums/state.enum';\nimport { ConcernedToPart, ConcernedToPartSchema } from './_parts/concerned-to.parts.schema';\n\nexport type JobsDocument = Jobs & Document;\n\n@Schema({ versionKey: false })\nexport class Jobs extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public jobId: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public action: string;\n\n  @Prop({\n    type: ConcernedToPartSchema,\n  })\n  public concernedTo?: ConcernedToPart;\n\n  @Prop({ type: Types.ObjectId })\n  public task?: Types.ObjectId;\n\n  @Prop({ type: String })\n  public comment?: string;\n\n  @Prop({ type: Object, default: {} })\n  public params?: object;\n\n  @Prop({ type: Object, default: {} })\n  public result?: object;\n\n  @Prop({ type: Date })\n  public processedAt?: Date;\n\n  @Prop({ type: Date })\n  public finishedAt?: Date;\n\n  @Prop({ type: Number, enum: JobState, default: JobState.CREATED })\n  state: JobState;\n}\n\nexport const JobsSchema = SchemaFactory.createForClass(Jobs);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(JobsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/jobs/jobs.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, req: Request, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/jobs/jobs.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus, Param, Req, Res } from '@nestjs/common';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Request, Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { JobsDto } from './_dto/jobs.dto';\nimport { JobsService } from './jobs.service';\n\n@ApiTags('core/jobs')\n@Controller('jobs')\nexport class JobsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    jobId: 1,\n    action: 1,\n    concernedTo: 1,\n    metadata: 1,\n    params: 1,\n    result: 1,\n    state: 1,\n  };\n\n  public constructor(private readonly _service: JobsService) {\n    super();\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(JobsDto, JobsController.projection))\n  public async search(\n    @Res() res: Response,\n    @Req() req: Request,\n    @SearchFilterSchema({ unsafe: true }) searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    // console.log('req', req.query)\n\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      JobsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(JobsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsCreateDto.html":{"url":"classes/JobsCreateDto.html","title":"class - JobsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                concernedTo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                params\n                            \n                            \n                                    \n                                    \n                                    Public\n                                result\n                            \n                            \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    Public\n                                task\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: ConcernedToPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {IsMongoId, IsNotEmpty, IsNumber, IsObject, IsString, ValidateNested} from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\nimport {JobState} from \"~/core/jobs/_enums/state.enum\";\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n\n  @IsNumber()\n  @ApiProperty()\n  public state: number;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsDto.html":{"url":"classes/JobsDto.html","title":"class - JobsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            JobsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                concernedTo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                params\n                            \n                            \n                                    \n                                    \n                                    Public\n                                result\n                            \n                            \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    Public\n                                task\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: ConcernedToPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {IsMongoId, IsNotEmpty, IsNumber, IsObject, IsString, ValidateNested} from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\nimport {JobState} from \"~/core/jobs/_enums/state.enum\";\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n\n  @IsNumber()\n  @ApiProperty()\n  public state: number;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService \n\nJobsService \n\n\n\nJobsModule\n\nJobsModule\n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Jobs, JobsSchema } from './_schemas/jobs.schema';\nimport { JobsController } from './jobs.controller';\nimport { JobsService } from './jobs.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Jobs.name,\n        useFactory: () => JobsSchema,\n      },\n    ]),\n  ],\n  providers: [JobsService],\n  controllers: [JobsController],\n  exports: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/jobs/jobs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:56\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:191\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:358\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:81\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:156\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:233\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:296\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Jobs } from './_schemas/jobs.schema';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class JobsService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Jobs.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsUpdateDto.html":{"url":"classes/JobsUpdateDto.html","title":"class - JobsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(JobsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {IsMongoId, IsNotEmpty, IsNumber, IsObject, IsString, ValidateNested} from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\nimport {JobState} from \"~/core/jobs/_enums/state.enum\";\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n\n  @IsNumber()\n  @ApiProperty()\n  public state: number;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, payload, done: VerifiedCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/jwt.strategy.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifiedCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(JwtStrategy.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/_strategies/jwt.strategy.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy, VerifiedCallback } from 'passport-jwt';\nimport { AuthService } from '../auth.service';\nimport { Request } from 'express';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { JwtPayload } from 'jsonwebtoken';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  protected logger: Logger = new Logger(JwtStrategy.name);\n\n  constructor(\n    private readonly auth: AuthService,\n    config: ConfigService,\n  ) {\n    super({\n      secretOrKey: `${config.get('jwt.options.secret')}`,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      passReqToCallback: true,\n    });\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  public async validate(\n    _: Request,\n    payload: JwtPayload & { identity: AgentType },\n    done: VerifiedCallback,\n  ): Promise {\n    this.logger.verbose(`Atempt to authenticate with JTI: `);\n    if (!payload?.identity) return done(new UnauthorizedException(), false);\n    const user = await this.auth.verifyIdentity(payload);\n\n    if (!user) return done(new ForbiddenException(), false);\n    return done(null, payload?.identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Keyrings.html":{"url":"classes/Keyrings.html","title":"class - Keyrings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Keyrings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_schemas/keyrings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type KeyringsDocument = Keyrings & Document;\n\n@Schema({ versionKey: false })\nexport class Keyrings extends AbstractSchema {\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public name: string;\n\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public token: string;\n\n  @Prop({\n    type: [String],\n    default: ['0.0.0.0/0'],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n}\n\nexport const KeyringsSchema = SchemaFactory.createForClass(Keyrings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCommand.html":{"url":"classes/KeyringsCommand.html","title":"class - KeyringsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KeyringsController.html":{"url":"controllers/KeyringsController.html","title":"controller - KeyringsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KeyringsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                keyrings\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: KeyringsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Types } from 'mongoose';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { Response } from 'express';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport {\n  FilterOptions,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\nimport { KeyringsCreateDto, KeyringsDto } from '~/core/keyrings/_dto/keyrings.dto';\n\n@ApiTags('core/keyrings')\n@Controller('keyrings')\nexport class KeyringsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    token: 0,\n    // allowedNetworks: 1,\n    // suspendedAt: 1,\n  };\n\n  public constructor(private readonly _service: KeyringsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n  public async create(@Res() res: Response, @Body() body: KeyringsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(KeyringsDto, KeyringsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      KeyringsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(KeyringsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      token: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(KeyringsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateCommand.html":{"url":"classes/KeyringsCreateCommand.html","title":"class - KeyringsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, keyringsService: KeyringsService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateDto.html":{"url":"classes/KeyringsCreateDto.html","title":"class - KeyringsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateQuestions.html":{"url":"classes/KeyringsCreateQuestions.html","title":"class - KeyringsCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseName\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseName(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Name ?', name: 'name'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsDto.html":{"url":"classes/KeyringsDto.html","title":"class - KeyringsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            KeyringsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeyringsModule.html":{"url":"modules/KeyringsModule.html","title":"module - KeyringsModule","body":"\n                   \n\n\n\n\n    Modules\n    KeyringsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_providers\n\n\n\ncluster_KeyringsModule_exports\n\n\n\n\nKeyringsService \n\nKeyringsService \n\n\n\nKeyringsModule\n\nKeyringsModule\n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/keyrings/keyrings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KeyringsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { KeyringsSchema, Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from './keyrings.service';\nimport { KeyringsController } from './keyrings.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Keyrings.name,\n        useFactory: () => KeyringsSchema,\n      },\n    ]),\n  ],\n  providers: [KeyringsService],\n  controllers: [KeyringsController],\n  exports: [KeyringsService],\n})\nexport class KeyringsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyringsService.html":{"url":"injectables/KeyringsService.html","title":"injectable - KeyringsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeyringsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/keyrings/keyrings.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: KeyringsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:16\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:56\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:358\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:81\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:156\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:233\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:296\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { Model, SaveOptions, Document } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { KeyringsCreateDto } from './_dto/keyrings.dto';\nimport { randomBytes } from 'node:crypto';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\n@Injectable()\nexport class KeyringsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Keyrings.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: KeyringsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    const token = randomBytes(64).toString('hex');\n    return await super.create(\n      {\n        ...data,\n        token,\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LifeCycle1752765731.html":{"url":"classes/LifeCycle1752765731.html","title":"class - LifeCycle1752765731","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LifeCycle1752765731\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/jobs/1752765731-lifecycle.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _migrateLifeCycleToChar\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(mongo: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/migrations/jobs/1752765731-lifecycle.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongo\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LifeCycle1752765731.name)\n                    \n                \n                    \n                        \n                                Defined in src/migrations/jobs/1752765731-lifecycle.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _migrateLifeCycleToChar\n                        \n                    \n                \n            \n            \n                \n                        \n                    _migrateLifeCycleToChar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/jobs/1752765731-lifecycle.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/jobs/1752765731-lifecycle.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\"\nimport { InjectConnection, InjectModel } from \"@nestjs/mongoose\"\nimport { Connection, Model } from \"mongoose\"\nimport { isNumber } from \"radash\"\n\nexport default class LifeCycle1752765731 {\n  private readonly logger = new Logger(LifeCycle1752765731.name)\n\n  public constructor(@InjectConnection() private mongo: Connection) {\n  }\n\n  public async up(): Promise {\n    this.logger.log('LifeCycle1752765731 up started')\n\n    await this._migrateLifeCycleToChar()\n  }\n\n  private async _migrateLifeCycleToChar(): Promise {\n    const identities = await this.mongo.collection('identities').find();\n\n    for await (const identity of identities) {\n      let lifecycle = identity.lifecycle;\n\n      if (typeof lifecycle === 'number' || isNumber(lifecycle)) {\n        this.logger.log(`Migrating lifecycle for identity ${identity._id}`);\n\n        if (typeof lifecycle === 'string') {\n          lifecycle = parseInt(lifecycle, 10);\n        }\n\n        switch (lifecycle) {\n          case 0:\n            identity.lifecycle = 'P'; // PROVISIONAL\n            break;\n          case 1:\n            identity.lifecycle = 'A'; // ACTIVE\n            break;\n          case 2:\n            identity.lifecycle = 'O'; // OFFICIAL\n            break;\n          case 3:\n            identity.lifecycle = 'W'; // WAIT\n            break;\n          case -1:\n            identity.lifecycle = 'I'; // INACTIVE\n            break;\n          case -2:\n            identity.lifecycle = 'D'; // DELETED\n            break;\n          default:\n            this.logger.warn(`Unknown lifecycle value ${lifecycle} for identity ${identity._id} ! Applying default ACTIVE`);\n            identity.lifecycle = 'A'; // ACTIVE\n            break;\n        }\n\n        this.mongo.collection('identities').updateOne(\n          { _id: identity._id },\n          {\n            $set: {\n              lifecycle: identity.lifecycle,\n              ignoreLifecycle: false,\n            }\n          },\n        );\n      }\n    }\n\n    this.logger.log('Migration terminée avec succès');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lifecycle.html":{"url":"classes/Lifecycle.html","title":"class - Lifecycle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lifecycle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/lifecycle/_schemas/lifecycle.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                date\n                            \n                            \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    Public\n                                refId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_schemas/lifecycle.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: IdentityLifecycle, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_schemas/lifecycle.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        refId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Identities', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_schemas/lifecycle.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\n\nexport type LifecycleDocument = Lifecycle & Document;\n\nexport const LifecycleRefId = 'refId';\n\n@Schema({ versionKey: false, minimize: false })\nexport class Lifecycle extends AbstractSchema {\n  @Prop({\n    type: Types.ObjectId,\n    ref: 'Identities',\n    required: true,\n  })\n  public refId: Types.ObjectId;\n\n  @Prop({\n    type: String,\n    enum: IdentityLifecycle,\n    required: true,\n  })\n  public lifecycle: IdentityLifecycle;\n\n  @Prop({\n    type: Date,\n    default: Date.now,\n  })\n  public date: Date;\n}\n\nexport const LifecycleSchema = SchemaFactory.createForClass(Lifecycle);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LifecycleController.html":{"url":"controllers/LifecycleController.html","title":"controller - LifecycleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LifecycleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/lifecycle/lifecycle.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lifecycle\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getLifecycleHistory\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getRecentChanges\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getStats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getLifecycleHistory\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLifecycleHistory(identityId: Types.ObjectId, res: Response, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get lifecycle history for an identity'})@ApiParam({name: 'identityId', description: 'Identity ID'})@Get('identity/:identityId')\n                \n            \n\n                    \n                        \n                            Defined in src/management/lifecycle/lifecycle.controller.ts:35\n                        \n                    \n\n\n            \n                \n                        Get lifecycle history for an identity\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                identityId\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the identity to retrieve lifecycle history for\n\n\n                                            \n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A response containing the lifecycle history of the specified identity\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getRecentChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRecentChanges(searchFilterOptions: FilterOptions, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get recent lifecycle changes'})@Get('recent')\n                \n            \n\n                    \n                        \n                            Defined in src/management/lifecycle/lifecycle.controller.ts:73\n                        \n                    \n\n\n            \n                \n                        Get recent lifecycle changes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A response containing the recent lifecycle changes\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStats(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get lifecycle statistics'})@Get('stats')\n                \n            \n\n                    \n                        \n                            Defined in src/management/lifecycle/lifecycle.controller.ts:57\n                        \n                    \n\n\n            \n                \n                        Get lifecycle history for an agent\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A response containing the lifecycle history of the specified agent\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  HttpStatus,\n  Param,\n  Res\n} from '@nestjs/common';\nimport { ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\nimport { FilterOptions, SearchFilterOptions } from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { Lifecycle } from './_schemas/lifecycle.schema';\nimport { LifecycleService } from './lifecycle.service';\n\n@ApiTags('management/lifecycle')\n@Controller('lifecycle')\nexport class LifecycleController extends AbstractController {\n  public constructor(\n    protected readonly _service: LifecycleService,\n  ) {\n    super();\n  }\n\n  /**\n   * Get lifecycle history for an identity\n   *\n   * @param identityId - The ID of the identity to retrieve lifecycle history for\n   * @returns A response containing the lifecycle history of the specified identity\n   */\n  @ApiOperation({ summary: 'Get lifecycle history for an identity' })\n  @ApiParam({ name: 'identityId', description: 'Identity ID' })\n  @Get('identity/:identityId')\n  public async getLifecycleHistory(\n    @Param('identityId', ObjectIdValidationPipe) identityId: Types.ObjectId,\n    @Res() res: Response,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise> {\n    const [total, data] = await this._service.getLifecycleHistory(identityId, searchFilterOptions);\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n      total,\n    });\n  }\n\n  /**\n   * Get lifecycle history for an agent\n   *\n   * @param agentId - The ID of the agent to retrieve lifecycle history for\n   * @returns A response containing the lifecycle history of the specified agent\n   */\n  @ApiOperation({ summary: 'Get lifecycle statistics' })\n  @Get('stats')\n  public async getStats(\n    @Res() res: Response,\n  ): Promise> {\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: await this._service.getLifecycleStats(),\n    });\n  }\n\n  /**\n   * Get recent lifecycle changes\n   *\n   * @returns A response containing the recent lifecycle changes\n   */\n  @ApiOperation({ summary: 'Get recent lifecycle changes' })\n  @Get('recent')\n  public async getRecentChanges(\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n    @Res() res: Response,\n  ): Promise> {\n    const [total, data] = await this._service.getRecentChanges(searchFilterOptions);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n      total,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LifecycleCreateDto.html":{"url":"classes/LifecycleCreateDto.html","title":"class - LifecycleCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LifecycleCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/lifecycle/_dto/lifecycle.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    Public\n                                refId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Date of the lifecycle event', type: Date})@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_dto/lifecycle.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Lifecycle state', enum: IdentityLifecycle})@IsEnum(IdentityLifecycle)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_dto/lifecycle.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        refId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the identity', type: String})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_dto/lifecycle.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsDateString, IsEnum, IsMongoId, IsNotEmpty } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\n\nexport class LifecycleCreateDto {\n  @ApiProperty({\n    description: 'Reference to the identity',\n    type: String,\n  })\n  @IsNotEmpty()\n  public refId: Types.ObjectId;\n\n  @ApiProperty({\n    description: 'Lifecycle state',\n    enum: IdentityLifecycle,\n  })\n  @IsEnum(IdentityLifecycle)\n  @IsNotEmpty()\n  public lifecycle: IdentityLifecycle;\n\n  @ApiProperty({\n    description: 'Date of the lifecycle event',\n    type: Date,\n  })\n  @IsDateString()\n  public date: Date;\n}\n\nexport class LifecycleDto extends LifecycleCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class LifecycleUpdateDto extends PartialType(LifecycleCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LifecycleDto.html":{"url":"classes/LifecycleDto.html","title":"class - LifecycleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LifecycleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/lifecycle/_dto/lifecycle.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            LifecycleCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    Public\n                                refId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/lifecycle/_dto/lifecycle.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Date of the lifecycle event', type: Date})@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         LifecycleCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         LifecycleCreateDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Lifecycle state', enum: IdentityLifecycle})@IsEnum(IdentityLifecycle)@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         LifecycleCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         LifecycleCreateDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        refId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the identity', type: String})@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         LifecycleCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         LifecycleCreateDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsDateString, IsEnum, IsMongoId, IsNotEmpty } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\n\nexport class LifecycleCreateDto {\n  @ApiProperty({\n    description: 'Reference to the identity',\n    type: String,\n  })\n  @IsNotEmpty()\n  public refId: Types.ObjectId;\n\n  @ApiProperty({\n    description: 'Lifecycle state',\n    enum: IdentityLifecycle,\n  })\n  @IsEnum(IdentityLifecycle)\n  @IsNotEmpty()\n  public lifecycle: IdentityLifecycle;\n\n  @ApiProperty({\n    description: 'Date of the lifecycle event',\n    type: Date,\n  })\n  @IsDateString()\n  public date: Date;\n}\n\nexport class LifecycleDto extends LifecycleCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class LifecycleUpdateDto extends PartialType(LifecycleCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LifecycleModule.html":{"url":"modules/LifecycleModule.html","title":"module - LifecycleModule","body":"\n                   \n\n\n\n\n    Modules\n    LifecycleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LifecycleModule\n\n\n\ncluster_LifecycleModule_exports\n\n\n\ncluster_LifecycleModule_providers\n\n\n\ncluster_LifecycleModule_imports\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nLifecycleModule\n\nLifecycleModule\n\nLifecycleModule -->\n\nIdentitiesModule->LifecycleModule\n\n\n\n\n\nLifecycleService \n\nLifecycleService \n\nLifecycleService  -->\n\nLifecycleModule->LifecycleService \n\n\n\n\n\nLifecycleService\n\nLifecycleService\n\nLifecycleModule -->\n\nLifecycleService->LifecycleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/lifecycle/lifecycle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LifecycleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LifecycleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LifecycleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Lifecycle, LifecycleSchema } from './_schemas/lifecycle.schema';\nimport { LifecycleController } from './lifecycle.controller';\nimport { LifecycleService } from './lifecycle.service';\nimport { IdentitiesModule } from '../identities/identities.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Lifecycle.name,\n        schema: LifecycleSchema,\n      },\n    ]),\n    IdentitiesModule,\n  ],\n  providers: [LifecycleService],\n  controllers: [LifecycleController],\n  exports: [LifecycleService],\n})\nexport class LifecycleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LifecycleSource.html":{"url":"interfaces/LifecycleSource.html","title":"interface - LifecycleSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LifecycleSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/lifecycle/lifecycle.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [source: string]:    Partial[]\n\n                    \n                \n                        \n                            \n                                Defined in src/management/lifecycle/lifecycle.service.ts:19\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnApplicationBootstrap, OnModuleInit } from '@nestjs/common';\nimport { OnEvent } from '@nestjs/event-emitter';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { FilterOptions } from '@the-software-compagny/nestjs_module_restools';\nimport { Model, Query, Types } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Identities } from '../identities/_schemas/identities.schema';\nimport { Lifecycle, LifecycleRefId } from './_schemas/lifecycle.schema';\nimport { readdirSync, readFileSync, writeFileSync } from 'node:fs';\nimport { parse } from 'yaml';\nimport { plainToInstance } from 'class-transformer';\nimport { ConfigObjectIdentitiesDTO, ConfigObjectSchemaDTO } from './_dto/config.dto';\nimport { validateOrReject, ValidationError } from 'class-validator';\nimport { omit } from 'radash';\nimport { IdentitiesCrudService } from '../identities/identities-crud.service';\nimport { SchedulerRegistry } from '@nestjs/schedule';\nimport { CronJob } from 'cron';\n\ninterface LifecycleSource {\n  [source: string]: Partial[];\n}\n\ntype ConfigObjectIdentitiesDTOWithSource = Omit & {\n  source: string;\n};\n\n@Injectable()\nexport class LifecycleService extends AbstractServiceSchema implements OnApplicationBootstrap, OnModuleInit {\n  protected lifecycleSources: LifecycleSource = {};\n\n  public constructor(\n    @InjectModel(Lifecycle.name) protected _model: Model,\n    protected readonly identitiesService: IdentitiesCrudService,\n    private schedulerRegistry: SchedulerRegistry,\n  ) {\n    super();\n  }\n\n  /**\n   * Initialize the LifecycleService\n   *\n   * This method is called when the module is initialized.\n   * It reads the lifecycle validation files from the `configs/lifecycle` directory and copies default files from `defaults/lifecycle` if they do not exist.\n   * It logs the initialization process and any errors encountered during file reading or copying.\n   */\n  public onModuleInit(): void {\n    let files = [];\n    let defaultFiles = [];\n\n    this.logger.verbose('Initializing LifecycleService...');\n\n    try {\n      files = readdirSync(`${process.cwd()}/configs/lifecycle`);\n      defaultFiles = readdirSync(`${process.cwd()}/defaults/lifecycle`);\n    } catch (error) {\n      this.logger.error('Error reading lifecycle validations files', error.message, error.stack);\n    }\n\n    for (const file of defaultFiles) {\n      if (!files.includes(file)) {\n        try {\n          const defaultFile = readFileSync(`${process.cwd()}/defaults/lifecycle/${file}`, 'utf-8');\n          writeFileSync(`${process.cwd()}/configs/lifecycle/${file}`, defaultFile);\n          this.logger.warn(`Copied default validation file: ${file}`);\n        } catch (error) {\n          this.logger.error(`Error copying default validation file: ${file}`, error.message, error.stack);\n        }\n      }\n    }\n\n    this.logger.log('LifecycleService initialized');\n  }\n\n  /**\n   * Bootstrap the LifecycleService application\n   *\n   * This method is called when the application starts.\n   * It loads lifecycle rules from configuration files and creates a map of lifecycle sources.\n   * The map will help to quickly find which identities are associated with each lifecycle source.\n   * It also logs the lifecycle sources for debugging purposes.\n   */\n  public async onApplicationBootstrap(): Promise {\n    this.logger.verbose('Bootstrap LifecycleService application...');\n\n    const lifecycleRules = await this.loadLifecycleRules();\n\n    /**\n     * Create a map of lifecycle sources\n     * This map will help to quickly find which identities are associated with each lifecycle source.\n     * It will be used to optimize the lifecycle processing logic.\n     * The structure will be:\n     * {\n     *   'source1': [identityRule1, identityRule2, ...],\n     *   'source2': [identityRule3, identityRule4, ...],\n     *   ...\n     * }\n     * This will allow us to quickly access all identity rules associated with a specific lifecycle source.\n     */\n    for (const lfr of lifecycleRules) {\n      for (const idRule of lfr.identities) {\n        for (const source of idRule.sources) {\n          if (!this.lifecycleSources[source]) {\n            this.lifecycleSources[source] = [];\n          }\n\n          const rule = omit(idRule, ['sources']);\n          if (rule.trigger) {\n            this.logger.log(`Trigger found for source : ${-rule.trigger}, installing cron job !`);\n\n            if (this.schedulerRegistry.doesExist('cron', `lifecycle-trigger-${source}`)) {\n              this.logger.warn(`Cron job for source  already exists, skipping creation.`);\n              continue;\n            }\n\n            const cronExpression = this.convertSecondsToCron(-rule.trigger);\n            this.logger.debug(`Creating cron job with pattern: ${cronExpression}`);\n\n            const job = new CronJob(cronExpression, this.runJob.bind(this, {\n              source, // Pass the source to the job for context\n              ...rule,\n            }));\n\n            this.schedulerRegistry.addCronJob(`lifecycle-trigger-${source}`, job);\n            job.start();\n          }\n\n          this.lifecycleSources[source].push(rule);\n        }\n      }\n    }\n\n    this.logger.log('LifecycleService bootstraped');\n  }\n\n  protected async runJob(rule: ConfigObjectIdentitiesDTOWithSource): Promise {\n    this.logger.debug(`Running LifecycleService job: `);\n\n    try {\n      const identities = await this.identitiesService.model.find({\n        ...rule.rules,\n        lifecycle: rule.source,\n        ignoreLifecycle: { $ne: true },\n      });\n\n      this.logger.log(`Found ${identities.length} identities to process for trigger in source `);\n\n      for (const identity of identities) {\n        const updated = await this.identitiesService.model.findOneAndUpdate(\n          { _id: identity._id },\n          { $set: { lifecycle: rule.target } },\n          { new: true }\n        );\n\n        if (updated) {\n          await this.create({\n            refId: identity._id,\n            lifecycle: rule.target,\n            date: new Date(),\n          });\n\n          this.logger.log(`Identity  updated to lifecycle  by trigger from source `);\n        }\n      }\n    } catch (error) {\n      this.logger.error(`Error in lifecycle trigger job for source :`, error.message, error.stack);\n    }\n  }\n\n  /**\n   * Convert seconds to a proper cron expression\n   * This method converts a duration in seconds to the most appropriate cron expression.\n   * It optimizes for readability and performance by using the largest possible time unit.\n   *\n   * @param seconds - The number of seconds for the interval\n   * @returns A cron expression string in the format \"second minute hour day month dayOfWeek\"\n   */\n  private convertSecondsToCron(seconds: number): string {\n    // Ensure we have a valid positive number\n    const intervalSeconds = Math.max(1, Math.floor(seconds));\n\n    // If it's less than 60 seconds, use seconds\n    if (intervalSeconds = 3600) {\n      // Use hours for intervals >= 1 hour\n      const hourInterval = Math.max(1, Math.floor(intervalSeconds / 3600));\n      return `0 0 */${hourInterval} * * *`;\n    } else if (intervalSeconds >= 60) {\n      // Use minutes for intervals >= 1 minute\n      const minuteInterval = Math.max(1, Math.floor(intervalSeconds / 60));\n      return `0 */${minuteInterval} * * * *`;\n    } else {\n      // Fall back to seconds\n      return `*/${intervalSeconds} * * * * *`;\n    }\n  }\n\n  /**\n   * Load lifecycle rules from configuration files\n   *\n   * This method reads all YAML files from the `configs/lifecycle` directory,\n   * parses them into DTOs, validates them, and stores them in the `lifecycleRules` array.\n   * It logs the process of loading and validating each file, and handles any errors that occur during file reading or validation.\n   */\n  private async loadLifecycleRules(): Promise {\n    let files: string[] = [];\n\n    const lifecycleRules: ConfigObjectSchemaDTO[] = [];\n    this.logger.verbose('Loading lifecycle rules from configuration files...');\n    this.logger.verbose('Initializing LifecycleService...');\n\n    try {\n      files = readdirSync(`${process.cwd()}/configs/lifecycle`);\n    } catch (error) {\n      this.logger.error('Error reading lifecycle files', error.message, error.stack);\n    }\n\n    for (const file of files) {\n      let schema: ConfigObjectSchemaDTO;\n      if (!file.endsWith('.yml') && !file.endsWith('.yaml')) {\n        this.logger.warn(`Skipping non-YAML file: ${file}`);\n        continue;\n      }\n\n      try {\n        const data = readFileSync(`${process.cwd()}/configs/lifecycle/${file}`, 'utf-8');\n        this.logger.debug(`Loaded lifecycle config: ${file}`);\n        const yml = parse(data)\n        schema = plainToInstance(ConfigObjectSchemaDTO, yml)\n\n      } catch (error) {\n        this.logger.error(`Error loading lifecycle config file: ${file}`, error.message, error.stack);\n        continue;\n      }\n\n      if (!schema || !schema.identities || !Array.isArray(schema.identities)) {\n        this.logger.error(`Invalid schema in file: ${file}`);\n        continue;\n      }\n\n      try {\n        this.logger.verbose(`Validating schema for file: ${file}`, JSON.stringify(schema, null, 2));\n        await validateOrReject(schema, {\n          whitelist: true,\n        })\n        this.logger.debug(`Validated schema for file: ${file}`);\n      } catch (errors) {\n        const formattedErrors = this.formatValidationErrors(errors, file);\n        const err = new Error(`Validation errors in file '${file}':\\n${formattedErrors}`);\n        throw err;\n      }\n\n      lifecycleRules.push(schema);\n      this.logger.debug(`Lifecycle activated from file: ${file}`);\n    }\n\n    this.logger.log(`Loaded  lifecycle rules from configuration files.`);\n    return lifecycleRules;\n  }\n\n  /**\n   * Format validation errors for better readability\n   *\n   * @param errors - Array of ValidationError objects from class-validator\n   * @param file - The file name where the validation failed\n   * @returns A formatted error message string\n   */\n  private formatValidationErrors(errors: ValidationError[], file: string, basePath: string = '', isInArrayContext: boolean = false): string {\n    const formatError = (error: ValidationError, currentPath: string, inArrayContext: boolean): string[] => {\n      let propertyPath = currentPath;\n\n      /**\n       * Check if error.property is defined, not null, not empty, and not the string 'undefined'.\n       * If it is, we construct the property path based on whether we are in an array context or not.\n       * If it is an array context, we use the index notation; otherwise, we use dot notation.\n       */\n      if (error.property !== undefined &&\n        error.property !== null &&\n        error.property !== '' &&\n        error.property !== 'undefined') {\n        if (inArrayContext && !isNaN(Number(error.property))) {\n          // C'est un index d'array\n          propertyPath = currentPath ? `${currentPath}[${error.property}]` : `[${error.property}]`;\n        } else {\n          // C'est une propriété normale\n          propertyPath = currentPath ? `${currentPath}.${error.property}` : error.property;\n        }\n      }\n\n      const errorMessages: string[] = [];\n\n      /**\n       * Check if error.constraints is defined and not empty.\n       * If it is, we iterate over each constraint and format the error message.\n       */\n      if (error.constraints) {\n        Object.entries(error.constraints).forEach(([constraintKey, message]) => {\n          errorMessages.push(`Property '${propertyPath}': ${message} (constraint: ${constraintKey})`);\n        });\n      }\n\n      /**\n       * If the error has children, we recursively format each child error.\n       * We check if the error has children and if they are defined.\n       */\n      if (error.children && error.children.length > 0) {\n        const isNextLevelArray = Array.isArray(error.value);\n        error.children.forEach(childError => {\n          errorMessages.push(...formatError(childError, propertyPath, isNextLevelArray));\n        });\n      }\n\n      return errorMessages;\n    };\n\n    const allErrorMessages: string[] = [];\n    errors.forEach(error => {\n      allErrorMessages.push(...formatError(error, basePath, isInArrayContext));\n    });\n\n    return allErrorMessages.map(msg => `• ${msg}`).join('\\n');\n  }\n\n  /**\n   * Handle identity update events\n   * This method listens for events emitted after an identity is updated.\n   * It checks if the identity has a valid ID and then processes the lifecycle event.\n   * If the identity's lifecycle has changed, it creates a new lifecycle event.\n   * It also logs the event handling process, including any warnings if the identity data is invalid.\n   * This method is triggered by the 'management.identities.service.afterUpdate' event.\n   *\n   * @param event - The event containing the identity update data\n   * @returns A promise that resolves when the lifecycle event is created\n   */\n  @OnEvent('management.identities.service.afterUpdate')\n  public async handle(event: { updated: Identities, before?: Identities }): Promise {\n    this.logger.verbose(`Handling identity update event for identity `);\n\n    if (!event.updated || !event.updated._id) {\n      this.logger.warn('No valid identity found in event data');\n      return;\n    }\n\n    await this.fireLifecycleEvent(event.before, event.updated);\n  }\n\n  /**\n   * Handle identity upsert events\n   * This method listens for events emitted after an identity is upserted.\n   * It checks if the identity has a valid ID and then processes the lifecycle event.\n   * If the identity's lifecycle has changed, it creates a new lifecycle event.\n   * It also logs the event handling process, including any warnings if the identity data is invalid.\n   * This method is triggered by the 'management.identities.service.afterUpsert' event.\n   *\n   * @param event - The event containing the identity upsert data\n   * @returns A promise that resolves when the lifecycle event is created\n   */\n  @OnEvent('management.identities.service.afterUpsert')\n  public async handleOrderCreatedEvent(event: { result: Identities, before?: Identities }): Promise {\n    this.logger.verbose(`Handling identity upsert event for identity `);\n\n    if (!event.result || !event.result._id) {\n      this.logger.warn('No valid identity found in event data');\n      return;\n    }\n\n    await this.fireLifecycleEvent(event.before, event.result);\n  }\n\n  /**\n   * Fire a lifecycle event\n   * This method is responsible for processing the lifecycle event for a given identity.\n   * It checks if the lifecycle has changed and creates a new lifecycle event if necessary.\n   * It also processes the lifecycle sources associated with the new lifecycle.\n   * If the lifecycle has changed, it updates the identity's lifecycle based on the rules defined in the lifecycle sources.\n   * It logs the lifecycle event processing and any updates made to the identity.\n   * This method is called when an identity's lifecycle changes.\n   *\n   * @param before - The identity data before the update\n   * @param after - The identity data after the update\n   * @returns A promise that resolves when the lifecycle event is processed\n   */\n  private async fireLifecycleEvent(before: Identities, after: Identities): Promise {\n    if (before.lifecycle !== after.lifecycle) {\n      await this.create({\n        refId: after._id,\n        lifecycle: after.lifecycle,\n        date: new Date(),\n      });\n      this.logger.debug(`Lifecycle event manualy recorded for identity : ${after.lifecycle}`);\n      // If the lifecycle has changed, we need to process the new lifecycle\n    }\n\n    if (this.lifecycleSources[after.lifecycle]) {\n      this.logger.debug(`Processing lifecycle sources for identity  with lifecycle `);\n\n      for (const lcs of this.lifecycleSources[after.lifecycle]) {\n        this.logger.verbose(`Processing lifecycle source  with rules: ${JSON.stringify(lcs.rules)}`);\n\n        const res = await this.identitiesService.model.findOneAndUpdate(\n          {\n            ...lcs.rules,\n            _id: after._id,\n            ignoreLifecycle: { $ne: true },\n          },\n          {\n            $set: {\n              lifecycle: lcs.target,\n            },\n          },\n          {\n            new: true, // Return the updated document\n            upsert: false, // Do not create a new document if no match is found\n          }\n        );\n\n        if (!res) {\n          this.logger.debug(`No identity found matching rules for lifecycle `);\n          continue;\n        }\n\n        await this.create({\n          refId: after._id,\n          lifecycle: lcs.target,\n          date: new Date(),\n        });\n\n        this.logger.log(`Identity  updated to lifecycle  based on rules from source `);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Get lifecycle history for a specific identity\n   *\n   * @param refId - The ID of the identity to retrieve lifecycle history for\n   * @returns An array of lifecycle events for the specified identity, sorted by creation date in descending order\n   */\n  public async getLifecycleHistory(\n    refId: Types.ObjectId,\n    options?: FilterOptions,\n  ): Promise, Lifecycle, any, Lifecycle>[]]> {\n    const result = await this.find({ refId }, null, {\n      populate: LifecycleRefId,\n      sort: {\n        ...options?.sort,\n        createdAt: -1,\n      },\n      skip: options?.skip || 0,\n      limit: options?.limit || 100,\n    });\n    const total = await this.count({ refId });\n\n    return [total, result];\n  }\n\n  /**\n   * Get lifecycle statistics\n   * This method aggregates lifecycle events by their type and counts the occurrences.\n   * It returns an array of objects where each object contains the lifecycle type and the count of occurrences.\n   *\n   * @returns An array of lifecycle statistics, each containing the lifecycle type and count\n   */\n  public async getLifecycleStats(): Promise {\n    const stats = await this._model.aggregate([\n      {\n        $group: {\n          _id: '$lifecycle',\n          count: { $sum: 1 },\n        },\n      },\n      {\n        $sort: { _id: 1 },\n      },\n    ]);\n\n    return stats;\n  }\n\n  /**\n   * Get recent lifecycle changes\n   * This method retrieves the most recent lifecycle changes, sorted by creation date in descending order.\n   * It allows for pagination through the `skip` and `limit` options.\n   *\n   * @param options - Optional parameters for filtering, sorting, and pagination\n   * @returns A promise that resolves to an array of lifecycle changes, each containing the lifecycle event details\n   */\n  public async getRecentChanges(\n    options?: FilterOptions,\n  ): Promise, Lifecycle, any, Lifecycle>[]]> {\n    const total = await this.count({});\n    const result = await this.find({}, null, {\n      populate: 'refId',\n      sort: {\n        ...options?.sort,\n        createdAt: -1,\n      },\n      skip: options?.skip || 0,\n      limit: options?.limit || 100,\n    });\n\n    return [total, result];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LifecycleUpdateDto.html":{"url":"classes/LifecycleUpdateDto.html","title":"class - LifecycleUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LifecycleUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/lifecycle/_dto/lifecycle.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(LifecycleCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsDateString, IsEnum, IsMongoId, IsNotEmpty } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\n\nexport class LifecycleCreateDto {\n  @ApiProperty({\n    description: 'Reference to the identity',\n    type: String,\n  })\n  @IsNotEmpty()\n  public refId: Types.ObjectId;\n\n  @ApiProperty({\n    description: 'Lifecycle state',\n    enum: IdentityLifecycle,\n  })\n  @IsEnum(IdentityLifecycle)\n  @IsNotEmpty()\n  public lifecycle: IdentityLifecycle;\n\n  @ApiProperty({\n    description: 'Date of the lifecycle event',\n    type: Date,\n  })\n  @IsDateString()\n  public date: Date;\n}\n\nexport class LifecycleDto extends LifecycleCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class LifecycleUpdateDto extends PartialType(LifecycleCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, username: string, password: string, done: (error: any,user: Express.User | ,options: IVerifyOptions) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/local.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { IVerifyOptions, Strategy } from 'passport-local';\nimport { Request } from 'express';\nimport { ExcludeAgentType, AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  public constructor(private readonly auth: AuthService) {\n    super({\n      passReqToCallback: true,\n    });\n  }\n\n  //TODO: change any\n  public async validate(\n    _: Request,\n    username: string,\n    password: string,\n    // eslint-disable-next-line\n    done: (error: any, user?: Express.User | false, options?: IVerifyOptions) => void,\n  ): Promise {\n    Logger.verbose(`Try to authenticate user : ${username}`, LocalStrategy.name);\n    const user = await this.auth.authenticateWithLocal(username, password);\n    // console.log(user);\n    if (!user) done(new UnauthorizedException(), false);\n    // if (user.state.current !== IdentityState.ACTIVE) done(new ForbiddenException(), false)\n    done(null, omit(user.toObject(), ExcludeAgentType) as AgentType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/logger.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                concerned\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                context\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concerned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:36\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:29\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: DataPartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { DataPart, DataPartSchema } from './_parts/data.part.schema';\n\nexport const DEFAULT_CONTEXT = 'default';\nexport type LoggerDocument = Logger & Document;\n\n@Schema({ versionKey: false })\nexport class Logger extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public level: string;\n\n  @Prop({\n    type: DataPartSchema,\n    required: true,\n    default: {},\n  })\n  public data: DataPart;\n\n  /**\n   * @description The context of the log message.\n   * @example 'identity'\n   */\n  @Prop({ type: String })\n  public context?: string;\n\n  /**\n   * @description The concerned document in collection of the log message.\n   * @example '5f7b1b3b7f7b1b3b7f7b1b3b'\n   */\n  @Prop({ type: String })\n  public concerned?: string;\n}\n\nexport const LoggerSchema = SchemaFactory.createForClass(Logger).pre(\n  'save',\n  function (this: Logger, next: () => void): void {\n    this.context = this.context.toLocaleLowerCase() || DEFAULT_CONTEXT;\n    this.concerned = this.concerned.toLocaleLowerCase() || null;\n    next();\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoggerController.html":{"url":"controllers/LoggerController.html","title":"controller - LoggerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoggerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logger\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { LoggerService } from './logger.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('logger')\nexport class LoggerController extends AbstractController {\n  constructor(private readonly _service: LoggerService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService\n\nLoggerService\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoggerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LoggerSchema, Logger } from './_schemas/logger.schema';\nimport { LoggerService } from './logger.service';\nimport { LoggerController } from './logger.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Logger.name,\n        useFactory: () => LoggerSchema,\n      },\n    ]),\n  ],\n  providers: [LoggerService],\n  controllers: [LoggerController],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:56\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:191\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:358\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:81\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:156\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:233\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:296\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Logger } from './_schemas/logger.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class LoggerService extends AbstractServiceSchema {\n  constructor(@InjectModel(Logger.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailSettingsDto.html":{"url":"classes/MailSettingsDto.html","title":"class - MailSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_dto/mail.settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                host\n                            \n                            \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    Public\n                                sender\n                            \n                            \n                                    \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'smtp://localhost:25'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl({protocols: undefined, require_protocol: true, require_tld: false})@ApiProperty({example: 'smtp://smscsim.smpp.org:25', description: 'Serveur SMTP', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'myPassword', description: 'password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        sender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({example: 'no-reply@mondomaine', description: 'Emetteur', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'monlogin@mondomaine', description: 'username', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, IsUrl } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MailSettingsDto {\n  @IsUrl({ protocols: ['smtp', 'smtps'], require_protocol: true, require_tld: false })\n  @ApiProperty({ example: 'smtp://smscsim.smpp.org:25', description: 'Serveur SMTP', type: String })\n  public host: string = 'smtp://localhost:25';\n\n  @IsEmail()\n  @ApiProperty({ example: 'no-reply@mondomaine', description: 'Emetteur', type: String })\n  public sender: string;\n\n  @IsString()\n  @ApiProperty({ example: 'monlogin@mondomaine', description: 'username', type: String })\n  public username: string;\n\n  @IsString()\n  @ApiProperty({ example: 'myPassword', description: 'password', type: String })\n  public password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailadmController.html":{"url":"controllers/MailadmController.html","title":"controller - MailadmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailadmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/mailadm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get')@ApiOperation({summary: 'Retourne les parametres pour l envoi Mail'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/mailadm.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(body: MailSettingsDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('set')@ApiOperation({summary: 'Enregistre les parametres'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/mailadm.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            MailSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { MailadmService } from '~/settings/mailadm.service';\nimport { MailSettingsDto } from '~/settings/_dto/mail.settings.dto';\n\n@Controller('settings/mail')\n@ApiTags('settings')\nexport class MailadmController {\n  public constructor(private mailadmService: MailadmService) {}\n\n  @Get('get')\n  @ApiOperation({ summary: 'Retourne les parametres pour l envoi Mail' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async get(@Res() res: Response): Promise {\n    const data = await this.mailadmService.getParams();\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Post('set')\n  @ApiOperation({ summary: 'Enregistre les parametres' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async set(@Body() body: MailSettingsDto, @Res() res: Response): Promise {\n    const data = await this.mailadmService.setParams(body);\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManagementController.html":{"url":"controllers/ManagementController.html","title":"controller - ManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management')\n@Controller('management')\nexport class ManagementController {\n  public constructor(private readonly _service: ManagementService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nLifecycleModule\n\nLifecycleModule\n\nManagementModule -->\n\nLifecycleModule->ManagementModule\n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                        \n                            LifecycleModule\n                        \n                        \n                            PasswdModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/management.module.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ManagementController } from './management.controller';\nimport { RouterModule } from '@nestjs/core';\nimport { IdentitiesModule } from './identities/identities.module';\nimport { PasswdModule } from './passwd/passwd.module';\nimport { LifecycleModule } from './lifecycle/lifecycle.module';\n\n@Module({\n  imports: [IdentitiesModule, PasswdModule, LifecycleModule],\n  providers: [ManagementService],\n  controllers: [ManagementController],\n})\nexport class ManagementModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'management',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagementService.html":{"url":"injectables/ManagementService.html","title":"injectable - ManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/management.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ManagementService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataDto.html":{"url":"classes/MetadataDto.html","title":"class - MetadataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/metadata.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/metadata.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { MetadataPartDto } from './parts/metadata.part.dto';\n\nexport class MetadataDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => MetadataPartDto)\n  @ApiProperty({ type: MetadataPartDto })\n  public metadata?: MetadataPartDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPart.html":{"url":"classes/MetadataPart.html","title":"class - MetadataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    Public\n                                createdBy\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class MetadataPart extends Document {\n  @Prop({ type: String })\n  public createdBy: string;\n\n  @Prop({ type: Date })\n  public createdAt: Date;\n\n  @Prop({ type: String })\n  public lastUpdatedBy: string;\n\n  @Prop({ type: Date })\n  public lastUpdatedAt: Date;\n}\n\nexport const MetadataPartSchema = SchemaFactory.createForClass(MetadataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPartDto.html":{"url":"classes/MetadataPartDto.html","title":"class - MetadataPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/parts/metadata.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsDate } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MetadataPartDto {\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public createdBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public createdAt?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MigrationsModule.html":{"url":"modules/MigrationsModule.html","title":"module - MigrationsModule","body":"\n                   \n\n\n\n\n    Modules\n    MigrationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MigrationsModule\n\n\n\ncluster_MigrationsModule_providers\n\n\n\n\nMigrationsService\n\nMigrationsService\n\n\n\nMigrationsModule\n\nMigrationsModule\n\nMigrationsModule -->\n\nMigrationsService->MigrationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/migrations/migrations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MigrationsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { MigrationsService } from './migrations.service';\n\n@Module({\n  providers: [\n    MigrationsService,\n  ],\n})\nexport class MigrationsModule {\n  public static async register(): Promise {\n    return {\n      module: this,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MigrationsService.html":{"url":"injectables/MigrationsService.html","title":"injectable - MigrationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MigrationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/migrations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                lockLocation\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Protected\n                                migrations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _checkMigrationLockFile\n                            \n                            \n                                    Private\n                                    Async\n                                _executeMigrations\n                            \n                            \n                                    Private\n                                    Async\n                                _loadMigrationsFiles\n                            \n                            \n                                    Private\n                                    Async\n                                _writeMigrationLockFile\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(mongo: Connection, moduleRef: ModuleRef, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/migrations/migrations.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongo\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _checkMigrationLockFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    _checkMigrationLockFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _executeMigrations\n                        \n                    \n                \n            \n            \n                \n                        \n                    _executeMigrations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _loadMigrationsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    _loadMigrationsFiles(currentTimestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                currentTimestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _writeMigrationLockFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    _writeMigrationLockFile(migrationKey: string, migrationTimestamp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                migrationKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                migrationTimestamp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lockLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/migrations/migrations.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(`${chalk.bold.red(MigrationsService.name)}\\x1b[33m`)\n                    \n                \n                    \n                        \n                                Defined in src/migrations/migrations.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        migrations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/migrations/migrations.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common'\nimport { glob } from 'glob'\nimport chalk from 'chalk'\nimport { ModuleRef } from '@nestjs/core'\nimport { startLoader, stopLoader } from './migration-loader.function'\nimport { readFile, writeFile } from 'fs/promises'\nimport { posix } from 'path'\nimport { ConfigService } from '@nestjs/config'\nimport { Connection } from 'mongoose'\nimport { InjectConnection } from '@nestjs/mongoose'\n\n@Injectable()\nexport class MigrationsService implements OnModuleInit {\n  private readonly logger = new Logger(`${chalk.bold.red(MigrationsService.name)}\\x1b[33m`)\n\n  protected lockLocation: string\n  protected migrations = new Map()\n\n  public constructor(\n    @InjectConnection() private readonly mongo: Connection,\n    private readonly moduleRef: ModuleRef,\n    private readonly config: ConfigService,\n\n  ) {\n    this.lockLocation = posix.join(this.config.get('factorydrive.options.disks.local.config.root', '/tmp'), 'migrations.lock')\n  }\n\n  public async onModuleInit() {\n    this.logger.debug(chalk.yellow('Migrations service initialized.'));\n    this.logger.debug(chalk.yellow('Lock file location: ' + this.lockLocation));\n    const currentTimestamp = await this._checkMigrationLockFile()\n    this.logger.debug(chalk.yellow('Checking migrations files...'));\n    await this._loadMigrationsFiles(currentTimestamp);\n\n    const loader = startLoader('Migration en cours...');\n    await this._executeMigrations();\n    stopLoader(loader);\n  }\n\n  private async _checkMigrationLockFile() {\n    let currentTimestamp = 0\n\n    try {\n      const migration = await readFile(this.lockLocation, 'utf-8');\n      currentTimestamp = parseInt(migration, 10);\n      this.logger.log(chalk.blue(`Migration lock state is  !`));\n    } catch (error) {\n      this.logger.warn(chalk.red('No migration lock file found.'));\n    }\n\n    const dbMigration = await this.mongo.collection('migrations').findOne({}, { sort: { timestamp: -1 } });\n\n    if (currentTimestamp === 0) {\n      if (dbMigration) {\n        try {\n          this.logger.warn(chalk.yellow('No migration lock file found. Creating one with the last migration timestamp...'));\n          await writeFile(this.lockLocation, dbMigration.timestamp.toString());\n          this.logger.log(chalk.green('Migration lock file created.'));\n        } catch (error) {\n          this.logger.error(chalk.red('Error while creating migration lock file !'));\n        }\n      } else {\n        try {\n          await writeFile(this.lockLocation, currentTimestamp.toString());\n          this.logger.log(chalk.green('Migration lock file created.'));\n        } catch (error) {\n          this.logger.error(chalk.red('Error while creating migration lock file !'));\n        }\n      }\n    }\n\n    if (!dbMigration && currentTimestamp !== 0) {\n      this.logger.error(chalk.red('Database is not up to date with the migrations files !'));\n      await this.mongo.collection('migrations').insertOne({\n        timestamp: currentTimestamp,\n        comment: 'Synchronization with the migration lock file',\n      });\n      this.logger.log(chalk.green('Database updated with the current migration lock file !'));\n    }\n\n    return currentTimestamp\n  }\n\n  private async _loadMigrationsFiles(currentTimestamp = 0) {\n    let files = await glob(`./jobs/*.js`, {\n      cwd: __dirname,\n      root: __dirname,\n    });\n\n    files = files.filter((file) => {\n      const [timestampMatch] = file.match(/\\d{10,}/) || []\n\n      if (!timestampMatch) {\n        this.logger.warn(chalk.yellow(`Migration ${chalk.bold('')} does not have a timestamp in the filename !`));\n        return;\n      }\n\n      if (parseInt(timestampMatch) ')} are already executed !`));\n        return false;\n      }\n\n      return true\n    })\n\n    files = files.sort((a, b) => {\n      const [aTimestamp] = a.match(/\\d{10,}/) || []\n      const [bTimestamp] = b.match(/\\d{10,}/) || []\n\n      return parseInt(aTimestamp) - parseInt(bTimestamp)\n    })\n\n    for (const file of files) {\n      const migration = await import(`${__dirname}/${file}`);\n\n      if (!migration.default) {\n        this.logger.log(chalk.yellow(`Migration ${chalk.bold('')} does not have a default export !`));\n        return;\n      }\n\n      this.migrations.set(file, migration)\n    }\n  }\n\n  private async _executeMigrations() {\n    if (this.migrations.size === 0) {\n      this.logger.log(chalk.green('No migrations to execute.'));\n      return;\n    }\n\n    if (!this.migrations.size) {\n      this.logger.log(chalk.blue('No migrations to execute.'));\n      return;\n    }\n\n    for (const key of this.migrations.keys()) {\n      const [migrationTimestamp] = key.match(/\\d{10,}/) || []\n\n      const migration = this.migrations.get(key);\n      const instance = await this.moduleRef.create(migration.default);\n\n      if (typeof instance.up !== 'function') {\n        this.logger.log(chalk.yellow(`Migration ${chalk.bold('')} does not have an up method !`));\n        break;\n      }\n\n      try {\n        this.logger.log(chalk.yellow(`Running migration ${chalk.bold('')}...`));\n        await instance.up();\n      } catch (e) {\n        this.logger.error(chalk.red(`Error while running migration ${chalk.bold('')} !`));\n        this.logger.error(e.message, e.stack);\n        return;\n      }\n\n      this._writeMigrationLockFile(key, migrationTimestamp);\n    }\n\n    this.logger.log(chalk.blue('All migrations done.'));\n  }\n\n  private async _writeMigrationLockFile(migrationKey: string, migrationTimestamp: string) {\n    try {\n      await writeFile(this.lockLocation, migrationTimestamp);\n      await this.mongo.collection('migrations').insertOne({\n        timestamp: parseInt(migrationTimestamp),\n        comment: `Migration ${migrationKey} executed`,\n      })\n      this.logger.log(chalk.blue(`Migration ${chalk.bold('')} done.`));\n    } catch (e) {\n      this.logger.error(chalk.red(`Error while updating migration lock file !`));\n      this.logger.error(e);\n\n      throw new Error('Error while updating migration lock file !');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDbTestInstance.html":{"url":"classes/MongoDbTestInstance.html","title":"class - MongoDbTestInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDbTestInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/tests/mongodb.test.instance.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mongoConnection\n                            \n                            \n                                mongod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabase\n                            \n                            \n                                    Async\n                                getModel\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mongoConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mongod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongoMemoryServer\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModel(name: string, schema: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoMemoryServer } from 'mongodb-memory-server';\nimport { connect, Connection } from 'mongoose';\n\nexport class MongoDbTestInstance {\n  mongod: MongoMemoryServer;\n  mongoConnection: Connection;\n\n  async start() {\n    this.mongod = await MongoMemoryServer.create({\n      binary: {\n        version: '5.0.22',\n      },\n    });\n    const uri = await this.mongod.getUri();\n    this.mongoConnection = (await connect(uri)).connection;\n  }\n\n  async stop() {\n    await this.mongoConnection.dropDatabase();\n    await this.mongoConnection.close();\n    if (this.mongod) await this.mongod.stop();\n  }\n\n  async clearDatabase() {\n    const collections = this.mongoConnection.collections;\n    for (const key in collections) {\n      await collections[key].deleteMany({});\n    }\n  }\n\n  async getModel(name: string, schema: any) {\n    return this.mongoConnection.model(name, schema);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoosePlugin.html":{"url":"interfaces/MongoosePlugin.html","title":"interface - MongoosePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MongoosePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            package\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        package\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        package:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\nimport { StorageManagerConfig } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { AmazonWebServicesS3StorageConfig } from '@the-software-compagny/nestjs_module_factorydrive-s3';\nimport { parse } from 'path';\nimport { HttpModuleOptions } from '@nestjs/axios';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    lang: string\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n    https: {\n      enabled: boolean;\n      key: string;\n      cert: string;\n    }\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  axios: {\n    options: HttpModuleOptions;\n  };\n  factorydrive: {\n    options:\n    | StorageManagerConfig\n    | {\n      disks: {\n        [key: string]: {\n          driver: 's3';\n          config: AmazonWebServicesS3StorageConfig;\n        };\n      };\n    };\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  mailer: {\n    host: string;\n    port: number;\n    sender: string;\n  };\n  sms: {\n    host: string;\n    systemId: string;\n    password: string;\n    sourceAddr: string;\n    regionCode: string;\n  };\n  frontPwd: {\n    url: string;\n    identityMailAttribute: string;\n    identityMobileAttribute: string;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    lang: process.env['LANG'] || 'en',\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n    https: {\n      enabled: /yes|1|on|true/i.test(process.env['SESAME_HTTPS_ENABLED']),\n      key: process.env['SESAME_HTTPS_PATH_KEY'] || '',\n      cert: process.env['SESAME_HTTPS_PATH_CERT'] || '',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [\n    ],\n  },\n  axios: {\n    options: {\n      timeout: parseInt(process.env['SESAME_AXIOS_TIMEOUT'], 10) || 5_000,\n      maxRedirects: parseInt(process.env['SESAME_AXIOS_MAX_REDIRECTS'], 10) || 5,\n    },\n  },\n  factorydrive: {\n    options: {\n      default: 'local',\n      disks: {\n        local: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage',\n          },\n        },\n        identities: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage/identities',\n          },\n        },\n      },\n    },\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n  mailer: {\n    host: process.env['SESAME_SMTP_SERVER'],\n    port: parseInt(process.env['SESAME_SMTP_PORT']) || 25,\n    sender: process.env['SESAME_MDP_SENDER'] || 'noreply@mydomain.com',\n  },\n  frontPwd: {\n    url: process.env['SESAME_FRONT_MDP'],\n    identityMailAttribute: process.env['SESAME_RESET_PWD_MAIL'] || '',\n    identityMobileAttribute: process.env['SESAME_RESET_PWD_MOBILE'] || '',\n  },\n  sms: {\n    host: process.env['SESAME_SMPP_SERVER'] || '',\n    systemId: process.env['SESAME_SMPP_SYSTEMID'] || '',\n    password: process.env['SESAME_SMPP_PASSWORD'] || '',\n    sourceAddr: process.env['SESAME_SMPP_SOURCEADDR'] || '',\n    regionCode: process.env['SESAME_SMPP_REGIONCODE'] || 'FR',\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongooseValidationFilter.html":{"url":"classes/MongooseValidationFilter.html","title":"class - MongooseValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongooseValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/mongoose-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                            \n                                    Protected\n                                getValidationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValidationErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Error } from 'mongoose';\nimport { ValidationError } from 'class-validator';\n\n@Catch(Error.ValidationError, Error.CastError, ValidationError)\nexport class MongooseValidationFilter implements ExceptionFilter {\n  public catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    Logger.debug(exception['message'], 'MongooseValidationFilter');\n    const debug = {};\n    if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n      debug['_exception'] = exception;\n    }\n    response.status(HttpStatus.NOT_ACCEPTABLE).json(\n      // @ts-expect-error( )\n      HttpException.createBody(\n        {\n          statusCode: HttpStatus.NOT_ACCEPTABLE,\n          message: exception['message'],\n          validations: this.getValidationErrors(exception),\n          ...debug,\n        },\n        exception.constructor.name,\n        HttpStatus.NOT_ACCEPTABLE,\n      ),\n    );\n  }\n\n  // eslint-disable-next-line\n  protected getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError): Record {\n    const validations = {};\n    if (err instanceof Error.ValidationError) {\n      for (const key in err.errors) {\n        if (err.errors[key]['constraints']) {\n          Object.keys(err.errors[key]['constraints']).forEach((ckey) => {\n            const property = err.errors[key]['property'];\n            validations[`${key}.${property}`] = err.errors[key]['constraints'][ckey];\n          });\n          continue;\n        }\n        validations[key] = err.errors[key].message;\n      }\n    } else if (err instanceof Error.CastError) {\n      validations[err.path] = err.message;\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NeedChangePasswordDto.html":{"url":"classes/NeedChangePasswordDto.html","title":"class - NeedChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NeedChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/need-change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/need-change-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class NeedChangePasswordDto {\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'User object id', type: String })\n  public id: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundDto.html":{"url":"classes/NotFoundDto.html","title":"class - NotFoundDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/not-found.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class NotFoundDto {\n  @ApiProperty({ enum: [HttpStatus.NOT_FOUND] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjectIdValidationPipe.html":{"url":"injectables/ObjectIdValidationPipe.html","title":"injectable - ObjectIdValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ObjectIdValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/object-id-validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/object-id-validation.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Types.ObjectId\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ObjectIdValidationPipe implements PipeTransform {\n  /* eslint-disable */\n  public transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata): Types.ObjectId {\n    if (!Types.ObjectId.isValid(value)) {\n      throw new BadRequestException(`Invalid ObjectId `);\n    }\n    return new Types.ObjectId(value);\n  }\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedFilterDto.html":{"url":"classes/PaginatedFilterDto.html","title":"class - PaginatedFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-filter.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/dto/paginated-filter.dto.ts:1\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatedFilterDto {\n  // eslint-disable-next-line\n  [key: string]: any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class PaginatedResponseDto> {\n  @ApiProperty({ enum: [HttpStatus.OK] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public total: number;\n\n  @ApiProperty()\n  public data: TData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdController.html":{"url":"controllers/PasswdController.html","title":"controller - PasswdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                passwd\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                change\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getPolicies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                initMany\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                initreset\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                reset\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                resetbycode\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(body: ChangePasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change')@ApiOperation({summary: 'Execute un job de changement de mot de passe sur le/les backends'})@ApiResponse({status: undefined, description: 'Mot de passe synchronisé sur le/les backends'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPolicies(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getpolicies')@ApiOperation({summary: 'Retourne la politique de mot de passe à appliquer'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(body: InitAccountDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('init')@ApiOperation({summary: 'Initialise le compte envoi un jeton par mail à l'identité'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        initMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    initMany(body: InitManyDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('initmany')@ApiOperation({summary: 'Initialise plusieurs identités. envoi un jeton par mail à l'identité'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitManyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        initreset\n                        \n                    \n                \n            \n            \n                \n                        \n                    initreset(body: InitResetDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('initreset')@ApiOperation({summary: 'Demande l envoi de mail pour le reset'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitResetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(body: ResetPasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset')@ApiOperation({summary: 'Execute un job de réinitialisation de mot de passe sur le/les backends'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        resetbycode\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetbycode(body: ResetByCodeDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('resetbycode')@ApiOperation({summary: 'reinitialise le mot de passe avec le code reçu'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ResetByCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('ioutdated')@ApiOperation({summary: 'Compte donc l invitation d init n a pas été repondue dans les temps'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { Document } from 'mongoose';\nimport { Identities } from '~/management/identities/_schemas/identities.schema';\nimport { InitAccountDto } from '~/management/passwd/_dto/init-account.dto';\nimport { InitManyDto } from '~/management/passwd/_dto/init-many.dto';\nimport { InitResetDto } from '~/management/passwd/_dto/init-reset.dto';\nimport { ResetByCodeDto } from '~/management/passwd/_dto/reset-by-code.dto';\nimport { PasswdadmService } from '~/settings/passwdadm.service';\nimport { ChangePasswordDto } from './_dto/change-password.dto';\nimport { ResetPasswordDto } from './_dto/reset-password.dto';\nimport { PasswdService } from './passwd.service';\n\n@Controller('passwd')\n@ApiTags('management/passwd')\nexport class PasswdController {\n  private readonly logger = new Logger(PasswdController.name);\n\n  public constructor(\n    private passwdService: PasswdService,\n    private passwdadmService: PasswdadmService,\n  ) { }\n\n  @Post('change')\n  @ApiOperation({ summary: 'Execute un job de changement de mot de passe sur le/les backends' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Mot de passe synchronisé sur le/les backends' })\n  public async change(@Body() body: ChangePasswordDto, @Res() res: Response): Promise {\n    const debug = {};\n\n    const [_, data] = await this.passwdService.change(body);\n    this.logger.log(`Call passwd change for : ${body.uid}`);\n\n    if (process.env.NODE_ENV === 'development') {\n      debug['_debug'] = data;\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Password changed',\n      status: 0,\n      ...debug,\n    });\n  }\n\n  @Post('resetbycode')\n  @ApiOperation({ summary: 'reinitialise le mot de passe avec le code reçu' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async resetbycode(@Body() body: ResetByCodeDto, @Res() res: Response): Promise {\n    const debug = {};\n    this.logger.log('Reset by code : ' + body.token + ' code : ' + body.code);\n    try{\n      const [_, data] = await this.passwdService.resetByCode(body);\n      if (process.env.NODE_ENV === 'development') {\n        debug['_debug'] = data;\n      }\n\n      return res.status(HttpStatus.OK).json({\n        message: 'Password changed',\n        ...debug,\n      });\n    } catch (e) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        message: 'Erreur serveur',\n        ...debug,\n      });\n    }\n\n  }\n\n  @Post('reset')\n  @ApiOperation({ summary: 'Execute un job de réinitialisation de mot de passe sur le/les backends' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async reset(@Body() body: ResetPasswordDto, @Res() res: Response): Promise {\n    const debug = {};\n    const [_, data] = await this.passwdService.reset(body);\n\n    if (process.env.NODE_ENV === 'development') {\n      debug['_debug'] = data;\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Password changed',\n      ...debug,\n    });\n  }\n\n  @Get('getpolicies')\n  @ApiOperation({ summary: 'Retourne la politique de mot de passe à appliquer' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async getPolicies(@Res() res: Response): Promise {\n    const data = await this.passwdadmService.getPolicies();\n    //const datax=omit(data.toObject,['_id'])\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Post('init')\n  @ApiOperation({ summary: \"Initialise le compte envoi un jeton par mail à l'identité\" })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async init(@Body() body: InitAccountDto, @Res() res: Response): Promise {\n    const debug = {};\n    const ok = await this.passwdService.initAccount(body);\n    if (ok){\n      return res.status(HttpStatus.OK).json({\n        message: 'Email envoyé verifiez votre boite mail alternative et vos spam',\n        ...debug,\n      });\n    }else{\n      return res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n        message: 'Erreur serveur impossible d\\'envoyer le mail',\n        ...debug,\n      });\n    }\n\n  }\n  @Post('initmany')\n  @ApiOperation({ summary: \"Initialise plusieurs identités. envoi un jeton par mail à l'identité\" })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async initMany(@Body() body: InitManyDto, @Res() res: Response): Promise {\n    const result = await this.passwdService.initMany(body);\n    return res.status(HttpStatus.OK).json({\n      message: 'identités initialisées',\n    });\n  }\n  @Post('initreset')\n  @ApiOperation({ summary: 'Demande l envoi de mail pour le reset' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async initreset(@Body() body: InitResetDto, @Res() res: Response): Promise {\n    const debug = {};\n    const data = await this.passwdService.initReset(body);\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Email envoyé verifiez votre boite mail alternative et vos spam',\n      token: data,\n      ...debug,\n    });\n  }\n  @Get('ioutdated')\n  @ApiOperation({ summary: 'Compte donc l invitation d init n a pas été repondue dans les temps' })\n  public async search(@Res() res: Response): Promise;\n      },\n      any\n    >\n  > {\n    const data = await this.passwdService.checkInitOutDated();\n    const total = data.length;\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswdModule.html":{"url":"modules/PasswdModule.html","title":"module - PasswdModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswdModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_providers\n\n\n\ncluster_PasswdModule_imports\n\n\n\n\nBackendsModule\n\nBackendsModule\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nBackendsModule->PasswdModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nPasswdModule -->\n\nIdentitiesModule->PasswdModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nPasswdModule -->\n\nSettingsModule->PasswdModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/passwd/passwd.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswdService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PasswdController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BackendsModule\n                        \n                        \n                            IdentitiesModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PasswdService } from './passwd.service';\nimport { PasswdController } from './passwd.controller';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { IdentitiesModule } from '../identities/identities.module';\nimport { SettingsModule } from '~/settings/settings.module';\n\n@Module({\n  imports: [BackendsModule, IdentitiesModule, SettingsModule],\n  controllers: [PasswdController],\n  providers: [PasswdService],\n})\nexport class PasswdModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdadmController.html":{"url":"controllers/PasswdadmController.html","title":"controller - PasswdadmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdadmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/passwdadm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/passwdadm\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getPolicies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                setPolicies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPolicies(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getpolicies')@ApiOperation({summary: 'Retourne la police de mot de passe'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/passwdadm.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        setPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPolicies(body: PasswordPoliciesDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('setpolicies')@ApiOperation({summary: 'enregistre la police de mdp'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/passwdadm.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            PasswordPoliciesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { PasswordPoliciesDto } from '~/settings/_dto/password-policy.dto';\nimport { PasswdadmService } from './passwdadm.service';\n\n@Controller('settings/passwdadm')\n@ApiTags('settings')\nexport class PasswdadmController {\n  public constructor(private passwdadmService: PasswdadmService) {}\n\n  @Post('setpolicies')\n  @ApiOperation({ summary: 'enregistre la police de mdp' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async setPolicies(@Body() body: PasswordPoliciesDto, @Res() res: Response): Promise {\n    const data = await this.passwdadmService.setPolicies(body);\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Get('getpolicies')\n  @ApiOperation({ summary: 'Retourne la police de mot de passe' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async getPolicies(@Res() res: Response): Promise {\n    const data = await this.passwdadmService.getPolicies();\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordPoliciesDto.html":{"url":"classes/PasswordPoliciesDto.html","title":"class - PasswordPoliciesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordPoliciesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_dto/password-policy.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                checkPwned\n                            \n                            \n                                    \n                                    \n                                    Public\n                                emailAttribute\n                            \n                            \n                                    \n                                    \n                                    Public\n                                goodComplexity\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasLowerCase\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasNumbers\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasSpecialChars\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasUpperCase\n                            \n                            \n                                    \n                                    \n                                    Public\n                                initTokenTTL\n                            \n                            \n                                    \n                                    \n                                    Public\n                                len\n                            \n                            \n                                    \n                                    \n                                    Public\n                                minComplexity\n                            \n                            \n                                    \n                                    Public\n                                mobileAttribute\n                            \n                            \n                                    \n                                    \n                                    Public\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                    Public\n                                resetBySms\n                            \n                            \n                                    \n                                    \n                                    Public\n                                resetCodeTTL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        checkPwned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: true, description: 'Teh password will be checked on Pwned', type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        emailAttribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'interOrgPerson.mail', description: 'Attribut de l email alternatif pour envoi message', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        goodComplexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 70\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '70', description: 'Good complexity (entropy), Upper this number the password is considered  good', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasLowerCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of letters in lowercase', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasNumbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of numbers', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasSpecialChars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of special characters', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasUpperCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of letters in uppercase', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        initTokenTTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 604800\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '604800', description: 'TTL du jeton d'initialisation ( en secondes)', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        len\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '8', description: 'Password minimal Length', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        minComplexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '30', description: 'Minimal complexity (entropy), Below this number the password wont be accepted', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        mobileAttribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'interOrgPerson.mobile', description: 'Attribut de l email alternatif pour envoi message', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'https://monsite.com', description: 'Après un changement ou reset reussi le navigateur sera redirigé', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        resetBySms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: true, description: 'Mote de passe peut etre reinitialisé par sms', type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        resetCodeTTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 900\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '900', description: 'TTL du code de reset ( en secondes)', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsBoolean, IsString } from 'class-validator';\n\nexport class PasswordPoliciesDto {\n  @IsNumber()\n  @ApiProperty({ example: '8', description: 'Password minimal Length', type: Number })\n  public len: number = 10;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of letters in uppercase', type: Number })\n  public hasUpperCase: number = 1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of letters in lowercase', type: Number })\n  public hasLowerCase: number = 1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of numbers', type: Number })\n  public hasNumbers: number = 1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of special characters', type: Number })\n  public hasSpecialChars: number = 1;\n\n  @IsNumber()\n  @ApiProperty({\n    example: '30',\n    description: 'Minimal complexity (entropy), Below this number the password wont be accepted',\n    type: Number,\n  })\n  public minComplexity: number = 30;\n\n  @IsNumber()\n  @ApiProperty({\n    example: '70',\n    description: 'Good complexity (entropy), Upper this number the password is considered  good',\n    type: Number,\n  })\n  public goodComplexity: number = 70;\n\n  @IsBoolean()\n  @ApiProperty({ example: true, description: 'Teh password will be checked on Pwned', type: Boolean })\n  public checkPwned: boolean = true;\n\n  @IsBoolean()\n  @ApiProperty({ example: true, description: 'Mote de passe peut etre reinitialisé par sms', type: Boolean })\n  public resetBySms: boolean = false;\n\n  @IsString()\n  @ApiProperty({\n    example: 'https://monsite.com',\n    description: 'Après un changement ou reset reussi le navigateur sera redirigé',\n    type: Number,\n  })\n  public redirectUrl: string = '';\n  @IsString()\n  @ApiProperty({\n    example: 'interOrgPerson.mail',\n    description: 'Attribut de l email alternatif pour envoi message',\n    type: String,\n  })\n  public emailAttribute: string = '';\n  @ApiProperty({\n    example: 'interOrgPerson.mobile',\n    description: 'Attribut de l email alternatif pour envoi message',\n    type: String,\n  })\n  public mobileAttribute: string = '';\n\n  @IsNumber()\n  @ApiProperty({ example: '900', description: 'TTL du code de reset ( en secondes)', type: Number })\n  public resetCodeTTL: number = 900;\n\n  @IsNumber()\n  @ApiProperty({ example: '604800', description: \"TTL du jeton d'initialisation ( en secondes)\", type: Number })\n  public initTokenTTL: number = 604800;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawBodyBufferOptions.html":{"url":"interfaces/RawBodyBufferOptions.html","title":"interface - RawBodyBufferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawBodyBufferOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/middlewares/raw-body-buffer.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blacklistedHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            whitelistedHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blacklistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blacklistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitelistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whitelistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as bodyParser from 'body-parser';\n\nexport interface RawBodyBufferOptions {\n  whitelistedHeaders?: string[];\n  blacklistedHeaders?: string[];\n  limit?: string;\n}\n\nexport function rawBodyBuffer(options?: RawBodyBufferOptions) {\n  return [bodyParser.urlencoded({ limit: options.limit, extended: true }), bodyParser.json({ limit: options.limit })];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetByCodeDto.html":{"url":"classes/ResetByCodeDto.html","title":"class - ResetByCodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetByCodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/reset-by-code.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                code\n                            \n                            \n                                    \n                                    \n                                    Public\n                                newpassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '123456', description: 'Code received by email or Sms'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'hdfddyf18A', description: 'new password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '3F4AC...', description: 'Token received by initreset'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class ResetByCodeDto {\n  @IsString()\n  @ApiProperty({ example: '3F4AC...', description: 'Token received by initreset' })\n  public token: string;\n\n  @IsNumber()\n  @ApiProperty({ example: '123456', description: 'Code received by email or Sms' })\n  public code: number;\n\n  @IsString()\n  @ApiProperty({ example: 'hdfddyf18A', description: 'new password' })\n  public newpassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'MyNewPassword', description: 'New Password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-password.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'Token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-password.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @IsString()\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'Token',\n  })\n  public token: string;\n\n  @ApiProperty({ example: 'MyNewPassword', description: 'New Password' })\n  @IsString()\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPart.html":{"url":"classes/SecurityPart.html","title":"class - SecurityPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/security.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    Public\n                                secretKey\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class SecurityPart extends Document {\n  @Prop({\n    type: [String],\n    default: [],\n  })\n  public oldPasswords?: string[];\n\n  @Prop({\n    type: String,\n  })\n  public otpKey?: string;\n\n  @Prop({\n    type: [String],\n  })\n  public u2fKey?: string[];\n\n  @Prop({\n    type: [String],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public changePwdAtNextLogin: boolean;\n\n  @Prop({\n    type: String,\n  })\n  public secretKey: string;\n}\n\nexport const SecurityPartSchema = SchemaFactory.createForClass(SecurityPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPartDTO.html":{"url":"classes/SecurityPartDTO.html","title":"class - SecurityPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/security.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                secretKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsArray, IsBoolean, IsOptional } from 'class-validator';\n\nexport class SecurityPartDTO {\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public oldPasswords?: string[];\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public otpKey?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public u2fKey?: string[];\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public allowedNetworks?: string[];\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public changePwdAtNextLogin: boolean;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public secretKey?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceSchemaInterface.html":{"url":"interfaces/ServiceSchemaInterface.html","title":"interface - ServiceSchemaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceSchemaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/interfaces/service.schema.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        count\n                                    \n                                \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findAndCount\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n            \n                \ncount(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:24\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:52\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:18\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAndCount\n                        \n                    \n                \n            \n            \n                \nfindAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:32\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: Types.ObjectId | any, update: UpdateQuery | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:46\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Document,\n  FilterQuery,\n  ModifyResult,\n  MongooseBaseQueryOptions,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { AbstractSchema } from '../schemas/abstract.schema';\nimport mongodb from 'mongodb';\n\nexport interface ServiceSchemaInterface {\n  /* eslint-disable */\n  find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]>\n\n  count(filter?: FilterQuery, options?: (mongodb.CountOptions & MongooseBaseQueryOptions) | null): Promise\n\n  findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]>\n\n  findById(\n    id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  create(data?: any, options?: SaveOptions): Promise>\n\n  update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>>\n\n  delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise>\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_schemas/settings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parameters\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '', required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_schemas/settings.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parameters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_schemas/settings.schema.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type SettingsDocument = Document;\n\n@Schema({ versionKey: false })\nexport class Settings extends AbstractSchema {\n  @Prop({ type: String, default: '', required: true, unique: true })\n  name: string;\n  @Prop({ type: Object, default: {} })\n  parameters: object;\n}\n\nexport const SettingsSchema = SchemaFactory.createForClass(Settings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { SettingsService } from '~/settings/settings.service';\n\n@ApiTags('settings')\n@Controller('settings')\nexport class SettingsController {\n  public constructor(private readonly _service: SettingsService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_SettingsModule_exports\n\n\n\n\nMailadmService \n\nMailadmService \n\n\n\nPasswdadmService \n\nPasswdadmService \n\n\n\nSmsadmService \n\nSmsadmService \n\n\n\nSettingsModule\n\nSettingsModule\n\nMailadmService  -->\n\nSettingsModule->MailadmService \n\n\n\nPasswdadmService  -->\n\nSettingsModule->PasswdadmService \n\n\n\nSmsadmService  -->\n\nSettingsModule->SmsadmService \n\n\n\n\n\nMailadmService\n\nMailadmService\n\nSettingsModule -->\n\nMailadmService->SettingsModule\n\n\n\n\n\nPasswdadmService\n\nPasswdadmService\n\nSettingsModule -->\n\nPasswdadmService->SettingsModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nSmsadmService\n\nSmsadmService\n\nSettingsModule -->\n\nSmsadmService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailadmService\n                        \n                        \n                            PasswdadmService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            SmsadmService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                        \n                            SmsadmController\n                        \n                        \n                            PasswdadmController\n                        \n                        \n                            MailadmController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailadmService\n                        \n                        \n                            PasswdadmService\n                        \n                        \n                            SmsadmService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/settings.module.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { SettingsController } from '~/settings/settings.controller';\nimport { SettingsService } from '~/settings/settings.service';\nimport { SmsadmService } from '~/settings/smsadm.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Settings, SettingsSchema } from '~/settings/_schemas/settings.schema';\nimport { SmsadmController } from '~/settings/smsadm.controller';\nimport { PasswdadmService } from '~/settings/passwdadm.service';\nimport { PasswdadmController } from '~/settings/passwdadm.controller';\nimport { MailadmService } from '~/settings/mailadm.service';\nimport { MailadmController } from '~/settings/mailadm.controller';\n@Module({\n  exports: [SmsadmService, PasswdadmService, MailadmService],\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Settings.name,\n        useFactory: () => SettingsSchema,\n      },\n    ]),\n  ],\n  providers: [SettingsService, SmsadmService, PasswdadmService, MailadmService],\n  controllers: [SettingsController, SmsadmController, PasswdadmController, MailadmController],\n})\nexport class SettingsModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'settings',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/settings/settings.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SettingsService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShutdownObserver.html":{"url":"injectables/ShutdownObserver.html","title":"injectable - ShutdownObserver","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShutdownObserver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/observers/shutdown.observer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpServers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addHttpServer\n                            \n                            \n                                    Public\n                                    Async\n                                onApplicationShutdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addHttpServer\n                        \n                    \n                \n            \n            \n                \n                        \n                    addHttpServer(server: http.Server)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/observers/shutdown.observer.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                        http.Server\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationShutdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/observers/shutdown.observer.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpServers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     http.Server[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/_common/observers/shutdown.observer.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnApplicationShutdown } from \"@nestjs/common\";\nimport * as http from 'http';\n\n@Injectable()\nexport class ShutdownObserver implements OnApplicationShutdown {\n  private httpServers: http.Server[] = [];\n\n  public addHttpServer(server: http.Server): void {\n    this.httpServers.push(server);\n  }\n\n  public async onApplicationShutdown(): Promise {\n    await Promise.all(\n      this.httpServers.map(\n        (server) =>\n          new Promise((resolve, reject) => {\n            server.close((error) => {\n              if (error) {\n                reject(error);\n              } else {\n                resolve(null);\n              }\n            });\n          }),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SmsSettingsDto.html":{"url":"classes/SmsSettingsDto.html","title":"class - SmsSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SmsSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_dto/sms.settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                host\n                            \n                            \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    Public\n                                regionCode\n                            \n                            \n                                    \n                                    \n                                    Public\n                                sourceAddr\n                            \n                            \n                                    \n                                    \n                                    Public\n                                systemId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'smpp://smscsim.smpp.org:2775', description: 'Serveur Sms (protocole SMPP)', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'ZsvyNgf8', description: 'Password (fournit par votre provider)', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        regionCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'FR', description: 'Code region', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        sourceAddr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'SMPP.ORG', description: 'Adresse emetteur (11 caracteres max)', type: String, maxLength: 11})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        systemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'WkFSJlDXGryAJG1', description: 'SystemId (fournit par votre provider)', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class SmsSettingsDto {\n  @IsString()\n  @ApiProperty({ example: 'smpp://smscsim.smpp.org:2775', description: 'Serveur Sms (protocole SMPP)', type: String })\n  public host: string;\n\n  @IsString()\n  @ApiProperty({ example: 'WkFSJlDXGryAJG1', description: 'SystemId (fournit par votre provider)', type: String })\n  public systemId: string;\n\n  @IsString()\n  @ApiProperty({ example: 'ZsvyNgf8', description: 'Password (fournit par votre provider)', type: String })\n  public password: string;\n\n  @IsString()\n  @ApiProperty({ example: 'FR', description: 'Code region', type: String })\n  public regionCode: string = 'FR';\n\n  @IsString()\n  @ApiProperty({\n    example: 'SMPP.ORG',\n    description: 'Adresse emetteur (11 caracteres max)',\n    type: String,\n    maxLength: 11,\n  })\n  public sourceAddr: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SmsadmController.html":{"url":"controllers/SmsadmController.html","title":"controller - SmsadmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SmsadmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/smsadm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/sms\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get')@ApiOperation({summary: 'Retourne les parametres pour l envoi SMS'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/smsadm.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(body: SmsSettingsDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('set')@ApiOperation({summary: 'Enregistre les parametres'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/smsadm.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SmsSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { SmsadmService } from '~/settings/smsadm.service';\nimport { Response } from 'express';\nimport { SmsSettingsDto } from '~/settings/_dto/sms.settings.dto';\n\n@Controller('settings/sms')\n@ApiTags('settings')\nexport class SmsadmController {\n  public constructor(private smsadmService: SmsadmService) {}\n\n  @Get('get')\n  @ApiOperation({ summary: 'Retourne les parametres pour l envoi SMS' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async get(@Res() res: Response): Promise {\n    const data = await this.smsadmService.getParams();\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Post('set')\n  @ApiOperation({ summary: 'Enregistre les parametres' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async set(@Body() body: SmsSettingsDto, @Res() res: Response): Promise {\n    const data = await this.smsadmService.setParams(body);\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePart.html":{"url":"classes/StatePart.html","title":"class - StatePart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/state.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Number, enum: AgentStateList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AgentState, AgentStateList } from '~/core/agents/_enum/agent-state.enum';\n\n@Schema({ _id: false })\nexport class StatePart extends Document {\n  @Prop({\n    required: true,\n    type: Number,\n    enum: AgentStateList,\n    default: AgentState.PENDING,\n  })\n  public current: number;\n\n  @Prop({\n    type: Date,\n    default: new Date(),\n  })\n  public lastChangedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedUntil?: Date;\n\n  @Prop({ type: String })\n  public suspendedReason?: string;\n}\n\nexport const StatePartSchema = SchemaFactory.createForClass(StatePart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePartDTO.html":{"url":"classes/StatePartDTO.html","title":"class - StatePartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/state.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, IsNumber, IsDate, IsOptional } from 'class-validator';\n\nexport class StatePartDTO {\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty()\n  public current: number;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastChangedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedUntil?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedReason?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SyncIdentitiesDto.html":{"url":"classes/SyncIdentitiesDto.html","title":"class - SyncIdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SyncIdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/sync-identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/sync-identities.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class SyncIdentitiesDto {\n  @IsArray()\n  @ApiProperty({ type: Array })\n  public payload: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tasks.html":{"url":"classes/Tasks.html","title":"class - Tasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/_schemas/tasks.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                jobs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        jobs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/tasks/_schemas/tasks.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type TasksDocument = Tasks & Document;\n\n@Schema({ versionKey: false })\nexport class Tasks extends AbstractSchema {\n  @Prop({ type: [Types.ObjectId] })\n  public jobs?: Types.ObjectId[];\n}\n\nexport const TasksSchema = SchemaFactory.createForClass(Tasks);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { TasksService } from './tasks.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('tasks')\nexport class TasksController extends AbstractController {\n  constructor(private readonly _service: TasksService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService \n\nTasksService \n\n\n\nTasksModule\n\nTasksModule\n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TasksSchema, Tasks } from './_schemas/tasks.schema';\nimport { TasksService } from './tasks.service';\nimport { TasksController } from './tasks.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Tasks.name,\n        useFactory: () => TasksSchema,\n      },\n    ]),\n  ],\n  providers: [TasksService],\n  controllers: [TasksController],\n  exports: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/tasks/tasks.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:56\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:191\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:358\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:81\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:156\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:233\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:296\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Tasks } from './_schemas/tasks.schema';\n\n@Injectable()\nexport class TasksService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Tasks.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketForm.html":{"url":"interfaces/TicketForm.html","title":"interface - TicketForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            submitApiUrl\n                                        \n                                \n                                \n                                        \n                                            submitButtonText\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitApiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitApiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormField.html":{"url":"interfaces/TicketFormField.html","title":"interface - TicketFormField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attrsOnCreate\n                                        \n                                \n                                \n                                        \n                                            attrsOnDefault\n                                        \n                                \n                                \n                                        \n                                            attrsOnDelete\n                                        \n                                \n                                \n                                        \n                                            attrsOnRead\n                                        \n                                \n                                \n                                        \n                                            attrsOnUpdate\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            model-value\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDefault\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDefault:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDelete:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnRead:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnUpdate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model-value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model-value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormSection.html":{"url":"interfaces/TicketFormSection.html","title":"interface - TicketFormSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fields\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenData.html":{"url":"interfaces/TokenData.html","title":"interface - TokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            iv\n                                        \n                                \n                                \n                                        \n                                            k\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iv:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        k\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        k:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {InjectRedis} from '@nestjs-modules/ioredis';\nimport {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport {randomInt} from 'crypto';\nimport Redis from 'ioredis';\nimport {AbstractService} from '~/_common/abstracts/abstract.service';\nimport {ActionType} from '~/core/backends/_enum/action-type.enum';\nimport {BackendsService} from '~/core/backends/backends.service';\nimport {Jobs} from '~/core/jobs/_schemas/jobs.schema';\nimport {AskTokenDto} from './_dto/ask-token.dto';\nimport {ChangePasswordDto} from './_dto/change-password.dto';\nimport {ResetPasswordDto} from './_dto/reset-password.dto';\nimport {IdentitiesCrudService} from '../identities/identities-crud.service';\nimport {get} from 'radash';\nimport {Identities} from '../identities/_schemas/identities.schema';\nimport {MailerService} from '@nestjs-modules/mailer';\nimport {InitAccountDto} from '~/management/passwd/_dto/init-account.dto';\nimport {ConfigService} from '@nestjs/config';\nimport {ResetByCodeDto} from '~/management/passwd/_dto/reset-by-code.dto';\nimport {PasswdadmService} from '~/settings/passwdadm.service';\nimport {IdentityState} from '~/management/identities/_enums/states.enum';\nimport {InitResetDto} from '~/management/passwd/_dto/init-reset.dto';\nimport {SmsadmService} from '~/settings/smsadm.service';\nimport {InitManyDto} from '~/management/passwd/_dto/init-many.dto';\nimport {InitStatesEnum} from '~/management/identities/_enums/init-state.enum';\nimport {MailadmService} from '~/settings/mailadm.service';\nimport {DataStatusEnum} from \"~/management/identities/_enums/data-status\";\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesCrudService,\n    protected mailer: MailerService,\n    protected config: ConfigService,\n    private passwdadmService: PasswdadmService,\n    private smsadmService: SmsadmService,\n    private mailadmService: MailadmService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n  //Initialisation du reset de mot de passe envoie un email ou par sms  un code et fourni un token au front.\n  // Le code est la clé du token\n  public async initReset(initDto: InitResetDto): Promise {\n    //envoi du mail\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //test si on peu reninitialiser le compte\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE ||  identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //prise des parametres\n      const params = await this.passwdadmService.getPolicies();\n      const k = randomInt(100000, 999999);\n      //asking for padding\n      const padd = await this.getPaddingForCode();\n      const mailAttribute = params.emailAttribute;\n      const mail = get(identity.toObject(), mailAttribute);\n      if (mail) {\n        const token = await this.askToken({ mail: mail, uid: initDto.uid }, padd + k.toString(16), params.resetCodeTTL);\n        this.logger.log('Token :' + token + '  int : ' + k.toString(10));\n        if (initDto.type === 0) {\n          this.logger.log('Reset password asked by mail for  : ' + initDto.uid);\n          const smtpParams = await this.mailadmService.getParams();\n          if (mailAttribute !== '') {\n            // this.mailer.addTransporter('lastStmp', smtpParams.host)\n            this.mailer\n              .sendMail({\n                // transporterName: 'lastStmp',\n                from: smtpParams.sender,\n                to: mail,\n                subject: 'Reinitialisation de votre mot de passe',\n                template: 'resetaccount',\n                context: {\n                  uid: identity.inetOrgPerson.uid,\n                  displayName: identity.inetOrgPerson.displayName,\n                  code: k,\n                },\n              })\n              .then(() => {\n                this.logger.log('reset compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              })\n              .catch(() => {\n                throw new BadRequestException({\n                  message: 'Erreur serveur lors de l envoi du mail',\n                  error: 'Bad Request',\n                  statusCode: 400,\n                });\n              });\n            return token;\n          } else {\n            return false;\n          }\n        } else {\n          //envoi par SMS si c est possible\n          const policies = await this.passwdadmService.getPolicies();\n          if (policies.resetBySms === true) {\n            this.logger.log('Reset password asked by SMS for  : ' + initDto.uid);\n            const smsAttribute = params.mobileAttribute;\n            if (smsAttribute !== '') {\n              const numTel = get(identity.toObject(), smsAttribute);\n              await this.smsadmService.send(numTel, 'Votre code de reinitialisation : ' + k.toString(10));\n            }\n            return token;\n          } else {\n            return false;\n          }\n        }\n      } else {\n        this.logger.error('Error while reset identityMailAttribute Empty');\n      }\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (uid=${initDto?.uid})`);\n      //on retoune un token qui ne sert à rien pour ne pas divulguer que l uid n existe pas\n      const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n      const falseToken = await this.askToken({ mail: 'xxxxxx@xxxxxxxxxxx', uid: 'xxxxxxxx@xxxxxxx' }, k, 0);\n      return falseToken;\n    }\n  }\n  //Initialisation du compte. Envoi d' un mail avec un token pour l'init du compte\n  public async initAccount(initDto: InitAccountDto): Promise {\n    //recherche de l'identity\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //test si on peu reninitialiser le compte\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE || identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //envoi du mail\n      const params = await this.passwdadmService.getPolicies();\n      const mailAttribute = params.emailAttribute;\n      this.logger.log('mailer.identityMailAttribute : ' + mailAttribute);\n      if (mailAttribute !== '') {\n        const mail = get(identity.toObject(), mailAttribute);\n        if (mail) {\n          const smtpParams = await this.mailadmService.getParams();\n          //demande du token\n          const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n          const token = await this.askToken({ mail: mail, uid: initDto.uid }, k, params.initTokenTTL);\n          //envoi du token\n          this.mailer\n            .sendMail({\n              from: smtpParams.sender,\n              to: mail,\n              subject: 'Activation de votre compte',\n              template: 'initaccount',\n              context: {\n                displayName: identity.inetOrgPerson.displayName,\n                uid: initDto.uid,\n                url: this.config.get('frontPwd.url') + '/initaccount/' + token,\n                mail: identity.inetOrgPerson.mail\n              },\n            })\n            .then(() => {\n              this.logger.log('Init compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              this.setInitState(identity, InitStatesEnum.SENT);\n            })\n            .catch((e) => {\n              this.logger.error('Erreur serveur lors de l envoi du mail' + e);\n              throw new BadRequestException({\n                message: 'Erreur serveur lors de l envoi du mail' + e,\n                error: 'Bad Request',\n                statusCode: 400,\n              });\n            });\n\n          return true;\n        } else {\n          this.logger.error('Error while initAccount identityMailAttribute Empty');\n          return false;\n        }\n      } else {\n        this.logger.error('Error while initAccount identityMailAttribute not defined');\n        return false;\n      }\n    } catch (e) {\n      this.logger.error('Error while initialize password. ' + e + ` (uid=${initDto?.uid})`);\n      return false;\n    }\n  }\n\n  //Changement du password\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': passwdDto.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n      if ( identity.dataStatus  === DataStatusEnum.INACTIVE ||  identity.dataStatus  === DataStatusEnum.DELETED){\n        throw new BadRequestException(\n          'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n        );\n      }\n      //verification de la police de mdp\n      if ((await this.passwdadmService.checkPolicies(passwdDto.newPassword)) === false) {\n        throw new BadRequestException({\n          message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique des mots de passe',\n          error: 'Bad Request',\n          statusCode: 400,\n        });\n      }\n      //tout est ok en envoie au backend\n      const result = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_CHANGE,\n        identity._id,\n        {\n          uid: passwdDto.uid,\n          oldPassword: passwdDto.oldPassword,\n          newPassword: passwdDto.newPassword,\n          ...identity.toJSON(),\n        },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n      // on met actif l'identité\n      await this.identities.model.updateOne({ _id:identity._id},{dataStatus: DataStatusEnum.ACTIVE})\n      return result;\n    } catch (e) {\n      let job = undefined;\n      let _debug = undefined;\n      this.logger.error('Error while changing password. ' + e + ` (uid=${passwdDto?.uid})`);\n\n      if (e?.response?.status === HttpStatus.BAD_REQUEST) {\n        job = {};\n        job['status'] = e?.response?.job?.status;\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        _debug = e?.response?.error?.response;\n      }\n\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Mot de passe incorrect ou utilisateur inconnu',\n        error: 'Bad Request',\n        statusCode: 400,\n        job,\n        _debug,\n      });\n    }\n  }\n\n  // Genere un token pour les autres methodes\n  public async askToken(askToken: AskTokenDto, k, ttl: number): Promise {\n    try {\n      /*\n      if (ttl >0){\n\n        await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n      }\n      */\n\n      const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n      const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n      let ciphertext = cipher.update(\n        JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n        'utf8',\n        'base64',\n      );\n      ciphertext += cipher.final('base64');\n      //on enregistre pas dans redis si le ttl =0\n      if (ttl > 0) {\n        await this.redis.set(\n          ciphertext,\n          JSON.stringify({\n            k,\n            iv,\n            tag: cipher.getAuthTag().toString('base64'),\n          }),\n        );\n        await this.redis.expire(ciphertext, ttl);\n      }\n      return encodeURIComponent(ciphertext);\n    } catch (e) {\n      this.logger.error('Error while ask token. ' + e + ` (uid=${askToken?.uid})`);\n      throw new BadRequestException('Impossible de générer un token, une erreur est survenue');\n    }\n  }\n\n  // decrypte le token à l aide du code\n  public async decryptTokenWithCode(token: string, code: number): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n      this.logger.log('decrypt ' + cypherData);\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n      const padd = await this.getPaddingForCode();\n      const k = padd + code.toString(16);\n      this.logger.log('k=' + k);\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.error('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token xx');\n    }\n  }\n\n  // decrypte le token d'initialisation du compte\n  public async decryptToken(token: string): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.verbose('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token');\n    }\n  }\n\n  // reset du password\n  public async resetByCode(data: ResetByCodeDto): Promise {\n    this.logger.log('resetByCode : ' + data.token + ' ' + data.code);\n    //verification du passwordPolicies\n    if ((await this.passwdadmService.checkPolicies(data.newpassword)) === false) {\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique de securité',\n        error: 'Bad Request',\n        statusCode: 400,\n      });\n    }\n    const tokenData = await this.decryptTokenWithCode(data.token, data.code);\n    this.logger.log('dataToken :' + tokenData);\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid })) as Identities;\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: identity.inetOrgPerson.uid, newPassword: data.newpassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        this.logger.log('delete key');\n        await this.redis.del(data.token);\n        // mise de l indentité active\n        // on met actif l'identité\n        identity.dataStatus = DataStatusEnum.ACTIVE;\n        await identity.save()\n        return [_, response];\n      }\n      this.logger.error('Error from backend while reseting password by code');\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password by code. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  // methode pour le reset par token (pour l initialisation du compte)\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': tokenData.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newPassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        await this.redis.del(data.token);\n        await this.setInitState(identity, InitStatesEnum.INITIALIZED);\n        return [_, response];\n      }\n\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  //Envoi le message d init à plusieurs identités\n  public async initMany(ids: InitManyDto): Promise {\n    const identities = await this.identities.find({ _id: { $in: ids.ids } });\n    if (identities.length === 0) {\n      throw new HttpException('Aucune identité trouvée.', 404);\n    }\n    const updated = await Promise.all(\n      identities.map((identity) => {\n        this.logger.verbose('send To :' + identity.get('inetOrgPerson.uid'));\n        return this.initAccount({ uid: identity.get('inetOrgPerson.uid') });\n      }),\n    );\n    return updated as any;\n  }\n\n  // genere des octect pour completer le code qui est de 4 octets et demi\n  private async getPaddingForCode(): Promise {\n    let code = '';\n    if (await this.redis.exists('CODEPADDING')) {\n      code = await this.redis.get('CODEPADDING');\n    } else {\n      code = crypto.randomBytes(13).toString('hex') + '0';\n      await this.redis.set('CODEPADDING', code);\n    }\n    return code;\n  }\n\n  private async setInitState(identity: Identities, state: InitStatesEnum): Promise {\n    identity.initState = state;\n    // on met actif l'identité\n    identity.dataStatus = DataStatusEnum.ACTIVE;\n    if (state === InitStatesEnum.SENT) {\n      identity.initInfo.initDate = new Date();\n      identity.initInfo.sentDate = null;\n    } else if (state === InitStatesEnum.INITIALIZED) {\n      identity.initInfo.sentDate = new Date();\n    }\n    const ok = await identity.save();\n    return ok;\n  }\n\n  // sort les identites qui n ont pas repondu dans le delai à l init de leurs comptes\n  public async checkInitOutDated(): Promise {\n    const date = new Date();\n    const params = await this.passwdadmService.getPolicies();\n    date.setTime(date.getTime() - params.initTokenTTL * 1000);\n    console.log('modifié:' + date);\n    const identities = await this.identities.find({\n      initState: InitStatesEnum.SENT,\n      'initInfo.initDate': { $lt: date },\n    });\n    return identities;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformersFilestorageService.html":{"url":"injectables/TransformersFilestorageService.html","title":"injectable - TransformersFilestorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformersFilestorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_services/transformers-filestorage.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                TRANSFORMERS\n                            \n                            \n                                    Private\n                                _customModuleName\n                            \n                            \n                                    Private\n                                _customServiceName\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Async\n                                streamToString\n                            \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Static\n                                    Async\n                                transformHtml\n                            \n                            \n                                    Static\n                                    Async\n                                transformImage\n                            \n                            \n                                    Static\n                                    Async\n                                transformPdf\n                            \n                            \n                                    Static\n                                    Async\n                                transformPlain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Async\n                        streamToString\n                        \n                    \n                \n            \n            \n                \n                        \n                    streamToString(stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(mime: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream, _parent?: Filestorage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _parent\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformHtml\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformHtml(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformImage(mime: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformPdf\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformPdf(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformPlain\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformPlain(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        TRANSFORMERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    'text/plain': TransformersFilestorageService.transformPlain,\n    'text/html': TransformersFilestorageService.transformHtml,\n    'application/pdf': TransformersFilestorageService.transformPdf,\n    'image/*': TransformersFilestorageService.transformImage,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customModuleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _customServiceName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { Injectable } from '@nestjs/common';\nimport { Response } from 'express';\nimport { Filestorage } from '~/core/filestorage/_schemas/filestorage.schema';\n\n@Injectable()\nexport class TransformersFilestorageService extends AbstractService {\n  public static readonly TRANSFORMERS = {\n    'text/plain': TransformersFilestorageService.transformPlain,\n    'text/html': TransformersFilestorageService.transformHtml,\n    'application/pdf': TransformersFilestorageService.transformPdf,\n    'image/*': TransformersFilestorageService.transformImage,\n  };\n\n  public constructor() {\n    super();\n  }\n\n  public async transform(\n    mime: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n    _parent?: Filestorage,\n  ): Promise {\n    const mimeType = mime || data.mime || 'application/octet-stream';\n    const hasTransformer = TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType);\n    // TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType) || TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType.split('/')[0] + '/*')\n    if (!hasTransformer) {\n      if (TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType.split('/')[0] + '/*')) {\n        await TransformersFilestorageService.TRANSFORMERS[mimeType.split('/')[0] + '/*'](mime, res, data, stream);\n        return;\n      }\n    }\n    if (!hasTransformer) {\n      res.setHeader('Content-Type', mimeType);\n      // eslint-disable-next-line\n      res.setHeader('Content-Disposition', `attachment; filename=\"${(data as any).filename}\"`)\n      stream.pipe(res);\n      return;\n    }\n    await TransformersFilestorageService.TRANSFORMERS[mimeType](mime, res, data, stream);\n  }\n\n  public static async transformPlain(\n    _: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'text/plain');\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res);\n    return;\n  }\n\n  public static async transformPdf(\n    _: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'application/pdf');\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res);\n    return;\n  }\n\n  public static async transformHtml(\n    _: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'text/html');\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    res.render('core/filestorage/transformers/html', {\n      data,\n      html: await TransformersFilestorageService.streamToString(stream),\n    });\n  }\n\n  public static async transformImage(\n    mime: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'image/' + mime.split('/').pop());\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res);\n    return;\n  }\n\n  private static async streamToString(stream: NodeJS.ReadableStream): Promise {\n    const chunks = [];\n    return new Promise((resolve, reject) => {\n      stream.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\n      stream.on('error', (err) => reject(err));\n      stream.on('end', () => resolve(Buffer.concat(chunks).toString('utf8')));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniquenessMailValidator.html":{"url":"injectables/UniquenessMailValidator.html","title":"injectable - UniquenessMailValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UniquenessMailValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/validators/uniqueness-example.validator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/_common/validators/uniqueness-example.validator.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(validationArguments?: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validators/uniqueness-example.validator.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationArguments\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(value: any, args?: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/validators/uniqueness-example.validator.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectConnection } from '@nestjs/mongoose'\nimport {\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n  registerDecorator,\n} from 'class-validator'\nimport { Connection } from 'mongoose'\nimport { get } from 'radash'\n\n@ValidatorConstraint({ name: 'UniquenessMailValidator', async: true })\n@Injectable()\nexport class UniquenessMailValidator implements ValidatorConstraintInterface {\n  public constructor(@InjectConnection() private connection: Connection) { }\n  public async validate(\n    value: any,\n    args?: ValidationArguments\n  ): Promise {\n    for (const contraint of args.constraints) {\n      const $ne = get(args.object, contraint.primaryKey)\n      const val = get(value, contraint.key)\n      const count = await this.connection.collection(contraint.collection).countDocuments({\n        [contraint.primaryKey]: { $ne },\n        [contraint.key]: val,\n      })\n\n      console.log('count', count)\n      console.log('debug', {\n        [contraint.primaryKey]: { $ne },\n        [contraint.key]: val,\n      })\n\n      if (count > 0) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  defaultMessage(validationArguments?: ValidationArguments): string {\n    // return custom field message\n    const field: string = validationArguments.property\n    return `${field} is already exist`\n  }\n}\n\nexport type UniquenessMailInterface = {\n  collection: string\n  primaryKey: string\n  key: string\n}\n\nexport function isUnique(options: UniquenessMailInterface, validationOptions?: ValidationOptions) {\n  return function (object: any, propertyName: string) {\n    registerDecorator({\n      name: 'isUnique',\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [options],\n      validator: UniquenessMailValidator,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConfigException.html":{"url":"classes/ValidationConfigException.html","title":"class - ValidationConfigException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConfigException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/errors/ValidationException.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationRecursive.html":{"url":"interfaces/ValidationRecursive.html","title":"interface - ValidationRecursive","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:15\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        // console.log('validations', JSON.stringify(request.body));\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationSchemaException.html":{"url":"classes/ValidationSchemaException.html","title":"class - ValidationSchemaException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationSchemaException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyTokenDto.html":{"url":"classes/VerifyTokenDto.html","title":"class - VerifyTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/verify-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'token received by getToken'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/verify-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class VerifyTokenDto {\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'token received by getToken',\n  })\n  @IsString()\n  public token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInfoInterface.html":{"url":"interfaces/WorkerResultInfoInterface.html","title":"interface - WorkerResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [backendName: string]:        Partial\n\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/_interfaces/worker-result.interface.ts:13\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobName?: string;\n  options?: {\n    [key: string | number]: any;\n  };\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInterface.html":{"url":"interfaces/WorkerResultInterface.html","title":"interface - WorkerResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            jobId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            jobName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         WorkerResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WorkerResultInfoInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobName?: string;\n  options?: {\n    [key: string | number]: any;\n  };\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/additionalFieldsPartDto.html":{"url":"classes/additionalFieldsPartDto.html","title":"class - additionalFieldsPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  additionalFieldsPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/additionalFields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    Public\n                                objectClasses\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, name: 'attributes'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, name: 'validations'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional } from 'class-validator';\n\nexport class additionalFieldsPartDto {\n  @ApiProperty({\n    type: 'array',\n    items: {\n      type: 'string',\n    },\n  })\n  public objectClasses: string[] = [];\n\n  @ApiProperty({\n    type: Object,\n    name: 'attributes',\n  })\n  @IsOptional()\n  public attributes: { [key: string]: any } = {};\n\n  @ApiProperty({\n    type: Object,\n    name: 'validations',\n  })\n  public validations?: { [key: string]: { [key: string]: string } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/ioredis : ^2.0.2\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/axios : ^4.0.1\n        \n            @nestjs/bullmq : ^10.1.1\n        \n            @nestjs/common : ^10.4.16\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.4.8\n        \n            @nestjs/event-emitter : ^3.0.1\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.4.8\n        \n            @nestjs/schedule : ^6.0.0\n        \n            @nestjs/swagger : ^8.0.7\n        \n            @the-software-compagny/nestjs_module_factorydrive : ^1.1.5\n        \n            @the-software-compagny/nestjs_module_factorydrive-s3 : ^1.0.1\n        \n            @the-software-compagny/nestjs_module_restools : ^0.0.11\n        \n            ajv : ^8.16.0\n        \n            ajv-errors : ^3.0.0\n        \n            ajv-formats : ^3.0.1\n        \n            ajv-i18n : ^4.2.0\n        \n            argon2 : ^0.41.1\n        \n            awesome-phonenumber : ^6.10.0\n        \n            axios : ^1.10.0\n        \n            bullmq : ^5.8.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.6\n        \n            fast-password-entropy : ^1.1.1\n        \n            glob : ^11.0.0\n        \n            handlebars : ^4.7.8\n        \n            helmet : ^7.1.0\n        \n            hibp : ^14.1.2\n        \n            ioredis : ^5.4.1\n        \n            loglevel : ^1.9.1\n        \n            lru-cache : ^11.0.2\n        \n            mjml : ^4.15.3\n        \n            mongoose : ^8.9.5\n        \n            nest-commander : ^3.13.0\n        \n            nest-winston : ^1.10.0\n        \n            nestjs-request-context : ^3.0.0\n        \n            nodemailer : ^6.9.16\n        \n            ora : ^8.1.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            radash : ^12.1.0\n        \n            reflect-metadata : ^0.2.2\n        \n            request-ip : ^3.3.0\n        \n            rxjs : ^7.8.1\n        \n            schema-to-yup : ^1.12.18\n        \n            smpp : ^0.6.0-rc.4\n        \n            swagger-themes : ^1.4.3\n        \n            types-package-json : ^2.0.39\n        \n            winston : ^3.17.0\n        \n            winston-mongodb : ^6.0.0\n        \n            winston-transport : ^4.9.0\n        \n            yaml : ^2.6.1\n        \n            yup : ^1.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../action-type.enum.ts)\n                        \n                        \n                            AgentState   (src/.../agent-state.enum.ts)\n                        \n                        \n                            BackendCodesEnum   (src/.../backend-codes.enum.ts)\n                        \n                        \n                            ConfigObjectType   (src/.../config.object.ts)\n                        \n                        \n                            DataStatusEnum   (src/.../data-status.ts)\n                        \n                        \n                            FormTypes   (src/.../types.ts)\n                        \n                        \n                            FsType   (src/.../fs-type.enum.ts)\n                        \n                        \n                            IdentityLifecycle   (src/.../lifecycle.enum.ts)\n                        \n                        \n                            IdentityState   (src/.../states.enum.ts)\n                        \n                        \n                            InitStatesEnum   (src/.../init-state.enum.ts)\n                        \n                        \n                            InternalLogLevel   (src/.../internal.logger.ts)\n                        \n                        \n                            JobState   (src/.../state.enum.ts)\n                        \n                        \n                            ProjectsList   (src/.../app.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/backends/_enum/action-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                Value : LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                 DUMP_PACKAGE_CONFIG\n                            \n                        \n                        \n                            \n                                Value : DUMP_PACKAGE_CONFIG\n                            \n                        \n                        \n                            \n                                 PING_TARGET\n                            \n                        \n                        \n                            \n                                Value : PING_TARGET\n                            \n                        \n                        \n                            \n                                 IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_CHANGE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_CHANGE\n                            \n                        \n                        \n                            \n                                 IDENTITY_DISABLE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_DISABLE\n                            \n                        \n                        \n                            \n                                 IDENTITY_ENABLE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_ENABLE\n                            \n                        \n            \n        \n\n    src/core/agents/_enum/agent-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AgentState\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/core/backends/_interfaces/backend-codes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        BackendCodesEnum\n                    \n                \n                    \n                        \n                            BackendCodesEnum\n\n                        \n                    \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 GENERIC_ERROR\n                            \n                        \n                        \n                            \n                                 GENERIC_STOPPED\n                            \n                        \n                        \n                            \n                                 CONNECTION_ERROR\n                            \n                        \n                        \n                            \n                                 INVALID_LOGIN\n                            \n                        \n                        \n                            \n                                 INVALID_CREDENTIALS\n                            \n                        \n                        \n                            \n                                 INVALID_JSON_RESPONSE\n                            \n                        \n            \n        \n\n    src/management/identities/validations/_enums/config.object.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigObjectType\n                    \n                \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                 date\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/data-status.ts\n    \n        \n            \n                \n                    \n                        \n                        DataStatusEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 NOTINITIALIZED\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                 PASSWORDNEEDTOBECHANGED\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n\n    src/core/form/_enum/types.ts\n    \n        \n            \n                \n                    \n                        \n                        FormTypes\n                    \n                \n                        \n                            \n                                 BASE\n                            \n                        \n                        \n                            \n                                 STEPS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TABS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/core/filestorage/_enum/fs-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FsType\n                    \n                \n                        \n                            \n                                 DIRECTORY\n                            \n                        \n                        \n                            \n                                Value : d\n                            \n                        \n                        \n                            \n                                 FILE\n                            \n                        \n                        \n                            \n                                Value : f\n                            \n                        \n                        \n                            \n                                 SYMLINK\n                            \n                        \n                        \n                            \n                                Value : l\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/lifecycle.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityLifecycle\n                    \n                \n                        \n                            \n                                 WAIT\n                            \n                        \n                        \n                            \n                                Value : W\n                            \n                        \n                        \n                            \n                                 OFFICIAL\n                            \n                        \n                        \n                            \n                                Value : O\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : A\n                            \n                        \n                        \n                            \n                                 PROVISIONAL\n                            \n                        \n                        \n                            \n                                Value : P\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : I\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : D\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityState\n                    \n                \n                        \n                            \n                                 SYNCED\n                            \n                        \n                        \n                            \n                                Value : 99\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : 50\n                            \n                        \n                        \n                            \n                                 TO_SYNC\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 TO_VALIDATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                 TO_CREATE\n                            \n                        \n                        \n                            \n                                 TO_COMPLETE\n                            \n                        \n                        \n                            \n                                 ON_ERROR\n                            \n                        \n                        \n                            \n                                 DONT_SYNC\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/init-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        InitStatesEnum\n                    \n                \n                        \n                            \n                                 NOSENT\n                            \n                        \n                        \n                            \n                                 SENT\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INITIALIZED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/core/logger/internal.logger.ts\n    \n        \n            \n                \n                    \n                        \n                        InternalLogLevel\n                    \n                \n                        \n                            \n                                 CONSOLE\n                            \n                        \n                        \n                            \n                                Value : console\n                            \n                        \n                        \n                            \n                                 DB\n                            \n                        \n                        \n                            \n                                Value : db\n                            \n                        \n            \n        \n\n    src/core/jobs/_enums/state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        JobState\n                    \n                \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n            \n        \n\n    src/app.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ProjectsList\n                    \n                \n                        \n                            \n                                 SESAME_ORCHESTRATOR\n                            \n                        \n                        \n                            \n                                Value : sesame-orchestrator\n                            \n                        \n                        \n                            \n                                 SESAME_DAEMON\n                            \n                        \n                        \n                            \n                                Value : sesame-daemon\n                            \n                        \n                        \n                            \n                                 SESAME_APP_MANAGER\n                            \n                        \n                        \n                            \n                                Value : sesame-app-manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nSésame ochestrator - Synchronisation d'Identités Multi-sources\n\n  \n  \n  \n  \n\n\n\nDescription\nSésame est une application open source conçue pour faciliter la synchronisation d'identités entre différentes sources de données, y compris des bases de données, des annuaires LDAP/Active Directory et des applications tierces, vers des serveurs OpenLDAP ou Active Directory. Le projet se compose de deux modules principaux : l'orchestrateur et le démon.\nSesame Orchestrateur\nAPI du projet SESAME\nArchitecture du projet\nFigma\nDocumentation\n Aller à la documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPerson.html":{"url":"classes/inetOrgPerson.html","title":"class - inetOrgPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                cn\n                            \n                            \n                                    \n                                    Public\n                                departmentNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    Public\n                                employeeNumber\n                            \n                            \n                                    \n                                    Public\n                                employeeType\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                jpegPhoto\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    Public\n                                sn\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    Public\n                                uid\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                userCertificate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, validate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        jpegPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AutoIncrementPluginOptions } from '~/_common/plugins/mongoose/auto-increment.interface';\nimport { AutoIncrementPlugin } from '~/_common/plugins/mongoose/auto-increment.plugin';\n\n@Schema({ _id: false })\nexport class inetOrgPerson extends Document {\n  @Prop({ type: String, required: true })\n  public cn: string;\n\n  @Prop({ type: String, default: null })\n  public displayName?: string;\n\n  @Prop({ type: String, default: null })\n  public facsimileTelephoneNumber?: string;\n\n  @Prop({ type: String, default: null })\n  public givenName?: string;\n\n  @Prop({ type: String, default: null })\n  public labeledURI?: string;\n\n  @Prop({ type: String, default: null })\n  public mail?: string;\n\n  @Prop({ type: String, default: null })\n  public mobile?: string;\n\n  @Prop({ type: String, default: null })\n  public postalAddress?: string;\n\n  @Prop({ type: String, default: null })\n  public preferredLanguage?: string;\n\n  @Prop({ type: String, required: true })\n  public sn: string;\n\n  @Prop({ type: String, default: null })\n  public telephoneNumber?: string;\n\n  @Prop({ type: String, default: null })\n  public title?: string;\n\n  @Prop({ type: String, required: true })\n  public uid: string;\n\n  @Prop({\n    type: Array,\n    of: String,\n    validate: [\n      {\n        validator: (employeeNumbers: string[]) => {\n          if (!Array.isArray(employeeNumbers)) return false;\n\n          return employeeNumbers.every((employeeNumber) => /[A-Za-z0-9_-]+/.test(employeeNumber));\n        },\n        message: 'EmployeeNumber invalide.',\n      },\n    ],\n  })\n  public employeeNumber: string[];\n\n  @Prop({ type: String, required: true })\n  public employeeType: string;\n\n  @Prop({ type: Array, of: String, required: true, default: [] })\n  public departmentNumber: string[];\n\n  @Prop({ type: String, default: null })\n  public jpegPhoto?: string;\n\n  // @Prop({ type: String, default: null })\n  // public photo?: string;\n\n  @Prop({ type: String, default: null })\n  public userCertificate?: string;\n\n  // @Prop({ type: String, default: null })\n  // public userPassword?: string;\n}\n\nexport const inetOrgPersonSchema = SchemaFactory.createForClass(inetOrgPerson);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonCreateDto.html":{"url":"classes/inetOrgPersonCreateDto.html","title":"class - inetOrgPersonCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                departmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                employeeNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                employeeType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                jpegPhoto\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                userCertificate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                initForFingerprint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()@IsString({each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@Type(undefined)@IsString({each: true})@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        jpegPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(o => )@IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:126\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        initForFingerprint\n                        \n                    \n                \n            \n            \n                \n                        \n                    initForFingerprint(partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { plainToInstance, Type } from 'class-transformer';\nimport { IsString, IsEmail, IsOptional, IsArray, ValidateIf } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  public static initForFingerprint(partial: Partial) {\n    try {\n      return plainToInstance(inetOrgPersonCreateDto, {\n        cn: partial.cn || null,\n        sn: partial.sn || null,\n        uid: partial.uid || null,\n        employeeNumber: partial.employeeNumber || [],\n        employeeType: partial.employeeType || null,\n        departmentNumber: partial.departmentNumber || [],\n        displayName: partial.displayName || null,\n        facsimileTelephoneNumber: partial.facsimileTelephoneNumber || null,\n        givenName: partial.givenName || null,\n        labeledURI: partial.labeledURI || null,\n        mail: partial.mail || null,\n        mobile: partial.mobile || null,\n        postalAddress: partial.postalAddress || null,\n        preferredLanguage: partial.preferredLanguage || null,\n        telephoneNumber: partial.telephoneNumber || null,\n        title: partial.title || null,\n        userCertificate: partial.userCertificate || null,\n        jpegPhoto: partial.jpegPhoto || null,\n\n        ...partial\n      });\n    } catch (error) {\n      console.error('inetOrgPersonCreateDto.initForFingerprint', error);\n      throw error;\n    }\n  }\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public uid: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public cn: string;\n\n  @IsArray()\n  @Type(() => String)\n  @IsString({ each: true })\n  @ApiProperty()\n  @IsOptional()\n  public employeeNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public employeeType: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  public departmentNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public labeledURI?: string;\n\n  @ValidateIf(o => {\n    return o.mail && o.mail.length > 0;\n  })\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public userCertificate?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public userPassword?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public jpegPhoto?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public photo?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonDto.html":{"url":"classes/inetOrgPersonDto.html","title":"class - inetOrgPersonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            inetOrgPersonCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                departmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                employeeNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                employeeType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                jpegPhoto\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                userCertificate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                initForFingerprint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()@IsString({each: true})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@Type(undefined)@IsString({each: true})@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:77\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:82\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        jpegPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:136\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:87\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(o => )@IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:95\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:101\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:111\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:116\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:121\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:126\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        initForFingerprint\n                        \n                    \n                \n            \n            \n                \n                        \n                    initForFingerprint(partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         inetOrgPersonCreateDto\n\n                        \n                    \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:6\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { plainToInstance, Type } from 'class-transformer';\nimport { IsString, IsEmail, IsOptional, IsArray, ValidateIf } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  public static initForFingerprint(partial: Partial) {\n    try {\n      return plainToInstance(inetOrgPersonCreateDto, {\n        cn: partial.cn || null,\n        sn: partial.sn || null,\n        uid: partial.uid || null,\n        employeeNumber: partial.employeeNumber || [],\n        employeeType: partial.employeeType || null,\n        departmentNumber: partial.departmentNumber || [],\n        displayName: partial.displayName || null,\n        facsimileTelephoneNumber: partial.facsimileTelephoneNumber || null,\n        givenName: partial.givenName || null,\n        labeledURI: partial.labeledURI || null,\n        mail: partial.mail || null,\n        mobile: partial.mobile || null,\n        postalAddress: partial.postalAddress || null,\n        preferredLanguage: partial.preferredLanguage || null,\n        telephoneNumber: partial.telephoneNumber || null,\n        title: partial.title || null,\n        userCertificate: partial.userCertificate || null,\n        jpegPhoto: partial.jpegPhoto || null,\n\n        ...partial\n      });\n    } catch (error) {\n      console.error('inetOrgPersonCreateDto.initForFingerprint', error);\n      throw error;\n    }\n  }\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public uid: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public cn: string;\n\n  @IsArray()\n  @Type(() => String)\n  @IsString({ each: true })\n  @ApiProperty()\n  @IsOptional()\n  public employeeNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public employeeType: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  public departmentNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public labeledURI?: string;\n\n  @ValidateIf(o => {\n    return o.mail && o.mail.length > 0;\n  })\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public userCertificate?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public userPassword?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public jpegPhoto?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public photo?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonUpdateDto.html":{"url":"classes/inetOrgPersonUpdateDto.html","title":"class - inetOrgPersonUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(inetOrgPersonCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { plainToInstance, Type } from 'class-transformer';\nimport { IsString, IsEmail, IsOptional, IsArray, ValidateIf } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  public static initForFingerprint(partial: Partial) {\n    try {\n      return plainToInstance(inetOrgPersonCreateDto, {\n        cn: partial.cn || null,\n        sn: partial.sn || null,\n        uid: partial.uid || null,\n        employeeNumber: partial.employeeNumber || [],\n        employeeType: partial.employeeType || null,\n        departmentNumber: partial.departmentNumber || [],\n        displayName: partial.displayName || null,\n        facsimileTelephoneNumber: partial.facsimileTelephoneNumber || null,\n        givenName: partial.givenName || null,\n        labeledURI: partial.labeledURI || null,\n        mail: partial.mail || null,\n        mobile: partial.mobile || null,\n        postalAddress: partial.postalAddress || null,\n        preferredLanguage: partial.preferredLanguage || null,\n        telephoneNumber: partial.telephoneNumber || null,\n        title: partial.title || null,\n        userCertificate: partial.userCertificate || null,\n        jpegPhoto: partial.jpegPhoto || null,\n\n        ...partial\n      });\n    } catch (error) {\n      console.error('inetOrgPersonCreateDto.initForFingerprint', error);\n      throw error;\n    }\n  }\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public uid: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public cn: string;\n\n  @IsArray()\n  @Type(() => String)\n  @IsString({ each: true })\n  @ApiProperty()\n  @IsOptional()\n  public employeeNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public employeeType: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  public departmentNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public labeledURI?: string;\n\n  @ValidateIf(o => {\n    return o.mail && o.mail.length > 0;\n  })\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public userCertificate?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public userPassword?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public jpegPhoto?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public photo?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AgentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BackendsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CliModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilestorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesJsonformsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KeyringsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LifecycleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MigrationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswdModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_imports\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_CliModule\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_FilestorageModule\n\n\n\ncluster_FilestorageModule_exports\n\n\n\ncluster_FilestorageModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_exports\n\n\n\ncluster_KeyringsModule_providers\n\n\n\ncluster_LifecycleModule\n\n\n\ncluster_LifecycleModule_exports\n\n\n\ncluster_LifecycleModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_imports\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_MigrationsModule\n\n\n\ncluster_MigrationsModule_providers\n\n\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesModule -->\n\nAgentsModule->IdentitiesModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nAgentsModule->BackendsModule\n\n\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nMigrationsModule\n\nMigrationsModule\n\nAppModule -->\n\nMigrationsModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\nIdentitiesModule -->\n\nSettingsModule->IdentitiesModule\n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nSettingsModule->PasswdModule\n\n\n\n\n\nMailadmService \n\nMailadmService \n\nMailadmService  -->\n\nSettingsModule->MailadmService \n\n\n\n\n\nPasswdadmService \n\nPasswdadmService \n\nPasswdadmService  -->\n\nSettingsModule->PasswdadmService \n\n\n\n\n\nSmsadmService \n\nSmsadmService \n\nSmsadmService  -->\n\nSettingsModule->SmsadmService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nShutdownObserver\n\nShutdownObserver\n\nAppModule -->\n\nShutdownObserver->AppModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\nKeyringsService \n\nKeyringsService \n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\nCliModule -->\n\nIdentitiesModule->CliModule\n\n\n\n\n\nIdentitiesCrudService \n\nIdentitiesCrudService \n\nIdentitiesCrudService  -->\n\nIdentitiesModule->IdentitiesCrudService \n\n\n\n\n\nIdentitiesUpsertService \n\nIdentitiesUpsertService \n\nIdentitiesUpsertService  -->\n\nIdentitiesModule->IdentitiesUpsertService \n\n\n\n\n\nLifecycleModule\n\nLifecycleModule\n\nLifecycleModule -->\n\nIdentitiesModule->LifecycleModule\n\n\n\nPasswdModule -->\n\nIdentitiesModule->PasswdModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nJobsService \n\nJobsService \n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\nPasswdModule -->\n\nBackendsModule->PasswdModule\n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\nCoreModule -->\n\nFilestorageModule->CoreModule\n\n\n\nIdentitiesModule -->\n\nFilestorageModule->IdentitiesModule\n\n\n\n\n\nFilestorageService \n\nFilestorageService \n\nFilestorageService  -->\n\nFilestorageModule->FilestorageService \n\n\n\n\n\nTransformersFilestorageService \n\nTransformersFilestorageService \n\nTransformersFilestorageService  -->\n\nFilestorageModule->TransformersFilestorageService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\nFilestorageService\n\nFilestorageService\n\nFilestorageModule -->\n\nFilestorageService->FilestorageModule\n\n\n\n\n\nTransformersFilestorageService\n\nTransformersFilestorageService\n\nFilestorageModule -->\n\nTransformersFilestorageService->FilestorageModule\n\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\nIdentitiesForcepasswordService\n\nIdentitiesForcepasswordService\n\nIdentitiesModule -->\n\nIdentitiesForcepasswordService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\nManagementModule -->\n\nLifecycleModule->ManagementModule\n\n\n\n\n\nLifecycleService \n\nLifecycleService \n\nLifecycleService  -->\n\nLifecycleModule->LifecycleService \n\n\n\n\n\nLifecycleService\n\nLifecycleService\n\nLifecycleModule -->\n\nLifecycleService->LifecycleModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\nMigrationsService\n\nMigrationsService\n\nMigrationsModule -->\n\nMigrationsService->MigrationsModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\nMailadmService\n\nMailadmService\n\nSettingsModule -->\n\nMailadmService->SettingsModule\n\n\n\n\n\nPasswdadmService\n\nPasswdadmService\n\nSettingsModule -->\n\nPasswdadmService->SettingsModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nSmsadmService\n\nSmsadmService\n\nSettingsModule -->\n\nSmsadmService->SettingsModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        20 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    34 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    111 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    25 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.5.0\n        \n            Description : Synchronisation d'Identités Multi-sources\n        \n            License : Open Source\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AgentType   (src/.../agent.type.ts)\n                        \n                        \n                            ConfigObjectIdentitiesDTOWithSource   (src/.../lifecycle.service.ts)\n                        \n                        \n                            IdentitiesDocument   (src/.../identities.schema.ts)\n                        \n                        \n                            JobsDocument   (src/.../jobs.schema.ts)\n                        \n                        \n                            KeyringsDocument   (src/.../keyrings.schema.ts)\n                        \n                        \n                            LifecycleDocument   (src/.../lifecycle.schema.ts)\n                        \n                        \n                            LoggerDocument   (src/.../logger.schema.ts)\n                        \n                        \n                            MixedValue   (src/.../mixed-value.type.ts)\n                        \n                        \n                            OverwriteModelNameFunction   (src/.../auto-increment.interface.ts)\n                        \n                        \n                            PartialProjectionType   (src/.../partial-projection.type.ts)\n                        \n                        \n                            SettingsDocument   (src/.../settings.schema.ts)\n                        \n                        \n                            TasksDocument   (src/.../tasks.schema.ts)\n                        \n                        \n                            UniquenessMailInterface   (src/.../uniqueness-example.validator.ts)\n                        \n                        \n                            ValidationExceptionPayload   (src/.../validation-exception-payload.type.ts)\n                        \n                        \n                            WrapperType   (src/.../wrapper.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/types/agent.type.ts\n    \n    \n        \n            \n                \n                    \n                    AgentType\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    src/management/lifecycle/lifecycle.service.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigObjectIdentitiesDTOWithSource\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/management/identities/_schemas/identities.schema.ts\n    \n    \n        \n            \n                \n                    \n                    IdentitiesDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/jobs/_schemas/jobs.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/keyrings/_schemas/keyrings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    KeyringsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/management/lifecycle/_schemas/lifecycle.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LifecycleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/logger/_schemas/logger.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LoggerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/mixed-value.type.ts\n    \n    \n        \n            \n                \n                    \n                    MixedValue\n                \n            \n            \n                \n                            string | Types.ObjectId | Date | number | boolean | null | object | Array | literal type\n\n                \n            \n        \n    \n    src/_common/plugins/mongoose/auto-increment.interface.ts\n    \n    \n        \n            \n                \n                    \n                    OverwriteModelNameFunction\n                \n            \n            \n                \n                    A function to generate the name used for the auto-increment \"modelName\" field\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/_common/types/partial-projection.type.ts\n    \n    \n        \n            \n                \n                    \n                    PartialProjectionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/settings/_schemas/settings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsDocument\n                \n            \n            \n                \n                        Document\n\n                \n            \n        \n    \n    src/core/tasks/_schemas/tasks.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TasksDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/validators/uniqueness-example.validator.ts\n    \n    \n        \n            \n                \n                    \n                    UniquenessMailInterface\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/_common/types/validation-exception-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    ValidationExceptionPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/_common/types/wrapper.type.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/cahier-des-charges.html":{"url":"additional-documentation/cahier-des-charges.html","title":"additional-page - Cahier des charges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCahier des charges pour le Projet Sésame\nObjectif du Projet\nLe projet Sésame vise à développer une application open source de synchronisation d'identités, permettant de gérer la synchronisation entre différentes sources de données (bases de données, annuaires LDAP/Active Directory, applications tierces). Le système se compose de deux modules principaux, l'orchestrateur et le daemon. Et de scripts et projets tel que les backends de synchronisation et les interfaces utilisateur frontend pour la configuration et la manipulation des données.\nSchemas\n  \n\nFonctionnalités Principales\n\nOrchestrateur :\n\n\nGestion de la synchronisation des identités stockés dans MongoDB.\nMaintenance d'une base d'identités pour faciliter la synchronisation.\nConfiguration flexible des schémas additionnels.\nExposition d'entrypoints via une API REST avec des tokens JWT.\nGestion du cycle de vie des identités.\n\n\nDaemon :\n\n\nDéclenchement des scripts backend pour la synchronisation.\nUtilisation de BullMQ et Redis pour la communication avec l'orchestrateur.\n\n\nSchémas d'Identité :\n\n\nUtilisation du schéma LDAP NnetOrgPerson comme base de stockage dans MongoDB.\nConfiguration possible de schémas additionnels pour une variabilité des champs dans chaque enregistrement.\nDéfinition du typage, des règles, et de la présence des champs dans les identités.\nPré-intégration de schémas optionnels, notamment Supann et/ou Renater.\n\n\nTechnologies Utilisées :\n\n\nLangages : NodeJS avec les frameworks NestJS et NuxtJS.\nCommunication daemon-Orchestrateur : BullMQ et Redis.\nAuthentification Orchestrateur : Comptes stockés dans MongoDB, possibilité de stocker les mots de passe dans un serveur tiers (OpenLDAP, ...).\nBackends : Scripts système utilisant les sorties standards, indépendant du langage de l'application principale (Python, PowerShell, Perl, Bash, etc).\n\n\nInterfaces Utilisateur Frontend :\n\n\nConfiguration de l'orchestrateur.\nManipulation et completion des données à synchroniser.\nGestion des schémas d'identité.\nAffichage des logs.\n\nExigences Techniques\n\nSécurité :\n\n\nToutes les communications doivent être sécurisées par des protocoles cryptographiques standards.\nGestion sécurisée des tokens JWT pour l'API REST de l'orchestrateur.\nMise en place de mécanismes de chiffrement appropriés pour les données sensibles.\n\n\nExtensibilité :\n\n\nLe système doit être conçu de manière modulaire pour permettre l'ajout aisé de nouveaux schémas d'identité et sources de données.\n\n\nDocumentation :\n\n\nUne documentation exhaustive doit être fournie pour permettre aux développeurs, administrateurs système et utilisateurs de comprendre et utiliser efficacement l'application.\n\n\nTests Automatisés :\n\n\nLes développements doivent être accompagnés de suites de tests automatisés pour garantir la stabilité et la fiabilité du système.\n\n\nPerformance :\n\n\nLe système doit être optimisé pour gérer un grand nombre d'identités et de sources de données tout en maintenant des performances élevées.\n\nLivrables\n\nCode Source :\n\n\nL'ensemble du code source doit être bien commenté et respecter les normes de codage définies.\nLe code doit être versionné et accessible à travers la plateforme de gestion de versions GitHub.\n\n\nDocumentation Technique :\n\n\nManuels d'installation et de configuration.\nGuides d'utilisation pour les développeurs, administrateurs système et utilisateurs finaux.\n\n\nTests Automatisés :\n\n\nLes résultats des tests automatisés doivent être fournis en accompagnement du code source.\n\nPlanning\nLe projet sera découpé en sprints avec des jalons précis pour chaque fonctionnalité. Les délais de livraison doivent être respectés, et tout écart significatif doit être justifié et discuté avec l'équipe de gestion de projet.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/filtres-api.html":{"url":"additional-documentation/filtres-api.html","title":"additional-page - Filtres API","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiltres API\nUsages\nFilters\nSyntax\nfilters[PREFIX + FIELD]=SEARCH\nExample\nfilters[=subject]=53\nsubject field equal to 53\nUsage\nExample :curl --request GET \\\n  --url 'http://localhost/search?limit=9999&filters%5B%5Esequence%5D=%2F53%2F&sort%5Bmetadata.createdAt%5D=-1&sort%5Bsubject%5D=1'\n  \n# limit=9999\n# filters[^sequence]=/53/\n# sort[metadata.createdAt]=-1\n# sort[subject]=1List\n\n\n\nFilter\nDescription\n\n\n\n\n:\nEqual\n\n\n#\nNumber Equal\n\n\n!#\nNumber Not Equal\n\n\n!:\nNot Equal\n\n\n>\nGreater Than\n\n\n>\n\n\n\n\nLess Than\n\n\n\n\n\n\n@\nin\n\n\n!@\nnot in\n\n\n@#\nnumber in\n\n\n!@#\nnumber not in\n\n\n^\nregex\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique.html":{"url":"additional-documentation/documentation-technique.html","title":"additional-page - Documentation technique","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDAEMON\nIdentitiesValidation\nQueueProcessorService\nTests\nFormulaires Customs\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/demon.html":{"url":"additional-documentation/documentation-technique/demon.html","title":"additional-page - Demon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommunication avec sesame-daemon\nVoir doc sesame-daemon\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/queue-processor-service.html":{"url":"additional-documentation/documentation-technique/queue-processor-service.html","title":"additional-page - Queue processor service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQueueProcessorService\nVue d'ensemble\nQueueProcessorService est une classe abstraite conçue pour fournir une configuration de base pour les services de traitement de files d'attente dans une application NestJS. Elle intègre des fonctionnalités de gestion de file d'attente en utilisant bullmq et Redis.\nDépendances\n\nConfigService : Service de @nestjs/config pour accéder aux variables de configuration.\nRedis : Client Redis pour interagir avec un serveur Redis.\n\nPropriétés\n\nqueue (Queue) : Instance de Queue de bullmq, représentant la file d'attente à traiter.\nqueueEvents (QueueEvents) : Instance de QueueEvents de bullmq, utilisée pour gérer les événements liés à la file d'attente.\n\nConstructeur\nExample :public constructor(\n  protected readonly config: ConfigService,\n  protected readonly redis: Redis,\n) {\n  this.queue = new Queue(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n  this.queueEvents = new QueueEvents(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n}Paramètres\n\nconfig (ConfigService):  Service de configuration pour accéder aux variables de configuration de l'application.\nredis (Redis): Instance du client Redis pour se connecter au serveur Redis.\n\nDescription\nInitialise les propriétés queue et queueEvents en créant de nouvelles instances de Queue et QueueEvents, en utilisant la configuration nameQueue pour le nom de la file d'attente et l'instance Redis pour la connexion.\nMéthodes\nCeci est une classe abstraite et n'implémente pas de méthodes. Les classes dérivées doivent implémenter une logique spécifique de traitement de file d'attente.\nUtilisation\nÉtendez cette classe dans les services qui nécessitent des capacités de traitement de file d'attente. Implémentez la logique de traitement des éléments dans la file d'attente dans le service étendu.\nExample :import Redis from 'ioredis';\nimport { InjectRedis } from 'nestjs-ioredis';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\n\n@Injectable()\nexport class ExampleQueueService extends AbstractQueueProcessor {\nconstructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n)  {\n        super(configService, redis);\n   }\n\n    async example(params: any) {\n        const job = await this.queue.add('EXEMPLE', params);\n        this.queueEvents.on('failed', (errors) => {\n            console.log(errors);\n        });\n        return await job.waitUntilFinished(this.queueEvents, 30000);\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{"url":"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html","title":"additional-page - Ecriture des test et utilisation des utilitaires","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation des Tests Jest et NestJS\nTable des matières\n\nDocumentation des Tests Jest et NestJS\nTable des matières\nIntroduction\nPrérequis\n\n\nStubs\nExemple\n\n\nConstantes\nUtilisation de MongoDbTestInstance\nFonctions\nConstantes\nExemple d'utilisation\n\n\nMock du module et créer des modèles simulés avec createMockModel\nExemple\n\n\nAssertions dans les tests\nAssertions findAndCount\nExemple\n\n\nAssertions findById\nExemple\n\n\nAssertions findOne\nExemple\n\n\nAssertions create\nExemple\n\n\nAssertions update\nExemple\n\n\nAssertions delete\nExemple\n\n\n\n\nExemple complet d'un cas de test\nConfiguration du Test\n\n\nTest d'un controller CRUD\nVue d'ensemble\nFonction : createMockService\nBut\nParamètres\nRetours\nExemple d'utilisation\n\n\n\n\nRéférences supplémentaires\n\n\n\nIntroduction\nCe document fournit des directives et des exemples pour tester les services NestJS en utilisant Jest et MongoDB Memory Server. Dans ce document, nous allons prendre comme exemple le service IdentitiesService et le modèle Identities.\nCette methode ne fonctionne que pour les services CRUD qui héritent d'AbstractServiceSchema.\nPrérequis\n\nNode.js\nNestJS\nJest\nMongoDB Memory Server\n\nStubs\nLes stubs sont utilisés pour simuler des données dans les tests. Les stubs sont créés dans le dossier stubs au sein du module ou se trouve le test et sont utilisés dans les tests.\nExemple\nExample :import { IdentitiesUpdateDto } from './../_dto/identities.dto';\nimport { IdentitiesDto } from '~/management/identities/_dto/identities.dto';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { additionalFieldsPartDtoStub } from './_parts/addtionalFields.dto.stub';\nimport { inetOrgPersonDtoStub } from './_parts/inetOrgPerson.dto.stub';\n\nexport const IdentitiesDtoStub = (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};\n\nexport const IdentitiesUpdateDtoStub = (): IdentitiesUpdateDto => {\n  const inetOrgPerson = inetOrgPersonDtoStub();\n  inetOrgPerson.cn = 'updated-cn';\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson,\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};Ici pour clarifier les données, nous avons déporté une partie des données dans des fichiers séparés stocké dans le dossier _parts du dossier stubs.\nVoici un exemple de stub pour inetOrgPersonDtoStub:\nExample :import { inetOrgPersonDto } from '~/management/identities/_dto/_parts/inetOrgPerson.dto';\n\nexport const inetOrgPersonDtoStub = (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    employeeNumber: 'employeeNumber',\n    employeeType: 'employeeType',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n};Constantes\nLes constantes suivantes sont utilisées dans les tests.\nExample :describe('Identities Service', () => {\n  let mongoDbTestInstance: MongoDbTestInstance;\n  let service: IdentitiesService;\n  let model: Model;\n  let identitiesModel: Model;\n  const _id = new Types.ObjectId();\n  const newIdentityData = {\n    _id,\n    ...IdentitiesDtoStub(),\n  };\n  const updatedIdentityData = {\n    _id,\n    ...IdentitiesUpdateDtoStub(),\n  };\n\n  const options: QueryOptions = {\n    limit: 10,\n    skip: 0,\n    sort: {\n      'metadata.createdAt': 'asc',\n    },\n  };\n  const projection: ProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n  const filter: FilterQuery = {};\n});Utilisation de MongoDbTestInstance\nLa classe MongoDbTestInstance est utilisée pour créer une instance MongoDB temporaire pour les tests.\nFonctions\nstart() démarre une instance MongoDB temporaire pour les tests.\nstop() arrête l'instance MongoDB temporaire.\nclearDatabase() supprime toutes les données de la base de données temporaire.\ngetModel() crée un modèle Mongoose à partir d'un schéma Mongoose.\nConstantes\nmongod: MongoMemoryServer est l'instance MongoDB temporaire.\nmongoConnection: Connection est la connexion à l'instance MongoDB temporaire.\nExemple d'utilisation\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Mock du module et créer des modèles simulés avec createMockModel\ncreateMockModel est utilisé pour simuler des modèles Mongoose pour les tests.\nExample :function createMockModel(model: Model, stub, updatedStub?): Modelmodel est le modèle Mongoose à simuler.\nstub est le stub à utiliser pour simuler les données.\nupdatedStub est le stub à utiliser pour simuler les données mises à jour.\nLa fonction retourne un modèle Mongoose simulé.\nExemple\nExample :  beforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n\n    // Mock the module\n    const module: TestingModule = await Test.createTestingModule({\n      controllers: [IdentitiesController],\n      providers: [\n        IdentitiesService,\n        {\n          provide: getModelToken(Identities.name),\n          useValue: identitiesModel,\n        },\n        IdentitiesValidationService,\n      ],\n      imports: [IdentitiesValidationModule],\n    }).compile();\n\n    // Get the service\n    service = module.get(IdentitiesService);\n  });Assertions dans les tests\nLes fonctions fournies aident à affirmer diverses conditions dans les tests. Ces méthodes sont utilisables uniquement pour les services CRUD qui héritent d'AbstractServiceSchema.\nAssertions findAndCount\nfindAndCountAssertions vérifie la méthode de service findAndCount.\nExemple\nExample :  describe('findAndCount', () => {\n    it('should return an array of identities or throw an error', async () => {\n      findAndCountAssertions(service, model, filter, projection, options, newIdentityData);\n      findAndCountErrorAssertions(service, filter, projection, options);\n    });\n  });Assertions findById\nfindByIdAssertions vérifie la fonctionnalité de la méthode de service findById.\nExemple\nExample :  describe('findById', () => {\n    it('should return a single identity by id or throw an error', async () => {\n      findByIdAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should return an empty array and count 0 documents', async () => {\n      findByIdErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions findOne\nfindOneAssertions assure le bon fonctionnement de la méthode findOne du service.\nExemple\nExample :  describe('findOne', () => {\n    it('should return a single identity matching the filter or throw an error', async () => {\n      findOneAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      findOneErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions create\ncreateAssertions teste la méthode create du service.\nExemple\nExample :  describe('create', () => {\n    it('should create and return a new identity or throw an error', async () => {\n      createAssertions(service, model, newIdentityData, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      createErrorAssertions(service, newIdentityData);\n    });\n  });Assertions update\nupdateAssertions évalue la fonctionnalité update.\nExemple\nExample :  describe('update', () => {\n    it('should update and return an identity or throw an error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateAssertions(service, model, _id, updateData, updateOptions, updatedIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateErrorAssertions(service, _id, updateData, updateOptions);\n    });\n  });Assertions delete\ndeleteAssertions évalue la méthode delete dans le service.\nExemple\nExample :  describe('delete', () => {\n    it('should delete and return the deleted identity or throw an error', async () => {\n      deleteAssertions(service, model, _id, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      deleteErrorAssertions(service, _id, options);\n    });\n  });Exemple complet d'un cas de test\nUn exemple de cas de test pour IdentitiesService en utilisant les méthodes ci-dessus.\nConfiguration du Test\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nbeforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n    // Autres configurations de test\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n    jest.clearAllMocks();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Test d'un controller CRUD\nCette documentation fournit un aperçu détaillé de la fonction utilitaire createMockService, conçue pour faciliter la création de services mock pour les besoins de test dans les applications TypeScript, en mettant un accent particulier sur celles utilisant Jest et NestJS. L'initiation du test est similaire à celle des tests de services au niveau du module et de l'instantiation de la base mongoDB.\nVue d'ensemble\nLa fonction createMockService améliore dynamiquement la création de services mock, permettant de configurer un nombre arbitraire de comportements d'appel de méthode de manière dynamique. Elle simplifie le processus de configuration des implémentations mock pour les méthodes de service, supportant à la fois des valeurs fixes et des comportements dynamiques définis par des fonctions, y compris des comportements asynchrones basés sur des promesses et la gestion des erreurs.\nFonction : createMockService\nBut\nGénérer une instance de service mock avec des méthodes simulées selon les comportements spécifiés, rationalisant le test de divers scénarios incluant le succès, l'échec, et les exceptions.\nParamètres\n\nservice (new (...args: any[]) => T): Le constructeur de la classe de service à mocker. Ce paramètre prend une référence de classe que le service mock va imiter.\n\nmethodStubs (Record): Un objet où les clés représentent les noms des méthodes à mocker, et les valeurs sont les comportements à simuler pour ces méthodes. Ces comportements peuvent être spécifiés comme des valeurs uniques pour un comportement uniforme à travers les appels, des tableaux de valeurs pour définir des comportements séquentiels d'appels, des fonctions pour calculer dynamiquement les valeurs de retour, ou des instances de Error pour simuler des exceptions.\n\n\nRetours\n\nT: Une instance mock de la classe de service (T), avec des méthodes simulées comme spécifié par le paramètre methodStubs.\n\nExemple d'utilisation\nExample :service = createMockService(IdentitiesService, {\n  create: [\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_VALIDATE }),\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_COMPLETE }),\n  ],\n  findAndCount: [\n    () => Promise.resolve([[{ ...IdentitiesDtoStub(), _id }], 1]),\n    () => Promise.reject(new Error('Erreur')), // Fonction qui lance une erreur\n  ],\n  // Autres simulations de méthodes...\n});Dans cet exemple, la fonction createMockService est utilisée pour mocker un IdentitiesService avec des comportements spécifiques pour les méthodes create, findAndCount, et d'autres, démontrant comment gérer à la fois les opérations réussies et les erreurs.\nImportance de l'ordre des valeurs retournées : Il est crucial de comprendre que l'ordre des valeurs retournées dans l'exemple a une importance significative car il correspondra à l'ordre des appels dans les tests. Cela signifie que le comportement simulé pour le premier appel sera le premier dans la liste, et ainsi de suite, permettant une simulation précise des scénarios de test.\nRéférences supplémentaires\nCette documentation couvre l'essentiel des tests des services NestJS en utilisant Jest. Pour plus d'informations détaillées, référez-vous à la documentation de Jest et NestJS.\n\nTests NestJS\nJest\nMongoDB Memory Server\nArticle sur les tests en  NestJS avec Mongo\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/validation-des-identités.html":{"url":"additional-documentation/documentation-technique/validation-des-identités.html","title":"additional-page - Validation des identités","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation Technique - Service de Validation des Identités (Mise à Jour)\nDescription\nCette documentation mise à jour décrit les améliorations apportées au service de validation des identités dans une application NestJS. Ce service utilise yup pour la validation des données et ajv pour gérer la validation des schémas JSON et YML. Les fichiers de configuration YML sont chargés dynamiquement et convertis en schémas yup pour valider les données utilisateur.\nServices\nIdentitiesValidationService\nModifications Clés\n\nExtraction de la logique de validation d'attributs dans une méthode privée validateAttribute, améliorant la lisibilité et la maintenabilité.\nUtilisation améliorée de la gestion des erreurs pour fournir des messages d'erreur spécifiques.\nCommentaires et annotations de type TypeScript ajoutés pour une meilleure compréhension et utilisation du type checking de TypeScript.\n\nMéthodes\n\nvalidate(data: AdditionalFieldsPart): Promise\nValide les données fournies en utilisant des schémas de validation yup.\nLes schémas sont chargés à partir de fichiers YAML spécifiques à chaque classe d'objet.\nRenvoie une promesse rejetée avec les détails des erreurs en cas d'échec de la validation.\n\n\nprivate validateAttribute(key: string, attribute: any): Promise\nValide un attribut individuel.\nRenvoie un message d'erreur spécifique ou null si la validation réussit.\n\n\n\nUtilisation\nExample :@Injectable()\nclass IdentitiesValidationService {\n  async validate(data: AdditionalFieldsPart): Promise {\n    // ... Implémentation de la validation\n  }\n\n  private async validateAttribute(key: string, attribute: any): Promise {\n    // ... Implémentation de la validation d'un attribut individuel\n  }\n}Modèles\nAdditionalFieldsPart\n\nReprésente les champs supplémentaires d'une identité.\nUtilisé par IdentitiesValidationService pour la validation.\n\nConfigObjectSchemaDTO\n\nNouveau modèle ajouté pour représenter les schémas de configuration des objets.\n\nConfiguration\nFichiers YAML\n\nChaque classe d'objet a son fichier de configuration YAML correspondant.\nCes fichiers sont utilisés pour générer des schémas de validation yup.\n\nIntégrations\nIntégration avec AJV\n\nAJV est utilisé pour compiler et valider les schémas JSON.\nAmélioration de la gestion des erreurs et des validations de schémas.\n\nIntégration avec Mongoose\n\nLes schémas Mongoose sont définis comme auparavant.\nLa validation yup est intégrée dans le cycle de vie des documents Mongoose via des hooks (pre validate, pre save).\n\nModule\nIdentitiesModule\n\nConfigure le schéma Mongoose et intègre le service de validation avec les améliorations apportées.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/formulaires-customs.html":{"url":"additional-documentation/documentation-technique/formulaires-customs.html","title":"additional-page - Formulaires customs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\nIntroduction\nStructure du JSON de Configuration\nChamp title\nChamp description\nChamp type\nChamp defaultValues\nChamp sections\nExemple de section\n\n\nChamps dans fields\nExemple de champ\n\n\nAutres champs importants\n\n\nExemple complet d'un json de formulaire pour la creation de ticket\nDocumentation des Composants Vue.js\nbuilder.vue\nAperçu\nStructure\nFonctionnalités\nScript\n\n\ntk-form-type.vue\nAperçu\nStructure\nFonctionnalités\n\n\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-tabs\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-base\nAperçu\nStructure\nFonctionnalités\n\n\nÉnumérations et Types\nFormTypes\nCRUDMode\nTicketFormField et TicketFormSection\n\n\n\n\n\n\n\nIntroduction\nCette documentation décrit le composant de formulaire dynamique utilisé dans les applications avec NestJS et Mongoose, en utilisant des composants du framework Quasar. Le formulaire est construit dynamiquement à partir d'une configuration JSON.\nCe fichier json est stocké dans la base de données et est récupéré par l'API pour construire le formulaire, tout est géré dans le module nestjs /tickets/form\nStructure du JSON de Configuration\nChamp title\n\nType: string\nDescription: Titre du formulaire.\nExemple: \"title\": \"Creation de ticket\"\n\nChamp description\n\nType: string\nDescription: Description ou instructions pour le formulaire.\nExemple: \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\"\n\nChamp type\n\nType: number\nDescription: Type de formulaire, représenté par un numéro (par exemple, 0 pour base, 1 pour étapes).\nExemple: \"type\": 1\n\nChamp defaultValues\n\nType: object\nDescription: Valeurs par défaut pour certains champs du formulaire.\nExemple: \"defaultValues\": { \"lifestep\": 1 }\n\nChamp sections\n\nType: object\nDescription: Sections du formulaire, chacune contenant ses propres champs.\nSous-champs:\nlabel: Nom de la section.\ntype: Type de la section (similaire au type de formulaire).\ndescription: Description de la section.\nicon: Icône représentant la section.\nfields: Champs de la section.\n\n\n\nExemple de section\nExample :\"sections\": {\n  \"envelope\": {\n    \"label\": \"Enveloppe\",\n    \"type\": 0,\n    \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n    \"icon\": \"mdi-email\",\n    \"fields\": {\n      // Définition des champs ici...\n    }\n  }\n}Champs dans fields\nChaque champ dans fields est un objet avec les propriétés suivantes :\n\ncomponent: Type de composant Quasar à utiliser (par exemple, autocomplete).\nlabel: Étiquette du champ.\nmodel-value: Chemin de liaison de données pour le champ.\nrow et col: Positionnement du champ dans une grille.\nattrsOnDefault, attrsOnCreate, attrsOnRead, attrsOnUpdate, attrsOnDelete: Objets définissant les attributs et comportements du champ dans différents états. Pour connaître les attributs disponibles, consultez la documentation de Quasar Framework. Les composants disponibles sont les suivants : \nselect\ninput\nautocomplete\ncheckbox\nradio\n\n\n\nExemple de champ\nExample :\"senders\": {\n  \"component\": \"autocomplete\",\n  \"label\": \"Appelant\",\n  \"model-value\": \"envelope.senders\",\n  \"attrsOnDefault\": {\n    \"filled\": true,\n    \"dense\": true,\n    // Autres attributs...\n  },\n    \"attrsOnCreate\": {\n        // Autres attributs...\n    },\n    \"attrsOnRead\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n    \"attrsOnUpdate\": {\n        // Autres attributs...\n    },\n    \"attrsOnDelete\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n  \"row\": 1,\n  \"col\": 4\n}Autres champs importants\n\nsubmitButtonText: Texte du bouton de soumission.\nsubmitApiUrl: URL à appeler lors de la soumission du formulaire.\nredirectUrl: URL de redirection après la soumission, l'id de la nouvelle entrée est automatiquement ajoutée a la fin de l'url.\n\nExemple complet d'un json de formulaire pour la creation de ticket\nExample :{\n  \"title\": \"Creation de ticket\",\n  \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\",\n  \"type\": 1,\n  \"defaultValues\": {\n    \"lifestep\": 1\n  },\n  \"sections\": {\n    \"envelope\": {\n      \"label\": \"Enveloppe\",\n      \"type\": 0,\n      \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n      \"icon\": \"mdi-email\",\n      \"fields\": {\n        \"senders\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Appelant\",\n          \"model-value\": \"envelope.senders\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {\n            \"disable\": false\n          },\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {\n            \"disable\": false\n          },\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"observers\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Concernés\",\n          \"model-value\": \"envelope.observers\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {},\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {},\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"assigned\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Assignés\",\n          \"model-value\": \"envelope.assigned\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"modelLabel\": \"name\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"additionalFilters\": [\n              {\n                \"field\": \"type\",\n                \"value\": 2,\n                \"operator\": \"Documentation des Composants Vue.js\nbuilder.vue\nAperçu\nLe composant builder.vue est un constructeur de formulaires dynamique utilisant les composants du Framework Quasar. Il est conçu pour les opérations CRUD (Créer, Lire, Mettre à jour, Supprimer) et prend en charge différents types de champs et de dispositions.\nStructure\n\nQCard : Conteneur principal avec une barre d'outils affichant le titre et la description du formulaire.\nTkFormType : Composant personnalisé rendant les champs de formulaire basés sur la structure JSON fournie.\nQCardActions : Contient des boutons d'action et des emplacements pour des actions personnalisées.\n\nFonctionnalités\n\nRendu dynamique des champs de formulaire.\nPrise en charge de plusieurs modes CRUD.\nPersonnalisable via des emplacements (slots).\n\nScript\n\nUtilise l'API de Composition Vue 3.\nMéthodes reset, resetValidation et submit pour les interactions avec le formulaire.\nÉmet un événement submit avec les données du formulaire.\n\n\ntk-form-type.vue\nAperçu\nComposant pour rendre différents types de dispositions de formulaire : base, stepper, tabs.\nStructure\n\nComposant dynamique basé sur la propriété type.\nPrend en charge différentes structures de formulaire telles que le formulaire de base, le stepper et les onglets.\n\nFonctionnalités\n\nRendu flexible basé sur la propriété type.\nUtilise des propriétés calculées pour déterminer la disposition du formulaire.\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nUn composant de type stepper pour naviguer à travers différentes sections de formulaire.\nStructure\n\nQStepper : Composant stepper de Quasar pour la navigation entre les sections.\nÉtapes générées dynamiquement en fonction de la propriété sections.\n\nFonctionnalités\n\nPrend en charge la navigation à travers les sections du formulaire.\nCrée dynamiquement des étapes basées sur les données fournies.\n\n\ntk-form-tabs\nAperçu\nDisposition de formulaire basée sur des onglets pour organiser les sections de formulaire.\nStructure\n\nQTabs : Conteneur pour les en-têtes des onglets.\nQTabPanels : Panneaux qui rendent le contenu de chaque onglet.\n\nFonctionnalités\n\nPermet de passer entre les sections du formulaire à l'aide d'onglets.\nGénère dynamiquement des onglets en fonction des données fournies.\n\n\ntk-form-base\nAperçu\nDisposition de formulaire de base avec un système de grille pour le placement des champs.\nStructure\n\nUtilise une classe .row pour organiser les champs en lignes.\nCrée dynamiquement des champs de formulaire en fonction de la propriété fields.\n\nFonctionnalités\n\nDisposition de grille flexible pour les champs de formulaire.\nRendu de composant personnalisé pour chaque champ.\n\n\nÉnumérations et Types\nFormTypes\nDéfinit différents types de dispositions de formulaire : Base, Étapes, Onglets.\n'BASE' = 0,\n'STEPS' = 1,\n'TABS' = 2,\nCRUDMode\nDéfinit les opérations CRUD : Créer, Lire, Mettre à jour.\nTicketFormField et TicketFormSection\nTypes définissant la structure des champs de formulaire et des sections.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur.html":{"url":"additional-documentation/documentation-utilisateur.html","title":"additional-page - Documentation utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDocumentation du système de validation\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{"url":"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html","title":"additional-page - Création et modification d'une identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCréation et Modification d'Identité dans le Système\nSommaire\n\nCréation et Modification d'Identité dans le Système\nSommaire\nCréation d'Identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nInformations de Base (inetOrgPerson)\nChamps obligatoires :\nChamps facultatifs :\n\n\n\n\nChamps Additionnels\nExemple de Corps de Requête\nExemple de requete avec cUrl\nÉtats (IdentityState)\nGestion Automatique du lifecycle\n\n\nRéponse Attendue\n\n\nModification de l'identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nRéponse Attendue\n\n\n\nCréation d'Identité\nPour créer une identité dans le système, suivez les instructions ci-dessous. Ces instructions sont destinées à des utilisateurs ayant une certaine connaissance technique, notamment en matière de requêtes HTTP.\nEndpoint pour la Création d'Identité\nURL: /management/identities : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure les informations de base de l'identité (inetOrgPerson), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nInformations de Base (inetOrgPerson)\nLes informations de base de l'identité sont définies dans l'objet inetOrgPerson. Les champs requis sont cn (Nom Commun), sn (Nom de Famille), uid (Identifiant Unique), et employeeNumber + employeeType (Identifiant Identité). Ces champs sont validés en dur.\nChamps obligatoires :\n\ncn  \nsn\nuid\nemployeeNumber\nemployeeType\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nChamps Additionnels\nPour les champs additionnels, assurez-vous que les valeurs sont conformes aux attentes du système. Voici comment il se structure :\nExample :{\n  \"additionalFields\": {\n    \"objectClasses\": [],\n    \"attributes\": {}\n  }\n}\nobjectClasses : Un tableau contenant les noms des objectClasses concernées. Par exemple, si vous attendez des informations supann, vous devez inclure une valeur supann en chaine de charactères dans ce tableau.\n\nattributes : Un objet contenant les attributs spécifiques à chaque objectClass. Par exemple, si vous attendez des informations supann, vous devez inclure un objet supann contenant les attributs spécifiques à cette objectClass.\n\n\nATTENTION : Les champs additionnels sont validés via des fichiers de configuration YAML spécifiques à chaque objectClass. Assurez-vous que les valeurs envoyées sont conformes à ces fichiers de configuration pour garantir le succès de la création de l'identité. Ces fichiers de configuration sont définis dans la documentation Validation d'identité et doivent être nommés selon le nom de l'objectClass qu'ils définissent, par exemple supann.yml pour l'objectClass supann.\nExemple de Corps de Requête\nVoici un exemple de corps de requête pour la création d'une identité avec les informations minimales requises et un état (state) défini à -1 pour indiquer une création :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"cn\": \"Nom Commun\",\n    \"sn\": \"Nom de Famille\",\n    \"uid\": \"Identifiant Unique\",\n    \"employeeNumber\": \"Identifiant Identité\"\n    \"employeeType\": \"Type Identité\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Exemple de requete avec cUrl\nExample :curl -X POST \"http:///identities\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"cn\": \"Nom Commun\",\n             \"sn\": \"Nom de Famille\",\n             \"uid\": \"Identifiant Unique\",\n             \"employeeNumber\": \"Identifiant Identité\",\n             \"employeeType\": \"Type Identité\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'États (IdentityState)\nLe state doit être défini à -1 pour indiquer une création. Par la suite, le système gère automatiquement l'état de l'identité en fonction des actions de validations ou de syncronisation effectuées sur celle-ci.\nGestion Automatique du lifecycle\nLe cycle de vie de l'identité (lifecycle) est géré automatiquement par le système. Vous n'avez pas besoin de le spécifier dans votre requête.\nRéponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\nModification de l'identité\nEndpoint pour la Création d'Identité\nMême procédure pour la validation, mais ici nous avons : \nURL: /management/identities/upsert : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure au moins la données (inetOrgPerson.uid) et (inetOrgPerson.employeeNumber + inetOrgPerson.employeeType), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nDe plus pour une modification, il specifier le state a -1\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"uid\": \"Identifiant Unique\",\n    \"employeeNumber\": \"Identifiant Identite\",\n    \"employeeType\": \"Type Identite\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Example :curl -X POST \"http:///identities/upsert\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"uid\": \"Identifiant Unique\",\n             \"employeeNumber\": \"Identifiant Identite\",\n             \"employeeType\": \"Type Identite\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'Réponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{"url":"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html","title":"additional-page - Validation des schemas complémentaires de l'identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nValidation d'Identité\nVue d'ensemble\nLe système de validation d'identité utilise des fichiers de configuration YAML pour définir des règles de validation pour différents types d'objets d'identité. Chaque fichier YAML correspond à une objectClass spécifique et définit les attributs requis et leurs types pour cette classe.\nValidation des champs InetOrgPerson\nLes champs de base de l'objet inetOrgPerson sont validés par défaut. \nChamps obligatoires :\n\ncn  \nsn\nuid\nemployeeNumber\nemployeeType\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nValidation des champs des schema additionnels\nFichiers de Configuration\nLe fichier de configuration YAML doit être nommé selon le nom de l'objectClass qu'il définit, par exemple supann.yml pour l'objectClass supann. Il doit être placé dans le dossier TBD.\nVous pouvez vous baser sur le template si dessous pour créer votre fichier YAML. Les champs $schema, type, properties et required sont obligatoires. Vpis ajouterez le champs désirés dans properties. Pour les champs requis, vous les listerez dans required.\nExemple Générique de Fichier YAML\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n    [Nom de l'attribut 1] :\n        description: \"[Description de l'attribut]\"\n        type: [Type de l'attribut]\n        [Autres options]\n    # plus de détails d'attributs...\nrequired:\n    - [Nom de l'attribut 1]\n    - [Nom de l'attribut 2]\n    # plus d'attributs requis...\nExemple de Fichier YAML (supann.yml)\nCe fichier définit la structure et les attributs requis pour l'objectClass supann.\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n  supannEmpId:\n    type: \"string\"\n    description: \"Employee ID\"\n  supannCivilite:\n    type: \"string\"\n    description: \"Title (Mr, Ms, etc.)\"\n  supannBirthName:\n    type: \"string\"\n    description: \"Birth name\"\n  supannBirthDate:\n    type: \"string\"\n    format: \"date\"\n    description: \"Date of birth\"\n  # plus d'attributs...\nrequired:\n  - \"supannEmpId\"\n  - \"supannCivilite\"\n  - \"supannBirthName\"Options\nChaque attribut peut avoir des options supplémentaires pour définir des règles de validation spécifiques. Les options sont définies en tant que clés dans le fichier YAML.\nArray (Tableau)\n\nensure: Assure que la valeur est toujours un tableau.\nExample :type: array\nensure: true\ncompact: Supprime les valeurs vides du tableau.\nExample :type: array\ncompact: true\nitems (of) : Définit le type des éléments du tableau.\nExample :type: array\nitems: \n  type: string\nmaxItems (max) : Définit le nombre maximum d'éléments du tableau.\nExample :type: array\nmaxItems: 5\nminItems (min) : Définit le nombre minimum d'éléments du tableau.\nExample :type: array\nminItems: 2\n\nBoolean (Booléen)\n\nPas de clés spécifiquesExample :type: boolean\n\nDate\n\nmaxDate (max): Définit la date maximum.Example :type: date\nmaxDate: '2024-01-01'\nminDate (min): Définit la date minimum.Example :type: date\nminDate: '2020-01-01'\n\nNumber (Nombre)\n\ninteger: Définit que la valeur doit être un entier.Example :type: number\ninteger: true\nmoreThan (exclusiveMinimum): Définit la valeur minimum.Example :type: number\nmoreThan: 10\nlessThan (exclusiveMaximum): Définit la valeur maximum.Example :type: number\nlessThan: 20\npositive: Définit que la valeur doit être positive.Example :type: number\npositive: true\nnegative: Définit que la valeur doit être négative.Example :type: number\nnegative: true\nmin (minimum): Définit la valeur minimum.Example :type: number\nmin: 5\nmax (maximum): Définit la valeur maximum.Example :type: number\nmax: 100\ntruncate: Tronque la valeur.Example :type: number\ntruncate: true\nround: Arrondi la valeur.Example :type: number\nround: true\n\nObject (Objet)\n\ncamelCase: Convertit les clés de l'objet en camelCase.Example :type: object\ncamelCase: true\nconstantCase: Convertit les clés de l'objet en CONSTANT_CASE.Example :type: object\nconstantCase: true\nnoUnknown (propertyNames): Définit que l'objet ne peut pas contenir de clés non définies.Example :type: object\nnoUnknown: true\n\nString (Chaîne de caractères)\n\nminLength (min): Définit la longueur minimum de la chaîne de caractères.Example :type: string\nminLength: 5\nmaxLength (max): Définit la longueur maximum de la chaîne de caractères.Example :type: string\nmaxLength: 20\npattern (matches or regex): Définit une expression régulière à respecter.Example :type: string\npattern: '^[a-zA-Z]+$'\nemail (format: 'email'): Définit que la chaîne de caractères doit être un email.Example :type: string\nformat: 'email'\nurl (format: 'url'): Définit que la chaîne de caractères doit être une URL.Example :type: string\nformat: 'url'\nlowercase: Convertit la chaîne de caractères en minuscule.Example :type: string\nlowercase: true\nuppercase: Convertit la chaîne de caractères en majuscule.Example :type: string\nuppercase: true\ntrim: Supprime les espaces en début et fin de chaîne de caractères.Example :type: string\ntrim: true\n\nCorps de la Requête\nPour valider une entrée, un objet JSON doit être fourni avec les champs suivants :\n\nstate: État de l'entrée, -1 pour une création.\ninetOrgPerson: Informations générales de la personne.\nadditionalFields: Contient objectClasses (un tableau de noms d'objectClass) et attributes (les attributs spécifiques pour chaque objectClass).\n\nExemple\nVoici un exemple de JSON à valider :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    // [Détails de inetOrgPerson]\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        // [Détails des attributs supann]\n      }\n    }\n  }\n}Remarques\nAssurez-vous que le fichier YAML correspondant à votre objectClass est disponible et correctement configuré.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
